2021-03-12 10:37:10,651 [main:66] - Compilation checking started
2021-03-12 10:37:13,457 [main:45] - Trying to change 35 nodes
2021-03-12 10:37:13,463 [main:53] - replacing (3u, UInt)
2021-03-12 10:37:13,464 [main:50] - replacing 3u UInt
2021-03-12 10:37:13,464 [main:54] - Getting value of type UInt
2021-03-12 10:37:13,702 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:13,704 [main:58] - GENERATED VALUE OF TYPE UInt = 1953442923.toUInt()
2021-03-12 10:37:13,705 [main:61] - GENERATED IS CALL =false
2021-03-12 10:37:14,364 [main:67] - randomType = Map<UInt, UInt>
2021-03-12 10:37:14,394 [main:106] - GETTING UInt from MutableList<UInt>
2021-03-12 10:37:14,571 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53c4b0a9]]
2021-03-12 10:37:14,571 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53c4b0a9]
2021-03-12 10:37:14,785 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-12 10:37:14,786 [main:302] - generating value of type = R false depth = 1
2021-03-12 10:37:15,778 [main:43] - GENERATING CALL OF fun <T, R> with(receiver: UInt, block: T.()->Array<Char?>?): R = TODO()
2021-03-12 10:37:15,783 [main:61] - WITHOUT TYPE PARAMS = fun <T, R> with(receiver: UInt, block: T.()->Array<Char?>?): R = TODO()
2021-03-12 10:37:16,185 [main:302] - generating value of type = UInt true depth = 4
2021-03-12 10:37:16,186 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<T, Array<Char?>?> false depth = 4
2021-03-12 10:37:16,186 [main:302] - generating value of type = Array<Char?> false depth = 5
2021-03-12 10:37:16,370 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Char?): Array<Char?> = TODO()
2021-03-12 10:37:16,374 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Char?): Array<Char?> = TODO()
2021-03-12 10:37:16,987 [main:302] - generating value of type = Int true depth = 8
2021-03-12 10:37:16,988 [main:302] - generating value of type = Function1<Int, Char?> false depth = 8
2021-03-12 10:37:16,988 [main:302] - generating value of type = Char true depth = 9
2021-03-12 10:37:16,991 [main:95] - GENERATED = Array<Char?>(342012934, {a: Int -> '?'})
2021-03-12 10:37:16,993 [main:95] - GENERATED = with<UInt, Array<Char?>?>(1928631104.toUInt(), { Array<Char?>(342012934, {a: Int -> '?'})})
2021-03-12 10:37:16,997 [main:117] - GENERATED CALL = (uintList).minBy({a: T -> with<UInt, Array<Char?>?>(1928631104.toUInt(), { Array<Char?>(342012934, {a: Int -> '?'})})})
2021-03-12 10:37:16,998 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateRight(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@14b26bc2]]
2021-03-12 10:37:17,001 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:17,186 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:17,188 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateRight(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@14b26bc2]
2021-03-12 10:37:17,339 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:17,341 [main:117] - GENERATED CALL = (uintList).get(115049973).rotateRight(-1318296676)
2021-03-12 10:37:17,342 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun <T> kotlin.collections.MutableList<T>.removeFirst(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@700a2863]]
2021-03-12 10:37:17,342 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun <T> kotlin.collections.MutableList<T>.removeFirst(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@700a2863]
2021-03-12 10:37:17,343 [main:117] - GENERATED CALL = (uintList).removeFirst()
2021-03-12 10:37:17,343 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.coerceAtLeast(minimumValue: kotlin.UInt): kotlin.UInt defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@196d2b30]]
2021-03-12 10:37:17,344 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:17,584 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:17,585 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.coerceAtLeast(minimumValue: kotlin.UInt): kotlin.UInt defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@196d2b30]
2021-03-12 10:37:17,744 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:17,745 [main:117] - GENERATED CALL = (uintList).get(387691694).coerceAtLeast(920291364.toUInt())
2021-03-12 10:37:17,746 [main:113] - Case = [@kotlin.Deprecated @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.MutableList<T>.remove(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70e9a9d6]]
2021-03-12 10:37:17,746 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.MutableList<T>.remove(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70e9a9d6]
2021-03-12 10:37:17,900 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:17,902 [main:117] - GENERATED CALL = (uintList).remove(2023207122)
2021-03-12 10:37:17,902 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun <T> kotlin.collections.MutableList<T>.removeLast(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b0b6001]]
2021-03-12 10:37:17,902 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun <T> kotlin.collections.MutableList<T>.removeLast(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b0b6001]
2021-03-12 10:37:17,904 [main:117] - GENERATED CALL = (uintList).removeLast()
2021-03-12 10:37:17,904 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@569306fe]]
2021-03-12 10:37:17,904 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:18,095 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:18,096 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@569306fe]
2021-03-12 10:37:18,271 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:18,273 [main:117] - GENERATED CALL = (uintList).get(-917853705).or(937895442.toUInt())
2021-03-12 10:37:18,273 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@768eafb7]]
2021-03-12 10:37:18,273 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@768eafb7]
2021-03-12 10:37:18,446 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 10:37:18,824 [main:43] - GENERATING CALL OF fun <T, K> compareBy(comparator: kotlin.Comparator<UByte>, selector: (T)->UByte): Comparator<T> = TODO()
2021-03-12 10:37:18,828 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareBy(comparator: kotlin.Comparator<UByte>, selector: (T)->UByte): Comparator<T> = TODO()
2021-03-12 10:37:19,341 [main:302] - generating value of type = Comparator<UByte> false depth = 3
2021-03-12 10:37:19,489 [main:43] - GENERATING CALL OF fun <T> compareBy(selector: (UByte)->kotlin.Comparable<*>?): Comparator<UByte> = TODO()
2021-03-12 10:37:19,492 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selector: (UByte)->kotlin.Comparable<*>?): Comparator<UByte> = TODO()
2021-03-12 10:37:19,810 [main:302] - generating value of type = Function1<UByte, Comparable<*>?> false depth = 6
2021-03-12 10:37:19,811 [main:302] - generating value of type = Comparable<*> false depth = 7
2021-03-12 10:37:19,944 [main:43] - GENERATING CALL OF fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<*> = TODO()
2021-03-12 10:37:19,946 [main:61] - WITHOUT TYPE PARAMS = fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<*> = TODO()
2021-03-12 10:37:20,411 [main:302] - generating value of type = Int true depth = 10
2021-03-12 10:37:20,412 [main:302] - generating value of type = Int true depth = 10
2021-03-12 10:37:20,413 [main:95] - GENERATED = KotlinVersion(327452585, 2121758365)
2021-03-12 10:37:20,413 [main:95] - GENERATED = compareBy<UByte>({a: UByte -> KotlinVersion(327452585, 2121758365)})
2021-03-12 10:37:20,413 [main:385] - Cant generate call of fun <T, K> compareBy(comparator: kotlin.Comparator<UByte>, selector: (T)->UByte): Comparator<T> = TODO()
2021-03-12 10:37:20,414 [main:158] - CANT GENERATE PARAMS FOR @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@768eafb7]
2021-03-12 10:37:20,414 [main:113] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@820abe5]]
2021-03-12 10:37:20,414 [main:149] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@820abe5]
2021-03-12 10:37:20,416 [main:117] - GENERATED CALL = (uintList).sum()
2021-03-12 10:37:20,416 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@6b9cbd45]]
2021-03-12 10:37:20,416 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:20,549 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:20,550 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@6b9cbd45]
2021-03-12 10:37:20,682 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:37:20,683 [main:117] - GENERATED CALL = (uintList).get(562445372).rem(96.toUByte())
2021-03-12 10:37:20,684 [main:61] - replacement of 3u of type UInt is (uintList).removeFirst()
2021-03-12 10:37:20,807 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:20,808 [main:66] - Compilation checking started
2021-03-12 10:37:21,690 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}


2021-03-12 10:37:21,692 [main:53] - replacing (10u downTo 1u, UIntProgression)
2021-03-12 10:37:21,693 [main:50] - replacing 10u downTo 1u UIntProgression
2021-03-12 10:37:21,693 [main:54] - Getting value of type UIntProgression
2021-03-12 10:37:21,814 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-12 10:37:21,949 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:37:21,951 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:37:22,338 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:37:22,339 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:37:22,339 [main:95] - GENERATED = UIntRange(911784362.toUInt(), 1710300295.toUInt())
2021-03-12 10:37:22,339 [main:58] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(911784362.toUInt(), 1710300295.toUInt())
2021-03-12 10:37:22,340 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:22,530 [main:67] - randomType = Short
2021-03-12 10:37:22,654 [main:302] - generating value of type = Short true depth = 0
2021-03-12 10:37:22,753 [main:106] - GETTING UIntProgression from MutableList<UInt>
2021-03-12 10:37:22,851 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1728277a]]
2021-03-12 10:37:22,851 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:22,963 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:22,964 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1728277a]
2021-03-12 10:37:23,080 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:23,081 [main:117] - GENERATED CALL = (uintList).get(-2108284252).downTo(809498078.toUInt())
2021-03-12 10:37:23,081 [main:61] - replacement of 10u downTo 1u of type UIntProgression is (uintList).get(-2108284252).downTo(809498078.toUInt())
2021-03-12 10:37:23,186 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:23,186 [main:66] - Compilation checking started
2021-03-12 10:37:23,889 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}


2021-03-12 10:37:23,891 [main:53] - replacing (9u, UInt)
2021-03-12 10:37:23,891 [main:50] - replacing 9u UInt
2021-03-12 10:37:23,892 [main:54] - Getting value of type UInt
2021-03-12 10:37:24,049 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:24,049 [main:58] - GENERATED VALUE OF TYPE UInt = 298941949.toUInt()
2021-03-12 10:37:24,050 [main:61] - GENERATED IS CALL =false
2021-03-12 10:37:24,315 [main:67] - randomType = Short?
2021-03-12 10:37:24,452 [main:302] - generating value of type = Short true depth = 0
2021-03-12 10:37:24,561 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@31f78f06]
2021-03-12 10:37:24,562 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@757253dd]
2021-03-12 10:37:24,563 [main:78] - Generated call from random type = (10762)?.toLong().toUInt()
2021-03-12 10:37:24,565 [main:106] - GETTING UInt from MutableList<UInt>
2021-03-12 10:37:24,680 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline infix fun shr(bitCount: kotlin.Int): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@31b2fc37]]
2021-03-12 10:37:24,680 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:24,795 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:24,795 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun shr(bitCount: kotlin.Int): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@31b2fc37]
2021-03-12 10:37:24,910 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:24,911 [main:117] - GENERATED CALL = (uintList).get(486337109).shr(-442003629)
2021-03-12 10:37:24,911 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@230d305e]]
2021-03-12 10:37:24,911 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@230d305e]
2021-03-12 10:37:25,039 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:37:25,040 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:37:25,041 [main:117] - GENERATED CALL = (uintList).find({a: T -> false})
2021-03-12 10:37:25,042 [main:113] - Case = [@kotlin.Deprecated @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.MutableList<T>.remove(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70e9a9d6]]
2021-03-12 10:37:25,042 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.MutableList<T>.remove(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70e9a9d6]
2021-03-12 10:37:25,162 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:25,163 [main:117] - GENERATED CALL = (uintList).remove(1400495607)
2021-03-12 10:37:25,163 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3cb2b2de]]
2021-03-12 10:37:25,163 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:25,265 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:25,266 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3cb2b2de]
2021-03-12 10:37:25,416 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:37:25,417 [main:117] - GENERATED CALL = (uintList).get(88696463).minus(15.toUByte())
2021-03-12 10:37:25,418 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.max(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b62776b]]
2021-03-12 10:37:25,418 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.max(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b62776b]
2021-03-12 10:37:25,420 [main:117] - GENERATED CALL = (uintList).max()
2021-03-12 10:37:25,420 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@832c75f]]
2021-03-12 10:37:25,420 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:25,546 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:25,547 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@832c75f]
2021-03-12 10:37:25,660 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:25,661 [main:117] - GENERATED CALL = (uintList).get(-301374267).rotateLeft(-1542910656)
2021-03-12 10:37:25,662 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b0e6d8f]]
2021-03-12 10:37:25,662 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b0e6d8f]
2021-03-12 10:37:25,766 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-12 10:37:25,766 [main:302] - generating value of type = R false depth = 1
2021-03-12 10:37:26,245 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->ArrayList<UByte>): R = TODO()
2021-03-12 10:37:26,247 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->ArrayList<UByte>): R = TODO()
2021-03-12 10:37:26,598 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:37:26,601 [main:302] - generating value of type = Function0<ArrayList<UByte>> false depth = 4
2021-03-12 10:37:26,602 [main:302] - generating value of type = ArrayList<UByte> false depth = 5
2021-03-12 10:37:26,742 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): ArrayList<UByte> = TODO()
2021-03-12 10:37:26,743 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): ArrayList<UByte> = TODO()
2021-03-12 10:37:26,856 [main:95] - GENERATED = arrayListOf<UByte>()
2021-03-12 10:37:26,857 [main:95] - GENERATED = synchronized<ArrayList<UByte>>("yxadf", { arrayListOf<UByte>()})
2021-03-12 10:37:26,857 [main:117] - GENERATED CALL = (uintList).minByOrNull({a: T -> synchronized<ArrayList<UByte>>("yxadf", { arrayListOf<UByte>()})})
2021-03-12 10:37:26,858 [main:113] - Case = [public abstract operator fun set(index: kotlin.Int, element: kotlin.UInt): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5f2d61cd]]
2021-03-12 10:37:26,858 [main:149] - GENERATING call of type public abstract operator fun set(index: kotlin.Int, element: kotlin.UInt): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@5f2d61cd]
2021-03-12 10:37:26,979 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:27,085 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:27,086 [main:117] - GENERATED CALL = (uintList).set(-830420245, 121637996.toUInt())
2021-03-12 10:37:27,086 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@569306fe]]
2021-03-12 10:37:27,086 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:27,193 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:27,193 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@569306fe]
2021-03-12 10:37:27,311 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:27,312 [main:117] - GENERATED CALL = (uintList).get(-1888928703).or(1882163934.toUInt())
2021-03-12 10:37:27,313 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun <T> kotlin.collections.MutableList<T>.removeLast(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b0b6001]]
2021-03-12 10:37:27,313 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun <T> kotlin.collections.MutableList<T>.removeLast(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6b0b6001]
2021-03-12 10:37:27,313 [main:117] - GENERATED CALL = (uintList).removeLast()
2021-03-12 10:37:27,313 [main:61] - replacement of 9u of type UInt is (uintList).minByOrNull({a: T -> synchronized<ArrayList<UByte>>("yxadf", { arrayListOf<UByte>()})})
2021-03-12 10:37:27,444 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:27,444 [main:66] - Compilation checking started
2021-03-12 10:37:27,958 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf((uintList).minByOrNull({a: T -> synchronized<ArrayList<UByte>>("yxadf", { arrayListOf<UByte>()})}), 6u, (uintList).removeFirst()), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}


2021-03-12 10:37:27,960 [main:53] - replacing ("OK", String)
2021-03-12 10:37:27,960 [main:50] - replacing "OK" String
2021-03-12 10:37:27,960 [main:54] - Getting value of type String
2021-03-12 10:37:28,097 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:37:28,097 [main:58] - GENERATED VALUE OF TYPE String = "roalj"
2021-03-12 10:37:28,098 [main:61] - GENERATED IS CALL =false
2021-03-12 10:37:28,225 [main:67] - randomType = Short
2021-03-12 10:37:28,348 [main:302] - generating value of type = Short true depth = 0
2021-03-12 10:37:28,438 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5d9b4fa4]
2021-03-12 10:37:28,438 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30cb54e1]
2021-03-12 10:37:28,554 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:28,555 [main:78] - Generated call from random type = (-372).toByte().toString(206129262)
2021-03-12 10:37:28,556 [main:106] - GETTING String from MutableList<UInt>
2021-03-12 10:37:28,648 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@143ef384], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]]
2021-03-12 10:37:28,648 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]
2021-03-12 10:37:28,752 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:28,753 [main:117] - GENERATED CALL = (uintList).size.toString(2034815710)
2021-03-12 10:37:28,754 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:37:28,754 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:37:28,862 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:37:28,983 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:37:28,985 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:37:29,253 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 10:37:29,258 [main:95] - GENERATED = StringBuilder("vgchj")
2021-03-12 10:37:29,369 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:37:29,485 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:37:29,594 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:29,694 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:37:29,818 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:37:29,821 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:37:30,123 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 10:37:30,127 [main:95] - GENERATED = StringBuilder("qkbfv")
2021-03-12 10:37:30,237 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:37:30,237 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:37:30,345 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:37:30,347 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:37:30,628 [main:302] - generating value of type = Int true depth = 4
2021-03-12 10:37:30,629 [main:95] - GENERATED = StringBuilder(-1074579395)
2021-03-12 10:37:30,630 [main:117] - GENERATED CALL = (uintList).joinToString(StringBuilder("vgchj"), "iuxfw", StringBuilder(), -577015445, StringBuilder("qkbfv"), {a: T -> StringBuilder(-1074579395)})
2021-03-12 10:37:30,631 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]]
2021-03-12 10:37:30,631 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:30,760 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:30,761 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]
2021-03-12 10:37:30,865 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:30,866 [main:117] - GENERATED CALL = (uintList).get(1285827520).toString(1272904487)
2021-03-12 10:37:30,866 [main:61] - replacement of "OK" of type String is (uintList).joinToString(StringBuilder("vgchj"), "iuxfw", StringBuilder(), -577015445, StringBuilder("qkbfv"), {a: T -> StringBuilder(-1074579395)})
2021-03-12 10:37:30,980 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:30,981 [main:66] - Compilation checking started
2021-03-12 10:37:31,372 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return (uintList).joinToString(StringBuilder("vgchj"), "iuxfw", StringBuilder(), -577015445, StringBuilder("qkbfv"), {a: T -> StringBuilder(-1074579395)})
}


2021-03-12 10:37:31,374 [main:53] - replacing ((10uL downTo 1uL).reversed(), ULongProgression)
2021-03-12 10:37:31,374 [main:50] - replacing (10uL downTo 1uL).reversed() ULongProgression
2021-03-12 10:37:31,374 [main:54] - Getting value of type ULongProgression
2021-03-12 10:37:31,493 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-12 10:37:31,637 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:31,640 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:32,038 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:32,038 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:32,039 [main:95] - GENERATED = ULongRange(7455870260058949292.toULong(), 7002542999250852861.toULong())
2021-03-12 10:37:32,039 [main:58] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(7455870260058949292.toULong(), 7002542999250852861.toULong())
2021-03-12 10:37:32,039 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:32,154 [main:67] - randomType = UByte
2021-03-12 10:37:32,258 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:37:32,321 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@689dbc47]
2021-03-12 10:37:32,434 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:37:32,435 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@579c3641]
2021-03-12 10:37:32,548 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:37:32,549 [main:78] - Generated call from random type = (41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong())
2021-03-12 10:37:32,551 [main:106] - GETTING ULongProgression from MutableList<UInt>
2021-03-12 10:37:32,666 [main:106] - GETTING ULongProgression from MutableList<ULong>
2021-03-12 10:37:32,797 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.ULong defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@25e78462], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@579c3641]]
2021-03-12 10:37:32,797 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.ULong defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@25e78462]
2021-03-12 10:37:32,913 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:32,914 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@579c3641]
2021-03-12 10:37:33,028 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:37:33,029 [main:117] - GENERATED CALL = (ulongList).get(-152969737).downTo(4710671647204813735.toULong())
2021-03-12 10:37:33,029 [main:61] - replacement of (10uL downTo 1uL).reversed() of type ULongProgression is (41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong())
2021-03-12 10:37:33,132 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:33,132 [main:66] - Compilation checking started
2021-03-12 10:37:33,671 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}


2021-03-12 10:37:33,673 [main:53] - replacing ("OK", String)
2021-03-12 10:37:33,673 [main:50] - replacing "OK" String
2021-03-12 10:37:33,673 [main:54] - Getting value of type String
2021-03-12 10:37:33,801 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:37:33,801 [main:58] - GENERATED VALUE OF TYPE String = "enach"
2021-03-12 10:37:33,802 [main:61] - GENERATED IS CALL =false
2021-03-12 10:37:33,802 [main:67] - randomType = UInt
2021-03-12 10:37:33,910 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:33,969 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5f8a94ac]
2021-03-12 10:37:33,969 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5028792e]
2021-03-12 10:37:34,088 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:34,089 [main:78] - Generated call from random type = (683157791.toUInt()).toShort().toString(1733438388)
2021-03-12 10:37:34,089 [main:61] - replacement of "OK" of type String is (683157791.toUInt()).toShort().toString(1733438388)
2021-03-12 10:37:34,228 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:34,228 [main:66] - Compilation checking started
2021-03-12 10:37:34,822 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:37:34,822 [main:53] - replacing (10uL downTo 1uL, ULongProgression)
2021-03-12 10:37:34,822 [main:50] - replacing 10uL downTo 1uL ULongProgression
2021-03-12 10:37:34,823 [main:54] - Getting value of type ULongProgression
2021-03-12 10:37:34,947 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-12 10:37:35,063 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:35,065 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:35,431 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:35,432 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:35,432 [main:95] - GENERATED = ULongRange(7583126816501412553.toULong(), 3229498198774869944.toULong())
2021-03-12 10:37:35,432 [main:58] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(7583126816501412553.toULong(), 3229498198774869944.toULong())
2021-03-12 10:37:35,432 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:35,678 [main:67] - randomType = Function1<LinkedHashSet<String>, Short>
2021-03-12 10:37:35,678 [main:61] - replacement of 10uL downTo 1uL of type ULongProgression is ULongRange(7583126816501412553.toULong(), 3229498198774869944.toULong())
2021-03-12 10:37:35,804 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:37:35,806 [main:53] - replacing (((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step 2L).reversed() step 3L, ULongProgression)
2021-03-12 10:37:35,806 [main:50] - replacing ((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step 2L).reversed() step 3L ULongProgression
2021-03-12 10:37:35,806 [main:54] - Getting value of type ULongProgression
2021-03-12 10:37:35,960 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-12 10:37:36,080 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:36,081 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:36,400 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:36,400 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:36,401 [main:95] - GENERATED = ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())
2021-03-12 10:37:36,401 [main:58] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())
2021-03-12 10:37:36,401 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:37,036 [main:67] - randomType = List<MutableMap<Char, Int?>>?
2021-03-12 10:37:37,037 [main:106] - GETTING ULongProgression from MutableList<ULong>
2021-03-12 10:37:37,114 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.ULong defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@25e78462], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@579c3641]]
2021-03-12 10:37:37,114 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.ULong defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@25e78462]
2021-03-12 10:37:37,213 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:37,213 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@579c3641]
2021-03-12 10:37:37,306 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:37:37,307 [main:117] - GENERATED CALL = (ulongList).get(1494671026).downTo(3338901545365614255.toULong())
2021-03-12 10:37:37,307 [main:61] - replacement of ((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step 2L).reversed() step 3L of type ULongProgression is ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())
2021-03-12 10:37:37,402 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:37:37,403 [main:66] - Compilation checking started
2021-03-12 10:37:37,928 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:37:37,928 [main:53] - replacing (((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step 2L).reversed(), ULongProgression)
2021-03-12 10:37:37,929 [main:50] - replacing ((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step 2L).reversed() ULongProgression
2021-03-12 10:37:37,929 [main:54] - Getting value of type ULongProgression
2021-03-12 10:37:38,035 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-12 10:37:38,140 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:38,141 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:38,482 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:38,483 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:38,483 [main:95] - GENERATED = ULongRange(3250621138088464059.toULong(), 7766240119208419643.toULong())
2021-03-12 10:37:38,484 [main:58] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(3250621138088464059.toULong(), 7766240119208419643.toULong())
2021-03-12 10:37:38,484 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:38,582 [main:67] - randomType = UByte
2021-03-12 10:37:38,698 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:37:38,751 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@509bb906]
2021-03-12 10:37:38,852 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:37:38,853 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@579c3641]
2021-03-12 10:37:38,958 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:37:38,959 [main:78] - Generated call from random type = (61.toUByte()).div(6624546116309779897.toULong()).downTo(2655796272441494183.toULong())
2021-03-12 10:37:38,960 [main:61] - replacement of ((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step 2L).reversed() of type ULongProgression is (61.toUByte()).div(6624546116309779897.toULong()).downTo(2655796272441494183.toULong())
2021-03-12 10:37:39,053 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:39,054 [main:53] - replacing (uintList, MutableList<UInt>)
2021-03-12 10:37:39,054 [main:50] - replacing uintList MutableList<UInt>
2021-03-12 10:37:39,055 [main:54] - Getting value of type MutableList<UInt>
2021-03-12 10:37:39,147 [main:302] - generating value of type = MutableList<UInt> false depth = 0
2021-03-12 10:37:39,246 [main:43] - GENERATING CALL OF fun <T> mutableListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-12 10:37:39,247 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-12 10:37:39,339 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:37:39,340 [main:95] - GENERATED = mutableListOf<UInt>(1380982817.toUInt())
2021-03-12 10:37:39,340 [main:58] - GENERATED VALUE OF TYPE MutableList<UInt> = mutableListOf<UInt>(1380982817.toUInt())
2021-03-12 10:37:39,340 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:39,446 [main:67] - randomType = Short?
2021-03-12 10:37:39,599 [main:302] - generating value of type = Short true depth = 0
2021-03-12 10:37:39,672 [main:106] - GETTING MutableList<UInt> from MutableList<UInt>
2021-03-12 10:37:39,739 [main:113] - Case = [@kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2033326a]]
2021-03-12 10:37:39,739 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2033326a]
2021-03-12 10:37:39,739 [main:117] - GENERATED CALL = (uintList).asReversed()
2021-03-12 10:37:39,739 [main:113] - Case = [public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@57d86841]]
2021-03-12 10:37:39,739 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@57d86841]
2021-03-12 10:37:39,740 [main:117] - GENERATED CALL = (uintList).toMutableList()
2021-03-12 10:37:39,740 [main:113] - Case = [public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.UInt> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6ca64138]]
2021-03-12 10:37:39,740 [main:149] - GENERATING call of type public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.UInt> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6ca64138]
2021-03-12 10:37:39,831 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:39,928 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:39,929 [main:117] - GENERATED CALL = (uintList).subList(1441894669, -1331052618)
2021-03-12 10:37:39,929 [main:61] - replacement of uintList of type MutableList<UInt> is (uintList).toMutableList()
2021-03-12 10:37:40,022 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:40,022 [main:66] - Compilation checking started
2021-03-12 10:37:40,497 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:37:40,498 [main:53] - replacing (6uL, ULong)
2021-03-12 10:37:40,498 [main:50] - replacing 6uL ULong
2021-03-12 10:37:40,499 [main:54] - Getting value of type ULong
2021-03-12 10:37:40,609 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:37:40,610 [main:58] - GENERATED VALUE OF TYPE ULong = 3986499168115419814.toULong()
2021-03-12 10:37:40,610 [main:61] - GENERATED IS CALL =false
2021-03-12 10:37:40,826 [main:67] - randomType = ArrayDeque<UShort>
2021-03-12 10:37:40,934 [main:302] - generating value of type = ArrayDeque<UShort> false depth = 0
2021-03-12 10:37:41,039 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<UShort>): ArrayDeque<UShort> = TODO()
2021-03-12 10:37:41,040 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<UShort>): ArrayDeque<UShort> = TODO()
2021-03-12 10:37:41,237 [main:302] - generating value of type = Collection<UShort> false depth = 3
2021-03-12 10:37:41,377 [main:43] - GENERATING CALL OF fun <T> listOf(): Collection<UShort> = TODO()
2021-03-12 10:37:41,378 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOf(): Collection<UShort> = TODO()
2021-03-12 10:37:41,487 [main:95] - GENERATED = listOf<UShort>()
2021-03-12 10:37:41,487 [main:95] - GENERATED = ArrayDeque<UShort>(listOf<UShort>())
2021-03-12 10:37:41,769 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UShort defined in kotlin.collections.AbstractMutableList[DeserializedSimpleFunctionDescriptor@5eb5689e]
2021-03-12 10:37:41,878 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:41,879 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@79e8dd4d]
2021-03-12 10:37:41,880 [main:78] - Generated call from random type = (ArrayDeque<UShort>(listOf<UShort>())).get(-1620356818).toULong()
2021-03-12 10:37:41,880 [main:61] - replacement of 6uL of type ULong is (ArrayDeque<UShort>(listOf<UShort>())).get(-1620356818).toULong()
2021-03-12 10:37:41,987 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:41,987 [main:66] - Compilation checking started
2021-03-12 10:37:42,572 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += i
    }
    assertEquals(listOf(9uL, (ArrayDeque<UShort>(listOf<UShort>())).get(-1620356818).toULong(), 3uL), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:37:42,572 [main:53] - replacing (2L, Long)
2021-03-12 10:37:42,572 [main:50] - replacing 2L Long
2021-03-12 10:37:42,573 [main:54] - Getting value of type Long
2021-03-12 10:37:42,705 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:37:42,706 [main:58] - GENERATED VALUE OF TYPE Long = -7745963793764933575
2021-03-12 10:37:42,706 [main:61] - GENERATED IS CALL =false
2021-03-12 10:37:42,707 [main:67] - randomType = Long
2021-03-12 10:37:42,810 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:37:42,860 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.LongRange defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@58b2ef61]
2021-03-12 10:37:42,958 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:37:42,959 [main:78] - Generated call from random type = (-6456459551939431558).rangeTo(-22).start
2021-03-12 10:37:42,959 [main:61] - replacement of 2L of type Long is (-6456459551939431558).rangeTo(-22).start
2021-03-12 10:37:43,066 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:43,067 [main:53] - replacing (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed(), UIntProgression)
2021-03-12 10:37:43,067 [main:50] - replacing ((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() UIntProgression
2021-03-12 10:37:43,067 [main:54] - Getting value of type UIntProgression
2021-03-12 10:37:43,182 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-12 10:37:43,295 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:37:43,296 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:37:43,646 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:37:43,646 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:37:43,647 [main:95] - GENERATED = UIntRange(1393963390.toUInt(), 1347594725.toUInt())
2021-03-12 10:37:43,647 [main:58] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1393963390.toUInt(), 1347594725.toUInt())
2021-03-12 10:37:43,647 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:43,857 [main:67] - randomType = Byte?
2021-03-12 10:37:43,958 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:37:44,013 [main:106] - GETTING UIntProgression from MutableList<UInt>
2021-03-12 10:37:44,072 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1728277a]]
2021-03-12 10:37:44,072 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:37:44,196 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:44,196 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1728277a]
2021-03-12 10:37:44,299 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:44,299 [main:117] - GENERATED CALL = (uintList).get(1735048804).downTo(263916700.toUInt())
2021-03-12 10:37:44,299 [main:61] - replacement of ((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() of type UIntProgression is (uintList).get(1735048804).downTo(263916700.toUInt())
2021-03-12 10:37:44,395 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:44,395 [main:66] - Compilation checking started
2021-03-12 10:37:44,852 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get(1735048804).downTo(263916700.toUInt()) step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += i
    }
    assertEquals(listOf(9uL, (ArrayDeque<UShort>(listOf<UShort>())).get(-1620356818).toULong(), 3uL), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:37:44,853 [main:53] - replacing (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed(), UIntProgression)
2021-03-12 10:37:44,853 [main:50] - replacing ((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() UIntProgression
2021-03-12 10:37:44,853 [main:54] - Getting value of type UIntProgression
2021-03-12 10:37:44,951 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-12 10:37:45,050 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:37:45,052 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:37:45,343 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:37:45,344 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:37:45,344 [main:95] - GENERATED = UIntRange(1921156565.toUInt(), 1833930656.toUInt())
2021-03-12 10:37:45,344 [main:58] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1921156565.toUInt(), 1833930656.toUInt())
2021-03-12 10:37:45,344 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:45,438 [main:67] - randomType = UByte
2021-03-12 10:37:45,525 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:37:45,560 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@353f294a]
2021-03-12 10:37:45,651 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:37:45,651 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1728277a]
2021-03-12 10:37:45,743 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:45,744 [main:78] - Generated call from random type = (98.toUByte()).div(82.toUByte()).downTo(481101811.toUInt())
2021-03-12 10:37:45,744 [main:61] - replacement of ((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() of type UIntProgression is UIntRange(1921156565.toUInt(), 1833930656.toUInt())
2021-03-12 10:37:45,875 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:37:45,875 [main:53] - replacing (1uL, ULong)
2021-03-12 10:37:45,875 [main:50] - replacing 1uL ULong
2021-03-12 10:37:45,876 [main:54] - Getting value of type ULong
2021-03-12 10:37:45,990 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:37:45,991 [main:58] - GENERATED VALUE OF TYPE ULong = 6910997889449695566.toULong()
2021-03-12 10:37:45,991 [main:61] - GENERATED IS CALL =false
2021-03-12 10:37:45,991 [main:67] - randomType = Int
2021-03-12 10:37:46,087 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:46,133 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@17e5759c]
2021-03-12 10:37:46,133 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@3ed56eaf]
2021-03-12 10:37:46,133 [main:78] - Generated call from random type = (-841362841).toDouble().toULong()
2021-03-12 10:37:46,133 [main:61] - replacement of 1uL of type ULong is 6910997889449695566.toULong()
2021-03-12 10:37:46,226 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:46,228 [main:53] - replacing (mutableListOf<UInt>(), MutableList<UInt>)
2021-03-12 10:37:46,228 [main:50] - replacing mutableListOf<UInt>() MutableList<UInt>
2021-03-12 10:37:46,228 [main:54] - Getting value of type MutableList<UInt>
2021-03-12 10:37:46,321 [main:302] - generating value of type = MutableList<UInt> false depth = 0
2021-03-12 10:37:46,425 [main:43] - GENERATING CALL OF fun <T> mutableListOf(): MutableList<UInt> = TODO()
2021-03-12 10:37:46,427 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(): MutableList<UInt> = TODO()
2021-03-12 10:37:46,566 [main:95] - GENERATED = mutableListOf<UInt>()
2021-03-12 10:37:46,566 [main:58] - GENERATED VALUE OF TYPE MutableList<UInt> = mutableListOf<UInt>()
2021-03-12 10:37:46,567 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:46,920 [main:67] - randomType = Map<UByte, Double>
2021-03-12 10:37:46,920 [main:106] - GETTING MutableList<UInt> from MutableList<UInt>
2021-03-12 10:37:47,007 [main:113] - Case = [public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@57d86841]]
2021-03-12 10:37:47,007 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@57d86841]
2021-03-12 10:37:47,008 [main:117] - GENERATED CALL = (uintList).toMutableList()
2021-03-12 10:37:47,008 [main:113] - Case = [public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.UInt> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6ca64138]]
2021-03-12 10:37:47,008 [main:149] - GENERATING call of type public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.UInt> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@6ca64138]
2021-03-12 10:37:47,097 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:47,195 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:47,196 [main:117] - GENERATED CALL = (uintList).subList(2041951922, -1611448929)
2021-03-12 10:37:47,196 [main:113] - Case = [@kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2033326a]]
2021-03-12 10:37:47,196 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2033326a]
2021-03-12 10:37:47,197 [main:117] - GENERATED CALL = (uintList).asReversed()
2021-03-12 10:37:47,197 [main:61] - replacement of mutableListOf<UInt>() of type MutableList<UInt> is (uintList).toMutableList()
2021-03-12 10:37:47,289 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:47,289 [main:66] - Compilation checking started
2021-03-12 10:37:47,585 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = (uintList).toMutableList()
    for (i in ((uintList).get(1735048804).downTo(263916700.toUInt()) step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += i
    }
    assertEquals(listOf(9uL, (ArrayDeque<UShort>(listOf<UShort>())).get(-1620356818).toULong(), 3uL), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:37:47,586 [main:53] - replacing (3u, UInt)
2021-03-12 10:37:47,586 [main:50] - replacing 3u UInt
2021-03-12 10:37:47,586 [main:54] - Getting value of type UInt
2021-03-12 10:37:47,685 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:37:47,685 [main:58] - GENERATED VALUE OF TYPE UInt = 815361954.toUInt()
2021-03-12 10:37:47,685 [main:61] - GENERATED IS CALL =false
2021-03-12 10:37:47,987 [main:67] - randomType = Array<Function1<List<UInt>, Sequence<ULong>>>
2021-03-12 10:37:48,092 [main:302] - generating value of type = Array<Function1<List<UInt>, Sequence<ULong>>> false depth = 0
2021-03-12 10:37:48,192 [main:43] - GENERATING CALL OF fun <T> arrayOfNulls(size: kotlin.Int): Array<Function1<List<UInt>, Sequence<ULong>>> = TODO()
2021-03-12 10:37:48,193 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOfNulls(size: kotlin.Int): Array<Function1<List<UInt>, Sequence<ULong>>> = TODO()
2021-03-12 10:37:48,401 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:37:48,401 [main:95] - GENERATED = arrayOfNulls<Function1<List<UInt>, Sequence<ULong>>>(2132467889)
2021-03-12 10:37:48,427 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5925f653]
2021-03-12 10:37:48,516 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-12 10:37:48,516 [main:302] - generating value of type = UInt true depth = 1
2021-03-12 10:37:48,517 [main:78] - Generated call from random type = (arrayOfNulls<Function1<List<UInt>, Sequence<ULong>>>(2132467889)).sumOf({a: T -> 2001726781.toUInt()})
2021-03-12 10:37:48,517 [main:61] - replacement of 3u of type UInt is (arrayOfNulls<Function1<List<UInt>, Sequence<ULong>>>(2132467889)).sumOf({a: T -> 2001726781.toUInt()})
2021-03-12 10:37:48,607 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:48,608 [main:53] - replacing (listOf(9uL, (ArrayDeque<UShort>(listOf<UShort>())).get(-1620356818).toULong(), 3uL), List<ULong>)
2021-03-12 10:37:48,609 [main:50] - replacing listOf(9uL, (ArrayDeque<UShort>(listOf<UShort>())).get(-1620356818).toULong(), 3uL) List<ULong>
2021-03-12 10:37:48,609 [main:54] - Getting value of type List<ULong>
2021-03-12 10:37:48,700 [main:302] - generating value of type = List<ULong> false depth = 0
2021-03-12 10:37:48,802 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(): List<ULong> = TODO()
2021-03-12 10:37:48,804 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(): List<ULong> = TODO()
2021-03-12 10:37:48,930 [main:95] - GENERATED = ArrayDeque<ULong>()
2021-03-12 10:37:48,930 [main:58] - GENERATED VALUE OF TYPE List<ULong> = ArrayDeque<ULong>()
2021-03-12 10:37:48,930 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:49,043 [main:67] - randomType = Char
2021-03-12 10:37:49,168 [main:302] - generating value of type = Char true depth = 0
2021-03-12 10:37:49,284 [main:106] - GETTING List<ULong> from MutableList<ULong>
2021-03-12 10:37:49,350 [main:113] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@233352da]]
2021-03-12 10:37:49,350 [main:149] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@233352da]
2021-03-12 10:37:49,350 [main:117] - GENERATED CALL = (ulongList).sortedDescending()
2021-03-12 10:37:49,351 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>?.orEmpty(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@278f591a]]
2021-03-12 10:37:49,351 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>?.orEmpty(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@278f591a]
2021-03-12 10:37:49,351 [main:117] - GENERATED CALL = (ulongList).orEmpty()
2021-03-12 10:37:49,351 [main:113] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2d5580f6]]
2021-03-12 10:37:49,351 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2d5580f6]
2021-03-12 10:37:49,351 [main:117] - GENERATED CALL = (ulongList).shuffled()
2021-03-12 10:37:49,351 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.takeLast(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52d1600c]]
2021-03-12 10:37:49,351 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.takeLast(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52d1600c]
2021-03-12 10:37:49,446 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:49,447 [main:117] - GENERATED CALL = (ulongList).takeLast(1850491824)
2021-03-12 10:37:49,447 [main:113] - Case = [public operator fun <T> kotlin.collections.Iterable<T>.minus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3eba813d]]
2021-03-12 10:37:49,447 [main:149] - GENERATING call of type public operator fun <T> kotlin.collections.Iterable<T>.minus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3eba813d]
2021-03-12 10:37:49,553 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:37:49,657 [main:43] - GENERATING CALL OF fun <T> enumValueOf(name: kotlin.String): T = TODO()
2021-03-12 10:37:49,659 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValueOf(name: kotlin.String): T = TODO()
2021-03-12 10:37:49,867 [main:302] - generating value of type = String true depth = 3
2021-03-12 10:37:49,868 [main:95] - GENERATED = enumValueOf<Enum<T>>("ijbfi")
2021-03-12 10:37:49,868 [main:117] - GENERATED CALL = (ulongList).minus(enumValueOf<Enum<T>>("ijbfi"))
2021-03-12 10:37:49,869 [main:113] - Case = [public inline fun <T, K> kotlin.collections.Iterable<T>.distinctBy(selector: (T) -> K): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@291dbe83]]
2021-03-12 10:37:49,869 [main:149] - GENERATING call of type public inline fun <T, K> kotlin.collections.Iterable<T>.distinctBy(selector: (T) -> K): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@291dbe83]
2021-03-12 10:37:49,992 [main:302] - generating value of type = Function1<T, K> false depth = 0
2021-03-12 10:37:49,993 [main:302] - generating value of type = K false depth = 1
2021-03-12 10:37:49,997 [main:117] - GENERATED CALL = (ulongList).distinctBy({a: T -> })
2021-03-12 10:37:49,997 [main:113] - Case = [public operator fun <T> kotlin.collections.Collection<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64e4e885]]
2021-03-12 10:37:49,997 [main:149] - GENERATING call of type public operator fun <T> kotlin.collections.Collection<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64e4e885]
2021-03-12 10:37:50,115 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:37:50,219 [main:43] - GENERATING CALL OF fun <T> minOf(a: UByte, b: UByte, c: UByte): T = TODO()
2021-03-12 10:37:50,220 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: UByte, b: UByte, c: UByte): T = TODO()
2021-03-12 10:37:50,319 [main:302] - generating value of type = UByte true depth = 3
2021-03-12 10:37:50,319 [main:302] - generating value of type = UByte true depth = 3
2021-03-12 10:37:50,320 [main:302] - generating value of type = UByte true depth = 3
2021-03-12 10:37:50,320 [main:95] - GENERATED = minOf<UByte>(104.toUByte(), 75.toUByte(), 35.toUByte())
2021-03-12 10:37:50,321 [main:117] - GENERATED CALL = (ulongList).plus(minOf<UByte>(104.toUByte(), 75.toUByte(), 35.toUByte()))
2021-03-12 10:37:50,321 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.take(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6afc4d00]]
2021-03-12 10:37:50,321 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.take(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6afc4d00]
2021-03-12 10:37:50,416 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:50,416 [main:117] - GENERATED CALL = (ulongList).take(266806842)
2021-03-12 10:37:50,417 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.dropWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4615122f]]
2021-03-12 10:37:50,417 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.dropWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4615122f]
2021-03-12 10:37:50,512 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:37:50,513 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:37:50,513 [main:117] - GENERATED CALL = (ulongList).dropWhile({a: T -> true})
2021-03-12 10:37:50,514 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.plusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@a07fbd8]]
2021-03-12 10:37:50,514 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.plusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@a07fbd8]
2021-03-12 10:37:50,606 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:37:50,729 [main:43] - GENERATING CALL OF fun <T> checkNotNull(value: UShort): T = TODO()
2021-03-12 10:37:50,730 [main:61] - WITHOUT TYPE PARAMS = fun <T> checkNotNull(value: UShort): T = TODO()
2021-03-12 10:37:50,847 [main:302] - generating value of type = UShort true depth = 3
2021-03-12 10:37:50,848 [main:95] - GENERATED = checkNotNull<UShort>(13694.toUShort())
2021-03-12 10:37:50,848 [main:117] - GENERATED CALL = (ulongList).plusElement(checkNotNull<UShort>(13694.toUShort()))
2021-03-12 10:37:50,849 [main:61] - replacement of listOf(9uL, (ArrayDeque<UShort>(listOf<UShort>())).get(-1620356818).toULong(), 3uL) of type List<ULong> is (ulongList).takeLast(1850491824)
2021-03-12 10:37:50,946 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:50,946 [main:66] - Compilation checking started
2021-03-12 10:37:51,340 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get(1735048804).downTo(263916700.toUInt()) step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, (uintList).removeFirst()), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += i
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:37:51,340 [main:53] - replacing (((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed(), UIntProgression)
2021-03-12 10:37:51,340 [main:50] - replacing ((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() UIntProgression
2021-03-12 10:37:51,340 [main:54] - Getting value of type UIntProgression
2021-03-12 10:37:51,430 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-12 10:37:51,522 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:37:51,523 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:37:51,843 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:37:51,843 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:37:51,844 [main:95] - GENERATED = UIntRange(1237949276.toUInt(), 757158170.toUInt())
2021-03-12 10:37:51,844 [main:58] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1237949276.toUInt(), 757158170.toUInt())
2021-03-12 10:37:51,844 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:51,951 [main:67] - randomType = Byte
2021-03-12 10:37:52,039 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:37:52,077 [main:61] - replacement of ((uintList).get(-2108284252).downTo(809498078.toUInt())).reversed() of type UIntProgression is UIntRange(1237949276.toUInt(), 757158170.toUInt())
2021-03-12 10:37:52,161 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:37:52,162 [main:53] - replacing (1uL, ULong)
2021-03-12 10:37:52,162 [main:50] - replacing 1uL ULong
2021-03-12 10:37:52,162 [main:54] - Getting value of type ULong
2021-03-12 10:37:52,248 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:37:52,249 [main:58] - GENERATED VALUE OF TYPE ULong = 4359574442098204037.toULong()
2021-03-12 10:37:52,249 [main:61] - GENERATED IS CALL =false
2021-03-12 10:37:53,422 [main:67] - randomType = LinkedHashMap<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>?
2021-03-12 10:37:53,509 [main:302] - generating value of type = LinkedHashMap<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>> false depth = 0
2021-03-12 10:37:53,604 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>): LkedHashMap<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, Strg?>> = TODO()
2021-03-12 10:37:53,605 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>): LkedHashMap<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, Strg?>> = TODO()
2021-03-12 10:37:53,694 [main:302] - generating value of type = Pair<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>> false depth = 3
2021-03-12 10:37:53,792 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Function1<UByte?, Pair<UShort, Int>>, second: Map<UByte, String?>): Pair<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>> = TODO()
2021-03-12 10:37:53,793 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Function1<UByte?, Pair<UShort, Int>>, second: Map<UByte, String?>): Pair<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>> = TODO()
2021-03-12 10:37:53,918 [main:302] - generating value of type = Function1<UByte?, Pair<UShort, Int>> false depth = 6
2021-03-12 10:37:53,918 [main:302] - generating value of type = Pair<UShort, Int> false depth = 7
2021-03-12 10:37:54,019 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: UShort, second: Int): Pair<UShort, Int> = TODO()
2021-03-12 10:37:54,020 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: UShort, second: Int): Pair<UShort, Int> = TODO()
2021-03-12 10:37:54,146 [main:302] - generating value of type = UShort true depth = 10
2021-03-12 10:37:54,146 [main:302] - generating value of type = Int true depth = 10
2021-03-12 10:37:54,147 [main:95] - GENERATED = Pair<UShort, Int>(29972.toUShort(), -1621365858)
2021-03-12 10:37:54,147 [main:302] - generating value of type = Map<UByte, String?> false depth = 6
2021-03-12 10:37:54,237 [main:43] - GENERATING CALL OF fun <K, V> mapOf(): Map<UByte, Strg?> = TODO()
2021-03-12 10:37:54,238 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> mapOf(): Map<UByte, Strg?> = TODO()
2021-03-12 10:37:54,326 [main:95] - GENERATED = mapOf<UByte, String?>()
2021-03-12 10:37:54,327 [main:95] - GENERATED = Pair<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>({a: UByte? -> Pair<UShort, Int>(29972.toUShort(), -1621365858)}, mapOf<UByte, String?>())
2021-03-12 10:37:54,327 [main:95] - GENERATED = linkedMapOf<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>(Pair<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>({a: UByte? -> Pair<UShort, Int>(29972.toUShort(), -1621365858)}, mapOf<UByte, String?>()))
2021-03-12 10:37:54,661 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@2cc753a0]
2021-03-12 10:37:54,662 [main:78] - Generated call from random type = (linkedMapOf<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>(Pair<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>({a: UByte? -> Pair<UShort, Int>(29972.toUShort(), -1621365858)}, mapOf<UByte, String?>())))?.size.toULong()
2021-03-12 10:37:54,662 [main:61] - replacement of 1uL of type ULong is (linkedMapOf<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>(Pair<Function1<UByte?, Pair<UShort, Int>>, Map<UByte, String?>>({a: UByte? -> Pair<UShort, Int>(29972.toUShort(), -1621365858)}, mapOf<UByte, String?>())))?.size.toULong()
2021-03-12 10:37:54,779 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:54,780 [main:53] - replacing (listOf(9u, 6u, (uintList).removeFirst()), List<UInt>)
2021-03-12 10:37:54,780 [main:50] - replacing listOf(9u, 6u, (uintList).removeFirst()) List<UInt>
2021-03-12 10:37:54,780 [main:54] - Getting value of type List<UInt>
2021-03-12 10:37:54,895 [main:302] - generating value of type = List<UInt> false depth = 0
2021-03-12 10:37:54,993 [main:43] - GENERATING CALL OF fun <E> ArrayList(): List<UInt> = TODO()
2021-03-12 10:37:54,994 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): List<UInt> = TODO()
2021-03-12 10:37:55,100 [main:95] - GENERATED = ArrayList<UInt>()
2021-03-12 10:37:55,100 [main:58] - GENERATED VALUE OF TYPE List<UInt> = ArrayList<UInt>()
2021-03-12 10:37:55,101 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:55,321 [main:67] - randomType = Pair<Long, Set<Short>>
2021-03-12 10:37:55,411 [main:302] - generating value of type = Pair<Long, Set<Short>> false depth = 0
2021-03-12 10:37:55,504 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Long, second: Set<Short>): Pair<Long, Set<Short>> = TODO()
2021-03-12 10:37:55,505 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Long, second: Set<Short>): Pair<Long, Set<Short>> = TODO()
2021-03-12 10:37:55,598 [main:302] - generating value of type = Long true depth = 3
2021-03-12 10:37:55,599 [main:302] - generating value of type = Set<Short> false depth = 3
2021-03-12 10:37:55,741 [main:43] - GENERATING CALL OF fun <T> hashSetOf(elements: Short): Set<Short> = TODO()
2021-03-12 10:37:55,742 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(elements: Short): Set<Short> = TODO()
2021-03-12 10:37:55,850 [main:302] - generating value of type = Short true depth = 6
2021-03-12 10:37:55,851 [main:95] - GENERATED = hashSetOf<Short>(24373)
2021-03-12 10:37:55,851 [main:95] - GENERATED = Pair<Long, Set<Short>>(-5300401015737326363, hashSetOf<Short>(24373))
2021-03-12 10:37:55,883 [main:106] - GETTING List<UInt> from MutableList<UInt>
2021-03-12 10:37:55,963 [main:113] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@233352da]]
2021-03-12 10:37:55,963 [main:149] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@233352da]
2021-03-12 10:37:55,964 [main:117] - GENERATED CALL = (uintList).sortedDescending()
2021-03-12 10:37:55,964 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.toList(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@720d5b90]]
2021-03-12 10:37:55,964 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toList(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@720d5b90]
2021-03-12 10:37:55,964 [main:117] - GENERATED CALL = (uintList).toList()
2021-03-12 10:37:55,964 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filter(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@37c595f4]]
2021-03-12 10:37:55,964 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filter(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@37c595f4]
2021-03-12 10:37:56,062 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:37:56,062 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:37:56,063 [main:117] - GENERATED CALL = (uintList).filter({a: T -> true})
2021-03-12 10:37:56,063 [main:113] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2d5580f6]]
2021-03-12 10:37:56,063 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2d5580f6]
2021-03-12 10:37:56,064 [main:117] - GENERATED CALL = (uintList).shuffled()
2021-03-12 10:37:56,064 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@e3dbd51]]
2021-03-12 10:37:56,064 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@e3dbd51]
2021-03-12 10:37:56,157 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 10:37:56,259 [main:43] - GENERATING CALL OF fun <E> buildSet(capacity: kotlin.Int, builderAction: kotlin.collections.MutableSet<Int>.()->kotlin.Unit): Iterable<Int> = TODO()
2021-03-12 10:37:56,260 [main:61] - WITHOUT TYPE PARAMS = fun <E> buildSet(capacity: kotlin.Int, builderAction: kotlin.collections.MutableSet<Int>.()->kotlin.Unit): Iterable<Int> = TODO()
2021-03-12 10:37:56,568 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:37:56,568 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<MutableSet<Int>, Unit> false depth = 3
2021-03-12 10:37:56,569 [main:302] - generating value of type = Unit false depth = 4
2021-03-12 10:37:56,714 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:37:56,716 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:37:56,916 [main:302] - generating value of type = Any false depth = 7
2021-03-12 10:37:56,916 [main:95] - GENERATED = println("matde")
2021-03-12 10:37:56,917 [main:95] - GENERATED = buildSet<Int>(-1804597236, { println("matde")})
2021-03-12 10:37:56,917 [main:117] - GENERATED CALL = (uintList).slice(buildSet<Int>(-1804597236, { println("matde")}))
2021-03-12 10:37:56,917 [main:113] - Case = [public inline fun <T> kotlin.collections.List<T>.takeLastWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@18221338]]
2021-03-12 10:37:56,917 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.takeLastWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@18221338]
2021-03-12 10:37:57,006 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:37:57,007 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:37:57,007 [main:117] - GENERATED CALL = (uintList).takeLastWhile({a: T -> false})
2021-03-12 10:37:57,007 [main:113] - Case = [public fun <T : kotlin.Any> kotlin.collections.Iterable<T?>.filterNotNull(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7725070e]]
2021-03-12 10:37:57,007 [main:149] - GENERATING call of type public fun <T : kotlin.Any> kotlin.collections.Iterable<T?>.filterNotNull(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7725070e]
2021-03-12 10:37:57,008 [main:117] - GENERATED CALL = (uintList).filterNotNull()
2021-03-12 10:37:57,008 [main:113] - Case = [public operator fun <T> kotlin.collections.Collection<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64e4e885]]
2021-03-12 10:37:57,008 [main:149] - GENERATING call of type public operator fun <T> kotlin.collections.Collection<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64e4e885]
2021-03-12 10:37:57,099 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:37:57,192 [main:43] - GENERATING CALL OF fun <T> minOf(a: Comparable<T>, other: Comparable<T>): T = TODO()
2021-03-12 10:37:57,193 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Comparable<T>, other: Comparable<T>): T = TODO()
2021-03-12 10:37:57,308 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-12 10:37:57,312 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-12 10:37:57,317 [main:95] - GENERATED = minOf<Comparable<T>>("mtgic", 15967)
2021-03-12 10:37:57,317 [main:117] - GENERATED CALL = (uintList).plus(minOf<Comparable<T>>("mtgic", 15967))
2021-03-12 10:37:57,317 [main:113] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@446b6100]]
2021-03-12 10:37:57,317 [main:149] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@446b6100]
2021-03-12 10:37:57,318 [main:117] - GENERATED CALL = (uintList).sorted()
2021-03-12 10:37:57,318 [main:113] - Case = [public inline fun <T> kotlin.collections.List<T>.dropLastWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13705509]]
2021-03-12 10:37:57,318 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.dropLastWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13705509]
2021-03-12 10:37:57,412 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:37:57,412 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:37:57,413 [main:117] - GENERATED CALL = (uintList).dropLastWhile({a: T -> true})
2021-03-12 10:37:57,413 [main:61] - replacement of listOf(9u, 6u, (uintList).removeFirst()) of type List<UInt> is (uintList).slice(buildSet<Int>(-1804597236, { println("matde")}))
2021-03-12 10:37:57,513 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:57,513 [main:66] - Compilation checking started
2021-03-12 10:37:58,068 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get(1735048804).downTo(263916700.toUInt()) step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += i
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:37:58,069 [main:53] - replacing (10uL downTo 6910997889449695566.toULong(), ULongProgression)
2021-03-12 10:37:58,069 [main:50] - replacing 10uL downTo 6910997889449695566.toULong() ULongProgression
2021-03-12 10:37:58,069 [main:54] - Getting value of type ULongProgression
2021-03-12 10:37:58,170 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-12 10:37:58,270 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:58,271 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:37:58,611 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:58,612 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:58,612 [main:95] - GENERATED = ULongRange(2292565254863293404.toULong(), 773270757474211297.toULong())
2021-03-12 10:37:58,612 [main:58] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(2292565254863293404.toULong(), 773270757474211297.toULong())
2021-03-12 10:37:58,612 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:58,713 [main:67] - randomType = Boolean
2021-03-12 10:37:58,843 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:37:58,857 [main:61] - replacement of 10uL downTo 6910997889449695566.toULong() of type ULongProgression is ULongRange(2292565254863293404.toULong(), 773270757474211297.toULong())
2021-03-12 10:37:58,948 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:37:58,949 [main:53] - replacing (mutableListOf<ULong>(), MutableList<ULong>)
2021-03-12 10:37:58,950 [main:50] - replacing mutableListOf<ULong>() MutableList<ULong>
2021-03-12 10:37:58,950 [main:54] - Getting value of type MutableList<ULong>
2021-03-12 10:37:59,045 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-12 10:37:59,141 [main:43] - GENERATING CALL OF fun <T> mutableListOf(elements: ULong): MutableList<ULong> = TODO()
2021-03-12 10:37:59,142 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(elements: ULong): MutableList<ULong> = TODO()
2021-03-12 10:37:59,237 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:37:59,237 [main:95] - GENERATED = mutableListOf<ULong>(419978805410503085.toULong())
2021-03-12 10:37:59,237 [main:58] - GENERATED VALUE OF TYPE MutableList<ULong> = mutableListOf<ULong>(419978805410503085.toULong())
2021-03-12 10:37:59,238 [main:61] - GENERATED IS CALL =true
2021-03-12 10:37:59,238 [main:67] - randomType = Long
2021-03-12 10:37:59,332 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:37:59,398 [main:106] - GETTING MutableList<ULong> from MutableList<UInt>
2021-03-12 10:37:59,481 [main:106] - GETTING MutableList<ULong> from MutableList<ULong>
2021-03-12 10:37:59,558 [main:113] - Case = [public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@57d86841]]
2021-03-12 10:37:59,558 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@57d86841]
2021-03-12 10:37:59,558 [main:117] - GENERATED CALL = (ulongList).toMutableList()
2021-03-12 10:37:59,558 [main:113] - Case = [public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.ULong> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2ba8b46f]]
2021-03-12 10:37:59,558 [main:149] - GENERATING call of type public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.ULong> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@2ba8b46f]
2021-03-12 10:37:59,652 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:59,751 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:37:59,752 [main:117] - GENERATED CALL = (ulongList).subList(1852264309, 122950270)
2021-03-12 10:37:59,753 [main:113] - Case = [@kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2033326a]]
2021-03-12 10:37:59,753 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2033326a]
2021-03-12 10:37:59,753 [main:117] - GENERATED CALL = (ulongList).asReversed()
2021-03-12 10:37:59,753 [main:61] - replacement of mutableListOf<ULong>() of type MutableList<ULong> is (ulongList).asReversed()
2021-03-12 10:37:59,863 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:37:59,864 [main:66] - Compilation checking started
2021-03-12 10:38:00,155 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get(1735048804).downTo(263916700.toUInt()) step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = (ulongList).asReversed()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += i
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:00,156 [main:53] - replacing (10u downTo 1u, UIntProgression)
2021-03-12 10:38:00,156 [main:50] - replacing 10u downTo 1u UIntProgression
2021-03-12 10:38:00,156 [main:54] - Getting value of type UIntProgression
2021-03-12 10:38:00,265 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-12 10:38:00,377 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:38:00,379 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-12 10:38:00,707 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:38:00,708 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:38:00,708 [main:95] - GENERATED = UIntRange(1796525929.toUInt(), 6705175.toUInt())
2021-03-12 10:38:00,708 [main:58] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1796525929.toUInt(), 6705175.toUInt())
2021-03-12 10:38:00,708 [main:61] - GENERATED IS CALL =true
2021-03-12 10:38:01,004 [main:67] - randomType = Array<UShort>
2021-03-12 10:38:01,140 [main:302] - generating value of type = Array<UShort> false depth = 0
2021-03-12 10:38:01,249 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: UShort): Array<UShort> = TODO()
2021-03-12 10:38:01,252 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: UShort): Array<UShort> = TODO()
2021-03-12 10:38:01,364 [main:302] - generating value of type = UShort true depth = 3
2021-03-12 10:38:01,365 [main:95] - GENERATED = arrayOf<UShort>(20895.toUShort())
2021-03-12 10:38:01,384 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.UShort defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@44e4f9e9]
2021-03-12 10:38:01,477 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:01,478 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.downTo(to: kotlin.UShort): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6f6bc1e0]
2021-03-12 10:38:01,574 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:38:01,575 [main:78] - Generated call from random type = (arrayOf<UShort>(20895.toUShort())).get(1805779058).downTo(14677.toUShort())
2021-03-12 10:38:01,575 [main:61] - replacement of 10u downTo 1u of type UIntProgression is UIntRange(1796525929.toUInt(), 6705175.toUInt())
2021-03-12 10:38:01,692 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:38:01,693 [main:53] - replacing (((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step (-6456459551939431558).rangeTo(-22).start).reversed(), ULongProgression)
2021-03-12 10:38:01,693 [main:50] - replacing ((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step (-6456459551939431558).rangeTo(-22).start).reversed() ULongProgression
2021-03-12 10:38:01,693 [main:54] - Getting value of type ULongProgression
2021-03-12 10:38:01,807 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-12 10:38:01,916 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:38:01,918 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-12 10:38:02,286 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:38:02,286 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 10:38:02,287 [main:95] - GENERATED = ULongRange(6544454488175313462.toULong(), 8026968597268150121.toULong())
2021-03-12 10:38:02,287 [main:58] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(6544454488175313462.toULong(), 8026968597268150121.toULong())
2021-03-12 10:38:02,287 [main:61] - GENERATED IS CALL =true
2021-03-12 10:38:02,850 [main:67] - randomType = HashSet<Boolean?>?
2021-03-12 10:38:03,001 [main:302] - generating value of type = HashSet<Boolean?> false depth = 0
2021-03-12 10:38:03,097 [main:43] - GENERATING CALL OF fun <T> hashSetOf(elements: Boolean?): HashSet<Boolean?> = TODO()
2021-03-12 10:38:03,098 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(elements: Boolean?): HashSet<Boolean?> = TODO()
2021-03-12 10:38:03,189 [main:302] - generating value of type = Boolean true depth = 3
2021-03-12 10:38:03,189 [main:95] - GENERATED = hashSetOf<Boolean?>(true)
2021-03-12 10:38:03,327 [main:61] - replacement of ((41.toUByte()).div(2483363208752729155.toULong()).downTo(5734866373748722040.toULong()) step (-6456459551939431558).rangeTo(-22).start).reversed() of type ULongProgression is ULongRange(6544454488175313462.toULong(), 8026968597268150121.toULong())
2021-03-12 10:38:03,415 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:38:03,416 [main:53] - replacing (3, Int)
2021-03-12 10:38:03,416 [main:50] - replacing 3 Int
2021-03-12 10:38:03,416 [main:54] - Getting value of type Int
2021-03-12 10:38:03,507 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:03,507 [main:58] - GENERATED VALUE OF TYPE Int = 1729800664
2021-03-12 10:38:03,507 [main:61] - GENERATED IS CALL =false
2021-03-12 10:38:03,939 [main:67] - randomType = ArrayDeque<Byte?>?
2021-03-12 10:38:04,031 [main:302] - generating value of type = ArrayDeque<Byte?> false depth = 0
2021-03-12 10:38:04,127 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Byte?> = TODO()
2021-03-12 10:38:04,128 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Byte?> = TODO()
2021-03-12 10:38:04,316 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:38:04,317 [main:95] - GENERATED = ArrayDeque<Byte?>(460302916)
2021-03-12 10:38:04,512 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3497d8b3]
2021-03-12 10:38:04,512 [main:78] - Generated call from random type = (ArrayDeque<Byte?>(460302916))?.size.inv()
2021-03-12 10:38:04,513 [main:106] - GETTING Int from MutableList<UInt>
2021-03-12 10:38:04,591 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@143ef384], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1773ace9]]
2021-03-12 10:38:04,591 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1773ace9]
2021-03-12 10:38:04,687 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:04,688 [main:117] - GENERATED CALL = (uintList).size.shl(-892188098)
2021-03-12 10:38:04,688 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@143ef384], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2fd97a71]]
2021-03-12 10:38:04,688 [main:117] - GENERATED CALL = (uintList).size.absoluteValue
2021-03-12 10:38:04,688 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@20dc625e]]
2021-03-12 10:38:04,688 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:38:04,802 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:04,803 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@20dc625e]
2021-03-12 10:38:04,803 [main:117] - GENERATED CALL = (uintList).get(1061014426).countLeadingZeroBits()
2021-03-12 10:38:04,803 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@143ef384], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@15295502]]
2021-03-12 10:38:04,803 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@15295502]
2021-03-12 10:38:04,921 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:38:04,921 [main:117] - GENERATED CALL = (uintList).size.minus(-60)
2021-03-12 10:38:04,921 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@143ef384], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f3b35ec]]
2021-03-12 10:38:04,921 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f3b35ec]
2021-03-12 10:38:04,922 [main:117] - GENERATED CALL = (uintList).size.inc()
2021-03-12 10:38:04,922 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6dcb0640]]
2021-03-12 10:38:04,922 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6dcb0640]
2021-03-12 10:38:05,023 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 10:38:05,023 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:38:05,024 [main:117] - GENERATED CALL = (uintList).sumBy({a: T -> -992385580})
2021-03-12 10:38:05,024 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@143ef384], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5f02432e]]
2021-03-12 10:38:05,025 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5f02432e]
2021-03-12 10:38:05,025 [main:117] - GENERATED CALL = (uintList).size.countOneBits()
2021-03-12 10:38:05,025 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@17833f]]
2021-03-12 10:38:05,025 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:38:05,119 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:05,119 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@17833f]
2021-03-12 10:38:05,216 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:38:05,216 [main:117] - GENERATED CALL = (uintList).get(795738776).compareTo(16.toUByte())
2021-03-12 10:38:05,217 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@143ef384], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@37d3415a]]
2021-03-12 10:38:05,217 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@37d3415a]
2021-03-12 10:38:05,306 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:05,307 [main:117] - GENERATED CALL = (uintList).size.rotateLeft(1766666681)
2021-03-12 10:38:05,307 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@143ef384], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3497d8b3]]
2021-03-12 10:38:05,307 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3497d8b3]
2021-03-12 10:38:05,307 [main:117] - GENERATED CALL = (uintList).size.inv()
2021-03-12 10:38:05,307 [main:61] - replacement of 3 of type Int is (ArrayDeque<Byte?>(460302916))?.size.inv()
2021-03-12 10:38:05,396 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:38:05,397 [main:66] - Compilation checking started
2021-03-12 10:38:05,970 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get(1735048804).downTo(263916700.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(460302916))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += i
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:05,971 [main:53] - replacing (i, ULong)
2021-03-12 10:38:05,972 [main:50] - replacing i ULong
2021-03-12 10:38:05,972 [main:54] - Getting value of type ULong
2021-03-12 10:38:06,069 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:38:06,070 [main:58] - GENERATED VALUE OF TYPE ULong = 1065449243371119485.toULong()
2021-03-12 10:38:06,070 [main:61] - GENERATED IS CALL =false
2021-03-12 10:38:06,182 [main:67] - randomType = UShort
2021-03-12 10:38:06,334 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:38:06,397 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@5fe16257]
2021-03-12 10:38:06,517 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:38:06,518 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.coerceAtLeast(minimumValue: kotlin.ULong): kotlin.ULong defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2cd27045]
2021-03-12 10:38:06,620 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:38:06,621 [main:78] - Generated call from random type = (3255.toUShort()).div(3527052279211813718.toULong()).coerceAtLeast(5293115443981043149.toULong())
2021-03-12 10:38:06,622 [main:106] - GETTING ULong from MutableList<UInt>
2021-03-12 10:38:06,702 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@27f3f223]]
2021-03-12 10:38:06,702 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:38:06,800 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:06,801 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@27f3f223]
2021-03-12 10:38:06,910 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:38:06,911 [main:117] - GENERATED CALL = (uintList).get(1546045567).div(6079607249167662335.toULong())
2021-03-12 10:38:06,911 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4138a070]]
2021-03-12 10:38:06,911 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:38:07,002 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:07,003 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4138a070]
2021-03-12 10:38:07,095 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:38:07,096 [main:117] - GENERATED CALL = (uintList).get(88101736).times(2675078769159284826.toULong())
2021-03-12 10:38:07,096 [main:113] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@19e6bee1]]
2021-03-12 10:38:07,096 [main:149] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@19e6bee1]
2021-03-12 10:38:07,096 [main:117] - GENERATED CALL = (uintList).sum()
2021-03-12 10:38:07,096 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4e942689]]
2021-03-12 10:38:07,096 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:38:07,187 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:07,188 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4e942689]
2021-03-12 10:38:07,188 [main:117] - GENERATED CALL = (uintList).get(-22510744).toULong()
2021-03-12 10:38:07,188 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@500469b0]]
2021-03-12 10:38:07,188 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:38:07,279 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:07,279 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@500469b0]
2021-03-12 10:38:07,374 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:38:07,375 [main:117] - GENERATED CALL = (uintList).get(-1320151701).minus(1919332996409975033.toULong())
2021-03-12 10:38:07,375 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7779d248]]
2021-03-12 10:38:07,375 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:38:07,528 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:07,529 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7779d248]
2021-03-12 10:38:07,661 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:38:07,662 [main:117] - GENERATED CALL = (uintList).get(-870676664).rem(1872888591284195835.toULong())
2021-03-12 10:38:07,662 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3141366]]
2021-03-12 10:38:07,662 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-12 10:38:07,760 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:07,760 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3141366]
2021-03-12 10:38:07,852 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:38:07,853 [main:117] - GENERATED CALL = (uintList).get(1308289572).plus(3828810857818758175.toULong())
2021-03-12 10:38:07,853 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@143ef384], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@2cc753a0]]
2021-03-12 10:38:07,853 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@2cc753a0]
2021-03-12 10:38:07,853 [main:117] - GENERATED CALL = (uintList).size.toULong()
2021-03-12 10:38:07,853 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.ULong): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3daad86d]]
2021-03-12 10:38:07,854 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.ULong): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3daad86d]
2021-03-12 10:38:07,944 [main:302] - generating value of type = Function1<T, ULong> false depth = 0
2021-03-12 10:38:07,945 [main:302] - generating value of type = ULong true depth = 1
2021-03-12 10:38:07,946 [main:117] - GENERATED CALL = (uintList).sumOf({a: T -> 6444775225194406416.toULong()})
2021-03-12 10:38:07,946 [main:61] - replacement of i of type ULong is (uintList).get(1546045567).div(6079607249167662335.toULong())
2021-03-12 10:38:08,034 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:38:08,034 [main:66] - Compilation checking started
2021-03-12 10:38:08,525 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get(1735048804).downTo(263916700.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(460302916))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += (uintList).get(1546045567).div(6079607249167662335.toULong())
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (683157791.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:08,635 [main:119] - TRYING TO REPLACE CONSTANT 683157791
2021-03-12 10:38:08,736 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 10:38:08,736 [main:66] - Compilation checking started
2021-03-12 10:38:09,307 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get(1735048804).downTo(263916700.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(460302916))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 3897699202580092046.toULong())) {
        ulongList += (uintList).get(1546045567).div(6079607249167662335.toULong())
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (263916700.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:09,311 [main:119] - TRYING TO REPLACE CONSTANT 1733438388
2021-03-12 10:38:09,436 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 10:38:09,436 [main:66] - Compilation checking started
2021-03-12 10:38:09,971 [main:119] - TRYING TO REPLACE CONSTANT 4190440419547448292
2021-03-12 10:38:10,076 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 10:38:10,076 [main:66] - Compilation checking started
2021-03-12 10:38:10,613 [main:119] - TRYING TO REPLACE CONSTANT 3897699202580092046
2021-03-12 10:38:10,741 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 10:38:10,741 [main:66] - Compilation checking started
2021-03-12 10:38:11,250 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get(1735048804).downTo(263916700.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(460302916))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 4190440419547448292.toULong())) {
        ulongList += (uintList).get(1546045567).div(6079607249167662335.toULong())
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (263916700.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:11,250 [main:119] - TRYING TO REPLACE CONSTANT 1735048804
2021-03-12 10:38:11,365 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:38:11,365 [main:66] - Compilation checking started
2021-03-12 10:38:11,787 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get((ArrayDeque<Byte?>(460302916))?.size.inv()).downTo(263916700.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(460302916))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 4190440419547448292.toULong())) {
        ulongList += (uintList).get(1546045567).div(6079607249167662335.toULong())
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (263916700.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:11,787 [main:119] - TRYING TO REPLACE CONSTANT 263916700
2021-03-12 10:38:11,894 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-12 10:38:11,895 [main:66] - Compilation checking started
2021-03-12 10:38:12,209 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get((ArrayDeque<Byte?>(460302916))?.size.inv()).downTo(-1804597236.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(460302916))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 4190440419547448292.toULong())) {
        ulongList += (uintList).get(1546045567).div(6079607249167662335.toULong())
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (263916700.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:12,210 [main:119] - TRYING TO REPLACE CONSTANT 1850491824
2021-03-12 10:38:12,316 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-12 10:38:12,316 [main:66] - Compilation checking started
2021-03-12 10:38:12,684 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get((ArrayDeque<Byte?>(460302916))?.size.inv()).downTo(263916700.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(460302916))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 4190440419547448292.toULong())) {
        ulongList += (uintList).get(1546045567).div(6079607249167662335.toULong())
    }
    assertEquals((ulongList).takeLast(inv()), ulongList)

    return (263916700.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:12,684 [main:119] - TRYING TO REPLACE CONSTANT 1804597236
2021-03-12 10:38:12,801 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:38:12,801 [main:66] - Compilation checking started
2021-03-12 10:38:13,060 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get((ArrayDeque<Byte?>(460302916))?.size.inv()).downTo(263916700.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(460302916))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(inv(), { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 4190440419547448292.toULong())) {
        ulongList += (uintList).get(1546045567).div(6079607249167662335.toULong())
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (263916700.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:13,060 [main:119] - TRYING TO REPLACE CONSTANT 460302916
2021-03-12 10:38:13,154 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(REFERENCE_EXPRESSION)
2021-03-12 10:38:13,155 [main:66] - Compilation checking started
2021-03-12 10:38:13,437 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get((ArrayDeque<Byte?>(460302916))?.size.inv()).downTo(263916700.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(size))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 4190440419547448292.toULong())) {
        ulongList += (uintList).get(1546045567).div(6079607249167662335.toULong())
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (263916700.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:13,438 [main:119] - TRYING TO REPLACE CONSTANT 1546045567
2021-03-12 10:38:13,536 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 10:38:13,536 [main:66] - Compilation checking started
2021-03-12 10:38:14,039 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((uintList).get((ArrayDeque<Byte?>(460302916))?.size.inv()).downTo(263916700.toUInt()) step 2).reversed() step (ArrayDeque<Byte?>(460302916))?.size.inv()) {
        uintList += i
    }
    assertEquals((uintList).slice(buildSet<Int>(-1804597236, { println("matde")})), (uintList).toMutableList())

    val ulongList = mutableListOf<ULong>()
    for (i in ULongRange(4190440419547448292.toULong(), 4190440419547448292.toULong())) {
        ulongList += (uintList).get(2).div(6079607249167662335.toULong())
    }
    assertEquals((ulongList).takeLast(1850491824), ulongList)

    return (263916700.toUInt()).toShort().toString(1733438388)
}


2021-03-12 10:38:14,039 [main:119] - TRYING TO REPLACE CONSTANT 6079607249167662335
2021-03-12 10:38:14,136 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 10:38:14,136 [main:66] - Compilation checking started
2021-03-12 10:38:14,562 [main:41] - AFTER TRY 0 res = import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}
2021-03-12 10:38:14,932 [main:43] - Try №0
2021-03-12 10:38:28,641 [main:48] - Already checked
2021-03-12 10:38:32,731 [main:69] - Trying to insert override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
2021-03-12 10:38:32,950 [main:66] - Compilation checking started
2021-03-12 10:38:34,267 [main:103] - Trying to change 163 nodes
2021-03-12 10:38:34,267 [main:107] - replacing ("IGNORE ME", String)
2021-03-12 10:38:34,269 [main:50] - replacing "IGNORE ME" String
2021-03-12 10:38:34,269 [main:54] - Getting value of type String
2021-03-12 10:38:34,442 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:38:34,444 [main:58] - GENERATED VALUE OF TYPE String = "qdaiq"
2021-03-12 10:38:34,445 [main:61] - GENERATED IS CALL =false
2021-03-12 10:38:34,626 [main:67] - randomType = Short
2021-03-12 10:38:34,818 [main:302] - generating value of type = Short true depth = 0
2021-03-12 10:38:34,890 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4d7eb97a]
2021-03-12 10:38:34,890 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cf2510e]
2021-03-12 10:38:34,891 [main:78] - Generated call from random type = (5604).toChar().uppercase()
2021-03-12 10:38:34,893 [main:106] - GETTING String from UIntProgression
2021-03-12 10:38:34,920 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:38:34,920 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:38:35,123 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:38:35,340 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:38:35,542 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:38:35,705 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:35,898 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:38:36,065 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:38:36,068 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:38:36,255 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:38:36,258 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:38:36,613 [main:302] - generating value of type = Int true depth = 4
2021-03-12 10:38:36,616 [main:95] - GENERATED = StringBuilder(635748281)
2021-03-12 10:38:36,617 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2).joinToString("rgpjn", StringBuilder(), "xxanc", -1410053039, "prjmm", {a: T -> StringBuilder(635748281)})
2021-03-12 10:38:36,617 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]]
2021-03-12 10:38:36,617 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]
2021-03-12 10:38:36,766 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:36,769 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2).step.toString(-807170026)
2021-03-12 10:38:36,769 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]]
2021-03-12 10:38:36,769 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]
2021-03-12 10:38:36,922 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:38:36,925 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2).first.toString(-1099579828)
2021-03-12 10:38:36,925 [main:114] - replacement of "IGNORE ME" of type String is ((10u downTo 1u).reversed() step 2).step.toString(-807170026)
2021-03-12 10:38:37,087 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:38:37,087 [main:66] - Compilation checking started
2021-03-12 10:38:37,945 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by prope4

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        prope5.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope5.joinToString(separator = "\n")) }
    }

    fun fu9(method: String) {
        prope5.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope6)
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope8 = {
            prope2.prope7 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:38:37,947 [main:107] - replacing (Kla4, Kla10)
2021-03-12 10:38:37,949 [main:50] - replacing Kla4 Kla10
2021-03-12 10:38:37,949 [main:54] - Getting value of type Kla10
2021-03-12 10:38:38,103 [main:302] - generating value of type = Kla10 false depth = 0
2021-03-12 10:38:38,105 [main:112] - generating klass Kla10 text = companion object Kla10 : Kla4()
2021-03-12 10:38:38,105 [main:58] - GENERATED VALUE OF TYPE Kla10 = 
2021-03-12 10:38:38,114 [main:67] - randomType = Kla2
2021-03-12 10:38:38,271 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-12 10:38:38,274 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:38:38,293 [main:106] - GETTING Kla10 from ULongProgression
2021-03-12 10:38:38,324 [main:106] - GETTING Kla10 from UIntProgression
2021-03-12 10:38:38,349 [main:106] - GETTING Kla10 from UIntProgression
2021-03-12 10:38:38,350 [main:106] - GETTING Kla10 from UIntProgression
2021-03-12 10:38:38,351 [main:106] - GETTING Kla10 from UIntProgression
2021-03-12 10:38:38,352 [main:106] - GETTING Kla10 from ULongProgression
2021-03-12 10:38:38,353 [main:106] - GETTING Kla10 from ULongProgression
2021-03-12 10:38:38,354 [main:106] - GETTING Kla10 from ULongProgression
2021-03-12 10:38:38,355 [main:106] - GETTING Kla10 from ULongProgression
2021-03-12 10:38:38,356 [main:106] - GETTING Kla10 from UIntProgression
2021-03-12 10:38:38,357 [main:106] - GETTING Kla10 from ULongProgression
2021-03-12 10:38:38,358 [main:106] - GETTING Kla10 from UIntProgression
2021-03-12 10:38:38,358 [main:111] - Cant find and generate replacement for Kla4 type Kla10
2021-03-12 10:38:38,358 [main:107] - replacing (prope3, Result<Ty0>)
2021-03-12 10:38:38,359 [main:50] - replacing prope3 Result<Ty0>
2021-03-12 10:38:38,359 [main:54] - Getting value of type Result<Ty0>
2021-03-12 10:38:38,573 [main:302] - generating value of type = Result<Ty0> false depth = 0
2021-03-12 10:38:38,780 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-12 10:38:38,784 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-12 10:38:39,143 [main:385] - Cant generate call of fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-12 10:38:39,143 [main:58] - GENERATED VALUE OF TYPE Result<Ty0> = 
2021-03-12 10:38:39,510 [main:67] - randomType = HashSet<Float>
2021-03-12 10:38:39,662 [main:302] - generating value of type = HashSet<Float> false depth = 0
2021-03-12 10:38:39,857 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): HashSet<Float> = TODO()
2021-03-12 10:38:39,861 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): HashSet<Float> = TODO()
2021-03-12 10:38:40,086 [main:95] - GENERATED = linkedSetOf<Float>()
2021-03-12 10:38:40,292 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:38:40,328 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:38:40,330 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:38:40,363 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:38:40,366 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:38:40,369 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:38:40,371 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:38:40,374 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:38:40,376 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:38:40,379 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:38:40,382 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:38:40,384 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:38:40,385 [main:111] - Cant find and generate replacement for prope3 type Result<Ty0>
2021-03-12 10:38:40,385 [main:107] - replacing (it?.methodName?.startsWith(method) == true, Boolean)
2021-03-12 10:38:40,387 [main:50] - replacing it?.methodName?.startsWith(method) == true Boolean
2021-03-12 10:38:40,387 [main:54] - Getting value of type Boolean
2021-03-12 10:38:40,548 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:38:40,551 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 10:38:40,551 [main:61] - GENERATED IS CALL =false
2021-03-12 10:38:40,560 [main:67] - randomType = Kla0
2021-03-12 10:38:40,737 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-12 10:38:40,741 [main:112] - generating klass Kla0 text = @Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)
2021-03-12 10:38:40,915 [main:194] - Type params = []
2021-03-12 10:38:41,083 [main:302] - generating value of type = String true depth = 2
2021-03-12 10:38:41,093 [main:149] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@407edf68]
2021-03-12 10:38:41,245 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:38:41,392 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:38:41,395 [main:78] - Generated call from random type = (Kla0("ibles")).s.startsWith("unyvr", true)
2021-03-12 10:38:41,395 [main:114] - replacement of it?.methodName?.startsWith(method) == true of type Boolean is (Kla0("ibles")).s.startsWith("unyvr", true)
2021-03-12 10:38:41,556 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:38:41,556 [main:66] - Compilation checking started
2021-03-12 10:38:42,350 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by prope4

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        prope5.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope5.joinToString(separator = "\n")) }
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope6)
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope8 = {
            prope2.prope7 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:38:42,354 [main:107] - replacing (prope3.exceptionOrNull()?.let(x), Unit?)
2021-03-12 10:38:42,356 [main:50] - replacing prope3.exceptionOrNull()?.let(x) Unit?
2021-03-12 10:38:42,356 [main:54] - Getting value of type Unit?
2021-03-12 10:38:42,528 [main:302] - generating value of type = Unit false depth = 0
2021-03-12 10:38:42,716 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:38:42,722 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:38:43,208 [main:302] - generating value of type = Boolean true depth = 3
2021-03-12 10:38:43,212 [main:95] - GENERATED = require(true)
2021-03-12 10:38:43,214 [main:58] - GENERATED VALUE OF TYPE Unit? = require(true)
2021-03-12 10:38:43,214 [main:61] - GENERATED IS CALL =true
2021-03-12 10:38:43,226 [main:67] - randomType = Kla2
2021-03-12 10:38:43,422 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-12 10:38:43,426 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:38:43,447 [main:106] - GETTING Unit? from UIntProgression
2021-03-12 10:38:43,473 [main:113] - Case = [@kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68a0f19a]]
2021-03-12 10:38:43,473 [main:149] - GENERATING call of type @kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68a0f19a]
2021-03-12 10:38:43,621 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:38:43,624 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:38:43,776 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:38:43,779 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:38:44,236 [main:302] - generating value of type = Int true depth = 4
2021-03-12 10:38:44,238 [main:302] - generating value of type = Function1<Int, Unit> false depth = 4
2021-03-12 10:38:44,240 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 10:38:44,246 [main:95] - GENERATED = repeat(-904198704, {a: Int -> println()})
2021-03-12 10:38:44,246 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2)?.forEach({a: T -> repeat(-904198704, {a: Int -> println()})})
2021-03-12 10:38:44,247 [main:113] - Case = [public abstract operator fun iterator(): kotlin.collections.Iterator<kotlin.UInt> defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@227507e0], public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15fb9174]]
2021-03-12 10:38:44,247 [main:149] - GENERATING call of type public abstract operator fun iterator(): kotlin.collections.Iterator<kotlin.UInt> defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@227507e0]
2021-03-12 10:38:44,247 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15fb9174]
2021-03-12 10:38:44,421 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:38:44,423 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:38:44,578 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:38:44,582 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:38:45,070 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:38:45,072 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:38:45,074 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:38:45,074 [main:95] - GENERATED = require(false, { "zdruv"})
2021-03-12 10:38:45,075 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2)?.iterator().forEach({a: T -> require(false, { "zdruv"})})
2021-03-12 10:38:45,075 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1888381d]]
2021-03-12 10:38:45,075 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1888381d]
2021-03-12 10:38:45,210 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, T, Unit> false depth = 0
2021-03-12 10:38:45,212 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:38:45,354 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:38:45,357 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:38:45,814 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:38:45,817 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:38:45,819 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:38:45,820 [main:95] - GENERATED = check(true, { "cjazu"})
2021-03-12 10:38:45,820 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2)?.forEachIndexed({a: Int, b: T -> check(true, { "cjazu"})})
2021-03-12 10:38:45,820 [main:114] - replacement of prope3.exceptionOrNull()?.let(x) of type Unit? is ((10u downTo 1u).reversed() step 2)?.forEachIndexed({a: Int, b: T -> check(true, { "cjazu"})})
2021-03-12 10:38:45,959 [main:33] - Trying to replace Element(SAFE_ACCESS_EXPRESSION) on Element(SAFE_ACCESS_EXPRESSION)
2021-03-12 10:38:45,959 [main:66] - Compilation checking started
2021-03-12 10:38:46,445 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by prope4

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
((10u downTo 1u).reversed() step 2)?.forEachIndexed({a: Int, b: T -> check(true, { "cjazu"})})
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        prope5.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope5.joinToString(separator = "\n")) }
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope6)
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope8 = {
            prope2.prope7 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:38:46,448 [main:107] - replacing (prope3.exceptionOrNull()?.let(x), Unit?)
2021-03-12 10:38:46,448 [main:50] - replacing prope3.exceptionOrNull()?.let(x) Unit?
2021-03-12 10:38:46,448 [main:54] - Getting value of type Unit?
2021-03-12 10:38:46,594 [main:302] - generating value of type = Unit false depth = 0
2021-03-12 10:38:46,736 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:38:46,739 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:38:47,220 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:38:47,223 [main:302] - generating value of type = Function1<Int, Unit> false depth = 3
2021-03-12 10:38:47,226 [main:302] - generating value of type = Unit false depth = 4
2021-03-12 10:38:47,380 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:38:47,384 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:38:47,680 [main:302] - generating value of type = Any false depth = 7
2021-03-12 10:38:47,681 [main:95] - GENERATED = print("efaou")
2021-03-12 10:38:47,681 [main:95] - GENERATED = repeat(8622951, {a: Int -> print("efaou")})
2021-03-12 10:38:47,681 [main:58] - GENERATED VALUE OF TYPE Unit? = repeat(8622951, {a: Int -> print("efaou")})
2021-03-12 10:38:47,681 [main:61] - GENERATED IS CALL =true
2021-03-12 10:38:47,838 [main:67] - randomType = Kla3?
2021-03-12 10:38:47,972 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-12 10:38:47,974 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by prope4
2021-03-12 10:38:48,107 [main:194] - Type params = []
2021-03-12 10:38:48,274 [main:302] - generating value of type = Kla1 false depth = 2
2021-03-12 10:38:48,276 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:38:48,570 [main:302] - generating value of type = Kla2 false depth = 4
2021-03-12 10:38:48,573 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:38:48,595 [main:106] - GETTING Unit? from UIntProgression
2021-03-12 10:38:48,616 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1888381d]]
2021-03-12 10:38:48,616 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1888381d]
2021-03-12 10:38:48,765 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, T, Unit> false depth = 0
2021-03-12 10:38:48,767 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:38:48,929 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:38:48,932 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:38:49,399 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:38:49,401 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:38:49,403 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:38:49,403 [main:95] - GENERATED = require(false, { "tekia"})
2021-03-12 10:38:49,404 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed())?.forEachIndexed({a: Int, b: T -> require(false, { "tekia"})})
2021-03-12 10:38:49,404 [main:113] - Case = [@kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68a0f19a]]
2021-03-12 10:38:49,404 [main:149] - GENERATING call of type @kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68a0f19a]
2021-03-12 10:38:49,541 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:38:49,543 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:38:49,721 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:38:49,725 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:38:50,042 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:38:50,044 [main:95] - GENERATED = check(false)
2021-03-12 10:38:50,044 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed())?.forEach({a: T -> check(false)})
2021-03-12 10:38:50,044 [main:113] - Case = [public abstract operator fun iterator(): kotlin.collections.Iterator<kotlin.UInt> defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@227507e0], public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15fb9174]]
2021-03-12 10:38:50,044 [main:149] - GENERATING call of type public abstract operator fun iterator(): kotlin.collections.Iterator<kotlin.UInt> defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@227507e0]
2021-03-12 10:38:50,044 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15fb9174]
2021-03-12 10:38:50,184 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:38:50,187 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:38:50,371 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:38:50,375 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:38:50,841 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:38:50,843 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:38:50,846 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:38:50,846 [main:95] - GENERATED = require(false, { "qvbxx"})
2021-03-12 10:38:50,846 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed())?.iterator().forEach({a: T -> require(false, { "qvbxx"})})
2021-03-12 10:38:50,846 [main:114] - replacement of prope3.exceptionOrNull()?.let(x) of type Unit? is ((10u downTo 1u).reversed())?.forEach({a: T -> check(false)})
2021-03-12 10:38:50,993 [main:33] - Trying to replace Element(SAFE_ACCESS_EXPRESSION) on Element(SAFE_ACCESS_EXPRESSION)
2021-03-12 10:38:50,993 [main:66] - Compilation checking started
2021-03-12 10:38:51,503 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by prope4

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
((10u downTo 1u).reversed())?.forEach({a: T -> check(false)})
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        prope5.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope5.joinToString(separator = "\n")) }
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope6)
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope8 = {
            prope2.prope7 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:38:51,506 [main:107] - replacing ({ error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope5.joinToString(separator = "\n")) }, Function0<Nothing>)
2021-03-12 10:38:51,507 [main:50] - replacing { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope5.joinToString(separator = "\n")) } Function0<Nothing>
2021-03-12 10:38:51,507 [main:54] - Getting value of type Function0<Nothing>
2021-03-12 10:38:51,656 [main:302] - generating value of type = Function0<Nothing> false depth = 0
2021-03-12 10:38:51,658 [main:302] - generating value of type = Nothing false depth = 1
2021-03-12 10:38:51,663 [main:58] - GENERATED VALUE OF TYPE Function0<Nothing> = { TODO()}
2021-03-12 10:38:51,663 [main:61] - GENERATED IS CALL =false
2021-03-12 10:38:51,817 [main:67] - randomType = String?
2021-03-12 10:38:51,955 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:38:51,987 [main:106] - GETTING Function0<Nothing> from ULongProgression
2021-03-12 10:38:52,006 [main:106] - GETTING Function0<Nothing> from UIntProgression
2021-03-12 10:38:52,026 [main:106] - GETTING Function0<Nothing> from ULongProgression
2021-03-12 10:38:52,027 [main:106] - GETTING Function0<Nothing> from UIntProgression
2021-03-12 10:38:52,029 [main:106] - GETTING Function0<Nothing> from UIntProgression
2021-03-12 10:38:52,030 [main:106] - GETTING Function0<Nothing> from ULongProgression
2021-03-12 10:38:52,031 [main:106] - GETTING Function0<Nothing> from UIntProgression
2021-03-12 10:38:52,032 [main:106] - GETTING Function0<Nothing> from UIntProgression
2021-03-12 10:38:52,033 [main:106] - GETTING Function0<Nothing> from ULongProgression
2021-03-12 10:38:52,034 [main:106] - GETTING Function0<Nothing> from ULongProgression
2021-03-12 10:38:52,035 [main:106] - GETTING Function0<Nothing> from ULongProgression
2021-03-12 10:38:52,036 [main:106] - GETTING Function0<Nothing> from UIntProgression
2021-03-12 10:38:52,036 [main:114] - replacement of { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope5.joinToString(separator = "\n")) } of type Function0<Nothing> is { TODO()}
2021-03-12 10:38:52,175 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 10:38:52,176 [main:66] - Compilation checking started
2021-03-12 10:38:52,961 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by prope4

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope6)
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope8 = {
            prope2.prope7 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:38:52,965 [main:107] - replacing (prope0, Continuation<*>)
2021-03-12 10:38:52,968 [main:50] - replacing prope0 Continuation<*>
2021-03-12 10:38:52,968 [main:54] - Getting value of type Continuation<*>
2021-03-12 10:38:53,157 [main:302] - generating value of type = Continuation<*> false depth = 0
2021-03-12 10:38:53,308 [main:43] - GENERATING CALL OF fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-12 10:38:53,311 [main:61] - WITHOUT TYPE PARAMS = fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-12 10:38:53,790 [main:302] - generating value of type = CoroutineContext false depth = 3
2021-03-12 10:38:53,940 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:38:53,944 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:38:54,281 [main:302] - generating value of type = Key<*> false depth = 6
2021-03-12 10:38:54,447 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:38:54,451 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:38:54,958 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:38:54,958 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:38:54,958 [main:385] - Cant generate call of fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-12 10:38:54,958 [main:58] - GENERATED VALUE OF TYPE Continuation<*> = 
2021-03-12 10:38:55,170 [main:67] - randomType = Set<Kla2>
2021-03-12 10:38:55,172 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:38:55,194 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:38:55,195 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:38:55,218 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:38:55,219 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:38:55,220 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:38:55,221 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:38:55,221 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:38:55,222 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:38:55,223 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:38:55,224 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:38:55,225 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:38:55,225 [main:111] - Cant find and generate replacement for prope0 type Continuation<*>
2021-03-12 10:38:55,225 [main:107] - replacing (true, Boolean)
2021-03-12 10:38:55,226 [main:50] - replacing true Boolean
2021-03-12 10:38:55,226 [main:54] - Getting value of type Boolean
2021-03-12 10:38:55,361 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:38:55,363 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 10:38:55,364 [main:61] - GENERATED IS CALL =false
2021-03-12 10:38:55,681 [main:67] - randomType = Sequence<Long?>
2021-03-12 10:38:55,682 [main:106] - GETTING Boolean from UIntProgression
2021-03-12 10:38:55,705 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]]
2021-03-12 10:38:55,705 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]
2021-03-12 10:38:55,852 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:38:55,853 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).step.equals("dshgz")
2021-03-12 10:38:55,853 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]]
2021-03-12 10:38:55,853 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:38:55,853 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]
2021-03-12 10:38:56,008 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:38:56,008 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).iterator().equals("khqnl")
2021-03-12 10:38:56,008 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]]
2021-03-12 10:38:56,009 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:38:56,148 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:38:56,149 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]
2021-03-12 10:38:56,149 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
2021-03-12 10:38:56,149 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]]
2021-03-12 10:38:56,149 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:38:56,310 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:38:56,310 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]
2021-03-12 10:38:56,458 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:38:56,460 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("bvscw").and(false)
2021-03-12 10:38:56,460 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]]
2021-03-12 10:38:56,460 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:38:56,602 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:38:56,603 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("lfqxw")
2021-03-12 10:38:56,603 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565f233a]]
2021-03-12 10:38:56,603 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565f233a]
2021-03-12 10:38:56,742 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:38:56,744 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:38:56,746 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).all({a: T -> true})
2021-03-12 10:38:56,747 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]]
2021-03-12 10:38:56,747 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:38:56,747 [main:149] - GENERATING call of type public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]
2021-03-12 10:38:56,747 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).iterator().hasNext()
2021-03-12 10:38:56,747 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]]
2021-03-12 10:38:56,747 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:38:56,888 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:38:56,888 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]
2021-03-12 10:38:57,026 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:38:57,028 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("hjxkx").xor(true)
2021-03-12 10:38:57,028 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c58e3a]]
2021-03-12 10:38:57,028 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c58e3a]
2021-03-12 10:38:57,165 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:38:57,165 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).first.equals("ltcqe")
2021-03-12 10:38:57,165 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]]
2021-03-12 10:38:57,166 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]
2021-03-12 10:38:57,166 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).any()
2021-03-12 10:38:57,166 [main:114] - replacement of true of type Boolean is (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
2021-03-12 10:38:57,329 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:38:57,329 [main:66] - Compilation checking started
2021-03-12 10:38:58,205 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by prope4

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope6)
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:38:58,208 [main:107] - replacing (prope4, Kla1)
2021-03-12 10:38:58,208 [main:50] - replacing prope4 Kla1
2021-03-12 10:38:58,208 [main:54] - Getting value of type Kla1
2021-03-12 10:38:58,374 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-12 10:38:58,376 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:38:58,704 [main:302] - generating value of type = Kla3 false depth = 2
2021-03-12 10:38:58,706 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by prope4
2021-03-12 10:38:58,866 [main:194] - Type params = []
2021-03-12 10:38:59,044 [main:302] - generating value of type = Kla1 false depth = 4
2021-03-12 10:38:59,047 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:38:59,353 [main:302] - generating value of type = Kla3 false depth = 6
2021-03-12 10:38:59,355 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by prope4
2021-03-12 10:38:59,509 [main:194] - Type params = []
2021-03-12 10:38:59,662 [main:302] - generating value of type = Kla1 false depth = 8
2021-03-12 10:38:59,664 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:38:59,977 [main:302] - generating value of type = Kla3 false depth = 10
2021-03-12 10:38:59,979 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by prope4
2021-03-12 10:39:00,183 [main:194] - Type params = []
2021-03-12 10:39:00,325 [main:302] - generating value of type = Kla1 false depth = 12
2021-03-12 10:39:00,328 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:39:00,642 [main:302] - generating value of type = Kla2 false depth = 14
2021-03-12 10:39:00,644 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:39:00,645 [main:58] - GENERATED VALUE OF TYPE Kla1 = Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:39:00,645 [main:61] - GENERATED IS CALL =true
2021-03-12 10:39:00,812 [main:67] - randomType = LinkedHashSet<Kla3>
2021-03-12 10:39:00,956 [main:302] - generating value of type = LinkedHashSet<Kla3> false depth = 0
2021-03-12 10:39:01,106 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Kla3): LkedHashSet<Kla3> = TODO()
2021-03-12 10:39:01,110 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Kla3): LkedHashSet<Kla3> = TODO()
2021-03-12 10:39:01,262 [main:302] - generating value of type = Kla3 false depth = 3
2021-03-12 10:39:01,264 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by prope4
2021-03-12 10:39:01,400 [main:194] - Type params = []
2021-03-12 10:39:01,540 [main:302] - generating value of type = Kla1 false depth = 5
2021-03-12 10:39:01,542 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:39:01,832 [main:302] - generating value of type = Kla2 false depth = 7
2021-03-12 10:39:01,834 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:39:01,835 [main:95] - GENERATED = linkedSetOf<Kla3>(Kla3(Kla2()))
2021-03-12 10:39:01,982 [main:106] - GETTING Kla1 from ULongProgression
2021-03-12 10:39:02,000 [main:106] - GETTING Kla1 from ULongProgression
2021-03-12 10:39:02,001 [main:106] - GETTING Kla1 from UIntProgression
2021-03-12 10:39:02,015 [main:106] - GETTING Kla1 from ULongProgression
2021-03-12 10:39:02,016 [main:106] - GETTING Kla1 from UIntProgression
2021-03-12 10:39:02,016 [main:106] - GETTING Kla1 from UIntProgression
2021-03-12 10:39:02,017 [main:106] - GETTING Kla1 from UIntProgression
2021-03-12 10:39:02,018 [main:106] - GETTING Kla1 from ULongProgression
2021-03-12 10:39:02,018 [main:106] - GETTING Kla1 from UIntProgression
2021-03-12 10:39:02,019 [main:106] - GETTING Kla1 from ULongProgression
2021-03-12 10:39:02,019 [main:106] - GETTING Kla1 from ULongProgression
2021-03-12 10:39:02,020 [main:106] - GETTING Kla1 from UIntProgression
2021-03-12 10:39:02,020 [main:114] - replacement of prope4 of type Kla1 is Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:39:02,159 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:39:02,159 [main:66] - Compilation checking started
2021-03-12 10:39:02,929 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope6)
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:02,933 [main:107] - replacing (prope6, Int)
2021-03-12 10:39:02,935 [main:50] - replacing prope6 Int
2021-03-12 10:39:02,936 [main:54] - Getting value of type Int
2021-03-12 10:39:03,106 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:03,108 [main:58] - GENERATED VALUE OF TYPE Int = 1554123233
2021-03-12 10:39:03,109 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:03,283 [main:67] - randomType = Byte
2021-03-12 10:39:03,444 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:39:03,506 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5d4ca822]
2021-03-12 10:39:03,506 [main:78] - Generated call from random type = (98).unaryPlus()
2021-03-12 10:39:03,507 [main:106] - GETTING Int from UIntProgression
2021-03-12 10:39:03,530 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@372896d8]]
2021-03-12 10:39:03,530 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@372896d8]
2021-03-12 10:39:03,681 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:39:04,361 [main:43] - GENERATING CALL OF fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<HashMap<Kla4?, Kla8>?>)->kotlin.Unit): T = TODO()
2021-03-12 10:39:04,365 [main:61] - WITHOUT TYPE PARAMS = fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<HashMap<Kla4?, Kla8>?>)->kotlin.Unit): T = TODO()
2021-03-12 10:39:04,737 [main:302] - generating value of type = Function1<Continuation<HashMap<Kla4?, Kla8>?>, Unit> false depth = 3
2021-03-12 10:39:04,741 [main:302] - generating value of type = Unit false depth = 4
2021-03-12 10:39:04,751 [main:95] - GENERATED = suspendCoroutine<HashMap<Kla4?, Kla8>?>({a: Continuation<HashMap<Kla4?, Kla8>?> -> println()})
2021-03-12 10:39:04,752 [main:117] - GENERATED CALL = ((10u downTo 1u)).indexOf(suspendCoroutine<HashMap<Kla4?, Kla8>?>({a: Continuation<HashMap<Kla4?, Kla8>?> -> println()}))
2021-03-12 10:39:04,752 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cc676d7]]
2021-03-12 10:39:04,752 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cc676d7]
2021-03-12 10:39:04,904 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:39:05,064 [main:43] - GENERATING CALL OF fun <T> minOf(a: Kla5, b: Kla5, c: Kla5, comparator: kotlin.Comparator<Kla5>): T = TODO()
2021-03-12 10:39:05,068 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Kla5, b: Kla5, c: Kla5, comparator: kotlin.Comparator<Kla5>): T = TODO()
2021-03-12 10:39:05,403 [main:302] - generating value of type = Kla5 false depth = 3
2021-03-12 10:39:05,405 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-12 10:39:05,406 [main:302] - generating value of type = Kla5 false depth = 3
2021-03-12 10:39:05,408 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-12 10:39:05,408 [main:302] - generating value of type = Kla5 false depth = 3
2021-03-12 10:39:05,410 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-12 10:39:05,410 [main:302] - generating value of type = Comparator<Kla5> false depth = 3
2021-03-12 10:39:05,558 [main:43] - GENERATING CALL OF fun <T> naturalOrder(): Comparator<Kla5> = TODO()
2021-03-12 10:39:05,562 [main:61] - WITHOUT TYPE PARAMS = fun <T> naturalOrder(): Comparator<Kla5> = TODO()
2021-03-12 10:39:05,713 [main:95] - GENERATED = naturalOrder<Kla5>()
2021-03-12 10:39:05,713 [main:95] - GENERATED = minOf<Kla5>(Kla5(), Kla5(), Kla5(), naturalOrder<Kla5>())
2021-03-12 10:39:05,713 [main:117] - GENERATED CALL = ((10u downTo 1u)).lastIndexOf(minOf<Kla5>(Kla5(), Kla5(), Kla5(), naturalOrder<Kla5>()))
2021-03-12 10:39:05,713 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4bbd3f6c]]
2021-03-12 10:39:05,713 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4bbd3f6c]
2021-03-12 10:39:05,713 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.countLeadingZeroBits()
2021-03-12 10:39:05,713 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@35860edd]]
2021-03-12 10:39:05,714 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@35860edd]
2021-03-12 10:39:05,852 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:05,854 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.rotateRight(-1528681211)
2021-03-12 10:39:05,855 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4e59cfdd]]
2021-03-12 10:39:05,855 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4e59cfdd]
2021-03-12 10:39:05,855 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.takeHighestOneBit()
2021-03-12 10:39:05,855 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@37d3415a]]
2021-03-12 10:39:05,855 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@37d3415a]
2021-03-12 10:39:05,993 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:05,995 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.rotateLeft(1728531227)
2021-03-12 10:39:05,996 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3497d8b3]]
2021-03-12 10:39:05,996 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3497d8b3]
2021-03-12 10:39:05,996 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.inv()
2021-03-12 10:39:05,996 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b705f65]]
2021-03-12 10:39:05,996 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b705f65]
2021-03-12 10:39:06,133 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:39:06,136 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.rem(-36)
2021-03-12 10:39:06,137 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50b51a5b]]
2021-03-12 10:39:06,137 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50b51a5b]
2021-03-12 10:39:06,275 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:06,277 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.xor(1023254708)
2021-03-12 10:39:06,277 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@704a6c0a]]
2021-03-12 10:39:06,278 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@704a6c0a]
2021-03-12 10:39:06,416 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:39:06,418 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.div(52)
2021-03-12 10:39:06,418 [main:114] - replacement of prope6 of type Int is ((10u downTo 1u)).step.xor(1023254708)
2021-03-12 10:39:06,570 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:39:06,571 [main:66] - Compilation checking started
2021-03-12 10:39:07,273 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:07,276 [main:107] - replacing ("tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n"), String)
2021-03-12 10:39:07,276 [main:50] - replacing "tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n") String
2021-03-12 10:39:07,276 [main:54] - Getting value of type String
2021-03-12 10:39:07,429 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:39:07,431 [main:58] - GENERATED VALUE OF TYPE String = "csvdg"
2021-03-12 10:39:07,432 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:07,601 [main:67] - randomType = Sequence<Kla2>
2021-03-12 10:39:07,602 [main:106] - GETTING String from ULongProgression
2021-03-12 10:39:07,620 [main:113] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@7b26089f], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@220289d5]]
2021-03-12 10:39:07,620 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@220289d5]
2021-03-12 10:39:07,765 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:07,769 [main:117] - GENERATED CALL = (((10uL downTo 1uL).reversed() step 2L)).step.toString(-1674782458)
2021-03-12 10:39:07,769 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:39:07,769 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:39:07,929 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:08,074 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:08,216 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:39:08,220 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:39:08,529 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:39:08,532 [main:95] - GENERATED = StringBuilder(-2134437466)
2021-03-12 10:39:08,678 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:08,825 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:08,980 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:09,134 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:39:09,137 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:39:09,447 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:39:09,450 [main:95] - GENERATED = StringBuilder(-311524511)
2021-03-12 10:39:09,591 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:39:09,593 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:39:09,599 [main:117] - GENERATED CALL = (((10uL downTo 1uL).reversed() step 2L)).joinToString("hnjxr", StringBuilder(-2134437466), StringBuilder(), -937931719, StringBuilder(-311524511), {a: T -> "fvqia"})
2021-03-12 10:39:09,599 [main:113] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@94f3a3c], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dda711]]
2021-03-12 10:39:09,599 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dda711]
2021-03-12 10:39:09,743 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:09,745 [main:117] - GENERATED CALL = (((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343)
2021-03-12 10:39:09,745 [main:114] - replacement of "tail-call optimization hit: method " + method + " has no state-machine " +
                prope5.joinToString(separator = "\n") of type String is (((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343)
2021-03-12 10:39:09,891 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:39:09,892 [main:66] - Compilation checking started
2021-03-12 10:39:10,605 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:10,608 [main:107] - replacing (fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)), Kla0)
2021-03-12 10:39:10,609 [main:50] - replacing fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)) Kla0
2021-03-12 10:39:10,609 [main:54] - Getting value of type Kla0
2021-03-12 10:39:10,773 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-12 10:39:10,775 [main:112] - generating klass Kla0 text = @Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)
2021-03-12 10:39:10,921 [main:194] - Type params = []
2021-03-12 10:39:11,065 [main:302] - generating value of type = String true depth = 2
2021-03-12 10:39:11,067 [main:58] - GENERATED VALUE OF TYPE Kla0 = Kla0("qvagt")
2021-03-12 10:39:11,067 [main:61] - GENERATED IS CALL =true
2021-03-12 10:39:11,072 [main:67] - randomType = Int
2021-03-12 10:39:11,210 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:11,254 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:39:11,270 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:39:11,288 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:39:11,289 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:39:11,289 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:39:11,290 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:39:11,291 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:39:11,291 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:39:11,292 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:39:11,292 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:39:11,293 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:39:11,294 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:39:11,294 [main:114] - replacement of fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)) of type Kla0 is Kla0("qvagt")
2021-03-12 10:39:11,432 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:39:11,432 [main:66] - Compilation checking started
2021-03-12 10:39:11,843 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).Kla0("qvagt").s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:11,846 [main:107] - replacing (resume(Kla0("OK")), Unit?)
2021-03-12 10:39:11,846 [main:50] - replacing resume(Kla0("OK")) Unit?
2021-03-12 10:39:11,846 [main:54] - Getting value of type Unit?
2021-03-12 10:39:11,990 [main:302] - generating value of type = Unit false depth = 0
2021-03-12 10:39:11,995 [main:58] - GENERATED VALUE OF TYPE Unit? = println()
2021-03-12 10:39:11,995 [main:61] - GENERATED IS CALL =true
2021-03-12 10:39:12,154 [main:67] - randomType = UByte
2021-03-12 10:39:12,295 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:39:12,334 [main:106] - GETTING Unit? from ULongProgression
2021-03-12 10:39:12,356 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1888381d]]
2021-03-12 10:39:12,356 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1888381d]
2021-03-12 10:39:12,496 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, T, Unit> false depth = 0
2021-03-12 10:39:12,499 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:39:12,653 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:39:12,656 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:39:13,143 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:39:13,145 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:39:13,148 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:39:13,148 [main:95] - GENERATED = require(true, { "gmhxp"})
2021-03-12 10:39:13,148 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed() step 2L)?.forEachIndexed({a: Int, b: T -> require(true, { "gmhxp"})})
2021-03-12 10:39:13,148 [main:113] - Case = [public abstract operator fun iterator(): kotlin.collections.Iterator<kotlin.ULong> defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@64742be9], public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15fb9174]]
2021-03-12 10:39:13,148 [main:149] - GENERATING call of type public abstract operator fun iterator(): kotlin.collections.Iterator<kotlin.ULong> defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@64742be9]
2021-03-12 10:39:13,148 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15fb9174]
2021-03-12 10:39:13,290 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:39:13,292 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:39:13,443 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:39:13,447 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:39:13,905 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:39:13,908 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:39:13,910 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:39:13,910 [main:95] - GENERATED = require(true, { "hugvj"})
2021-03-12 10:39:13,911 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed() step 2L)?.iterator().forEach({a: T -> require(true, { "hugvj"})})
2021-03-12 10:39:13,911 [main:113] - Case = [@kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68a0f19a]]
2021-03-12 10:39:13,911 [main:149] - GENERATING call of type @kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68a0f19a]
2021-03-12 10:39:14,051 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:39:14,054 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:39:14,195 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:39:14,199 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:39:14,686 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:39:14,690 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:39:14,693 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:39:14,693 [main:95] - GENERATED = require(false, { "mynzr"})
2021-03-12 10:39:14,693 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed() step 2L)?.forEach({a: T -> require(false, { "mynzr"})})
2021-03-12 10:39:14,693 [main:114] - replacement of resume(Kla0("OK")) of type Unit? is ((10uL downTo 1uL).reversed() step 2L)?.iterator().forEach({a: T -> require(true, { "hugvj"})})
2021-03-12 10:39:14,833 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:39:14,833 [main:66] - Compilation checking started
2021-03-12 10:39:15,298 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.((10uL downTo 1uL).reversed() step 2L)?.iterator().forEach({a: T -> require(true, { "hugvj"})})

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if (prope7) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:15,300 [main:107] - replacing (prope7, Boolean)
2021-03-12 10:39:15,301 [main:50] - replacing prope7 Boolean
2021-03-12 10:39:15,301 [main:54] - Getting value of type Boolean
2021-03-12 10:39:15,472 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:15,475 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 10:39:15,475 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:15,979 [main:67] - randomType = Collection<HashMap<Double, Kla1>>
2021-03-12 10:39:15,980 [main:106] - GETTING Boolean from UIntProgression
2021-03-12 10:39:15,996 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c58e3a]]
2021-03-12 10:39:15,997 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c58e3a]
2021-03-12 10:39:16,136 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:16,136 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).first.equals("ctsrn")
2021-03-12 10:39:16,136 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]]
2021-03-12 10:39:16,136 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:16,276 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:16,276 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).equals("ddcub")
2021-03-12 10:39:16,276 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]]
2021-03-12 10:39:16,276 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]
2021-03-12 10:39:16,413 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:16,413 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.equals("gnqvm")
2021-03-12 10:39:16,413 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]]
2021-03-12 10:39:16,413 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]
2021-03-12 10:39:16,414 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).any()
2021-03-12 10:39:16,414 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]]
2021-03-12 10:39:16,414 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]
2021-03-12 10:39:16,414 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).isEmpty()
2021-03-12 10:39:16,414 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]]
2021-03-12 10:39:16,414 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:16,557 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:16,558 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]
2021-03-12 10:39:16,704 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:16,704 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).equals("jzlnc").equals("wikvm")
2021-03-12 10:39:16,704 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]]
2021-03-12 10:39:16,704 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:39:16,704 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]
2021-03-12 10:39:16,853 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:16,853 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).iterator().equals("bvtlr")
2021-03-12 10:39:16,853 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]]
2021-03-12 10:39:16,853 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:17,001 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:17,001 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]
2021-03-12 10:39:17,001 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).equals("mnccs").not()
2021-03-12 10:39:17,001 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]]
2021-03-12 10:39:17,001 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]
2021-03-12 10:39:17,001 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).none()
2021-03-12 10:39:17,001 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]]
2021-03-12 10:39:17,001 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:17,141 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:17,141 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]
2021-03-12 10:39:17,281 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:17,284 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)
2021-03-12 10:39:17,284 [main:114] - replacement of prope7 of type Boolean is (((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)
2021-03-12 10:39:17,421 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:39:17,422 [main:66] - Compilation checking started
2021-03-12 10:39:18,218 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:18,222 [main:107] - replacing (prope3, Result<Any?>)
2021-03-12 10:39:18,224 [main:50] - replacing prope3 Result<Any?>
2021-03-12 10:39:18,224 [main:54] - Getting value of type Result<Any?>
2021-03-12 10:39:18,414 [main:302] - generating value of type = Result<Any?> false depth = 0
2021-03-12 10:39:18,577 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-12 10:39:18,581 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-12 10:39:18,919 [main:302] - generating value of type = Function0<Any?> false depth = 3
2021-03-12 10:39:18,922 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:39:18,923 [main:95] - GENERATED = runCatching<Any?>({ "nhojf"})
2021-03-12 10:39:18,923 [main:58] - GENERATED VALUE OF TYPE Result<Any?> = runCatching<Any?>({ "nhojf"})
2021-03-12 10:39:18,923 [main:61] - GENERATED IS CALL =true
2021-03-12 10:39:18,932 [main:67] - randomType = Kla0
2021-03-12 10:39:19,112 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-12 10:39:19,115 [main:112] - generating klass Kla0 text = @Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)
2021-03-12 10:39:19,280 [main:194] - Type params = []
2021-03-12 10:39:19,426 [main:302] - generating value of type = String true depth = 2
2021-03-12 10:39:19,436 [main:106] - GETTING Result<Any?> from ULongProgression
2021-03-12 10:39:19,457 [main:106] - GETTING Result<Any?> from UIntProgression
2021-03-12 10:39:19,473 [main:106] - GETTING Result<Any?> from ULongProgression
2021-03-12 10:39:19,474 [main:106] - GETTING Result<Any?> from UIntProgression
2021-03-12 10:39:19,476 [main:106] - GETTING Result<Any?> from ULongProgression
2021-03-12 10:39:19,477 [main:106] - GETTING Result<Any?> from UIntProgression
2021-03-12 10:39:19,478 [main:106] - GETTING Result<Any?> from UIntProgression
2021-03-12 10:39:19,479 [main:106] - GETTING Result<Any?> from UIntProgression
2021-03-12 10:39:19,481 [main:106] - GETTING Result<Any?> from ULongProgression
2021-03-12 10:39:19,483 [main:106] - GETTING Result<Any?> from UIntProgression
2021-03-12 10:39:19,485 [main:106] - GETTING Result<Any?> from ULongProgression
2021-03-12 10:39:19,487 [main:106] - GETTING Result<Any?> from ULongProgression
2021-03-12 10:39:19,487 [main:114] - replacement of prope3 of type Result<Any?> is runCatching<Any?>({ "nhojf"})
2021-03-12 10:39:19,665 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:39:19,666 [main:66] - Compilation checking started
2021-03-12 10:39:20,514 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + " is not subtype of CoroutineStackFrame")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:20,517 [main:107] - replacing (" is not subtype of CoroutineStackFrame", String)
2021-03-12 10:39:20,517 [main:50] - replacing " is not subtype of CoroutineStackFrame" String
2021-03-12 10:39:20,517 [main:54] - Getting value of type String
2021-03-12 10:39:20,687 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:39:20,689 [main:58] - GENERATED VALUE OF TYPE String = "agupc"
2021-03-12 10:39:20,689 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:21,441 [main:67] - randomType = List<Function1<HashMap<Long, Kla0>, HashSet<Kla1>>>
2021-03-12 10:39:21,442 [main:106] - GETTING String from ULongProgression
2021-03-12 10:39:21,461 [main:113] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@94f3a3c], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dda711]]
2021-03-12 10:39:21,461 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dda711]
2021-03-12 10:39:21,625 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:21,627 [main:117] - GENERATED CALL = ((10uL downTo 1uL)).first.toString(-1810834404)
2021-03-12 10:39:21,627 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:39:21,627 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:39:21,768 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:21,910 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:22,052 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:39:22,055 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:39:22,348 [main:302] - generating value of type = String true depth = 3
2021-03-12 10:39:22,350 [main:95] - GENERATED = StringBuilder("glumv")
2021-03-12 10:39:22,486 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:22,630 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:22,771 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:22,922 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:39:22,926 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:39:23,267 [main:302] - generating value of type = String true depth = 3
2021-03-12 10:39:23,270 [main:95] - GENERATED = StringBuilder("ldykw")
2021-03-12 10:39:23,416 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:39:23,418 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:39:23,562 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:39:23,565 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:39:23,920 [main:302] - generating value of type = String true depth = 4
2021-03-12 10:39:23,923 [main:95] - GENERATED = StringBuilder("fjafa")
2021-03-12 10:39:23,923 [main:117] - GENERATED CALL = ((10uL downTo 1uL)).joinToString("uvvoc", StringBuilder("glumv"), "fjvnx", -1578271544, StringBuilder("ldykw"), {a: T -> StringBuilder("fjafa")})
2021-03-12 10:39:23,923 [main:113] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@7b26089f], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@220289d5]]
2021-03-12 10:39:23,923 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@220289d5]
2021-03-12 10:39:24,063 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:24,066 [main:117] - GENERATED CALL = ((10uL downTo 1uL)).step.toString(842591570)
2021-03-12 10:39:24,066 [main:114] - replacement of " is not subtype of CoroutineStackFrame" of type String is "agupc"
2021-03-12 10:39:24,203 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 10:39:24,203 [main:66] - Compilation checking started
2021-03-12 10:39:24,944 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:24,947 [main:107] - replacing (prope0 !is CoroutineStackFrame, Boolean)
2021-03-12 10:39:24,947 [main:50] - replacing prope0 !is CoroutineStackFrame Boolean
2021-03-12 10:39:24,947 [main:54] - Getting value of type Boolean
2021-03-12 10:39:25,120 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:25,123 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 10:39:25,123 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:25,320 [main:67] - randomType = LinkedHashSet<Boolean>
2021-03-12 10:39:25,462 [main:302] - generating value of type = LinkedHashSet<Boolean> false depth = 0
2021-03-12 10:39:25,604 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Boolean): LkedHashSet<Boolean> = TODO()
2021-03-12 10:39:25,607 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Boolean): LkedHashSet<Boolean> = TODO()
2021-03-12 10:39:25,755 [main:302] - generating value of type = Boolean true depth = 3
2021-03-12 10:39:25,758 [main:95] - GENERATED = linkedSetOf<Boolean>(false)
2021-03-12 10:39:25,925 [main:149] - GENERATING call of type public open fun contains(element: kotlin.Boolean): kotlin.Boolean defined in kotlin.collections.AbstractCollection[DeserializedSimpleFunctionDescriptor@6e866966]
2021-03-12 10:39:26,070 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:26,072 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]
2021-03-12 10:39:26,215 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:26,218 [main:78] - Generated call from random type = (linkedSetOf<Boolean>(false)).contains(true).xor(true)
2021-03-12 10:39:26,219 [main:106] - GETTING Boolean from UIntProgression
2021-03-12 10:39:26,234 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]]
2021-03-12 10:39:26,234 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:26,370 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]
2021-03-12 10:39:26,371 [main:117] - GENERATED CALL = ((10u downTo 1u)).equals(null).not()
2021-03-12 10:39:26,371 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]]
2021-03-12 10:39:26,371 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:26,537 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:26,537 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]
2021-03-12 10:39:26,678 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:26,681 [main:117] - GENERATED CALL = ((10u downTo 1u)).equals("evgti").xor(false)
2021-03-12 10:39:26,681 [main:113] - Case = [public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]]
2021-03-12 10:39:26,681 [main:149] - GENERATING call of type public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]
2021-03-12 10:39:26,823 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:39:28,246 [main:43] - GENERATING CALL OF fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<Kla6<Function2<Collection<Kla3?>, Function1<HashSet<Boolean>, Kla5>, String>>?>)->kotlin.Unit): T = TODO()
2021-03-12 10:39:28,249 [main:61] - WITHOUT TYPE PARAMS = fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<Kla6<Function2<Collection<Kla3?>, Function1<HashSet<Boolean>, Kla5>, String>>?>)->kotlin.Unit): T = TODO()
2021-03-12 10:39:28,569 [main:302] - generating value of type = Function1<Continuation<Kla6<Function2<Collection<Kla3?>, Function1<HashSet<Boolean>, Kla5>, String>>?>, Unit> false depth = 3
2021-03-12 10:39:28,572 [main:302] - generating value of type = Unit false depth = 4
2021-03-12 10:39:28,716 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:39:28,720 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:39:29,021 [main:302] - generating value of type = Boolean true depth = 7
2021-03-12 10:39:29,023 [main:95] - GENERATED = check(false)
2021-03-12 10:39:29,024 [main:95] - GENERATED = suspendCoroutine<Kla6<Function2<Collection<Kla3?>, Function1<HashSet<Boolean>, Kla5>, String>>?>({a: Continuation<Kla6<Function2<Collection<Kla3?>, Function1<HashSet<Boolean>, Kla5>, String>>?> -> check(false)})
2021-03-12 10:39:29,024 [main:117] - GENERATED CALL = ((10u downTo 1u)).contains(suspendCoroutine<Kla6<Function2<Collection<Kla3?>, Function1<HashSet<Boolean>, Kla5>, String>>?>({a: Continuation<Kla6<Function2<Collection<Kla3?>, Function1<HashSet<Boolean>, Kla5>, String>>?> -> check(false)}))
2021-03-12 10:39:29,024 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]]
2021-03-12 10:39:29,024 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:29,194 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:29,194 [main:117] - GENERATED CALL = ((10u downTo 1u)).equals("tupca")
2021-03-12 10:39:29,194 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]]
2021-03-12 10:39:29,194 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]
2021-03-12 10:39:29,195 [main:117] - GENERATED CALL = ((10u downTo 1u)).isEmpty()
2021-03-12 10:39:29,195 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]]
2021-03-12 10:39:29,195 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:39:29,195 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]
2021-03-12 10:39:29,333 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:29,333 [main:117] - GENERATED CALL = ((10u downTo 1u)).iterator().equals("ivvic")
2021-03-12 10:39:29,333 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]]
2021-03-12 10:39:29,333 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:29,479 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:29,479 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]
2021-03-12 10:39:29,636 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:29,637 [main:117] - GENERATED CALL = ((10u downTo 1u)).equals("ycewy").equals("jzbbb")
2021-03-12 10:39:29,637 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]]
2021-03-12 10:39:29,637 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]
2021-03-12 10:39:29,637 [main:117] - GENERATED CALL = ((10u downTo 1u)).none()
2021-03-12 10:39:29,637 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]]
2021-03-12 10:39:29,637 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:29,778 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:29,778 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]
2021-03-12 10:39:29,931 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:29,934 [main:117] - GENERATED CALL = ((10u downTo 1u)).equals("jytso").and(true)
2021-03-12 10:39:29,934 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]]
2021-03-12 10:39:29,934 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:39:29,934 [main:149] - GENERATING call of type public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]
2021-03-12 10:39:29,934 [main:117] - GENERATED CALL = ((10u downTo 1u)).iterator().hasNext()
2021-03-12 10:39:29,934 [main:114] - replacement of prope0 !is CoroutineStackFrame of type Boolean is ((10u downTo 1u)).equals(null).not()
2021-03-12 10:39:30,082 [main:33] - Trying to replace Element(IS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:39:30,082 [main:66] - Compilation checking started
2021-03-12 10:39:30,557 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (((10u downTo 1u)).equals(null).not()) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:30,559 [main:107] - replacing ({ prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    }, Function1<Continuation<Unit>, Unit>)
2021-03-12 10:39:30,560 [main:50] - replacing { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    } Function1<Continuation<Unit>, Unit>
2021-03-12 10:39:30,560 [main:54] - Getting value of type Function1<Continuation<Unit>, Unit>
2021-03-12 10:39:30,723 [main:302] - generating value of type = Function1<Continuation<Unit>, Unit> false depth = 0
2021-03-12 10:39:30,725 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:39:30,914 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:39:30,921 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:39:31,257 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:39:31,259 [main:95] - GENERATED = require(false)
2021-03-12 10:39:31,260 [main:58] - GENERATED VALUE OF TYPE Function1<Continuation<Unit>, Unit> = {a: Continuation<Unit> -> require(false)}
2021-03-12 10:39:31,260 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:31,612 [main:67] - randomType = Set<Kla8>
2021-03-12 10:39:31,614 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from UIntProgression
2021-03-12 10:39:31,639 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from ULongProgression
2021-03-12 10:39:31,659 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from UIntProgression
2021-03-12 10:39:31,661 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from ULongProgression
2021-03-12 10:39:31,663 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from UIntProgression
2021-03-12 10:39:31,665 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from ULongProgression
2021-03-12 10:39:31,667 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from ULongProgression
2021-03-12 10:39:31,669 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from ULongProgression
2021-03-12 10:39:31,670 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from ULongProgression
2021-03-12 10:39:31,672 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from UIntProgression
2021-03-12 10:39:31,674 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from UIntProgression
2021-03-12 10:39:31,677 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from UIntProgression
2021-03-12 10:39:31,677 [main:114] - replacement of { prope0 ->
        prope6++
        prope8 = { prope0.resume(Unit) }
    } of type Function1<Continuation<Unit>, Unit> is {a: Continuation<Unit> -> require(false)}
2021-03-12 10:39:31,829 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 10:39:31,829 [main:66] - Compilation checking started
2021-03-12 10:39:32,679 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in 1..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:32,682 [main:107] - replacing (1, Int)
2021-03-12 10:39:32,683 [main:50] - replacing 1 Int
2021-03-12 10:39:32,683 [main:54] - Getting value of type Int
2021-03-12 10:39:32,865 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:32,868 [main:58] - GENERATED VALUE OF TYPE Int = 1333357794
2021-03-12 10:39:32,868 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:33,062 [main:67] - randomType = Char
2021-03-12 10:39:33,219 [main:302] - generating value of type = Char true depth = 0
2021-03-12 10:39:33,245 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66b179b4]
2021-03-12 10:39:33,386 [main:302] - generating value of type = Char true depth = 0
2021-03-12 10:39:33,388 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@34cddd09]
2021-03-12 10:39:33,534 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:39:33,537 [main:78] - Generated call from random type = ('褕').compareTo('?').plus(-108)
2021-03-12 10:39:33,538 [main:106] - GETTING Int from UIntProgression
2021-03-12 10:39:33,553 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50b51a5b]]
2021-03-12 10:39:33,553 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50b51a5b]
2021-03-12 10:39:33,692 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:33,695 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.xor(82845212)
2021-03-12 10:39:33,695 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@372896d8]]
2021-03-12 10:39:33,695 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@372896d8]
2021-03-12 10:39:33,835 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:39:33,988 [main:43] - GENERATING CALL OF fun <T> checkNotNull(value: String): T = TODO()
2021-03-12 10:39:33,992 [main:61] - WITHOUT TYPE PARAMS = fun <T> checkNotNull(value: String): T = TODO()
2021-03-12 10:39:34,141 [main:302] - generating value of type = String true depth = 3
2021-03-12 10:39:34,144 [main:95] - GENERATED = checkNotNull<String>("uiamg")
2021-03-12 10:39:34,144 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).indexOf(checkNotNull<String>("uiamg"))
2021-03-12 10:39:34,144 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@34cddd09]]
2021-03-12 10:39:34,144 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@34cddd09]
2021-03-12 10:39:34,282 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:39:34,285 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.plus(43)
2021-03-12 10:39:34,285 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4bbd3f6c]]
2021-03-12 10:39:34,285 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4bbd3f6c]
2021-03-12 10:39:34,285 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.countLeadingZeroBits()
2021-03-12 10:39:34,285 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@29487e4c]]
2021-03-12 10:39:34,285 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@29487e4c]
2021-03-12 10:39:34,429 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:34,432 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.coerceAtMost(-653207448)
2021-03-12 10:39:34,432 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@152606b3]]
2021-03-12 10:39:34,432 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@152606b3]
2021-03-12 10:39:34,432 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).sum()
2021-03-12 10:39:34,432 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1773ace9]]
2021-03-12 10:39:34,432 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1773ace9]
2021-03-12 10:39:34,577 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:34,579 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.shl(1031190222)
2021-03-12 10:39:34,580 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@fdd1e25]]
2021-03-12 10:39:34,580 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@fdd1e25]
2021-03-12 10:39:34,580 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.toInt()
2021-03-12 10:39:34,580 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5f02432e]]
2021-03-12 10:39:34,580 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5f02432e]
2021-03-12 10:39:34,580 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.countOneBits()
2021-03-12 10:39:34,580 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-12 10:39:34,580 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-12 10:39:34,723 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:39:34,725 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:39:34,728 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).indexOfFirst({a: T -> false})
2021-03-12 10:39:34,728 [main:114] - replacement of 1 of type Int is ('褕').compareTo('?').plus(-108)
2021-03-12 10:39:34,877 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:39:34,877 [main:66] - Compilation checking started
2021-03-12 10:39:35,825 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:35,828 [main:107] - replacing (Kla2(), Kla2)
2021-03-12 10:39:35,829 [main:50] - replacing Kla2() Kla2
2021-03-12 10:39:35,829 [main:54] - Getting value of type Kla2
2021-03-12 10:39:35,992 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-12 10:39:35,994 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:39:35,995 [main:58] - GENERATED VALUE OF TYPE Kla2 = Kla2()
2021-03-12 10:39:35,995 [main:61] - GENERATED IS CALL =true
2021-03-12 10:39:36,334 [main:67] - randomType = Array<UInt?>
2021-03-12 10:39:36,478 [main:302] - generating value of type = Array<UInt?> false depth = 0
2021-03-12 10:39:36,627 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: UInt?): Array<UInt?> = TODO()
2021-03-12 10:39:36,631 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: UInt?): Array<UInt?> = TODO()
2021-03-12 10:39:36,788 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:39:36,791 [main:95] - GENERATED = arrayOf<UInt?>(870002755.toUInt())
2021-03-12 10:39:36,807 [main:106] - GETTING Kla2 from UIntProgression
2021-03-12 10:39:36,824 [main:106] - GETTING Kla2 from ULongProgression
2021-03-12 10:39:36,843 [main:106] - GETTING Kla2 from UIntProgression
2021-03-12 10:39:36,844 [main:106] - GETTING Kla2 from ULongProgression
2021-03-12 10:39:36,844 [main:106] - GETTING Kla2 from UIntProgression
2021-03-12 10:39:36,845 [main:106] - GETTING Kla2 from ULongProgression
2021-03-12 10:39:36,845 [main:106] - GETTING Kla2 from ULongProgression
2021-03-12 10:39:36,846 [main:106] - GETTING Kla2 from UIntProgression
2021-03-12 10:39:36,847 [main:106] - GETTING Kla2 from UIntProgression
2021-03-12 10:39:36,847 [main:106] - GETTING Kla2 from ULongProgression
2021-03-12 10:39:36,848 [main:106] - GETTING Kla2 from UIntProgression
2021-03-12 10:39:36,849 [main:106] - GETTING Kla2 from ULongProgression
2021-03-12 10:39:36,849 [main:114] - replacement of Kla2() of type Kla2 is Kla2()
2021-03-12 10:39:36,990 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:39:36,992 [main:107] - replacing (prope3, Result<Ty0>)
2021-03-12 10:39:36,992 [main:50] - replacing prope3 Result<Ty0>
2021-03-12 10:39:36,992 [main:54] - Getting value of type Result<Ty0>
2021-03-12 10:39:37,146 [main:302] - generating value of type = Result<Ty0> false depth = 0
2021-03-12 10:39:37,314 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-12 10:39:37,317 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-12 10:39:37,634 [main:385] - Cant generate call of fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-12 10:39:37,634 [main:58] - GENERATED VALUE OF TYPE Result<Ty0> = 
2021-03-12 10:39:37,791 [main:67] - randomType = UShort
2021-03-12 10:39:37,929 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:39:37,965 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:39:37,980 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:39:37,998 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:39:38,000 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:39:38,001 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:39:38,002 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:39:38,003 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:39:38,005 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:39:38,006 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:39:38,007 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:39:38,008 [main:106] - GETTING Result<Ty0> from ULongProgression
2021-03-12 10:39:38,009 [main:106] - GETTING Result<Ty0> from UIntProgression
2021-03-12 10:39:38,009 [main:111] - Cant find and generate replacement for prope3 type Result<Ty0>
2021-03-12 10:39:38,010 [main:107] - replacing (prope9 != null, Boolean)
2021-03-12 10:39:38,010 [main:50] - replacing prope9 != null Boolean
2021-03-12 10:39:38,010 [main:54] - Getting value of type Boolean
2021-03-12 10:39:38,176 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:38,179 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 10:39:38,179 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:38,188 [main:67] - randomType = Kla5
2021-03-12 10:39:38,329 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-12 10:39:38,331 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-12 10:39:38,350 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla5[DeserializedSimpleFunctionDescriptor@58bd2839]
2021-03-12 10:39:38,497 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:38,497 [main:78] - Generated call from random type = (Kla5()).equals("fkzhk")
2021-03-12 10:39:38,498 [main:106] - GETTING Boolean from ULongProgression
2021-03-12 10:39:38,521 [main:113] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@7b26089f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@67bb22d6]]
2021-03-12 10:39:38,521 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@67bb22d6]
2021-03-12 10:39:38,663 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:38,664 [main:117] - GENERATED CALL = (10uL downTo 1uL).step.equals("bpngq")
2021-03-12 10:39:38,664 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@1b164627]]
2021-03-12 10:39:38,664 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@1b164627]
2021-03-12 10:39:38,664 [main:117] - GENERATED CALL = (10uL downTo 1uL).isEmpty()
2021-03-12 10:39:38,664 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]]
2021-03-12 10:39:38,664 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]
2021-03-12 10:39:38,819 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:38,819 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]
2021-03-12 10:39:38,979 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:38,981 [main:117] - GENERATED CALL = (10uL downTo 1uL).equals("aouyj").and(true)
2021-03-12 10:39:38,982 [main:113] - Case = [public open fun iterator(): kotlin.collections.ULongIterator defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@23e93d56], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.ULongIterator[DeserializedSimpleFunctionDescriptor@6d24514e]]
2021-03-12 10:39:38,982 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.ULongIterator defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@23e93d56]
2021-03-12 10:39:38,982 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.ULongIterator[DeserializedSimpleFunctionDescriptor@6d24514e]
2021-03-12 10:39:39,135 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:39,136 [main:117] - GENERATED CALL = (10uL downTo 1uL).iterator().equals("lnwog")
2021-03-12 10:39:39,136 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565f233a]]
2021-03-12 10:39:39,136 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565f233a]
2021-03-12 10:39:39,279 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:39:39,283 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:39:39,285 [main:117] - GENERATED CALL = (10uL downTo 1uL).all({a: T -> true})
2021-03-12 10:39:39,285 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]]
2021-03-12 10:39:39,286 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]
2021-03-12 10:39:39,432 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:39,432 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]
2021-03-12 10:39:39,432 [main:117] - GENERATED CALL = (10uL downTo 1uL).equals("avkyh").not()
2021-03-12 10:39:39,433 [main:113] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@94f3a3c], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@14d05c33]]
2021-03-12 10:39:39,433 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@14d05c33]
2021-03-12 10:39:39,577 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:39,577 [main:117] - GENERATED CALL = (10uL downTo 1uL).first.equals("buupj")
2021-03-12 10:39:39,577 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]]
2021-03-12 10:39:39,577 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]
2021-03-12 10:39:39,577 [main:117] - GENERATED CALL = (10uL downTo 1uL).none()
2021-03-12 10:39:39,577 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]]
2021-03-12 10:39:39,577 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]
2021-03-12 10:39:39,735 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:39,736 [main:117] - GENERATED CALL = (10uL downTo 1uL).equals("uzngq")
2021-03-12 10:39:39,736 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]]
2021-03-12 10:39:39,736 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]
2021-03-12 10:39:39,882 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:39,882 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]
2021-03-12 10:39:40,031 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:40,031 [main:117] - GENERATED CALL = (10uL downTo 1uL).equals("pjvxn").equals("rmqzf")
2021-03-12 10:39:40,031 [main:114] - replacement of prope9 != null of type Boolean is (10uL downTo 1uL).equals("avkyh").not()
2021-03-12 10:39:40,172 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:39:40,172 [main:66] - Compilation checking started
2021-03-12 10:39:40,641 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while ((10uL downTo 1uL).equals("avkyh").not()) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:40,645 [main:107] - replacing (method, String)
2021-03-12 10:39:40,645 [main:50] - replacing method String
2021-03-12 10:39:40,645 [main:54] - Getting value of type String
2021-03-12 10:39:40,794 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:39:40,797 [main:58] - GENERATED VALUE OF TYPE String = "ljzes"
2021-03-12 10:39:40,797 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:41,217 [main:67] - randomType = LinkedHashSet<Double>
2021-03-12 10:39:41,366 [main:302] - generating value of type = LinkedHashSet<Double> false depth = 0
2021-03-12 10:39:41,536 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Double): LkedHashSet<Double> = TODO()
2021-03-12 10:39:41,540 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Double): LkedHashSet<Double> = TODO()
2021-03-12 10:39:41,698 [main:302] - generating value of type = Double true depth = 3
2021-03-12 10:39:41,701 [main:95] - GENERATED = linkedSetOf<Double>(0.7782973897690323)
2021-03-12 10:39:41,854 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:39:41,998 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:42,145 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:42,306 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:42,465 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:42,622 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:42,779 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:39:42,782 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:39:42,789 [main:78] - Generated call from random type = (linkedSetOf<Double>(0.7782973897690323)).joinToString("ujlxv", "ivrtp", "xnvcj", -894741259, StringBuilder(), {a: T -> "gyimm"})
2021-03-12 10:39:42,790 [main:106] - GETTING String from UIntProgression
2021-03-12 10:39:42,811 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]]
2021-03-12 10:39:42,811 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]
2021-03-12 10:39:42,958 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:42,960 [main:117] - GENERATED CALL = (10u downTo 1u).first.toString(-865284261)
2021-03-12 10:39:42,960 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:39:42,960 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:39:43,103 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:43,254 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:43,406 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:43,570 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:39:43,574 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:39:43,954 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:39:43,957 [main:95] - GENERATED = StringBuilder(1874236583)
2021-03-12 10:39:44,107 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:44,252 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:39:44,398 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:39:44,400 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:39:44,406 [main:117] - GENERATED CALL = (10u downTo 1u).joinToString("tylbf", "meogw", StringBuilder(1874236583), -311671288, "etfjn", {a: T -> "kryoo"})
2021-03-12 10:39:44,407 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]]
2021-03-12 10:39:44,407 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]
2021-03-12 10:39:44,547 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:44,550 [main:117] - GENERATED CALL = (10u downTo 1u).step.toString(1032129339)
2021-03-12 10:39:44,550 [main:114] - replacement of method of type String is (linkedSetOf<Double>(0.7782973897690323)).joinToString("ujlxv", "ivrtp", "xnvcj", -894741259, StringBuilder(), {a: T -> "gyimm"})
2021-03-12 10:39:44,690 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:39:44,691 [main:66] - Compilation checking started
2021-03-12 10:39:45,167 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith((linkedSetOf<Double>(0.7782973897690323)).joinToString("ujlxv", "ivrtp", "xnvcj", -894741259, StringBuilder(), {a: T -> "gyimm"})) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:45,170 [main:107] - replacing (let(x), Unit?)
2021-03-12 10:39:45,170 [main:50] - replacing let(x) Unit?
2021-03-12 10:39:45,170 [main:54] - Getting value of type Unit?
2021-03-12 10:39:45,323 [main:302] - generating value of type = Unit false depth = 0
2021-03-12 10:39:45,484 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:39:45,487 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:39:45,977 [main:302] - generating value of type = Boolean true depth = 3
2021-03-12 10:39:45,979 [main:302] - generating value of type = Function0<Any> false depth = 3
2021-03-12 10:39:45,983 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:39:45,983 [main:95] - GENERATED = check(true, { "xbous"})
2021-03-12 10:39:45,983 [main:58] - GENERATED VALUE OF TYPE Unit? = check(true, { "xbous"})
2021-03-12 10:39:45,984 [main:61] - GENERATED IS CALL =true
2021-03-12 10:39:45,989 [main:67] - randomType = Int
2021-03-12 10:39:46,136 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:39:46,181 [main:106] - GETTING Unit? from ULongProgression
2021-03-12 10:39:46,198 [main:113] - Case = [public abstract operator fun iterator(): kotlin.collections.Iterator<kotlin.ULong> defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@64742be9], public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15fb9174]]
2021-03-12 10:39:46,198 [main:149] - GENERATING call of type public abstract operator fun iterator(): kotlin.collections.Iterator<kotlin.ULong> defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@64742be9]
2021-03-12 10:39:46,198 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15fb9174]
2021-03-12 10:39:46,335 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:39:46,338 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:39:46,485 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:46,489 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:46,991 [main:302] - generating value of type = Int true depth = 4
2021-03-12 10:39:46,994 [main:302] - generating value of type = Function1<Int, Unit> false depth = 4
2021-03-12 10:39:46,996 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 10:39:47,142 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:47,145 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:47,461 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 8
2021-03-12 10:39:47,464 [main:302] - generating value of type = Unit false depth = 9
2021-03-12 10:39:47,613 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:47,618 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:47,935 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 12
2021-03-12 10:39:47,938 [main:302] - generating value of type = Unit false depth = 13
2021-03-12 10:39:48,091 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:48,095 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:48,556 [main:302] - generating value of type = Int true depth = 16
2021-03-12 10:39:48,556 [main:385] - Cant generate call of fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:48,556 [main:95] - GENERATED = contract({ })
2021-03-12 10:39:48,556 [main:95] - GENERATED = contract({ contract({ })})
2021-03-12 10:39:48,557 [main:95] - GENERATED = repeat(-879174347, {a: Int -> contract({ contract({ })})})
2021-03-12 10:39:48,557 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed())?.iterator().forEach({a: T -> repeat(-879174347, {a: Int -> contract({ contract({ })})})})
2021-03-12 10:39:48,557 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1888381d]]
2021-03-12 10:39:48,557 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1888381d]
2021-03-12 10:39:48,701 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, T, Unit> false depth = 0
2021-03-12 10:39:48,703 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:39:48,849 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:48,852 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:49,158 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-12 10:39:49,160 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 10:39:49,305 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:39:49,309 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:39:49,659 [main:302] - generating value of type = Boolean true depth = 8
2021-03-12 10:39:49,662 [main:95] - GENERATED = check(true)
2021-03-12 10:39:49,662 [main:95] - GENERATED = contract({ check(true)})
2021-03-12 10:39:49,663 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed())?.forEachIndexed({a: Int, b: T -> contract({ check(true)})})
2021-03-12 10:39:49,663 [main:113] - Case = [@kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68a0f19a]]
2021-03-12 10:39:49,663 [main:149] - GENERATING call of type @kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@68a0f19a]
2021-03-12 10:39:49,806 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:39:49,808 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:39:49,954 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:49,958 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:39:50,434 [main:302] - generating value of type = Int true depth = 4
2021-03-12 10:39:50,436 [main:302] - generating value of type = Function1<Int, Unit> false depth = 4
2021-03-12 10:39:50,438 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 10:39:50,446 [main:95] - GENERATED = repeat(-1015952982, {a: Int -> println()})
2021-03-12 10:39:50,447 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed())?.forEach({a: T -> repeat(-1015952982, {a: Int -> println()})})
2021-03-12 10:39:50,447 [main:114] - replacement of let(x) of type Unit? is check(true, { "xbous"})
2021-03-12 10:39:50,590 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:39:50,590 [main:66] - Compilation checking started
2021-03-12 10:39:51,023 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.check(true, { "xbous"})
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !prope7) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:51,026 [main:107] - replacing (prope7, Boolean)
2021-03-12 10:39:51,026 [main:50] - replacing prope7 Boolean
2021-03-12 10:39:51,026 [main:54] - Getting value of type Boolean
2021-03-12 10:39:51,165 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:51,168 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 10:39:51,168 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:51,495 [main:67] - randomType = Function1<Byte, Kla4>
2021-03-12 10:39:51,496 [main:106] - GETTING Boolean from UIntProgression
2021-03-12 10:39:51,510 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]]
2021-03-12 10:39:51,511 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:51,654 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:51,655 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]
2021-03-12 10:39:51,803 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:51,806 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("gmkyp").xor(false)
2021-03-12 10:39:51,806 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]]
2021-03-12 10:39:51,806 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]
2021-03-12 10:39:51,806 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).any()
2021-03-12 10:39:51,806 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]]
2021-03-12 10:39:51,807 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]
2021-03-12 10:39:51,948 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:51,948 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).step.equals("ukvxj")
2021-03-12 10:39:51,949 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]]
2021-03-12 10:39:51,949 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:52,095 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:52,095 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]
2021-03-12 10:39:52,237 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:39:52,240 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("kzrgr").and(true)
2021-03-12 10:39:52,240 [main:113] - Case = [public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]]
2021-03-12 10:39:52,240 [main:149] - GENERATING call of type public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]
2021-03-12 10:39:52,382 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:39:52,580 [main:43] - GENERATING CALL OF fun <T> maxOf(a: Kla0, b: Kla0, comparator: kotlin.Comparator<Kla0>): T = TODO()
2021-03-12 10:39:52,585 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: Kla0, b: Kla0, comparator: kotlin.Comparator<Kla0>): T = TODO()
2021-03-12 10:39:52,890 [main:302] - generating value of type = Kla0 false depth = 3
2021-03-12 10:39:52,893 [main:112] - generating klass Kla0 text = @Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)
2021-03-12 10:39:53,031 [main:194] - Type params = []
2021-03-12 10:39:53,170 [main:302] - generating value of type = String true depth = 5
2021-03-12 10:39:53,173 [main:302] - generating value of type = Kla0 false depth = 3
2021-03-12 10:39:53,175 [main:112] - generating klass Kla0 text = @Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)
2021-03-12 10:39:53,320 [main:194] - Type params = []
2021-03-12 10:39:53,458 [main:302] - generating value of type = String true depth = 5
2021-03-12 10:39:53,460 [main:302] - generating value of type = Comparator<Kla0> false depth = 3
2021-03-12 10:39:53,608 [main:43] - GENERATING CALL OF fun <T> nullsFirst(comparator: kotlin.Comparator<Kla0>): Comparator<Kla0> = TODO()
2021-03-12 10:39:53,612 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsFirst(comparator: kotlin.Comparator<Kla0>): Comparator<Kla0> = TODO()
2021-03-12 10:39:53,923 [main:302] - generating value of type = Comparator<Kla0> false depth = 6
2021-03-12 10:39:54,411 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<Kla6<ArrayList<Long>>>, selector: (Kla0)->Kla6<ArrayList<Long>>): Comparator<Kla0> = TODO()
2021-03-12 10:39:54,416 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<Kla6<ArrayList<Long>>>, selector: (Kla0)->Kla6<ArrayList<Long>>): Comparator<Kla0> = TODO()
2021-03-12 10:39:54,892 [main:302] - generating value of type = Comparator<Kla6<ArrayList<Long>>> false depth = 9
2021-03-12 10:39:55,055 [main:43] - GENERATING CALL OF fun <T, K> compareBy(comparator: kotlin.Comparator<Kla1>, selector: (Kla6<ArrayList<Long>>)->Kla1): Comparator<Kla6<ArrayList<Long>>> = TODO()
2021-03-12 10:39:55,059 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareBy(comparator: kotlin.Comparator<Kla1>, selector: (Kla6<ArrayList<Long>>)->Kla1): Comparator<Kla6<ArrayList<Long>>> = TODO()
2021-03-12 10:39:55,634 [main:302] - generating value of type = Comparator<Kla1> false depth = 12
2021-03-12 10:39:55,780 [main:43] - GENERATING CALL OF fun <T> nullsLast(comparator: kotlin.Comparator<Kla1>): Comparator<Kla1> = TODO()
2021-03-12 10:39:55,784 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(comparator: kotlin.Comparator<Kla1>): Comparator<Kla1> = TODO()
2021-03-12 10:39:56,091 [main:302] - generating value of type = Comparator<Kla1> false depth = 15
2021-03-12 10:39:56,238 [main:43] - GENERATING CALL OF fun <T> naturalOrder(): Comparator<Kla1> = TODO()
2021-03-12 10:39:56,241 [main:61] - WITHOUT TYPE PARAMS = fun <T> naturalOrder(): Comparator<Kla1> = TODO()
2021-03-12 10:39:56,391 [main:95] - GENERATED = naturalOrder<Kla1>()
2021-03-12 10:39:56,391 [main:95] - GENERATED = nullsLast<Kla1>(naturalOrder<Kla1>())
2021-03-12 10:39:56,391 [main:302] - generating value of type = Function1<Kla6<ArrayList<Long>>, Kla1> false depth = 12
2021-03-12 10:39:56,394 [main:302] - generating value of type = Kla1 false depth = 13
2021-03-12 10:39:56,396 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:39:56,688 [main:302] - generating value of type = Kla3 false depth = 15
2021-03-12 10:39:56,690 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:39:56,828 [main:194] - Type params = []
2021-03-12 10:39:56,966 [main:302] - generating value of type = Kla1 false depth = 17
2021-03-12 10:39:56,966 [main:95] - GENERATED = compareBy<Kla6<ArrayList<Long>>, Kla1>(nullsLast<Kla1>(naturalOrder<Kla1>()), {a: Kla6<ArrayList<Long>> -> Kla3()})
2021-03-12 10:39:56,966 [main:302] - generating value of type = Function1<Kla0, Kla6<ArrayList<Long>>> false depth = 9
2021-03-12 10:39:56,969 [main:302] - generating value of type = Kla6<ArrayList<Long>> false depth = 10
2021-03-12 10:39:56,971 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-12 10:39:57,603 [main:302] - generating value of type = Kla9 false depth = 12
2021-03-12 10:39:57,606 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}
2021-03-12 10:39:57,606 [main:95] - GENERATED = compareByDescending<Kla0, Kla6<ArrayList<Long>>>(compareBy<Kla6<ArrayList<Long>>, Kla1>(nullsLast<Kla1>(naturalOrder<Kla1>()), {a: Kla6<ArrayList<Long>> -> Kla3()}), {a: Kla0 -> Kla9})
2021-03-12 10:39:57,606 [main:95] - GENERATED = nullsFirst<Kla0>(compareByDescending<Kla0, Kla6<ArrayList<Long>>>(compareBy<Kla6<ArrayList<Long>>, Kla1>(nullsLast<Kla1>(naturalOrder<Kla1>()), {a: Kla6<ArrayList<Long>> -> Kla3()}), {a: Kla0 -> Kla9}))
2021-03-12 10:39:57,606 [main:95] - GENERATED = maxOf<Kla0>(Kla0("rwitm"), Kla0("rqcub"), nullsFirst<Kla0>(compareByDescending<Kla0, Kla6<ArrayList<Long>>>(compareBy<Kla6<ArrayList<Long>>, Kla1>(nullsLast<Kla1>(naturalOrder<Kla1>()), {a: Kla6<ArrayList<Long>> -> Kla3()}), {a: Kla0 -> Kla9})))
2021-03-12 10:39:57,607 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).contains(maxOf<Kla0>(Kla0("rwitm"), Kla0("rqcub"), nullsFirst<Kla0>(compareByDescending<Kla0, Kla6<ArrayList<Long>>>(compareBy<Kla6<ArrayList<Long>>, Kla1>(nullsLast<Kla1>(naturalOrder<Kla1>()), {a: Kla6<ArrayList<Long>> -> Kla3()}), {a: Kla0 -> Kla9}))))
2021-03-12 10:39:57,607 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]]
2021-03-12 10:39:57,607 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]
2021-03-12 10:39:57,607 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).none()
2021-03-12 10:39:57,608 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]]
2021-03-12 10:39:57,608 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]
2021-03-12 10:39:57,608 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).isEmpty()
2021-03-12 10:39:57,608 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]]
2021-03-12 10:39:57,608 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:39:57,749 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:57,749 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]
2021-03-12 10:39:57,891 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:57,891 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("kciyx").equals("wacio")
2021-03-12 10:39:57,892 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565f233a]]
2021-03-12 10:39:57,892 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565f233a]
2021-03-12 10:39:58,035 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:39:58,038 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:39:58,040 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).all({a: T -> true})
2021-03-12 10:39:58,041 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]]
2021-03-12 10:39:58,041 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:39:58,041 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]
2021-03-12 10:39:58,181 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:39:58,181 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).iterator().equals("utwgb")
2021-03-12 10:39:58,182 [main:114] - replacement of prope7 of type Boolean is (((10u downTo 1u).reversed() step 2).reversed()).any()
2021-03-12 10:39:58,324 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:39:58,324 [main:66] - Compilation checking started
2021-03-12 10:39:59,067 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:39:59,069 [main:107] - replacing (prope3, String)
2021-03-12 10:39:59,070 [main:50] - replacing prope3 String
2021-03-12 10:39:59,070 [main:54] - Getting value of type String
2021-03-12 10:39:59,219 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:39:59,222 [main:58] - GENERATED VALUE OF TYPE String = "brogd"
2021-03-12 10:39:59,222 [main:61] - GENERATED IS CALL =false
2021-03-12 10:39:59,567 [main:67] - randomType = HashSet<Short>
2021-03-12 10:39:59,713 [main:302] - generating value of type = HashSet<Short> false depth = 0
2021-03-12 10:39:59,873 [main:43] - GENERATING CALL OF fun <T> hashSetOf(elements: Short): HashSet<Short> = TODO()
2021-03-12 10:39:59,877 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(elements: Short): HashSet<Short> = TODO()
2021-03-12 10:40:00,028 [main:302] - generating value of type = Short true depth = 3
2021-03-12 10:40:00,031 [main:95] - GENERATED = hashSetOf<Short>(19038)
2021-03-12 10:40:00,150 [main:149] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.HashSet[DeserializedSimpleFunctionDescriptor@3b8ce098]
2021-03-12 10:40:00,150 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@323d09e7]
2021-03-12 10:40:00,151 [main:78] - Generated call from random type = (hashSetOf<Short>(19038)).toArray().contentToString()
2021-03-12 10:40:00,151 [main:106] - GETTING String from UIntProgression
2021-03-12 10:40:00,168 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]]
2021-03-12 10:40:00,168 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]
2021-03-12 10:40:00,310 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:00,312 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).first.toString(-163866514)
2021-03-12 10:40:00,313 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:40:00,313 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:40:00,457 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:00,609 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:00,760 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:00,907 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:40:00,910 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:40:01,224 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 10:40:01,229 [main:95] - GENERATED = StringBuilder("dqipf")
2021-03-12 10:40:01,378 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:01,526 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:01,678 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:40:01,681 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:40:01,687 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).joinToString("ldaeo", "girym", StringBuilder("dqipf"), 670390689, "rxyjs", {a: T -> "dquoq"})
2021-03-12 10:40:01,687 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]]
2021-03-12 10:40:01,687 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]
2021-03-12 10:40:01,827 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:01,830 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.toString(2118423207)
2021-03-12 10:40:01,830 [main:114] - replacement of prope3 of type String is (((10u downTo 1u).reversed() step 2)).joinToString("ldaeo", "girym", StringBuilder("dqipf"), 670390689, "rxyjs", {a: T -> "dquoq"})
2021-03-12 10:40:01,972 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:40:01,973 [main:66] - Compilation checking started
2021-03-12 10:40:02,451 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if ((((10u downTo 1u).reversed() step 2)).joinToString("ldaeo", "girym", StringBuilder("dqipf"), 670390689, "rxyjs", {a: T -> "dquoq"}) != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:02,454 [main:107] - replacing (exceptionOrNull(), Throwable?)
2021-03-12 10:40:02,454 [main:50] - replacing exceptionOrNull() Throwable?
2021-03-12 10:40:02,454 [main:54] - Getting value of type Throwable?
2021-03-12 10:40:02,605 [main:302] - generating value of type = Throwable false depth = 0
2021-03-12 10:40:02,794 [main:43] - GENERATING CALL OF fun UnsupportedOperationException(cause: kotlin.Throwable?): Throwable = TODO()
2021-03-12 10:40:02,797 [main:61] - WITHOUT TYPE PARAMS = fun UnsupportedOperationException(cause: kotlin.Throwable?): Throwable = TODO()
2021-03-12 10:40:03,130 [main:302] - generating value of type = Throwable false depth = 3
2021-03-12 10:40:03,279 [main:43] - GENERATING CALL OF fun AssertionError(message: kotlin.Any?): Throwable = TODO()
2021-03-12 10:40:03,282 [main:61] - WITHOUT TYPE PARAMS = fun AssertionError(message: kotlin.Any?): Throwable = TODO()
2021-03-12 10:40:03,588 [main:302] - generating value of type = Any false depth = 6
2021-03-12 10:40:03,588 [main:95] - GENERATED = AssertionError("rftzp")
2021-03-12 10:40:03,588 [main:95] - GENERATED = UnsupportedOperationException(AssertionError("rftzp"))
2021-03-12 10:40:03,589 [main:58] - GENERATED VALUE OF TYPE Throwable? = UnsupportedOperationException(AssertionError("rftzp"))
2021-03-12 10:40:03,589 [main:61] - GENERATED IS CALL =true
2021-03-12 10:40:03,598 [main:67] - randomType = Kla2
2021-03-12 10:40:03,742 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-12 10:40:03,745 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:40:03,753 [main:106] - GETTING Throwable? from UIntProgression
2021-03-12 10:40:03,777 [main:106] - GETTING Throwable? from ULongProgression
2021-03-12 10:40:03,795 [main:106] - GETTING Throwable? from UIntProgression
2021-03-12 10:40:03,796 [main:106] - GETTING Throwable? from ULongProgression
2021-03-12 10:40:03,797 [main:106] - GETTING Throwable? from ULongProgression
2021-03-12 10:40:03,797 [main:106] - GETTING Throwable? from UIntProgression
2021-03-12 10:40:03,798 [main:106] - GETTING Throwable? from ULongProgression
2021-03-12 10:40:03,799 [main:106] - GETTING Throwable? from ULongProgression
2021-03-12 10:40:03,800 [main:106] - GETTING Throwable? from UIntProgression
2021-03-12 10:40:03,800 [main:106] - GETTING Throwable? from ULongProgression
2021-03-12 10:40:03,801 [main:106] - GETTING Throwable? from UIntProgression
2021-03-12 10:40:03,802 [main:106] - GETTING Throwable? from UIntProgression
2021-03-12 10:40:03,802 [main:114] - replacement of exceptionOrNull() of type Throwable? is UnsupportedOperationException(AssertionError("rftzp"))
2021-03-12 10:40:03,958 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:40:03,958 [main:66] - Compilation checking started
2021-03-12 10:40:04,413 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.UnsupportedOperationException(AssertionError("rftzp"))?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope6)
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:04,416 [main:107] - replacing (prope6, Int)
2021-03-12 10:40:04,417 [main:50] - replacing prope6 Int
2021-03-12 10:40:04,417 [main:54] - Getting value of type Int
2021-03-12 10:40:04,583 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:04,586 [main:58] - GENERATED VALUE OF TYPE Int = -1432175597
2021-03-12 10:40:04,586 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:05,070 [main:67] - randomType = HashMap<UByte, Kla9>
2021-03-12 10:40:05,211 [main:302] - generating value of type = HashMap<UByte, Kla9> false depth = 0
2021-03-12 10:40:05,358 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(): HashMap<UByte, Kla9> = TODO()
2021-03-12 10:40:05,362 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(): HashMap<UByte, Kla9> = TODO()
2021-03-12 10:40:05,544 [main:95] - GENERATED = hashMapOf<UByte, Kla9>()
2021-03-12 10:40:05,674 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@35117447]
2021-03-12 10:40:05,816 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:40:05,819 [main:78] - Generated call from random type = (hashMapOf<UByte, Kla9>()).size.compareTo(65)
2021-03-12 10:40:05,819 [main:114] - replacement of prope6 of type Int is (hashMapOf<UByte, Kla9>()).size.compareTo(65)
2021-03-12 10:40:05,958 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:40:05,958 [main:66] - Compilation checking started
2021-03-12 10:40:06,720 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:06,723 [main:107] - replacing ("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got ", String)
2021-03-12 10:40:06,723 [main:50] - replacing "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " String
2021-03-12 10:40:06,723 [main:54] - Getting value of type String
2021-03-12 10:40:06,889 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:40:06,893 [main:58] - GENERATED VALUE OF TYPE String = "wnbah"
2021-03-12 10:40:06,893 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:07,080 [main:67] - randomType = UInt?
2021-03-12 10:40:07,234 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:40:07,271 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun and(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2f165352]
2021-03-12 10:40:07,426 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:40:07,428 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]
2021-03-12 10:40:07,570 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:07,573 [main:78] - Generated call from random type = (1830933494.toUInt())?.and(1711068584.toUInt()).toString(1388585153)
2021-03-12 10:40:07,574 [main:106] - GETTING String from UIntProgression
2021-03-12 10:40:07,589 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]]
2021-03-12 10:40:07,589 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]
2021-03-12 10:40:07,737 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:07,739 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2).step.toString(222752994)
2021-03-12 10:40:07,740 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:40:07,740 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:40:07,885 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:08,033 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:08,181 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:08,327 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:40:08,330 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:40:08,651 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 10:40:08,798 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:40:08,803 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:40:09,155 [main:302] - generating value of type = CharSequence false depth = 6
2021-03-12 10:40:09,161 [main:95] - GENERATED = StringBuilder("slhti")
2021-03-12 10:40:09,162 [main:95] - GENERATED = StringBuilder(StringBuilder("slhti"))
2021-03-12 10:40:09,308 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:09,453 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:09,604 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2).joinToString("xwpac", "eqyhs", StringBuilder(StringBuilder("slhti")), 969798569, "aeqim", null)
2021-03-12 10:40:09,604 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]]
2021-03-12 10:40:09,604 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]
2021-03-12 10:40:09,749 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:09,751 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2).first.toString(-1815324972)
2021-03-12 10:40:09,752 [main:114] - replacement of "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " of type String is ((10u downTo 1u).reversed() step 2).first.toString(-1815324972)
2021-03-12 10:40:09,895 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:40:09,895 [main:66] - Compilation checking started
2021-03-12 10:40:10,579 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:10,582 [main:107] - replacing (prope3, Any?)
2021-03-12 10:40:10,583 [main:50] - replacing prope3 Any?
2021-03-12 10:40:10,583 [main:54] - Getting value of type Any?
2021-03-12 10:40:10,732 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:10,732 [main:58] - GENERATED VALUE OF TYPE Any? = "jzpuq"
2021-03-12 10:40:10,732 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:10,904 [main:67] - randomType = Kla5?
2021-03-12 10:40:11,050 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-12 10:40:11,053 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-12 10:40:11,074 [main:78] - Generated call from random type = (Kla5())?.prope3
2021-03-12 10:40:11,074 [main:114] - replacement of prope3 of type Any? is (Kla5())?.prope3
2021-03-12 10:40:11,220 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(SAFE_ACCESS_EXPRESSION)
2021-03-12 10:40:11,221 [main:66] - Compilation checking started
2021-03-12 10:40:11,689 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.(Kla5())?.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:11,691 [main:107] - replacing ("UNCHECKED_CAST", String)
2021-03-12 10:40:11,692 [main:50] - replacing "UNCHECKED_CAST" String
2021-03-12 10:40:11,692 [main:54] - Getting value of type String
2021-03-12 10:40:11,845 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:40:11,848 [main:58] - GENERATED VALUE OF TYPE String = "eycfh"
2021-03-12 10:40:11,848 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:12,029 [main:67] - randomType = Kla2?
2021-03-12 10:40:12,173 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-12 10:40:12,176 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:40:12,184 [main:149] - GENERATING call of type public open suspend fun fu4(s: kotlin.String): Kla0 defined in Kla2[SimpleFunctionDescriptorImpl@6fc4da5]
2021-03-12 10:40:12,327 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:40:12,330 [main:78] - Generated call from random type = (Kla2())?.fu4("agcfc").s
2021-03-12 10:40:12,331 [main:106] - GETTING String from UIntProgression
2021-03-12 10:40:12,349 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]]
2021-03-12 10:40:12,349 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]
2021-03-12 10:40:12,519 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:12,522 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2).first.toString(-281962169)
2021-03-12 10:40:12,522 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]]
2021-03-12 10:40:12,522 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]
2021-03-12 10:40:12,668 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:12,671 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2).step.toString(-11628390)
2021-03-12 10:40:12,671 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:40:12,671 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:40:12,815 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:12,968 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:13,127 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:40:13,131 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:40:13,456 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:40:13,459 [main:95] - GENERATED = StringBuilder(2124203509)
2021-03-12 10:40:13,613 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:13,783 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:40:13,786 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:40:14,107 [main:302] - generating value of type = String true depth = 3
2021-03-12 10:40:14,110 [main:95] - GENERATED = StringBuilder("cshkn")
2021-03-12 10:40:14,252 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:14,397 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:14,550 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:40:14,554 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:40:14,883 [main:302] - generating value of type = String true depth = 3
2021-03-12 10:40:14,886 [main:95] - GENERATED = StringBuilder("unzqm")
2021-03-12 10:40:15,030 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:40:15,033 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:40:15,039 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed() step 2).joinToString("pluth", StringBuilder(2124203509), StringBuilder("cshkn"), -126602474, StringBuilder("unzqm"), {a: T -> "ftunb"})
2021-03-12 10:40:15,039 [main:114] - replacement of "UNCHECKED_CAST" of type String is (Kla2())?.fu4("agcfc").s
2021-03-12 10:40:15,183 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:40:15,183 [main:66] - Compilation checking started
2021-03-12 10:40:15,653 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress((Kla2())?.fu4("agcfc").s)
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:15,656 [main:107] - replacing (prope3, Any?)
2021-03-12 10:40:15,656 [main:50] - replacing prope3 Any?
2021-03-12 10:40:15,656 [main:54] - Getting value of type Any?
2021-03-12 10:40:15,826 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:15,826 [main:58] - GENERATED VALUE OF TYPE Any? = "iwpso"
2021-03-12 10:40:15,826 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:15,832 [main:67] - randomType = Boolean
2021-03-12 10:40:15,977 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:15,992 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:40:16,010 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:40:16,010 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:40:16,027 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:40:16,028 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:40:16,029 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:40:16,029 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:40:16,030 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:40:16,031 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:40:16,032 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:40:16,033 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:40:16,034 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:40:16,034 [main:114] - replacement of prope3 of type Any? is "iwpso"
2021-03-12 10:40:16,182 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-12 10:40:16,182 [main:66] - Compilation checking started
2021-03-12 10:40:16,652 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this."iwpso" = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:16,654 [main:107] - replacing (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any(), Boolean)
2021-03-12 10:40:16,655 [main:50] - replacing checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any() Boolean
2021-03-12 10:40:16,655 [main:54] - Getting value of type Boolean
2021-03-12 10:40:16,816 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:16,819 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 10:40:16,819 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:16,830 [main:67] - randomType = Kla7
2021-03-12 10:40:16,993 [main:302] - generating value of type = Kla7 false depth = 0
2021-03-12 10:40:16,996 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}
2021-03-12 10:40:17,004 [main:149] - GENERATING call of type public final suspend fun fu7(): kotlin.Unit defined in Kla7[SimpleFunctionDescriptorImpl@20e2ee9]
2021-03-12 10:40:17,004 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Unit[DeserializedSimpleFunctionDescriptor@48f1eb37]
2021-03-12 10:40:17,155 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:17,155 [main:78] - Generated call from random type = (Kla7()).fu7().equals("lzlft")
2021-03-12 10:40:17,156 [main:106] - GETTING Boolean from UIntProgression
2021-03-12 10:40:17,174 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]]
2021-03-12 10:40:17,175 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]
2021-03-12 10:40:17,175 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).isEmpty()
2021-03-12 10:40:17,175 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]]
2021-03-12 10:40:17,175 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]
2021-03-12 10:40:17,324 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:17,324 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).step.equals("jrcpy")
2021-03-12 10:40:17,324 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3c06c2f5]]
2021-03-12 10:40:17,324 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:17,474 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:17,474 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3c06c2f5]
2021-03-12 10:40:17,625 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:17,628 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("msrzh").or(true)
2021-03-12 10:40:17,628 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]]
2021-03-12 10:40:17,628 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:17,781 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:17,781 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]
2021-03-12 10:40:17,782 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("nuaap").not()
2021-03-12 10:40:17,782 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]]
2021-03-12 10:40:17,782 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:40:17,782 [main:149] - GENERATING call of type public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]
2021-03-12 10:40:17,782 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).iterator().hasNext()
2021-03-12 10:40:17,782 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]]
2021-03-12 10:40:17,782 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:17,932 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:17,933 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("nnmrf")
2021-03-12 10:40:17,933 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]]
2021-03-12 10:40:17,933 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:18,077 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:18,078 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]
2021-03-12 10:40:18,222 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:18,224 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("qgbtl").and(true)
2021-03-12 10:40:18,225 [main:113] - Case = [public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]]
2021-03-12 10:40:18,225 [main:149] - GENERATING call of type public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]
2021-03-12 10:40:18,371 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:40:18,535 [main:43] - GENERATING CALL OF fun <T> minOf(a: Kla3, b: Kla3, c: Kla3, comparator: kotlin.Comparator<Kla3>): T = TODO()
2021-03-12 10:40:18,540 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Kla3, b: Kla3, c: Kla3, comparator: kotlin.Comparator<Kla3>): T = TODO()
2021-03-12 10:40:18,881 [main:302] - generating value of type = Kla3 false depth = 3
2021-03-12 10:40:18,885 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:40:19,042 [main:194] - Type params = []
2021-03-12 10:40:19,208 [main:302] - generating value of type = Kla1 false depth = 5
2021-03-12 10:40:19,210 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:40:19,558 [main:302] - generating value of type = Kla3 false depth = 7
2021-03-12 10:40:19,561 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:40:19,709 [main:194] - Type params = []
2021-03-12 10:40:19,857 [main:302] - generating value of type = Kla1 false depth = 9
2021-03-12 10:40:19,860 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:40:20,166 [main:302] - generating value of type = Kla3 false depth = 11
2021-03-12 10:40:20,168 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:40:20,313 [main:194] - Type params = []
2021-03-12 10:40:20,459 [main:302] - generating value of type = Kla1 false depth = 13
2021-03-12 10:40:20,462 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:40:20,776 [main:302] - generating value of type = Kla2 false depth = 15
2021-03-12 10:40:20,779 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:40:20,780 [main:302] - generating value of type = Kla3 false depth = 3
2021-03-12 10:40:20,783 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:40:20,929 [main:194] - Type params = []
2021-03-12 10:40:21,071 [main:302] - generating value of type = Kla1 false depth = 5
2021-03-12 10:40:21,074 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:40:21,368 [main:302] - generating value of type = Kla3 false depth = 7
2021-03-12 10:40:21,371 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:40:21,514 [main:194] - Type params = []
2021-03-12 10:40:21,657 [main:302] - generating value of type = Kla1 false depth = 9
2021-03-12 10:40:21,660 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:40:21,956 [main:302] - generating value of type = Kla2 false depth = 11
2021-03-12 10:40:21,959 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:40:21,959 [main:302] - generating value of type = Kla3 false depth = 3
2021-03-12 10:40:21,962 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:40:22,106 [main:194] - Type params = []
2021-03-12 10:40:22,252 [main:302] - generating value of type = Kla1 false depth = 5
2021-03-12 10:40:22,255 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:40:22,602 [main:302] - generating value of type = Kla2 false depth = 7
2021-03-12 10:40:22,605 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:40:22,605 [main:302] - generating value of type = Comparator<Kla3> false depth = 3
2021-03-12 10:40:24,200 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>, selector: (Kla3)->HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?): Comparator<Kla3> = TODO()
2021-03-12 10:40:24,204 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>, selector: (Kla3)->HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?): Comparator<Kla3> = TODO()
2021-03-12 10:40:24,731 [main:302] - generating value of type = Comparator<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?> false depth = 6
2021-03-12 10:40:24,889 [main:43] - GENERATING CALL OF fun <T> nullsLast(comparator: kotlin.Comparator<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>): Comparator<HashMap<LkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?> = TODO()
2021-03-12 10:40:24,892 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(comparator: kotlin.Comparator<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>): Comparator<HashMap<LkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?> = TODO()
2021-03-12 10:40:25,234 [main:302] - generating value of type = Comparator<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?> false depth = 9
2021-03-12 10:40:25,395 [main:43] - GENERATING CALL OF fun <T> compareBy(selector: (HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?)->kotlin.Comparable<*>?): Comparator<HashMap<LkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?> = TODO()
2021-03-12 10:40:25,399 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selector: (HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?)->kotlin.Comparable<*>?): Comparator<HashMap<LkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?> = TODO()
2021-03-12 10:40:25,791 [main:302] - generating value of type = Function1<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?, Comparable<*>?> false depth = 12
2021-03-12 10:40:25,794 [main:302] - generating value of type = Comparable<*> false depth = 13
2021-03-12 10:40:25,961 [main:43] - GENERATING CALL OF fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<*> = TODO()
2021-03-12 10:40:25,965 [main:61] - WITHOUT TYPE PARAMS = fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<*> = TODO()
2021-03-12 10:40:26,637 [main:302] - generating value of type = Int true depth = 16
2021-03-12 10:40:26,637 [main:385] - Cant generate call of fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<*> = TODO()
2021-03-12 10:40:26,638 [main:95] - GENERATED = compareBy<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>({a: HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>? -> })
2021-03-12 10:40:26,638 [main:95] - GENERATED = nullsLast<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>(compareBy<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>({a: HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>? -> }))
2021-03-12 10:40:26,638 [main:302] - generating value of type = Function1<Kla3, HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?> false depth = 6
2021-03-12 10:40:26,642 [main:95] - GENERATED = compareByDescending<Kla3, HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>(nullsLast<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>(compareBy<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>({a: HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>? -> })), {a: Kla3 -> null})
2021-03-12 10:40:26,643 [main:95] - GENERATED = minOf<Kla3>(Kla3(Kla3(Kla3(Kla2()))), Kla3(Kla3(Kla2())), Kla3(Kla2()), compareByDescending<Kla3, HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>(nullsLast<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>(compareBy<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>({a: HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>? -> })), {a: Kla3 -> null}))
2021-03-12 10:40:26,645 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).contains(minOf<Kla3>(Kla3(Kla3(Kla3(Kla2()))), Kla3(Kla3(Kla2())), Kla3(Kla2()), compareByDescending<Kla3, HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>(nullsLast<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>(compareBy<HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>?>({a: HashMap<LinkedHashSet<Map<ULong?, Kla6<Double>>?>, Kla7>? -> })), {a: Kla3 -> null})))
2021-03-12 10:40:26,645 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]]
2021-03-12 10:40:26,645 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:40:26,645 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]
2021-03-12 10:40:26,818 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:26,818 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).iterator().equals("mmxvv")
2021-03-12 10:40:26,818 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]]
2021-03-12 10:40:26,818 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:26,972 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:26,972 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]
2021-03-12 10:40:27,118 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:27,121 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("ujvcu").xor(false)
2021-03-12 10:40:27,121 [main:114] - replacement of checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any() of type Boolean is (Kla7()).fu7().equals("lzlft")
2021-03-12 10:40:27,265 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:40:27,266 [main:66] - Compilation checking started
2021-03-12 10:40:27,706 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "FAIL: $prope3"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if ((Kla7()).fu7().equals("lzlft")) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:27,708 [main:107] - replacing ("FAIL: $prope3", String)
2021-03-12 10:40:27,709 [main:50] - replacing "FAIL: $prope3" String
2021-03-12 10:40:27,709 [main:54] - Getting value of type String
2021-03-12 10:40:27,855 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:40:27,858 [main:58] - GENERATED VALUE OF TYPE String = "pjarr"
2021-03-12 10:40:27,858 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:27,868 [main:67] - randomType = Kla1
2021-03-12 10:40:27,869 [main:106] - GETTING String from ULongProgression
2021-03-12 10:40:27,887 [main:113] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@94f3a3c], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dda711]]
2021-03-12 10:40:27,887 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dda711]
2021-03-12 10:40:28,061 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:28,064 [main:117] - GENERATED CALL = (((10uL downTo 1uL).reversed() step 2L).reversed()).first.toString(501329963)
2021-03-12 10:40:28,065 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:40:28,065 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:40:28,253 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:28,425 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:28,585 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:40:28,589 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:40:28,899 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:40:28,902 [main:95] - GENERATED = StringBuilder(1841671371)
2021-03-12 10:40:29,055 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:29,215 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:29,357 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:29,500 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:40:29,502 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:40:29,508 [main:117] - GENERATED CALL = (((10uL downTo 1uL).reversed() step 2L).reversed()).joinToString("tqusn", StringBuilder(1841671371), "drlmj", 736007548, "yiacr", {a: T -> StringBuilder()})
2021-03-12 10:40:29,508 [main:113] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@7b26089f], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@220289d5]]
2021-03-12 10:40:29,508 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@220289d5]
2021-03-12 10:40:29,648 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:29,650 [main:117] - GENERATED CALL = (((10uL downTo 1uL).reversed() step 2L).reversed()).step.toString(-2373615)
2021-03-12 10:40:29,650 [main:114] - replacement of "FAIL: $prope3" of type String is "pjarr"
2021-03-12 10:40:29,795 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 10:40:29,796 [main:66] - Compilation checking started
2021-03-12 10:40:30,551 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if (prope6 != i) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:30,555 [main:107] - replacing (prope0, Continuation<*>)
2021-03-12 10:40:30,555 [main:50] - replacing prope0 Continuation<*>
2021-03-12 10:40:30,555 [main:54] - Getting value of type Continuation<*>
2021-03-12 10:40:30,700 [main:302] - generating value of type = Continuation<*> false depth = 0
2021-03-12 10:40:30,891 [main:43] - GENERATING CALL OF fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-12 10:40:30,896 [main:61] - WITHOUT TYPE PARAMS = fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-12 10:40:31,459 [main:302] - generating value of type = CoroutineContext false depth = 3
2021-03-12 10:40:31,633 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:40:31,637 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:40:32,031 [main:302] - generating value of type = Key<*> false depth = 6
2021-03-12 10:40:32,238 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:40:32,242 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:40:32,831 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 9
2021-03-12 10:40:33,020 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-12 10:40:33,024 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-12 10:40:33,535 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 12
2021-03-12 10:40:33,697 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-12 10:40:33,700 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-12 10:40:34,287 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-12 10:40:34,288 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-12 10:40:34,288 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:40:34,288 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:40:34,288 [main:385] - Cant generate call of fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-12 10:40:34,288 [main:58] - GENERATED VALUE OF TYPE Continuation<*> = 
2021-03-12 10:40:34,623 [main:67] - randomType = Double?
2021-03-12 10:40:34,790 [main:302] - generating value of type = Double true depth = 0
2021-03-12 10:40:34,852 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:40:34,872 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:40:34,896 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:40:34,897 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:40:34,899 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:40:34,900 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:40:34,901 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:40:34,903 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:40:34,904 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:40:34,905 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:40:34,907 [main:106] - GETTING Continuation<*> from UIntProgression
2021-03-12 10:40:34,908 [main:106] - GETTING Continuation<*> from ULongProgression
2021-03-12 10:40:34,908 [main:111] - Cant find and generate replacement for prope0 type Continuation<*>
2021-03-12 10:40:34,908 [main:107] - replacing (prope3.exceptionOrNull()!!, Throwable)
2021-03-12 10:40:34,908 [main:50] - replacing prope3.exceptionOrNull()!! Throwable
2021-03-12 10:40:34,908 [main:54] - Getting value of type Throwable
2021-03-12 10:40:35,072 [main:302] - generating value of type = Throwable false depth = 0
2021-03-12 10:40:35,228 [main:43] - GENERATING CALL OF fun Error(message: kotlin.String?, cause: kotlin.Throwable?): Throwable = TODO()
2021-03-12 10:40:35,232 [main:61] - WITHOUT TYPE PARAMS = fun Error(message: kotlin.String?, cause: kotlin.Throwable?): Throwable = TODO()
2021-03-12 10:40:35,767 [main:302] - generating value of type = String true depth = 3
2021-03-12 10:40:35,770 [main:302] - generating value of type = Throwable false depth = 3
2021-03-12 10:40:35,777 [main:95] - GENERATED = Error("aaknc", NumberFormatException())
2021-03-12 10:40:35,777 [main:58] - GENERATED VALUE OF TYPE Throwable = Error("aaknc", NumberFormatException())
2021-03-12 10:40:35,777 [main:61] - GENERATED IS CALL =true
2021-03-12 10:40:35,789 [main:67] - randomType = Kla3
2021-03-12 10:40:35,940 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-12 10:40:35,943 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:40:36,107 [main:194] - Type params = []
2021-03-12 10:40:36,262 [main:302] - generating value of type = Kla1 false depth = 2
2021-03-12 10:40:36,265 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:40:36,602 [main:302] - generating value of type = Kla2 false depth = 4
2021-03-12 10:40:36,605 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:40:36,619 [main:106] - GETTING Throwable from ULongProgression
2021-03-12 10:40:36,643 [main:106] - GETTING Throwable from ULongProgression
2021-03-12 10:40:36,644 [main:106] - GETTING Throwable from UIntProgression
2021-03-12 10:40:36,669 [main:106] - GETTING Throwable from UIntProgression
2021-03-12 10:40:36,670 [main:106] - GETTING Throwable from UIntProgression
2021-03-12 10:40:36,671 [main:106] - GETTING Throwable from UIntProgression
2021-03-12 10:40:36,672 [main:106] - GETTING Throwable from UIntProgression
2021-03-12 10:40:36,673 [main:106] - GETTING Throwable from ULongProgression
2021-03-12 10:40:36,674 [main:106] - GETTING Throwable from UIntProgression
2021-03-12 10:40:36,676 [main:106] - GETTING Throwable from ULongProgression
2021-03-12 10:40:36,677 [main:106] - GETTING Throwable from ULongProgression
2021-03-12 10:40:36,678 [main:106] - GETTING Throwable from ULongProgression
2021-03-12 10:40:36,678 [main:114] - replacement of prope3.exceptionOrNull()!! of type Throwable is Error("aaknc", NumberFormatException())
2021-03-12 10:40:36,828 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:40:36,831 [main:107] - replacing (EmptyCoroutineContext, EmptyCoroutineContext)
2021-03-12 10:40:36,831 [main:50] - replacing EmptyCoroutineContext EmptyCoroutineContext
2021-03-12 10:40:36,831 [main:54] - Getting value of type EmptyCoroutineContext
2021-03-12 10:40:36,996 [main:302] - generating value of type = EmptyCoroutineContext false depth = 0
2021-03-12 10:40:37,003 [main:58] - GENERATED VALUE OF TYPE EmptyCoroutineContext = 
2021-03-12 10:40:37,283 [main:67] - randomType = Kla1?
2021-03-12 10:40:37,284 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:37,310 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:37,332 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:37,333 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:37,333 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:37,334 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:37,335 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:37,335 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:37,336 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:37,337 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:37,337 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:37,338 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:37,338 [main:111] - Cant find and generate replacement for EmptyCoroutineContext type EmptyCoroutineContext
2021-03-12 10:40:37,338 [main:107] - replacing (prope6 != i, Boolean)
2021-03-12 10:40:37,338 [main:50] - replacing prope6 != i Boolean
2021-03-12 10:40:37,338 [main:54] - Getting value of type Boolean
2021-03-12 10:40:37,489 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:37,492 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 10:40:37,492 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:37,498 [main:67] - randomType = UInt
2021-03-12 10:40:37,643 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:40:37,687 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4eb81e43]
2021-03-12 10:40:37,834 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:40:37,837 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntRange[DeserializedSimpleFunctionDescriptor@1060532]
2021-03-12 10:40:37,837 [main:78] - Generated call from random type = (60931931.toUInt()).rangeTo(26971015.toUInt()).isEmpty()
2021-03-12 10:40:37,838 [main:106] - GETTING Boolean from UIntProgression
2021-03-12 10:40:37,857 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]]
2021-03-12 10:40:37,857 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:40:37,857 [main:149] - GENERATING call of type public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]
2021-03-12 10:40:37,858 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).iterator().hasNext()
2021-03-12 10:40:37,858 [main:113] - Case = [public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]]
2021-03-12 10:40:37,858 [main:149] - GENERATING call of type public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]
2021-03-12 10:40:38,026 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:40:39,155 [main:43] - GENERATING CALL OF fun <T> requireNotNull(value: Triple<Float, Triple<Long?, Float, String>, Kla0>, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 10:40:39,158 [main:61] - WITHOUT TYPE PARAMS = fun <T> requireNotNull(value: Triple<Float, Triple<Long?, Float, String>, Kla0>, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 10:40:39,501 [main:302] - generating value of type = Triple<Float, Triple<Long?, Float, String>, Kla0> false depth = 3
2021-03-12 10:40:39,661 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Float, second: Triple<Long?, Float, String>, third: Kla0): Triple<Float, Triple<Long?, Float, String>, Kla0> = TODO()
2021-03-12 10:40:39,664 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Float, second: Triple<Long?, Float, String>, third: Kla0): Triple<Float, Triple<Long?, Float, String>, Kla0> = TODO()
2021-03-12 10:40:39,822 [main:302] - generating value of type = Float true depth = 6
2021-03-12 10:40:39,824 [main:302] - generating value of type = Triple<Long?, Float, String> false depth = 6
2021-03-12 10:40:39,983 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Long?, second: Float, third: String): Triple<Long?, Float, String> = TODO()
2021-03-12 10:40:39,987 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Long?, second: Float, third: String): Triple<Long?, Float, String> = TODO()
2021-03-12 10:40:40,150 [main:302] - generating value of type = Long true depth = 9
2021-03-12 10:40:40,152 [main:302] - generating value of type = Float true depth = 9
2021-03-12 10:40:40,155 [main:302] - generating value of type = String true depth = 9
2021-03-12 10:40:40,158 [main:95] - GENERATED = Triple<Long?, Float, String>(-8267928933843139564, 0.947353f, "kppgj")
2021-03-12 10:40:40,158 [main:302] - generating value of type = Kla0 false depth = 6
2021-03-12 10:40:40,160 [main:112] - generating klass Kla0 text = @Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)
2021-03-12 10:40:40,316 [main:194] - Type params = []
2021-03-12 10:40:40,465 [main:302] - generating value of type = String true depth = 8
2021-03-12 10:40:40,468 [main:95] - GENERATED = Triple<Float, Triple<Long?, Float, String>, Kla0>(0.60696393f, Triple<Long?, Float, String>(-8267928933843139564, 0.947353f, "kppgj"), Kla0("smfsm"))
2021-03-12 10:40:40,468 [main:302] - generating value of type = Function0<Any> false depth = 3
2021-03-12 10:40:40,470 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:40:40,471 [main:95] - GENERATED = requireNotNull<Triple<Float, Triple<Long?, Float, String>, Kla0>>(Triple<Float, Triple<Long?, Float, String>, Kla0>(0.60696393f, Triple<Long?, Float, String>(-8267928933843139564, 0.947353f, "kppgj"), Kla0("smfsm")), { "pncop"})
2021-03-12 10:40:40,472 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).contains(requireNotNull<Triple<Float, Triple<Long?, Float, String>, Kla0>>(Triple<Float, Triple<Long?, Float, String>, Kla0>(0.60696393f, Triple<Long?, Float, String>(-8267928933843139564, 0.947353f, "kppgj"), Kla0("smfsm")), { "pncop"}))
2021-03-12 10:40:40,472 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]]
2021-03-12 10:40:40,472 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:40,652 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:40,652 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]
2021-03-12 10:40:40,816 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:40,819 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("vfwxl").xor(true)
2021-03-12 10:40:40,819 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]]
2021-03-12 10:40:40,819 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]
2021-03-12 10:40:40,973 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:40,973 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).step.equals("ombzy")
2021-03-12 10:40:40,973 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]]
2021-03-12 10:40:40,973 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:41,138 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:41,138 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]
2021-03-12 10:40:41,306 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:41,310 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("vonlz").and(true)
2021-03-12 10:40:41,310 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]]
2021-03-12 10:40:41,310 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:41,456 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:41,456 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")
2021-03-12 10:40:41,456 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]]
2021-03-12 10:40:41,457 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:41,602 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:41,602 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]
2021-03-12 10:40:41,603 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).equals("tdxul").not()
2021-03-12 10:40:41,603 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]]
2021-03-12 10:40:41,603 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]
2021-03-12 10:40:41,603 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).any()
2021-03-12 10:40:41,603 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]]
2021-03-12 10:40:41,603 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]
2021-03-12 10:40:41,603 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).isEmpty()
2021-03-12 10:40:41,603 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]]
2021-03-12 10:40:41,603 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:40:41,603 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]
2021-03-12 10:40:41,751 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:41,752 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2).reversed()).iterator().equals("glmuh")
2021-03-12 10:40:41,752 [main:114] - replacement of prope6 != i of type Boolean is (((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")
2021-03-12 10:40:41,896 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:40:41,896 [main:66] - Compilation checking started
2021-03-12 10:40:42,641 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith(method) == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:42,645 [main:107] - replacing (method, String)
2021-03-12 10:40:42,645 [main:50] - replacing method String
2021-03-12 10:40:42,645 [main:54] - Getting value of type String
2021-03-12 10:40:42,800 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:40:42,802 [main:58] - GENERATED VALUE OF TYPE String = "xtbbr"
2021-03-12 10:40:42,802 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:43,160 [main:67] - randomType = Pair<Pair<Long, UInt>, Boolean>
2021-03-12 10:40:43,303 [main:302] - generating value of type = Pair<Pair<Long, UInt>, Boolean> false depth = 0
2021-03-12 10:40:43,460 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Pair<Long, UInt>, second: Boolean): Pair<Pair<Long, UInt>, Boolean> = TODO()
2021-03-12 10:40:43,464 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Pair<Long, UInt>, second: Boolean): Pair<Pair<Long, UInt>, Boolean> = TODO()
2021-03-12 10:40:43,615 [main:302] - generating value of type = Pair<Long, UInt> false depth = 3
2021-03-12 10:40:43,766 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Long, second: UInt): Pair<Long, UInt> = TODO()
2021-03-12 10:40:43,769 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Long, second: UInt): Pair<Long, UInt> = TODO()
2021-03-12 10:40:43,925 [main:302] - generating value of type = Long true depth = 6
2021-03-12 10:40:43,928 [main:302] - generating value of type = UInt true depth = 6
2021-03-12 10:40:43,930 [main:95] - GENERATED = Pair<Long, UInt>(-7092230426161874345, 1931268010.toUInt())
2021-03-12 10:40:43,930 [main:302] - generating value of type = Boolean true depth = 3
2021-03-12 10:40:43,933 [main:95] - GENERATED = Pair<Pair<Long, UInt>, Boolean>(Pair<Long, UInt>(-7092230426161874345, 1931268010.toUInt()), true)
2021-03-12 10:40:43,952 [main:106] - GETTING String from UIntProgression
2021-03-12 10:40:43,967 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]]
2021-03-12 10:40:43,968 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]
2021-03-12 10:40:44,111 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:44,114 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.toString(713623331)
2021-03-12 10:40:44,114 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:40:44,115 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:40:44,275 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:44,442 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:44,601 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:44,797 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:44,951 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:40:45,106 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:40:45,109 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:40:45,276 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:40:45,279 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:40:45,618 [main:302] - generating value of type = CharSequence false depth = 4
2021-03-12 10:40:45,624 [main:95] - GENERATED = StringBuilder(StringBuilder())
2021-03-12 10:40:45,624 [main:117] - GENERATED CALL = ((10u downTo 1u)).joinToString(StringBuilder(), "evduy", "kazys", -965170341, StringBuilder(), {a: T -> StringBuilder(StringBuilder())})
2021-03-12 10:40:45,624 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]]
2021-03-12 10:40:45,624 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]
2021-03-12 10:40:45,767 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:45,770 [main:117] - GENERATED CALL = ((10u downTo 1u)).first.toString(-196640254)
2021-03-12 10:40:45,770 [main:114] - replacement of method of type String is "xtbbr"
2021-03-12 10:40:45,909 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-12 10:40:45,909 [main:66] - Compilation checking started
2021-03-12 10:40:46,648 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        prope6 = 0
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:46,652 [main:107] - replacing (getOrThrow(), Ty0)
2021-03-12 10:40:46,653 [main:50] - replacing getOrThrow() Ty0
2021-03-12 10:40:46,653 [main:54] - Getting value of type Ty0
2021-03-12 10:40:46,818 [main:302] - generating value of type = Ty0 false depth = 0
2021-03-12 10:40:46,824 [main:58] - GENERATED VALUE OF TYPE Ty0 = 
2021-03-12 10:40:46,985 [main:67] - randomType = Long?
2021-03-12 10:40:47,125 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:40:47,186 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:40:47,207 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:40:47,229 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:40:47,230 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:40:47,231 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:40:47,231 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:40:47,232 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:40:47,233 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:40:47,233 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:40:47,234 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:40:47,235 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:40:47,236 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:40:47,236 [main:111] - Cant find and generate replacement for getOrThrow() type Ty0
2021-03-12 10:40:47,236 [main:107] - replacing (0, Int)
2021-03-12 10:40:47,236 [main:50] - replacing 0 Int
2021-03-12 10:40:47,236 [main:54] - Getting value of type Int
2021-03-12 10:40:47,392 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:40:47,394 [main:58] - GENERATED VALUE OF TYPE Int = -814657635
2021-03-12 10:40:47,395 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:47,405 [main:67] - randomType = Kla1
2021-03-12 10:40:47,406 [main:106] - GETTING Int from ULongProgression
2021-03-12 10:40:47,429 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3c49b588]]
2021-03-12 10:40:47,429 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3c49b588]
2021-03-12 10:40:47,578 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:40:47,581 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:40:47,584 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).indexOfLast({a: T -> false})
2021-03-12 10:40:47,584 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-12 10:40:47,584 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-12 10:40:47,735 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:40:47,737 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:40:47,740 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).indexOfFirst({a: T -> false})
2021-03-12 10:40:47,740 [main:113] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@7b26089f], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@414dd3b0]]
2021-03-12 10:40:47,740 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).step.sign
2021-03-12 10:40:47,741 [main:113] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@94f3a3c], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2fe2ee76]]
2021-03-12 10:40:47,741 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2fe2ee76]
2021-03-12 10:40:47,882 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:40:47,885 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).first.compareTo(68.toUByte())
2021-03-12 10:40:47,885 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6dcb0640]]
2021-03-12 10:40:47,885 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6dcb0640]
2021-03-12 10:40:48,027 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 10:40:48,030 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:40:48,033 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).sumBy({a: T -> -389507232})
2021-03-12 10:40:48,033 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@152606b3]]
2021-03-12 10:40:48,033 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@152606b3]
2021-03-12 10:40:48,033 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).sum()
2021-03-12 10:40:48,033 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@485a7298]]
2021-03-12 10:40:48,033 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]
2021-03-12 10:40:48,174 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:48,174 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@485a7298]
2021-03-12 10:40:48,316 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:48,319 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).equals("zbeor").compareTo(false)
2021-03-12 10:40:48,319 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@372896d8]]
2021-03-12 10:40:48,319 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@372896d8]
2021-03-12 10:40:48,462 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:40:48,614 [main:43] - GENERATING CALL OF fun <T> minOf(a: Comparable<T>, b: Comparable<T>, c: Comparable<T>): T = TODO()
2021-03-12 10:40:48,618 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Comparable<T>, b: Comparable<T>, c: Comparable<T>): T = TODO()
2021-03-12 10:40:48,767 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-12 10:40:48,773 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-12 10:40:48,780 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-12 10:40:48,786 [main:95] - GENERATED = minOf<Comparable<T>>(7.toUByte(), true, 29377.toUShort())
2021-03-12 10:40:48,786 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).indexOf(minOf<Comparable<T>>(7.toUByte(), true, 29377.toUShort()))
2021-03-12 10:40:48,786 [main:113] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@94f3a3c], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1573b1dc]]
2021-03-12 10:40:48,786 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1573b1dc]
2021-03-12 10:40:48,786 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).first.countLeadingZeroBits()
2021-03-12 10:40:48,786 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@784d12b6]]
2021-03-12 10:40:48,787 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@784d12b6]
2021-03-12 10:40:48,928 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 10:40:48,930 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:40:48,933 [main:117] - GENERATED CALL = ((10uL downTo 1uL).reversed()).sumOf({a: T -> -1335124868})
2021-03-12 10:40:48,933 [main:114] - replacement of 0 of type Int is -814657635
2021-03-12 10:40:49,075 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-12 10:40:49,075 [main:66] - Compilation checking started
2021-03-12 10:40:49,799 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("OK"))

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:49,802 [main:107] - replacing (EmptyCoroutineContext, EmptyCoroutineContext)
2021-03-12 10:40:49,802 [main:50] - replacing EmptyCoroutineContext EmptyCoroutineContext
2021-03-12 10:40:49,802 [main:54] - Getting value of type EmptyCoroutineContext
2021-03-12 10:40:49,943 [main:302] - generating value of type = EmptyCoroutineContext false depth = 0
2021-03-12 10:40:49,949 [main:58] - GENERATED VALUE OF TYPE EmptyCoroutineContext = 
2021-03-12 10:40:50,116 [main:67] - randomType = UByte?
2021-03-12 10:40:50,260 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:40:50,303 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:50,317 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:50,318 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:50,332 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:50,333 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:50,334 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:50,335 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:50,335 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:50,336 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:50,336 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:50,337 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:50,338 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:50,338 [main:111] - Cant find and generate replacement for EmptyCoroutineContext type EmptyCoroutineContext
2021-03-12 10:40:50,338 [main:107] - replacing (Kla0("OK"), Kla0)
2021-03-12 10:40:50,338 [main:50] - replacing Kla0("OK") Kla0
2021-03-12 10:40:50,338 [main:54] - Getting value of type Kla0
2021-03-12 10:40:50,496 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-12 10:40:50,499 [main:112] - generating klass Kla0 text = @Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)
2021-03-12 10:40:50,645 [main:194] - Type params = []
2021-03-12 10:40:50,807 [main:302] - generating value of type = String true depth = 2
2021-03-12 10:40:50,811 [main:58] - GENERATED VALUE OF TYPE Kla0 = Kla0("cymuf")
2021-03-12 10:40:50,811 [main:61] - GENERATED IS CALL =true
2021-03-12 10:40:51,325 [main:67] - randomType = Set<Set<Char?>>
2021-03-12 10:40:51,326 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:40:51,339 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:40:51,354 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:40:51,355 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:40:51,355 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:40:51,356 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:40:51,357 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:40:51,357 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:40:51,358 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:40:51,358 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:40:51,359 [main:106] - GETTING Kla0 from UIntProgression
2021-03-12 10:40:51,360 [main:106] - GETTING Kla0 from ULongProgression
2021-03-12 10:40:51,360 [main:114] - replacement of Kla0("OK") of type Kla0 is Kla0("cymuf")
2021-03-12 10:40:51,503 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:40:51,503 [main:66] - Compilation checking started
2021-03-12 10:40:52,244 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("cymuf"))

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:40:52,246 [main:107] - replacing (EmptyCoroutineContext, EmptyCoroutineContext)
2021-03-12 10:40:52,246 [main:50] - replacing EmptyCoroutineContext EmptyCoroutineContext
2021-03-12 10:40:52,246 [main:54] - Getting value of type EmptyCoroutineContext
2021-03-12 10:40:52,390 [main:302] - generating value of type = EmptyCoroutineContext false depth = 0
2021-03-12 10:40:52,396 [main:58] - GENERATED VALUE OF TYPE EmptyCoroutineContext = 
2021-03-12 10:40:52,401 [main:67] - randomType = ULong
2021-03-12 10:40:52,575 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:40:52,624 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:52,649 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:52,650 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:52,651 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:52,652 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:52,675 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:52,676 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:52,677 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:52,678 [main:106] - GETTING EmptyCoroutineContext from ULongProgression
2021-03-12 10:40:52,679 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:52,680 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:52,681 [main:106] - GETTING EmptyCoroutineContext from UIntProgression
2021-03-12 10:40:52,682 [main:111] - Cant find and generate replacement for EmptyCoroutineContext type EmptyCoroutineContext
2021-03-12 10:40:52,682 [main:107] - replacing (isSuccess, Boolean)
2021-03-12 10:40:52,682 [main:50] - replacing isSuccess Boolean
2021-03-12 10:40:52,682 [main:54] - Getting value of type Boolean
2021-03-12 10:40:52,834 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:52,837 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 10:40:52,837 [main:61] - GENERATED IS CALL =false
2021-03-12 10:40:52,847 [main:67] - randomType = Kla8
2021-03-12 10:40:52,988 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-12 10:40:52,991 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = false
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-12 10:40:53,002 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]
2021-03-12 10:40:53,003 [main:78] - Generated call from random type = (Kla8()).prope7.not()
2021-03-12 10:40:53,003 [main:106] - GETTING Boolean from UIntProgression
2021-03-12 10:40:53,023 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]]
2021-03-12 10:40:53,024 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:53,167 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:53,167 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]
2021-03-12 10:40:53,313 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:53,316 [main:117] - GENERATED CALL = ((10u downTo 1u)).equals("bdzxv").and(true)
2021-03-12 10:40:53,316 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]]
2021-03-12 10:40:53,316 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:40:53,316 [main:149] - GENERATING call of type public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]
2021-03-12 10:40:53,316 [main:117] - GENERATED CALL = ((10u downTo 1u)).iterator().hasNext()
2021-03-12 10:40:53,317 [main:113] - Case = [public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]]
2021-03-12 10:40:53,317 [main:149] - GENERATING call of type public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]
2021-03-12 10:40:53,458 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:40:53,612 [main:43] - GENERATING CALL OF fun <T> maxOf(a: UByte, b: UByte, c: UByte, comparator: kotlin.Comparator<UByte>): T = TODO()
2021-03-12 10:40:53,616 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: UByte, b: UByte, c: UByte, comparator: kotlin.Comparator<UByte>): T = TODO()
2021-03-12 10:40:53,961 [main:302] - generating value of type = UByte true depth = 3
2021-03-12 10:40:53,964 [main:302] - generating value of type = UByte true depth = 3
2021-03-12 10:40:53,966 [main:302] - generating value of type = UByte true depth = 3
2021-03-12 10:40:53,969 [main:302] - generating value of type = Comparator<UByte> false depth = 3
2021-03-12 10:40:54,157 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<UByte>, selector: (UByte)->UByte): Comparator<UByte> = TODO()
2021-03-12 10:40:54,163 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<UByte>, selector: (UByte)->UByte): Comparator<UByte> = TODO()
2021-03-12 10:40:54,732 [main:302] - generating value of type = Comparator<UByte> false depth = 6
2021-03-12 10:40:55,408 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<Kla6<List<Kla8>>>, selector: (UByte)->Kla6<List<Kla8>>): Comparator<UByte> = TODO()
2021-03-12 10:40:55,411 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<Kla6<List<Kla8>>>, selector: (UByte)->Kla6<List<Kla8>>): Comparator<UByte> = TODO()
2021-03-12 10:40:55,907 [main:302] - generating value of type = Comparator<Kla6<List<Kla8>>> false depth = 9
2021-03-12 10:40:56,566 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<Function1<String, Byte?>>, selector: (Kla6<List<Kla8>>)->Function1<String, Byte?>): Comparator<Kla6<List<Kla8>>> = TODO()
2021-03-12 10:40:56,570 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<Function1<String, Byte?>>, selector: (Kla6<List<Kla8>>)->Function1<String, Byte?>): Comparator<Kla6<List<Kla8>>> = TODO()
2021-03-12 10:40:57,074 [main:302] - generating value of type = Comparator<Function1<String, Byte?>> false depth = 12
2021-03-12 10:40:57,248 [main:43] - GENERATING CALL OF fun <T> compareByDescending(selector: (Function1<String, Byte?>)->kotlin.Comparable<*>?): Comparator<Function1<Strg, Byte?>> = TODO()
2021-03-12 10:40:57,252 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareByDescending(selector: (Function1<String, Byte?>)->kotlin.Comparable<*>?): Comparator<Function1<Strg, Byte?>> = TODO()
2021-03-12 10:40:57,610 [main:302] - generating value of type = Function1<Function1<String, Byte?>, Comparable<*>?> false depth = 15
2021-03-12 10:40:57,613 [main:302] - generating value of type = Comparable<*> false depth = 16
2021-03-12 10:40:57,614 [main:95] - GENERATED = compareByDescending<Function1<String, Byte?>>({a: Function1<String, Byte?> -> })
2021-03-12 10:40:57,614 [main:302] - generating value of type = Function1<Kla6<List<Kla8>>, Function1<String, Byte?>> false depth = 12
2021-03-12 10:40:57,617 [main:302] - generating value of type = Function1<String, Byte?> false depth = 13
2021-03-12 10:40:57,619 [main:302] - generating value of type = Byte true depth = 14
2021-03-12 10:40:57,622 [main:95] - GENERATED = compareByDescending<Kla6<List<Kla8>>, Function1<String, Byte?>>(compareByDescending<Function1<String, Byte?>>({a: Function1<String, Byte?> -> }), {a: Kla6<List<Kla8>> -> {a: String -> 106}})
2021-03-12 10:40:57,623 [main:302] - generating value of type = Function1<UByte, Kla6<List<Kla8>>> false depth = 9
2021-03-12 10:40:57,625 [main:302] - generating value of type = Kla6<List<Kla8>> false depth = 10
2021-03-12 10:40:57,628 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-12 10:40:58,174 [main:302] - generating value of type = Kla9 false depth = 12
2021-03-12 10:40:58,177 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}
2021-03-12 10:40:58,178 [main:95] - GENERATED = compareByDescending<UByte, Kla6<List<Kla8>>>(compareByDescending<Kla6<List<Kla8>>, Function1<String, Byte?>>(compareByDescending<Function1<String, Byte?>>({a: Function1<String, Byte?> -> }), {a: Kla6<List<Kla8>> -> {a: String -> 106}}), {a: UByte -> Kla9})
2021-03-12 10:40:58,178 [main:302] - generating value of type = Function1<UByte, UByte> false depth = 6
2021-03-12 10:40:58,180 [main:302] - generating value of type = UByte true depth = 7
2021-03-12 10:40:58,183 [main:95] - GENERATED = compareByDescending<UByte, UByte>(compareByDescending<UByte, Kla6<List<Kla8>>>(compareByDescending<Kla6<List<Kla8>>, Function1<String, Byte?>>(compareByDescending<Function1<String, Byte?>>({a: Function1<String, Byte?> -> }), {a: Kla6<List<Kla8>> -> {a: String -> 106}}), {a: UByte -> Kla9}), {a: UByte -> 11.toUByte()})
2021-03-12 10:40:58,184 [main:95] - GENERATED = maxOf<UByte>(67.toUByte(), 43.toUByte(), 68.toUByte(), compareByDescending<UByte, UByte>(compareByDescending<UByte, Kla6<List<Kla8>>>(compareByDescending<Kla6<List<Kla8>>, Function1<String, Byte?>>(compareByDescending<Function1<String, Byte?>>({a: Function1<String, Byte?> -> }), {a: Kla6<List<Kla8>> -> {a: String -> 106}}), {a: UByte -> Kla9}), {a: UByte -> 11.toUByte()}))
2021-03-12 10:40:58,185 [main:117] - GENERATED CALL = ((10u downTo 1u)).contains(maxOf<UByte>(67.toUByte(), 43.toUByte(), 68.toUByte(), compareByDescending<UByte, UByte>(compareByDescending<UByte, Kla6<List<Kla8>>>(compareByDescending<Kla6<List<Kla8>>, Function1<String, Byte?>>(compareByDescending<Function1<String, Byte?>>({a: Function1<String, Byte?> -> }), {a: Kla6<List<Kla8>> -> {a: String -> 106}}), {a: UByte -> Kla9}), {a: UByte -> 11.toUByte()})))
2021-03-12 10:40:58,185 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]]
2021-03-12 10:40:58,185 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:58,336 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:58,337 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]
2021-03-12 10:40:58,487 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:58,490 [main:117] - GENERATED CALL = ((10u downTo 1u)).equals("wfngy").xor(false)
2021-03-12 10:40:58,491 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]]
2021-03-12 10:40:58,491 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]
2021-03-12 10:40:58,664 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:58,665 [main:117] - GENERATED CALL = ((10u downTo 1u)).step.equals("wqtmm")
2021-03-12 10:40:58,665 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]]
2021-03-12 10:40:58,665 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e786c08]
2021-03-12 10:40:58,665 [main:117] - GENERATED CALL = ((10u downTo 1u)).any()
2021-03-12 10:40:58,665 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3c06c2f5]]
2021-03-12 10:40:58,665 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:58,819 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:58,819 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3c06c2f5]
2021-03-12 10:40:58,966 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:58,969 [main:117] - GENERATED CALL = ((10u downTo 1u)).equals("ookua").or(true)
2021-03-12 10:40:58,969 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]]
2021-03-12 10:40:58,969 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:40:58,969 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]
2021-03-12 10:40:59,167 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:59,168 [main:117] - GENERATED CALL = ((10u downTo 1u)).iterator().equals("coywb")
2021-03-12 10:40:59,168 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]]
2021-03-12 10:40:59,168 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:40:59,333 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:59,334 [main:117] - GENERATED CALL = ((10u downTo 1u)).equals("vjwxo")
2021-03-12 10:40:59,334 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c58e3a]]
2021-03-12 10:40:59,334 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c58e3a]
2021-03-12 10:40:59,483 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:40:59,483 [main:117] - GENERATED CALL = ((10u downTo 1u)).first.equals("nxlmk")
2021-03-12 10:40:59,484 [main:114] - replacement of isSuccess of type Boolean is ((10u downTo 1u)).step.equals("wqtmm")
2021-03-12 10:40:59,633 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:40:59,635 [main:107] - replacing (false, Boolean)
2021-03-12 10:40:59,636 [main:50] - replacing false Boolean
2021-03-12 10:40:59,636 [main:54] - Getting value of type Boolean
2021-03-12 10:40:59,782 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:40:59,784 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 10:40:59,785 [main:61] - GENERATED IS CALL =false
2021-03-12 10:41:00,127 [main:67] - randomType = Pair<Byte, Char>
2021-03-12 10:41:00,285 [main:302] - generating value of type = Pair<Byte, Char> false depth = 0
2021-03-12 10:41:00,462 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Byte, second: Char): Pair<Byte, Char> = TODO()
2021-03-12 10:41:00,466 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Byte, second: Char): Pair<Byte, Char> = TODO()
2021-03-12 10:41:00,633 [main:302] - generating value of type = Byte true depth = 3
2021-03-12 10:41:00,636 [main:302] - generating value of type = Char true depth = 3
2021-03-12 10:41:00,638 [main:95] - GENERATED = Pair<Byte, Char>(-98, '蹑')
2021-03-12 10:41:00,657 [main:149] - GENERATING call of type public fun kotlin.Char.isISOControl(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5947c7c0]
2021-03-12 10:41:00,657 [main:78] - Generated call from random type = (Pair<Byte, Char>(-98, '蹑')).second.isISOControl()
2021-03-12 10:41:00,659 [main:106] - GETTING Boolean from ULongProgression
2021-03-12 10:41:00,681 [main:113] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@7b26089f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@67bb22d6]]
2021-03-12 10:41:00,681 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@67bb22d6]
2021-03-12 10:41:00,835 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:00,835 [main:117] - GENERATED CALL = (10uL downTo 1uL).step.equals("fpowz")
2021-03-12 10:41:00,835 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]]
2021-03-12 10:41:00,835 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]
2021-03-12 10:41:00,983 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:00,983 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]
2021-03-12 10:41:01,140 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:41:01,143 [main:117] - GENERATED CALL = (10uL downTo 1uL).equals("phjlf").and(true)
2021-03-12 10:41:01,143 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565f233a]]
2021-03-12 10:41:01,143 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565f233a]
2021-03-12 10:41:01,295 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:41:01,297 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:41:01,300 [main:117] - GENERATED CALL = (10uL downTo 1uL).all({a: T -> true})
2021-03-12 10:41:01,300 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]]
2021-03-12 10:41:01,300 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]
2021-03-12 10:41:01,454 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:01,454 [main:117] - GENERATED CALL = (10uL downTo 1uL).equals("mfsya")
2021-03-12 10:41:01,454 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]]
2021-03-12 10:41:01,454 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]
2021-03-12 10:41:01,614 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:01,614 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]
2021-03-12 10:41:01,614 [main:117] - GENERATED CALL = (10uL downTo 1uL).equals("nydud").not()
2021-03-12 10:41:01,614 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@1b164627]]
2021-03-12 10:41:01,614 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@1b164627]
2021-03-12 10:41:01,615 [main:117] - GENERATED CALL = (10uL downTo 1uL).isEmpty()
2021-03-12 10:41:01,615 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]]
2021-03-12 10:41:01,615 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@184c016]
2021-03-12 10:41:01,763 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:01,763 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41df222e]
2021-03-12 10:41:01,908 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:41:01,911 [main:117] - GENERATED CALL = (10uL downTo 1uL).equals("ocfii").xor(true)
2021-03-12 10:41:01,911 [main:113] - Case = [public open fun iterator(): kotlin.collections.ULongIterator defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@23e93d56], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.ULongIterator[DeserializedSimpleFunctionDescriptor@6d24514e]]
2021-03-12 10:41:01,911 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.ULongIterator defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@23e93d56]
2021-03-12 10:41:01,912 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.ULongIterator[DeserializedSimpleFunctionDescriptor@6d24514e]
2021-03-12 10:41:02,056 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:02,057 [main:117] - GENERATED CALL = (10uL downTo 1uL).iterator().equals("vfstp")
2021-03-12 10:41:02,057 [main:113] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@94f3a3c], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@14d05c33]]
2021-03-12 10:41:02,057 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@14d05c33]
2021-03-12 10:41:02,207 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:02,208 [main:117] - GENERATED CALL = (10uL downTo 1uL).first.equals("uuvxn")
2021-03-12 10:41:02,208 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]]
2021-03-12 10:41:02,208 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2890e234]
2021-03-12 10:41:02,208 [main:117] - GENERATED CALL = (10uL downTo 1uL).none()
2021-03-12 10:41:02,208 [main:114] - replacement of false of type Boolean is (10uL downTo 1uL).isEmpty()
2021-03-12 10:41:02,354 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:41:02,355 [main:66] - Compilation checking started
2021-03-12 10:41:03,149 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("cymuf"))

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:41:03,151 [main:107] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions, String)
2021-03-12 10:41:03,151 [main:50] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions String
2021-03-12 10:41:03,152 [main:54] - Getting value of type String
2021-03-12 10:41:03,310 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:41:03,313 [main:58] - GENERATED VALUE OF TYPE String = "mdija"
2021-03-12 10:41:03,313 [main:61] - GENERATED IS CALL =false
2021-03-12 10:41:03,686 [main:67] - randomType = Sequence<Function1<Long, UByte>>
2021-03-12 10:41:03,687 [main:106] - GETTING String from UIntProgression
2021-03-12 10:41:03,702 [main:113] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4b4da62d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]]
2021-03-12 10:41:03,702 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a2227b8]
2021-03-12 10:41:03,847 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:41:03,851 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).first.toString(348053576)
2021-03-12 10:41:03,851 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:41:03,851 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:41:04,004 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:41:04,186 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:41:04,190 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:41:04,519 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 10:41:04,682 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:41:04,686 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:41:05,013 [main:302] - generating value of type = Int true depth = 6
2021-03-12 10:41:05,016 [main:95] - GENERATED = StringBuilder(1561211502)
2021-03-12 10:41:05,016 [main:95] - GENERATED = StringBuilder(StringBuilder(1561211502))
2021-03-12 10:41:05,183 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:41:05,344 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:41:05,347 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 10:41:05,775 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 10:41:05,999 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:41:06,005 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:41:06,508 [main:302] - generating value of type = Int true depth = 6
2021-03-12 10:41:06,513 [main:95] - GENERATED = StringBuilder(-1885181302)
2021-03-12 10:41:06,513 [main:95] - GENERATED = StringBuilder(StringBuilder(-1885181302))
2021-03-12 10:41:06,739 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:41:06,939 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:41:07,117 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:41:07,305 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:41:07,311 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:41:07,727 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:41:07,730 [main:95] - GENERATED = StringBuilder(-1392525458)
2021-03-12 10:41:07,935 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:41:07,939 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:41:07,949 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).joinToString(StringBuilder(StringBuilder(1561211502)), StringBuilder(StringBuilder(-1885181302)), "lqdqz", -589117947, StringBuilder(-1392525458), {a: T -> "tdshu"})
2021-03-12 10:41:07,949 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]]
2021-03-12 10:41:07,949 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@31bff07d]
2021-03-12 10:41:08,166 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:41:08,170 [main:117] - GENERATED CALL = (((10u downTo 1u).reversed() step 2)).step.toString(-1834529392)
2021-03-12 10:41:08,170 [main:114] - replacement of "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions of type String is (((10u downTo 1u).reversed() step 2)).step.toString(-1834529392)
2021-03-12 10:41:08,327 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:41:08,328 [main:66] - Compilation checking started
2021-03-12 10:41:09,175 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    prope0?.resume(Kla0("cymuf"))

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:41:09,179 [main:107] - replacing (prope0?.resume(Kla0("cymuf")), Unit?)
2021-03-12 10:41:09,179 [main:50] - replacing prope0?.resume(Kla0("cymuf")) Unit?
2021-03-12 10:41:09,179 [main:54] - Getting value of type Unit?
2021-03-12 10:41:09,356 [main:302] - generating value of type = Unit false depth = 0
2021-03-12 10:41:09,530 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:41:09,534 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:41:09,877 [main:302] - generating value of type = Any false depth = 3
2021-03-12 10:41:09,877 [main:95] - GENERATED = print("qkdtm")
2021-03-12 10:41:09,877 [main:58] - GENERATED VALUE OF TYPE Unit? = print("qkdtm")
2021-03-12 10:41:09,877 [main:61] - GENERATED IS CALL =true
2021-03-12 10:41:10,247 [main:67] - randomType = HashSet<Float>
2021-03-12 10:41:10,412 [main:302] - generating value of type = HashSet<Float> false depth = 0
2021-03-12 10:41:10,598 [main:43] - GENERATING CALL OF fun <E> HashSet(initialCapacity: kotlin.Int): HashSet<Float> = TODO()
2021-03-12 10:41:10,602 [main:61] - WITHOUT TYPE PARAMS = fun <E> HashSet(initialCapacity: kotlin.Int): HashSet<Float> = TODO()
2021-03-12 10:41:10,953 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:41:10,956 [main:95] - GENERATED = HashSet<Float>(1855816031)
2021-03-12 10:41:11,123 [main:149] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.HashSet[DeserializedSimpleFunctionDescriptor@708ce310]
2021-03-12 10:41:11,124 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.Array<T>.fill(element: T, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c86ac08]
2021-03-12 10:41:11,313 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:41:11,522 [main:43] - GENERATING CALL OF fun <T> requireNotNull(value: Kla7): T = TODO()
2021-03-12 10:41:11,526 [main:61] - WITHOUT TYPE PARAMS = fun <T> requireNotNull(value: Kla7): T = TODO()
2021-03-12 10:41:11,738 [main:302] - generating value of type = Kla7 false depth = 3
2021-03-12 10:41:11,742 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}
2021-03-12 10:41:11,742 [main:95] - GENERATED = requireNotNull<Kla7>(Kla7())
2021-03-12 10:41:11,920 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:41:12,108 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:41:12,112 [main:78] - Generated call from random type = (HashSet<Float>(1855816031)).toArray().fill(requireNotNull<Kla7>(Kla7()), 822816294, 904928924)
2021-03-12 10:41:12,112 [main:114] - replacement of prope0?.resume(Kla0("cymuf")) of type Unit? is (HashSet<Float>(1855816031)).toArray().fill(requireNotNull<Kla7>(Kla7()), 822816294, 904928924)
2021-03-12 10:41:12,348 [main:33] - Trying to replace Element(SAFE_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:41:12,349 [main:66] - Compilation checking started
2021-03-12 10:41:13,527 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    (HashSet<Float>(1855816031)).toArray().fill(requireNotNull<Kla7>(Kla7()), 822816294, 904928924)

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:41:13,532 [main:107] - replacing (prope3.getOrThrow(), Any?)
2021-03-12 10:41:13,534 [main:50] - replacing prope3.getOrThrow() Any?
2021-03-12 10:41:13,534 [main:54] - Getting value of type Any?
2021-03-12 10:41:13,780 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:13,780 [main:58] - GENERATED VALUE OF TYPE Any? = "qzlui"
2021-03-12 10:41:13,780 [main:61] - GENERATED IS CALL =false
2021-03-12 10:41:13,985 [main:67] - randomType = Byte
2021-03-12 10:41:14,163 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:41:14,205 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:14,224 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:14,250 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:14,252 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:14,254 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:14,256 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:14,258 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:14,260 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:14,262 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:14,264 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:14,265 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:14,266 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:14,266 [main:114] - replacement of prope3.getOrThrow() of type Any? is "qzlui"
2021-03-12 10:41:14,453 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-12 10:41:14,454 [main:66] - Compilation checking started
2021-03-12 10:41:15,404 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    (HashSet<Float>(1855816031)).toArray().fill(requireNotNull<Kla7>(Kla7()), 822816294, 904928924)

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
"qzlui"
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            prope2.prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:41:15,408 [main:107] - replacing (prope2, Kla8)
2021-03-12 10:41:15,409 [main:50] - replacing prope2 Kla8
2021-03-12 10:41:15,409 [main:54] - Getting value of type Kla8
2021-03-12 10:41:15,632 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-12 10:41:15,635 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-12 10:41:15,636 [main:58] - GENERATED VALUE OF TYPE Kla8 = Kla8()
2021-03-12 10:41:15,636 [main:61] - GENERATED IS CALL =true
2021-03-12 10:41:15,648 [main:67] - randomType = Kla4
2021-03-12 10:41:15,827 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-12 10:41:15,830 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
"qzlui"
    }
}
2021-03-12 10:41:16,003 [main:194] - Type params = []
2021-03-12 10:41:16,192 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-12 10:41:16,362 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:41:16,366 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:41:16,773 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-12 10:41:16,962 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:41:16,966 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:41:17,550 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 8
2021-03-12 10:41:17,722 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-12 10:41:17,726 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-12 10:41:18,349 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 11
2021-03-12 10:41:18,545 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-12 10:41:18,550 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-12 10:41:19,106 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-12 10:41:19,106 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-12 10:41:19,106 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:41:19,106 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:41:19,133 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:19,160 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:19,185 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:19,186 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:19,187 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:19,188 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:19,189 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:19,190 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:19,191 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:19,191 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:19,192 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:19,193 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:19,193 [main:114] - replacement of prope2 of type Kla8 is Kla8()
2021-03-12 10:41:19,446 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:41:19,447 [main:66] - Compilation checking started
2021-03-12 10:41:20,549 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    (HashSet<Float>(1855816031)).toArray().fill(requireNotNull<Kla7>(Kla7()), 822816294, 904928924)

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
"qzlui"
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            Kla8().prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:41:20,553 [main:107] - replacing (prope3.getOrThrow(), Ty0)
2021-03-12 10:41:20,553 [main:50] - replacing prope3.getOrThrow() Ty0
2021-03-12 10:41:20,553 [main:54] - Getting value of type Ty0
2021-03-12 10:41:20,783 [main:302] - generating value of type = Ty0 false depth = 0
2021-03-12 10:41:20,790 [main:58] - GENERATED VALUE OF TYPE Ty0 = 
2021-03-12 10:41:20,807 [main:67] - randomType = Kla3
2021-03-12 10:41:21,040 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-12 10:41:21,044 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:41:21,269 [main:194] - Type params = []
2021-03-12 10:41:21,487 [main:302] - generating value of type = Kla1 false depth = 2
2021-03-12 10:41:21,492 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:41:21,977 [main:302] - generating value of type = Kla3 false depth = 4
2021-03-12 10:41:21,981 [main:112] - generating klass Kla3 text = class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))
2021-03-12 10:41:22,169 [main:194] - Type params = []
2021-03-12 10:41:22,385 [main:302] - generating value of type = Kla1 false depth = 6
2021-03-12 10:41:22,388 [main:112] - generating klass Kla1 text = interface Kla1 {
    suspend fun fu4(s: String): Kla0
}
2021-03-12 10:41:22,742 [main:302] - generating value of type = Kla2 false depth = 8
2021-03-12 10:41:22,745 [main:112] - generating klass Kla2 text = class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}
2021-03-12 10:41:22,762 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:41:22,779 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:41:22,780 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:41:22,806 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:41:22,807 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:41:22,808 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:41:22,809 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:41:22,810 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:41:22,811 [main:106] - GETTING Ty0 from ULongProgression
2021-03-12 10:41:22,812 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:41:22,812 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:41:22,813 [main:106] - GETTING Ty0 from UIntProgression
2021-03-12 10:41:22,813 [main:111] - Cant find and generate replacement for prope3.getOrThrow() type Ty0
2021-03-12 10:41:22,813 [main:107] - replacing (Kla8(), Kla8)
2021-03-12 10:41:22,813 [main:50] - replacing Kla8() Kla8
2021-03-12 10:41:22,813 [main:54] - Getting value of type Kla8
2021-03-12 10:41:23,035 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-12 10:41:23,038 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-12 10:41:23,039 [main:58] - GENERATED VALUE OF TYPE Kla8 = Kla8()
2021-03-12 10:41:23,039 [main:61] - GENERATED IS CALL =true
2021-03-12 10:41:23,045 [main:67] - randomType = ULong
2021-03-12 10:41:23,232 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:41:23,327 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:23,349 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:23,350 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:23,370 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:23,371 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:23,372 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:23,372 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:23,373 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:23,374 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:23,375 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:23,375 [main:106] - GETTING Kla8 from ULongProgression
2021-03-12 10:41:23,376 [main:106] - GETTING Kla8 from UIntProgression
2021-03-12 10:41:23,376 [main:114] - replacement of Kla8() of type Kla8 is Kla8()
2021-03-12 10:41:23,553 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:41:23,555 [main:107] - replacing (prope3, Any?)
2021-03-12 10:41:23,555 [main:50] - replacing prope3 Any?
2021-03-12 10:41:23,556 [main:54] - Getting value of type Any?
2021-03-12 10:41:23,731 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:23,731 [main:58] - GENERATED VALUE OF TYPE Any? = "awjyg"
2021-03-12 10:41:23,732 [main:61] - GENERATED IS CALL =false
2021-03-12 10:41:23,930 [main:67] - randomType = Boolean?
2021-03-12 10:41:24,112 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:41:24,135 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:24,157 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:24,159 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:24,183 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:24,184 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:24,185 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:24,190 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:24,191 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:24,192 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:24,193 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:24,194 [main:106] - GETTING Any? from ULongProgression
2021-03-12 10:41:24,195 [main:106] - GETTING Any? from UIntProgression
2021-03-12 10:41:24,195 [main:114] - replacement of prope3 of type Any? is "awjyg"
2021-03-12 10:41:24,383 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-12 10:41:24,384 [main:66] - Compilation checking started
2021-03-12 10:41:25,016 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    (HashSet<Float>(1855816031)).toArray().fill(requireNotNull<Kla7>(Kla7()), 822816294, 904928924)

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
"qzlui"
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this."awjyg" = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { it?.methodName?.startsWith("xtbbr") == true }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            Kla8().prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:41:25,021 [main:107] - replacing (it?.methodName?.startsWith("xtbbr") == true, Boolean)
2021-03-12 10:41:25,021 [main:50] - replacing it?.methodName?.startsWith("xtbbr") == true Boolean
2021-03-12 10:41:25,021 [main:54] - Getting value of type Boolean
2021-03-12 10:41:25,222 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:41:25,227 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 10:41:25,227 [main:61] - GENERATED IS CALL =false
2021-03-12 10:41:25,240 [main:67] - randomType = Kla5
2021-03-12 10:41:25,443 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-12 10:41:25,447 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-12 10:41:25,474 [main:149] - GENERATING call of type public open fun resumeWith(prope3: kotlin.Result<kotlin.Any?>): kotlin.Unit defined in Kla5[SimpleFunctionDescriptorImpl@4899b73e]
2021-03-12 10:41:25,662 [main:302] - generating value of type = Result<Any?> false depth = 0
2021-03-12 10:41:25,860 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-12 10:41:25,865 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-12 10:41:26,268 [main:302] - generating value of type = Function0<Any?> false depth = 3
2021-03-12 10:41:26,271 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:41:26,271 [main:95] - GENERATED = runCatching<Any?>({ "fzqtp"})
2021-03-12 10:41:26,271 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Unit[DeserializedSimpleFunctionDescriptor@a6abf07]
2021-03-12 10:41:26,468 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:26,469 [main:78] - Generated call from random type = (Kla5()).resumeWith(runCatching<Any?>({ "fzqtp"})).equals("ecubr")
2021-03-12 10:41:26,470 [main:106] - GETTING Boolean from UIntProgression
2021-03-12 10:41:26,493 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]]
2021-03-12 10:41:26,493 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:41:26,690 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:26,691 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3de0725f]
2021-03-12 10:41:26,909 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:41:26,912 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).equals("ngrjb").and(false)
2021-03-12 10:41:26,913 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]]
2021-03-12 10:41:26,913 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:41:26,913 [main:149] - GENERATING call of type public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@43d96b8a]
2021-03-12 10:41:26,913 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).iterator().hasNext()
2021-03-12 10:41:26,913 [main:113] - Case = [public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]]
2021-03-12 10:41:26,913 [main:149] - GENERATING call of type public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10463c5]
2021-03-12 10:41:27,103 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:41:27,288 [main:43] - GENERATING CALL OF fun <T> minOf(a: Char, other: Char, comparator: kotlin.Comparator<Char>): T = TODO()
2021-03-12 10:41:27,292 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Char, other: Char, comparator: kotlin.Comparator<Char>): T = TODO()
2021-03-12 10:41:27,735 [main:302] - generating value of type = Char true depth = 3
2021-03-12 10:41:27,738 [main:302] - generating value of type = Char true depth = 3
2021-03-12 10:41:27,741 [main:302] - generating value of type = Comparator<Char> false depth = 3
2021-03-12 10:41:27,935 [main:43] - GENERATING CALL OF fun <T> naturalOrder(): Comparator<Char> = TODO()
2021-03-12 10:41:27,939 [main:61] - WITHOUT TYPE PARAMS = fun <T> naturalOrder(): Comparator<Char> = TODO()
2021-03-12 10:41:28,131 [main:95] - GENERATED = naturalOrder<Char>()
2021-03-12 10:41:28,131 [main:95] - GENERATED = minOf<Char>('袎', '쐬', naturalOrder<Char>())
2021-03-12 10:41:28,131 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).contains(minOf<Char>('袎', '쐬', naturalOrder<Char>()))
2021-03-12 10:41:28,131 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3c06c2f5]]
2021-03-12 10:41:28,131 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:41:28,291 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:28,291 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3c06c2f5]
2021-03-12 10:41:28,478 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:41:28,481 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).equals("feqkz").or(false)
2021-03-12 10:41:28,481 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]]
2021-03-12 10:41:28,481 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@dc1a69c]
2021-03-12 10:41:28,481 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).isEmpty()
2021-03-12 10:41:28,481 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7b9e9b88], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]]
2021-03-12 10:41:28,482 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@74fabca7]
2021-03-12 10:41:28,672 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:28,673 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).step.equals("mgrwn")
2021-03-12 10:41:28,673 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]]
2021-03-12 10:41:28,673 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:41:28,876 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:28,876 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27d3ba25]
2021-03-12 10:41:28,876 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).equals("nkffm").not()
2021-03-12 10:41:28,876 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]]
2021-03-12 10:41:28,876 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:41:29,054 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:29,054 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@30c5ce0a]
2021-03-12 10:41:29,205 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:29,205 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).equals("hcidn").equals("vsxdk")
2021-03-12 10:41:29,205 [main:113] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]]
2021-03-12 10:41:29,205 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@24c17d1f]
2021-03-12 10:41:29,205 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@6fae406c]
2021-03-12 10:41:29,356 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:29,356 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).iterator().equals("xuxnp")
2021-03-12 10:41:29,357 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]]
2021-03-12 10:41:29,357 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@208406c5]
2021-03-12 10:41:29,506 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:41:29,506 [main:117] - GENERATED CALL = ((10u downTo 1u).reversed()).equals("cghce")
2021-03-12 10:41:29,506 [main:114] - replacement of it?.methodName?.startsWith("xtbbr") == true of type Boolean is ((10u downTo 1u).reversed()).iterator().equals("xuxnp")
2021-03-12 10:41:29,662 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:41:29,663 [main:66] - Compilation checking started
2021-03-12 10:41:30,449 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    (HashSet<Float>(1855816031)).toArray().fill(requireNotNull<Kla7>(Kla7()), 822816294, 904928924)

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
"qzlui"
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { ((10u downTo 1u).reversed()).iterator().equals("xuxnp") }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            Kla8().prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:41:30,453 [main:107] - replacing ((((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got ", String)
2021-03-12 10:41:30,453 [main:50] - replacing (((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " String
2021-03-12 10:41:30,453 [main:54] - Getting value of type String
2021-03-12 10:41:30,624 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:41:30,627 [main:58] - GENERATED VALUE OF TYPE String = "lzknt"
2021-03-12 10:41:30,628 [main:61] - GENERATED IS CALL =false
2021-03-12 10:41:30,639 [main:67] - randomType = Kla9
2021-03-12 10:41:30,823 [main:302] - generating value of type = Kla9 false depth = 0
2021-03-12 10:41:30,827 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            Kla8().prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}
2021-03-12 10:41:30,862 [main:106] - GETTING String from ULongProgression
2021-03-12 10:41:30,882 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-12 10:41:30,882 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-12 10:41:31,054 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:41:31,231 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:41:31,414 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:41:31,600 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:41:31,604 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 10:41:31,953 [main:302] - generating value of type = String true depth = 3
2021-03-12 10:41:31,956 [main:95] - GENERATED = StringBuilder("asypf")
2021-03-12 10:41:32,116 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:41:32,325 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:41:32,486 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:41:32,489 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:41:32,666 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:41:32,670 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:41:33,077 [main:302] - generating value of type = Int true depth = 4
2021-03-12 10:41:33,080 [main:95] - GENERATED = StringBuilder(-1130650930)
2021-03-12 10:41:33,080 [main:117] - GENERATED CALL = (((10uL downTo 1uL).reversed() step 2L)).joinToString("tgwlb", "phant", StringBuilder("asypf"), -1183670794, "vcnvo", {a: T -> StringBuilder(-1130650930)})
2021-03-12 10:41:33,080 [main:113] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@7b26089f], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@220289d5]]
2021-03-12 10:41:33,080 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@220289d5]
2021-03-12 10:41:33,244 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:41:33,247 [main:117] - GENERATED CALL = (((10uL downTo 1uL).reversed() step 2L)).step.toString(2037598509)
2021-03-12 10:41:33,247 [main:113] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@94f3a3c], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dda711]]
2021-03-12 10:41:33,247 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dda711]
2021-03-12 10:41:33,405 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:41:33,408 [main:117] - GENERATED CALL = (((10uL downTo 1uL).reversed() step 2L)).first.toString(-94294326)
2021-03-12 10:41:33,409 [main:114] - replacement of (((10u downTo 1u).reversed() step 2)).step.toString(-1834529392) + ", got " of type String is (((10uL downTo 1uL).reversed() step 2L)).step.toString(2037598509)
2021-03-12 10:41:33,570 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:41:33,570 [main:66] - Compilation checking started
2021-03-12 10:41:34,284 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    (HashSet<Float>(1855816031)).toArray().fill(requireNotNull<Kla7>(Kla7()), 822816294, 904928924)

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
"qzlui"
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { ((10u downTo 1u).reversed()).iterator().equals("xuxnp") }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10uL downTo 1uL).reversed() step 2L)).step.toString(2037598509) + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            Kla8().prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:41:34,287 [main:107] - replacing (this, Kla5)
2021-03-12 10:41:34,287 [main:50] - replacing this Kla5
2021-03-12 10:41:34,287 [main:54] - Getting value of type Kla5
2021-03-12 10:41:34,463 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-12 10:41:34,466 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
this.prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-12 10:41:34,466 [main:58] - GENERATED VALUE OF TYPE Kla5 = Kla5()
2021-03-12 10:41:34,466 [main:61] - GENERATED IS CALL =true
2021-03-12 10:41:36,364 [main:67] - randomType = MutableMap<Function1<ArrayList<ULong?>, Byte>, MutableMap<Function1<Sequence<UInt>, Triple<Function1<ULong, Kla5>, UByte, UByte>>, Int>>
2021-03-12 10:41:36,365 [main:106] - GETTING Kla5 from UIntProgression
2021-03-12 10:41:36,385 [main:106] - GETTING Kla5 from UIntProgression
2021-03-12 10:41:36,386 [main:106] - GETTING Kla5 from ULongProgression
2021-03-12 10:41:36,409 [main:106] - GETTING Kla5 from ULongProgression
2021-03-12 10:41:36,410 [main:106] - GETTING Kla5 from UIntProgression
2021-03-12 10:41:36,411 [main:106] - GETTING Kla5 from ULongProgression
2021-03-12 10:41:36,412 [main:106] - GETTING Kla5 from UIntProgression
2021-03-12 10:41:36,412 [main:106] - GETTING Kla5 from UIntProgression
2021-03-12 10:41:36,413 [main:106] - GETTING Kla5 from ULongProgression
2021-03-12 10:41:36,414 [main:106] - GETTING Kla5 from UIntProgression
2021-03-12 10:41:36,414 [main:106] - GETTING Kla5 from ULongProgression
2021-03-12 10:41:36,415 [main:106] - GETTING Kla5 from ULongProgression
2021-03-12 10:41:36,415 [main:114] - replacement of this of type Kla5 is Kla5()
2021-03-12 10:41:36,573 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:41:36,574 [main:66] - Compilation checking started
2021-03-12 10:41:37,306 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val uintList = mutableListOf<UInt>()
    for (i in ((10u downTo 1u).reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(9u, 6u, 3u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in ((10uL downTo 1uL).reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(9uL, 6uL, 3uL), ulongList)

    return "OK"
}

fun fu0(prope0: suspend () -> Unit) {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope0.startCoroutine(Kla4)
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope0: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope0 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu4(s: String): Kla0
}

class Kla2: Kla1 {
    override suspend fun fu4(s: String): Kla0 = fu1()
}

class Kla3(val prope4: Kla1) : Kla1 by Kla3(Kla3(Kla3(Kla2())))

fun box647(): String {
    val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
var prope3 = "FAIL"

    val prope4 = Kla2()

    fu0 {
        prope3 = Kla3(prope4).fu4(((10u downTo 1u).reversed() step 2).step.toString(-807170026)).s
    }
    (HashSet<Float>(1855816031)).toArray().fill(requireNotNull<Kla7>(Kla7()), 822816294, 904928924)

    if (prope3 != "OK") return "pjarr"

    return prope3
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
"qzlui"
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
Kla5().prope3 = runCatching<Any?>({ "nhojf"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope5 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(prope0: Continuation<*>) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
if (prope0 !is CoroutineStackFrame) error("Continuation " + prope0 + "agupc")
        prope5.clear()
        var prope9: CoroutineStackFrame? = prope0
        while (prope9 != null) {
            prope5.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu8(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { ((10u downTo 1u).reversed()).iterator().equals("xuxnp") }?.let { TODO()}
    }

    fun fu9(method: String) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope5.find { (Kla0("ibles")).s.startsWith("unyvr", true) } ?: error((((10uL downTo 1uL).reversed() step 2L)).first.toString(84607343))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope6 = 0
    var prope7 = false

    var prope8: () -> Unit = {}

    fun fu10() {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope6 = -814657635
        prope7 = (10uL downTo 1uL).isEmpty()
        prope8 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
for (i in ('褕').compareTo('?').plus(-108)..numberOfSuspensions) {
            if ((((10u downTo 1u).reversed() step 2).reversed()).equals("uehdz")) error(((10u downTo 1u).reversed() step 2).first.toString(-1815324972) + (hashMapOf<UByte, Kla9>()).size.compareTo(65))
            prope8()
        }
        if (prope6 != numberOfSuspensions)
            error((((10uL downTo 1uL).reversed() step 2L)).step.toString(2037598509) + ((10u downTo 1u)).step.xor(1023254708))
        if ((((10u downTo 1u).reversed() step 2)).equals("aqxje").xor(false)) error("Wrong state-machine generated: it is finished early")
        prope8()
        if (checkFinished && !(((10u downTo 1u).reversed() step 2).reversed()).any()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val uintList = mutableListOf<UInt>()
val ulongList = mutableListOf<ULong>()
prope2.prope8 = {
            Kla8().prope7 = (((10u downTo 1u).reversed() step 2).reversed()).equals("uktfz").not()
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:41:37,309 [main:107] - replacing (x, Function1<Ty0, Unit>)
2021-03-12 10:41:37,310 [main:50] - replacing x Function1<Ty0, Unit>
2021-03-12 10:41:37,310 [main:54] - Getting value of type Function1<Ty0, Unit>
