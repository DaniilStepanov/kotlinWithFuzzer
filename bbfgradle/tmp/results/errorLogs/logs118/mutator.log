2021-03-12 11:02:31,485 [main:66] - Compilation checking started
2021-03-12 11:02:33,371 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:02:33,379 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 11:02:33,397 [main:66] - Compilation checking started
2021-03-12 11:02:34,447 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String = "rymjv", y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}
2021-03-12 11:02:34,448 [main:50] - replacing y: S S
2021-03-12 11:02:34,448 [main:54] - Getting value of type S
2021-03-12 11:02:34,661 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:34,663 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:34,842 [main:194] - Type params = []
2021-03-12 11:02:35,003 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:35,006 [main:58] - GENERATED VALUE OF TYPE S = S("ujvmf")
2021-03-12 11:02:35,007 [main:61] - GENERATED IS CALL =true
2021-03-12 11:02:35,885 [main:67] - randomType = Set<UByte>
2021-03-12 11:02:35,901 [main:106] - GETTING S from String
2021-03-12 11:02:35,993 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 11:02:35,994 [main:66] - Compilation checking started
2021-03-12 11:02:36,764 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String = "rymjv", y: S = S("ujvmf")): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}
2021-03-12 11:02:36,767 [main:50] - replacing y: S S
2021-03-12 11:02:36,767 [main:54] - Getting value of type S
2021-03-12 11:02:36,888 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:36,888 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:37,033 [main:194] - Type params = []
2021-03-12 11:02:37,171 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:37,172 [main:58] - GENERATED VALUE OF TYPE S = S("ffvob")
2021-03-12 11:02:37,172 [main:61] - GENERATED IS CALL =true
2021-03-12 11:02:37,314 [main:67] - randomType = Long
2021-03-12 11:02:37,460 [main:302] - generating value of type = Long true depth = 0
2021-03-12 11:02:37,601 [main:106] - GETTING S from String
2021-03-12 11:02:37,655 [main:106] - GETTING S from S
2021-03-12 11:02:37,664 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:02:37,664 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:02:37,799 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:02:37,799 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:37,926 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:37,931 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:38,265 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:02:38,267 [main:95] - GENERATED = check(false)
2021-03-12 11:02:38,270 [main:117] - GENERATED CALL = (y).onEach({a: Char -> check(false)})
2021-03-12 11:02:38,270 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@6ab1e8f4]]
2021-03-12 11:02:38,270 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@6ab1e8f4]
2021-03-12 11:02:38,413 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:38,413 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:38,582 [main:194] - Type params = []
2021-03-12 11:02:38,702 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:38,704 [main:117] - GENERATED CALL = (y).plus(S("uzoum"))
2021-03-12 11:02:38,705 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:02:38,705 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:02:38,841 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:02:38,842 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:38,966 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:38,969 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:39,230 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:02:39,231 [main:95] - GENERATED = require(false)
2021-03-12 11:02:39,233 [main:117] - GENERATED CALL = (y).onEachIndexed({a: Int, b: Char -> require(false)})
2021-03-12 11:02:39,234 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 11:02:39,234 [main:66] - Compilation checking started
2021-03-12 11:02:39,559 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String = "rymjv", y: S = S("ujvmf")): S = S(x) + y

fun S.extension(y: S = (y).plus(S("uzoum"))): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:02:39,560 [main:50] - replacing val value: String String
2021-03-12 11:02:39,560 [main:54] - Getting value of type String
2021-03-12 11:02:39,681 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:02:39,682 [main:58] - GENERATED VALUE OF TYPE String = "bfpqe"
2021-03-12 11:02:39,683 [main:61] - GENERATED IS CALL =false
2021-03-12 11:02:39,687 [main:67] - randomType = S
2021-03-12 11:02:39,787 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:39,788 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:39,909 [main:194] - Type params = []
2021-03-12 11:02:40,033 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:40,042 [main:149] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]
2021-03-12 11:02:40,176 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:40,291 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:40,400 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:02:40,402 [main:78] - Generated call from random type = (S("qqjpc")).value.replaceFirst('㋀', '甒', true)
2021-03-12 11:02:40,403 [main:106] - GETTING String from S
2021-03-12 11:02:40,412 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45092f86]]
2021-03-12 11:02:40,412 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45092f86]
2021-03-12 11:02:40,536 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:02:40,538 [main:117] - GENERATED CALL = (y).value.replaceIndentByMargin(x, "xqcwb")
2021-03-12 11:02:40,538 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]]
2021-03-12 11:02:40,538 [main:149] - GENERATING call of type public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]
2021-03-12 11:02:40,632 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:40,736 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:02:40,738 [main:117] - GENERATED CALL = (y).value.substringAfterLast('ຽ', "sfkka")
2021-03-12 11:02:40,738 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:02:40,739 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:02:40,887 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:40,889 [main:117] - GENERATED CALL = (y).value.replaceAfter('浞', x, x)
2021-03-12 11:02:40,890 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]]
2021-03-12 11:02:40,890 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]
2021-03-12 11:02:41,007 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:02:41,012 [main:117] - GENERATED CALL = (y).value.removeSurrounding("fgnwk")
2021-03-12 11:02:41,012 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]]
2021-03-12 11:02:41,013 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]
2021-03-12 11:02:41,104 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:41,211 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:41,306 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:02:41,308 [main:117] - GENERATED CALL = (y).value.replace('', '昐', false)
2021-03-12 11:02:41,308 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]]
2021-03-12 11:02:41,308 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:02:41,410 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:41,411 [main:117] - GENERATED CALL = (y).value.substring(-674422715)
2021-03-12 11:02:41,412 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]]
2021-03-12 11:02:41,412 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]
2021-03-12 11:02:41,521 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:02:41,523 [main:117] - GENERATED CALL = (y).value.plus("dqzyq")
2021-03-12 11:02:41,523 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]]
2021-03-12 11:02:41,523 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]
2021-03-12 11:02:41,625 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:41,715 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:41,717 [main:117] - GENERATED CALL = (y).value.padEnd(-709670422, '쐃')
2021-03-12 11:02:41,718 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]]
2021-03-12 11:02:41,718 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]
2021-03-12 11:02:41,719 [main:117] - GENERATED CALL = (y).value.uppercase()
2021-03-12 11:02:41,719 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@741f1e49], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]]
2021-03-12 11:02:41,720 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]
2021-03-12 11:02:41,721 [main:117] - GENERATED CALL = (y).value.lowercase()
2021-03-12 11:02:41,722 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 11:02:41,722 [main:66] - Compilation checking started
2021-03-12 11:02:42,341 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String = "bfpqe") {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String = "rymjv", y: S = S("ujvmf")): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:02:42,342 [main:50] - replacing other: S S
2021-03-12 11:02:42,342 [main:54] - Getting value of type S
2021-03-12 11:02:42,441 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:42,442 [main:112] - generating klass S text = inline class S(val value: String = "bfpqe") {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:42,537 [main:194] - Type params = []
2021-03-12 11:02:42,634 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:42,635 [main:58] - GENERATED VALUE OF TYPE S = S("lrmji")
2021-03-12 11:02:42,636 [main:61] - GENERATED IS CALL =true
2021-03-12 11:02:42,637 [main:67] - randomType = C
2021-03-12 11:02:42,773 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:02:42,774 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S(y)
}
2021-03-12 11:02:42,785 [main:149] - GENERATING call of type public final fun member(x: S, y: kotlin.String): S defined in C[SimpleFunctionDescriptorImpl@626a4cfa]
2021-03-12 11:02:42,882 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:42,883 [main:112] - generating klass S text = inline class S(val value: String = "bfpqe") {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:42,977 [main:194] - Type params = []
2021-03-12 11:02:43,100 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:43,103 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:02:43,205 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:02:43,206 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:43,305 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:02:43,307 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:02:43,545 [main:302] - generating value of type = Any false depth = 4
2021-03-12 11:02:43,546 [main:95] - GENERATED = println("hgpgt")
2021-03-12 11:02:43,547 [main:78] - Generated call from random type = (C()).member(S("hojva"), value).onEachIndexed({a: Int, b: Char -> println("hgpgt")})
2021-03-12 11:02:43,548 [main:106] - GETTING S from String
2021-03-12 11:02:43,574 [main:106] - GETTING S from S
2021-03-12 11:02:43,581 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:02:43,581 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:02:43,675 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:02:43,676 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:43,789 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:43,793 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:43,991 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:02:43,992 [main:95] - GENERATED = check(false)
2021-03-12 11:02:43,993 [main:117] - GENERATED CALL = (y).onEachIndexed({a: Int, b: Char -> check(false)})
2021-03-12 11:02:43,993 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:02:43,993 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:02:44,107 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:02:44,108 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:44,246 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:44,248 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:44,450 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:02:44,450 [main:95] - GENERATED = check(true)
2021-03-12 11:02:44,451 [main:117] - GENERATED CALL = (y).onEach({a: Char -> check(true)})
2021-03-12 11:02:44,451 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@6ab1e8f4]]
2021-03-12 11:02:44,452 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@6ab1e8f4]
2021-03-12 11:02:44,452 [main:117] - GENERATED CALL = (y).plus(y)
2021-03-12 11:02:44,452 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 11:02:44,453 [main:66] - Compilation checking started
2021-03-12 11:02:44,716 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String = "bfpqe") {
    operator fun plus(other: S = y): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String = "rymjv", y: S = S("ujvmf")): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:02:44,716 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:44,717 [main:112] - generating klass S text = inline class S(val value: String = "bfpqe") {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:44,866 [main:194] - Type params = []
2021-03-12 11:02:44,968 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:44,969 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 11:02:44,970 [main:66] - Compilation checking started
2021-03-12 11:02:45,486 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String = "bfpqe") {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S = S("hpqsa"), y: String): S = x + S(y)
}

fun topLevel(x: String = "rymjv", y: S = S("ujvmf")): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:02:45,487 [main:50] - replacing y: String String
2021-03-12 11:02:45,487 [main:54] - Getting value of type String
2021-03-12 11:02:45,600 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:02:45,601 [main:58] - GENERATED VALUE OF TYPE String = "yojmk"
2021-03-12 11:02:45,602 [main:61] - GENERATED IS CALL =false
2021-03-12 11:02:45,718 [main:67] - randomType = Boolean
2021-03-12 11:02:45,821 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:02:45,832 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@130b5b00]
2021-03-12 11:02:45,917 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:02:45,918 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45075a13]
2021-03-12 11:02:46,020 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:46,022 [main:78] - Generated call from random type = (true).compareTo(true).toString(-130567872)
2021-03-12 11:02:46,022 [main:106] - GETTING String from String
2021-03-12 11:02:46,060 [main:113] - Case = [public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]]
2021-03-12 11:02:46,061 [main:149] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]
2021-03-12 11:02:46,157 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:02:46,158 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:02:46,160 [main:117] - GENERATED CALL = (value).dropWhile({a: Char -> false})
2021-03-12 11:02:46,161 [main:113] - Case = [public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]]
2021-03-12 11:02:46,161 [main:149] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]
2021-03-12 11:02:46,274 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:46,367 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:02:46,368 [main:117] - GENERATED CALL = (value).substringBeforeLast('欰', "ltsfh")
2021-03-12 11:02:46,368 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]]
2021-03-12 11:02:46,368 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]
2021-03-12 11:02:46,369 [main:117] - GENERATED CALL = (value).lowercase()
2021-03-12 11:02:46,369 [main:113] - Case = [public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]]
2021-03-12 11:02:46,369 [main:149] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]
2021-03-12 11:02:46,507 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:46,508 [main:117] - GENERATED CALL = (value).dropLast(-257918254)
2021-03-12 11:02:46,508 [main:113] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@5bd48bbb], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4aba08d5]]
2021-03-12 11:02:46,508 [main:149] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@5bd48bbb]
2021-03-12 11:02:46,591 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:46,592 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4aba08d5]
2021-03-12 11:02:46,592 [main:117] - GENERATED CALL = (value).get(1406307444).lowercase()
2021-03-12 11:02:46,593 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]]
2021-03-12 11:02:46,593 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]
2021-03-12 11:02:46,593 [main:117] - GENERATED CALL = (value).uppercase()
2021-03-12 11:02:46,593 [main:113] - Case = [public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3359ba18]]
2021-03-12 11:02:46,594 [main:149] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3359ba18]
2021-03-12 11:02:46,689 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:02:46,689 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:02:46,691 [main:117] - GENERATED CALL = (value).takeWhile({a: Char -> false})
2021-03-12 11:02:46,691 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]]
2021-03-12 11:02:46,691 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:02:46,777 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:46,778 [main:117] - GENERATED CALL = (value).substring(-1924680874)
2021-03-12 11:02:46,779 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4fbe4484]]
2021-03-12 11:02:46,779 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:02:46,861 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:46,979 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:46,981 [main:149] - GENERATING call of type public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4fbe4484]
2021-03-12 11:02:47,077 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:02:47,170 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:02:47,171 [main:117] - GENERATED CALL = (value).subSequence(-747035508, -1255485501).commonPrefixWith(StringBuilder(), false)
2021-03-12 11:02:47,172 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70fc477e]]
2021-03-12 11:02:47,172 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:02:47,259 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:47,344 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:47,345 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70fc477e]
2021-03-12 11:02:47,448 [main:302] - generating value of type = Regex false depth = 0
2021-03-12 11:02:47,543 [main:43] - GENERATING CALL OF fun Regex(pattern: kotlin.String): Regex = TODO()
2021-03-12 11:02:47,546 [main:61] - WITHOUT TYPE PARAMS = fun Regex(pattern: kotlin.String): Regex = TODO()
2021-03-12 11:02:47,721 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:02:47,722 [main:95] - GENERATED = Regex("ejkse")
2021-03-12 11:02:47,803 [main:302] - generating value of type = Function1<MatchResult, CharSequence> false depth = 0
2021-03-12 11:02:47,804 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 11:02:47,809 [main:117] - GENERATED CALL = (value).subSequence(1800268387, -2017391497).replace(Regex("ejkse"), {a: MatchResult -> "kedyq"})
2021-03-12 11:02:47,809 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 11:02:47,810 [main:66] - Compilation checking started
2021-03-12 11:02:48,419 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String = "bfpqe") {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S = S("hpqsa"), y: String = (true).compareTo(true).toString(-130567872)): S = x + S(y)
}

fun topLevel(x: String = "rymjv", y: S = S("ujvmf")): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:02:48,606 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:48,687 [main:194] - Type params = []
2021-03-12 11:02:48,788 [main:302] - generating value of type = String true depth = 1
2021-03-12 11:02:48,790 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S(y)
}
2021-03-12 11:02:49,034 [main:43] - GENERATING CALL OF fun topLevel(x: String, y: S): S = S(x) + y
2021-03-12 11:02:49,035 [main:61] - WITHOUT TYPE PARAMS = fun topLevel(x: String, y: S): S = S(x) + y
2021-03-12 11:02:49,134 [main:302] - generating value of type = String true depth = 1
2021-03-12 11:02:49,135 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:02:49,135 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:49,224 [main:194] - Type params = []
2021-03-12 11:02:49,307 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:02:49,308 [main:95] - GENERATED = topLevel("yecrq", S("yhdcy"))
2021-03-12 11:02:49,392 [main:43] - GENERATING CALL OF fun S.extension(y: S): S = this + y
2021-03-12 11:02:49,393 [main:61] - WITHOUT TYPE PARAMS = fun S.extension(y: S): S = this + y
2021-03-12 11:02:49,484 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:02:49,485 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:49,630 [main:194] - Type params = []
2021-03-12 11:02:49,735 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:02:49,736 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:02:49,737 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:49,834 [main:194] - Type params = []
2021-03-12 11:02:49,926 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:02:49,928 [main:95] - GENERATED = S("hyluf").extension(S("vqfru"))
2021-03-12 11:02:50,020 [main:43] - GENERATING CALL OF fun S.extension2(): String = value
2021-03-12 11:02:50,021 [main:61] - WITHOUT TYPE PARAMS = fun S.extension2(): String = value
2021-03-12 11:02:50,123 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:02:50,123 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:50,205 [main:194] - Type params = []
2021-03-12 11:02:50,330 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:02:50,343 [main:95] - GENERATED = S("ybpay").extension2()
2021-03-12 11:02:50,464 [main:45] - Trying to change 54 nodes
2021-03-12 11:02:50,467 [main:53] - replacing (S("i"), S)
2021-03-12 11:02:50,468 [main:50] - replacing S("i") S
2021-03-12 11:02:50,468 [main:54] - Getting value of type S
2021-03-12 11:02:50,568 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:50,569 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:50,654 [main:194] - Type params = []
2021-03-12 11:02:50,757 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:50,758 [main:58] - GENERATED VALUE OF TYPE S = S("symzc")
2021-03-12 11:02:50,758 [main:61] - GENERATED IS CALL =true
2021-03-12 11:02:50,990 [main:67] - randomType = ArrayDeque<S>
2021-03-12 11:02:51,097 [main:302] - generating value of type = ArrayDeque<S> false depth = 0
2021-03-12 11:02:51,182 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<S> = TODO()
2021-03-12 11:02:51,184 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<S> = TODO()
2021-03-12 11:02:51,354 [main:302] - generating value of type = Int true depth = 3
2021-03-12 11:02:51,355 [main:95] - GENERATED = ArrayDeque<S>(328740065)
2021-03-12 11:02:51,594 [main:149] - GENERATING call of type public final fun first(): S defined in kotlin.collections.ArrayDeque[DeserializedSimpleFunctionDescriptor@1f70e6a5]
2021-03-12 11:02:51,595 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@7fdfece5]
2021-03-12 11:02:51,596 [main:78] - Generated call from random type = (ArrayDeque<S>(328740065)).first().plus(S("dzlub").plus())
2021-03-12 11:02:51,597 [main:106] - GETTING S from String
2021-03-12 11:02:51,632 [main:106] - GETTING S from S
2021-03-12 11:02:51,640 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:02:51,640 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:02:51,725 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:02:51,725 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:51,862 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:02:51,865 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:02:52,141 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:02:52,142 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 11:02:52,142 [main:302] - generating value of type = Any false depth = 5
2021-03-12 11:02:52,143 [main:95] - GENERATED = require(true, { "xfglc"})
2021-03-12 11:02:52,144 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).onEachIndexed({a: Int, b: Char -> require(true, { "xfglc"})})
2021-03-12 11:02:52,144 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:02:52,144 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:02:52,225 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:02:52,225 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:52,309 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:02:52,311 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:02:52,656 [main:302] - generating value of type = Int true depth = 4
2021-03-12 11:02:52,657 [main:302] - generating value of type = Function1<Int, Unit> false depth = 4
2021-03-12 11:02:52,657 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 11:02:52,751 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:02:52,753 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:02:52,945 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 8
2021-03-12 11:02:52,946 [main:302] - generating value of type = Unit false depth = 9
2021-03-12 11:02:53,043 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:02:53,048 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:02:53,405 [main:302] - generating value of type = Int true depth = 12
2021-03-12 11:02:53,406 [main:302] - generating value of type = Function1<Int, Unit> false depth = 12
2021-03-12 11:02:53,406 [main:302] - generating value of type = Unit false depth = 13
2021-03-12 11:02:53,495 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:53,496 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:53,672 [main:302] - generating value of type = Boolean true depth = 16
2021-03-12 11:02:53,672 [main:385] - Cant generate call of fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:02:53,673 [main:95] - GENERATED = repeat(-311410699, {a: Int -> })
2021-03-12 11:02:53,673 [main:95] - GENERATED = contract({ repeat(-311410699, {a: Int -> })})
2021-03-12 11:02:53,674 [main:95] - GENERATED = repeat(1253971408, {a: Int -> contract({ repeat(-311410699, {a: Int -> })})})
2021-03-12 11:02:53,676 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).onEach({a: Char -> repeat(1253971408, {a: Int -> contract({ repeat(-311410699, {a: Int -> })})})})
2021-03-12 11:02:53,676 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:02:53,676 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:02:53,677 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).plus(S("dzlub").plus())
2021-03-12 11:02:53,677 [main:61] - replacement of S("i") of type S is (ArrayDeque<S>(328740065)).first().plus(S("dzlub").plus())
2021-03-12 11:02:53,765 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:02:53,765 [main:66] - Compilation checking started
2021-03-12 11:02:54,052 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call((ArrayDeque<S>(328740065)).first().plus(S("dzlub").plus()), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:02:54,054 [main:53] - replacing (S("_"), S)
2021-03-12 11:02:54,054 [main:50] - replacing S("_") S
2021-03-12 11:02:54,054 [main:54] - Getting value of type S
2021-03-12 11:02:54,156 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:54,156 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:54,266 [main:194] - Type params = []
2021-03-12 11:02:54,360 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:54,361 [main:58] - GENERATED VALUE OF TYPE S = S("vhrvx")
2021-03-12 11:02:54,361 [main:61] - GENERATED IS CALL =true
2021-03-12 11:02:54,364 [main:67] - randomType = S
2021-03-12 11:02:54,458 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:54,459 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:54,568 [main:194] - Type params = []
2021-03-12 11:02:54,649 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:54,657 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:02:54,738 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:02:54,739 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:54,820 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:02:54,821 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:02:55,030 [main:302] - generating value of type = Any false depth = 4
2021-03-12 11:02:55,030 [main:95] - GENERATED = println("ifzje")
2021-03-12 11:02:55,031 [main:78] - Generated call from random type = (S("vfrkp")).onEach({a: Char -> println("ifzje")})
2021-03-12 11:02:55,031 [main:106] - GETTING S from S
2021-03-12 11:02:55,038 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:02:55,039 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:02:55,118 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:02:55,119 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:55,201 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:02:55,203 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:02:55,368 [main:302] - generating value of type = Any false depth = 4
2021-03-12 11:02:55,368 [main:95] - GENERATED = println("xoswl")
2021-03-12 11:02:55,369 [main:117] - GENERATED CALL = (C().member()).onEachIndexed({a: Int, b: Char -> println("xoswl")})
2021-03-12 11:02:55,369 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:02:55,369 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:02:55,447 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:55,447 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:55,530 [main:194] - Type params = []
2021-03-12 11:02:55,609 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:55,610 [main:117] - GENERATED CALL = (C().member()).plus(S("wgvdx"))
2021-03-12 11:02:55,610 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:02:55,610 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:02:55,687 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:02:55,688 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:02:55,795 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:02:55,797 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:02:56,078 [main:302] - generating value of type = Any false depth = 4
2021-03-12 11:02:56,079 [main:95] - GENERATED = println("bfpgu")
2021-03-12 11:02:56,080 [main:117] - GENERATED CALL = (C().member()).onEach({a: Char -> println("bfpgu")})
2021-03-12 11:02:56,080 [main:61] - replacement of S("_") of type S is (C().member()).plus(S("wgvdx"))
2021-03-12 11:02:56,204 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:02:56,205 [main:66] - Compilation checking started
2021-03-12 11:02:56,424 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", (C().member()).plus(S("wgvdx"))::extension2.call())

    return "OK"
}


2021-03-12 11:02:56,426 [main:53] - replacing (y, String)
2021-03-12 11:02:56,426 [main:50] - replacing y String
2021-03-12 11:02:56,426 [main:54] - Getting value of type String
2021-03-12 11:02:56,591 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:02:56,592 [main:58] - GENERATED VALUE OF TYPE String = "tmqhw"
2021-03-12 11:02:56,592 [main:61] - GENERATED IS CALL =false
2021-03-12 11:02:56,595 [main:67] - randomType = S
2021-03-12 11:02:56,705 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:02:56,706 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:02:56,808 [main:194] - Type params = []
2021-03-12 11:02:56,903 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:02:56,912 [main:149] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@79f017f]
2021-03-12 11:02:57,007 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:57,008 [main:78] - Generated call from random type = (S("zknix")).value.takeLast(-1531904991)
2021-03-12 11:02:57,010 [main:106] - GETTING String from S
2021-03-12 11:02:57,021 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]]
2021-03-12 11:02:57,021 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]
2021-03-12 11:02:57,134 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:02:57,135 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.concat("ysfun")
2021-03-12 11:02:57,135 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19492f9c]]
2021-03-12 11:02:57,136 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19492f9c]
2021-03-12 11:02:57,237 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:57,341 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:57,461 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:02:57,470 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.replaceRange(-433003728, -1109829196, StringBuilder())
2021-03-12 11:02:57,471 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a5e6480]]
2021-03-12 11:02:57,471 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a5e6480]
2021-03-12 11:02:57,472 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.reversed()
2021-03-12 11:02:57,472 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]]
2021-03-12 11:02:57,472 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]
2021-03-12 11:02:57,473 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.uppercase()
2021-03-12 11:02:57,473 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]]
2021-03-12 11:02:57,473 [main:149] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]
2021-03-12 11:02:57,579 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:02:57,580 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:02:57,581 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true})
2021-03-12 11:02:57,581 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]]
2021-03-12 11:02:57,582 [main:149] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]
2021-03-12 11:02:57,582 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.trimIndent()
2021-03-12 11:02:57,582 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]]
2021-03-12 11:02:57,582 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]
2021-03-12 11:02:57,583 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.replaceIndent(S("ybpay").extension2())
2021-03-12 11:02:57,583 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e1307a9]]
2021-03-12 11:02:57,583 [main:149] - GENERATING call of type public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e1307a9]
2021-03-12 11:02:57,690 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:57,691 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.substringAfter('⵳', S("dzlub").value)
2021-03-12 11:02:57,692 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]]
2021-03-12 11:02:57,692 [main:149] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]
2021-03-12 11:02:57,799 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:02:57,906 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:57,907 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.padStart(650378282, '?')
2021-03-12 11:02:57,908 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]]
2021-03-12 11:02:57,908 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]
2021-03-12 11:02:57,910 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.lowercase()
2021-03-12 11:02:57,910 [main:61] - replacement of y of type String is (S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true})
2021-03-12 11:02:58,021 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:02:58,022 [main:66] - Compilation checking started
2021-03-12 11:02:58,589 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:02:58,592 [main:53] - replacing ("ij", String)
2021-03-12 11:02:58,592 [main:50] - replacing "ij" String
2021-03-12 11:02:58,592 [main:54] - Getting value of type String
2021-03-12 11:02:58,703 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:02:58,704 [main:58] - GENERATED VALUE OF TYPE String = "nigoi"
2021-03-12 11:02:58,704 [main:61] - GENERATED IS CALL =false
2021-03-12 11:02:58,834 [main:67] - randomType = Short
2021-03-12 11:02:58,975 [main:302] - generating value of type = Short true depth = 0
2021-03-12 11:02:59,070 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@738607d9]
2021-03-12 11:02:59,071 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4aba08d5]
2021-03-12 11:02:59,072 [main:78] - Generated call from random type = (22753).toChar().lowercase()
2021-03-12 11:02:59,073 [main:106] - GETTING String from S
2021-03-12 11:02:59,084 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]]
2021-03-12 11:02:59,085 [main:149] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]
2021-03-12 11:02:59,198 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:02:59,303 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 11:02:59,305 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 11:02:59,568 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 11:02:59,575 [main:95] - GENERATED = StringBuilder("afavj")
2021-03-12 11:02:59,576 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.removeSuffix(StringBuilder("afavj"))
2021-03-12 11:02:59,577 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]]
2021-03-12 11:02:59,577 [main:149] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]
2021-03-12 11:02:59,696 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:59,802 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:59,895 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:02:59,896 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.replaceFirst('鵵', '窙', false)
2021-03-12 11:02:59,897 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]]
2021-03-12 11:02:59,897 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]
2021-03-12 11:02:59,897 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.concat(S("ybpay").extension2())
2021-03-12 11:02:59,897 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58]]
2021-03-12 11:02:59,898 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value
2021-03-12 11:02:59,898 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]]
2021-03-12 11:02:59,898 [main:149] - GENERATING call of type public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]
2021-03-12 11:02:59,983 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:02:59,984 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.replaceBeforeLast('㯗', S("dzlub").value, S("dzlub").value)
2021-03-12 11:02:59,984 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]]
2021-03-12 11:02:59,984 [main:149] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]
2021-03-12 11:03:00,094 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:00,100 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.removePrefix(StringBuilder())
2021-03-12 11:03:00,100 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]]
2021-03-12 11:03:00,101 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:03:00,199 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:00,200 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.substring(-1520828895)
2021-03-12 11:03:00,201 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]]
2021-03-12 11:03:00,201 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]
2021-03-12 11:03:00,297 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 11:03:00,401 [main:43] - GENERATING CALL OF fun <E> buildSet(builderAction: kotlin.collections.MutableSet<Int>.()->kotlin.Unit): Iterable<Int> = TODO()
2021-03-12 11:03:00,404 [main:61] - WITHOUT TYPE PARAMS = fun <E> buildSet(builderAction: kotlin.collections.MutableSet<Int>.()->kotlin.Unit): Iterable<Int> = TODO()
2021-03-12 11:03:00,683 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<MutableSet<Int>, Unit> false depth = 3
2021-03-12 11:03:00,684 [main:302] - generating value of type = Unit false depth = 4
2021-03-12 11:03:00,790 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:03:00,792 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:03:01,080 [main:302] - generating value of type = Any false depth = 7
2021-03-12 11:03:01,081 [main:95] - GENERATED = println("vlayo")
2021-03-12 11:03:01,082 [main:95] - GENERATED = buildSet<Int>({ println("vlayo")})
2021-03-12 11:03:01,083 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.slice(buildSet<Int>({ println("vlayo")}))
2021-03-12 11:03:01,083 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]]
2021-03-12 11:03:01,083 [main:149] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]
2021-03-12 11:03:01,179 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:01,273 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:01,274 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.substringBefore('竃', "fgjhq")
2021-03-12 11:03:01,275 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]]
2021-03-12 11:03:01,275 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]
2021-03-12 11:03:01,365 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:01,460 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:01,462 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.padEnd(-1348913578, '犤')
2021-03-12 11:03:01,462 [main:61] - replacement of "ij" of type String is "nigoi"
2021-03-12 11:03:01,552 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 11:03:01,553 [main:66] - Compilation checking started
2021-03-12 11:03:02,009 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:02,011 [main:53] - replacing ("cd", String)
2021-03-12 11:03:02,012 [main:50] - replacing "cd" String
2021-03-12 11:03:02,012 [main:54] - Getting value of type String
2021-03-12 11:03:02,134 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:02,135 [main:58] - GENERATED VALUE OF TYPE String = "prmsc"
2021-03-12 11:03:02,135 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:02,137 [main:67] - randomType = C
2021-03-12 11:03:02,235 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:02,236 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:02,246 [main:149] - GENERATING call of type public final fun member(x: S, y: kotlin.String): S defined in C[SimpleFunctionDescriptorImpl@e7cd435]
2021-03-12 11:03:02,247 [main:78] - Generated call from random type = (C()).member(S("hyluf").extension(S("vqfru")), S("dzlub").value).value
2021-03-12 11:03:02,247 [main:106] - GETTING String from String
2021-03-12 11:03:02,279 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]]
2021-03-12 11:03:02,280 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]
2021-03-12 11:03:02,280 [main:117] - GENERATED CALL = (S("dzlub").value).trimEnd()
2021-03-12 11:03:02,280 [main:113] - Case = [public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:03:02,280 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:03:02,379 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:02,482 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:02,484 [main:117] - GENERATED CALL = (S("dzlub").value).replaceAfter('쭐', S("dzlub").value, "adqbg")
2021-03-12 11:03:02,485 [main:113] - Case = [public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]]
2021-03-12 11:03:02,485 [main:149] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]
2021-03-12 11:03:02,485 [main:117] - GENERATED CALL = (S("dzlub").value).trimIndent()
2021-03-12 11:03:02,485 [main:113] - Case = [public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]]
2021-03-12 11:03:02,485 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]
2021-03-12 11:03:02,573 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:02,578 [main:117] - GENERATED CALL = (S("dzlub").value).removeSurrounding("cwarj")
2021-03-12 11:03:02,578 [main:113] - Case = [public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@680719d6]]
2021-03-12 11:03:02,578 [main:149] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@680719d6]
2021-03-12 11:03:02,686 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:02,789 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:02,791 [main:117] - GENERATED CALL = (S("dzlub").value).replaceBefore('跖', S("ybpay").extension2(), "kpnhk")
2021-03-12 11:03:02,791 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]]
2021-03-12 11:03:02,792 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]
2021-03-12 11:03:02,793 [main:117] - GENERATED CALL = (S("dzlub").value).concat(S("ybpay").extension2())
2021-03-12 11:03:02,793 [main:113] - Case = [public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]]
2021-03-12 11:03:02,793 [main:149] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]
2021-03-12 11:03:02,905 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:02,907 [main:117] - GENERATED CALL = (S("dzlub").value).substringBeforeLast('੾', S("ybpay").extension2())
2021-03-12 11:03:02,907 [main:113] - Case = [public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]]
2021-03-12 11:03:02,907 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]
2021-03-12 11:03:03,025 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:03,124 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:03,126 [main:117] - GENERATED CALL = (S("dzlub").value).padEnd(984967812, '㏑')
2021-03-12 11:03:03,126 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], public fun kotlin.CharSequence.repeat(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53903bc9]]
2021-03-12 11:03:03,126 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:03,218 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:03,310 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:03,311 [main:149] - GENERATING call of type public fun kotlin.CharSequence.repeat(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53903bc9]
2021-03-12 11:03:03,391 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:03,392 [main:117] - GENERATED CALL = (S("dzlub").value).subSequence(390621747, -889684857).repeat(-532811480)
2021-03-12 11:03:03,392 [main:113] - Case = [public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]]
2021-03-12 11:03:03,392 [main:149] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]
2021-03-12 11:03:03,392 [main:117] - GENERATED CALL = (S("dzlub").value).decapitalize()
2021-03-12 11:03:03,393 [main:61] - replacement of "cd" of type String is (S("dzlub").value).padEnd(984967812, '㏑')
2021-03-12 11:03:03,472 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:03,472 [main:66] - Compilation checking started
2021-03-12 11:03:03,884 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:03,885 [main:53] - replacing (other.value, String)
2021-03-12 11:03:03,885 [main:50] - replacing other.value String
2021-03-12 11:03:03,885 [main:54] - Getting value of type String
2021-03-12 11:03:03,972 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:03,972 [main:58] - GENERATED VALUE OF TYPE String = "crkqn"
2021-03-12 11:03:03,973 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:04,068 [main:67] - randomType = Int
2021-03-12 11:03:04,152 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:04,225 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@4b6194b5]
2021-03-12 11:03:04,322 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:04,323 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45075a13]
2021-03-12 11:03:04,416 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:04,418 [main:78] - Generated call from random type = (780384826).compareTo(1809321162).toString(-877543137)
2021-03-12 11:03:04,418 [main:106] - GETTING String from String
2021-03-12 11:03:04,454 [main:113] - Case = [public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]]
2021-03-12 11:03:04,455 [main:149] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]
2021-03-12 11:03:04,555 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:04,655 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:04,758 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:04,759 [main:117] - GENERATED CALL = (S("ybpay").extension2()).replaceFirst('랩', '笮', false)
2021-03-12 11:03:04,759 [main:113] - Case = [public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]]
2021-03-12 11:03:04,760 [main:149] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]
2021-03-12 11:03:04,904 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:04,912 [main:117] - GENERATED CALL = (S("ybpay").extension2()).removePrefix("vevdy")
2021-03-12 11:03:04,912 [main:113] - Case = [public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@680719d6]]
2021-03-12 11:03:04,912 [main:149] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@680719d6]
2021-03-12 11:03:05,058 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:05,060 [main:117] - GENERATED CALL = (S("ybpay").extension2()).replaceBefore('㘽', S("ybpay").extension2(), S("dzlub").value)
2021-03-12 11:03:05,061 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70fc477e]]
2021-03-12 11:03:05,061 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:05,158 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:05,248 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:05,249 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70fc477e]
2021-03-12 11:03:05,337 [main:302] - generating value of type = Regex false depth = 0
2021-03-12 11:03:05,437 [main:43] - GENERATING CALL OF fun Regex(pattern: kotlin.String, options: kotlin.collections.Set<kotlin.text.RegexOption>): Regex = TODO()
2021-03-12 11:03:05,439 [main:61] - WITHOUT TYPE PARAMS = fun Regex(pattern: kotlin.String, options: kotlin.collections.Set<kotlin.text.RegexOption>): Regex = TODO()
2021-03-12 11:03:05,773 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:03:05,774 [main:302] - generating value of type = Set<RegexOption> false depth = 3
2021-03-12 11:03:05,861 [main:43] - GENERATING CALL OF fun <T> hashSetOf(): Set<RegexOption> = TODO()
2021-03-12 11:03:05,862 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(): Set<RegexOption> = TODO()
2021-03-12 11:03:05,947 [main:95] - GENERATED = hashSetOf<RegexOption>()
2021-03-12 11:03:05,947 [main:95] - GENERATED = Regex("dqzwo", hashSetOf<RegexOption>())
2021-03-12 11:03:06,025 [main:302] - generating value of type = Function1<MatchResult, CharSequence> false depth = 0
2021-03-12 11:03:06,026 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 11:03:06,107 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:06,109 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:06,290 [main:302] - generating value of type = String true depth = 4
2021-03-12 11:03:06,291 [main:95] - GENERATED = StringBuilder("ohsjv")
2021-03-12 11:03:06,292 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(1839977662, -769118273).replace(Regex("dqzwo", hashSetOf<RegexOption>()), {a: MatchResult -> StringBuilder("ohsjv")})
2021-03-12 11:03:06,292 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replaceFirst(regex: kotlin.text.Regex, replacement: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@483c742f]]
2021-03-12 11:03:06,292 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:06,372 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:06,455 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:06,457 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replaceFirst(regex: kotlin.text.Regex, replacement: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@483c742f]
2021-03-12 11:03:06,545 [main:302] - generating value of type = Regex false depth = 0
2021-03-12 11:03:06,664 [main:43] - GENERATING CALL OF fun Regex(pattern: kotlin.String): Regex = TODO()
2021-03-12 11:03:06,666 [main:61] - WITHOUT TYPE PARAMS = fun Regex(pattern: kotlin.String): Regex = TODO()
2021-03-12 11:03:06,894 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:03:06,895 [main:95] - GENERATED = Regex("rqxdm")
2021-03-12 11:03:06,895 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(1297944320, -60788028).replaceFirst(Regex("rqxdm"), S("dzlub").value)
2021-03-12 11:03:06,895 [main:113] - Case = [public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4fbe4484]]
2021-03-12 11:03:06,895 [main:149] - GENERATING call of type public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4fbe4484]
2021-03-12 11:03:06,993 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:07,086 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 11:03:07,088 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 11:03:07,314 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 11:03:07,318 [main:95] - GENERATED = StringBuilder(StringBuilder())
2021-03-12 11:03:07,408 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:07,409 [main:117] - GENERATED CALL = (S("ybpay").extension2()).commonPrefixWith(StringBuilder(StringBuilder()), false)
2021-03-12 11:03:07,409 [main:113] - Case = [public fun kotlin.CharSequence.repeat(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53903bc9]]
2021-03-12 11:03:07,410 [main:149] - GENERATING call of type public fun kotlin.CharSequence.repeat(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53903bc9]
2021-03-12 11:03:07,515 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:07,517 [main:117] - GENERATED CALL = (S("ybpay").extension2()).repeat(-1341663716)
2021-03-12 11:03:07,517 [main:113] - Case = [public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]]
2021-03-12 11:03:07,517 [main:149] - GENERATING call of type public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]
2021-03-12 11:03:07,611 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:07,612 [main:117] - GENERATED CALL = (S("ybpay").extension2()).substringAfterLast('韎', S("dzlub").value)
2021-03-12 11:03:07,612 [main:113] - Case = [public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:03:07,612 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:03:07,700 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:07,780 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:07,782 [main:117] - GENERATED CALL = (S("ybpay").extension2()).replaceAfter('罎', S("dzlub").value, "ikdlc")
2021-03-12 11:03:07,782 [main:113] - Case = [public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]]
2021-03-12 11:03:07,782 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]
2021-03-12 11:03:07,881 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:03:07,882 [main:117] - GENERATED CALL = (S("ybpay").extension2()).plus("iwwzz")
2021-03-12 11:03:07,882 [main:61] - replacement of other.value of type String is (S("ybpay").extension2()).plus("iwwzz")
2021-03-12 11:03:07,973 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:07,973 [main:66] - Compilation checking started
2021-03-12 11:03:08,336 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:08,337 [main:53] - replacing (other.value, String)
2021-03-12 11:03:08,337 [main:50] - replacing other.value String
2021-03-12 11:03:08,337 [main:54] - Getting value of type String
2021-03-12 11:03:08,463 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:08,464 [main:58] - GENERATED VALUE OF TYPE String = "miuaj"
2021-03-12 11:03:08,464 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:08,466 [main:67] - randomType = C
2021-03-12 11:03:08,560 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:08,560 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:08,570 [main:149] - GENERATING call of type public final fun member(x: S, y: kotlin.String): S defined in C[SimpleFunctionDescriptorImpl@920b5f6]
2021-03-12 11:03:08,684 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:08,686 [main:78] - Generated call from random type = (C()).member(S("dzlub").plus(), "kuctw").value
2021-03-12 11:03:08,687 [main:106] - GETTING String from S
2021-03-12 11:03:08,695 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]]
2021-03-12 11:03:08,695 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]
2021-03-12 11:03:08,794 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:08,884 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:08,885 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.removeRange(-1540591964, -311332832)
2021-03-12 11:03:08,885 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]]
2021-03-12 11:03:08,886 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]
2021-03-12 11:03:08,886 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.concat(S("dzlub").value)
2021-03-12 11:03:08,886 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]]
2021-03-12 11:03:08,886 [main:149] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]
2021-03-12 11:03:08,983 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:08,984 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.substringBefore('', S("dzlub").value)
2021-03-12 11:03:08,984 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]]
2021-03-12 11:03:08,984 [main:149] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]
2021-03-12 11:03:08,984 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.decapitalize()
2021-03-12 11:03:08,984 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@79f017f]]
2021-03-12 11:03:08,984 [main:149] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@79f017f]
2021-03-12 11:03:09,074 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:09,075 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.takeLast(-1788592875)
2021-03-12 11:03:09,075 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]]
2021-03-12 11:03:09,076 [main:149] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]
2021-03-12 11:03:09,175 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:09,176 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.substringBeforeLast('赾', S("dzlub").value)
2021-03-12 11:03:09,176 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]]
2021-03-12 11:03:09,176 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]
2021-03-12 11:03:09,177 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.trimStart()
2021-03-12 11:03:09,177 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45092f86]]
2021-03-12 11:03:09,177 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45092f86]
2021-03-12 11:03:09,177 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.replaceIndentByMargin(S("ybpay").extension2(), S("ybpay").extension2())
2021-03-12 11:03:09,177 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3359ba18]]
2021-03-12 11:03:09,177 [main:149] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3359ba18]
2021-03-12 11:03:09,269 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:09,270 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:09,271 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.takeWhile({a: Char -> false})
2021-03-12 11:03:09,271 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]]
2021-03-12 11:03:09,271 [main:149] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]
2021-03-12 11:03:09,394 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:09,395 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:09,397 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.dropLastWhile({a: Char -> false})
2021-03-12 11:03:09,397 [main:61] - replacement of other.value of type String is (S("dzlub").plus()).value.decapitalize()
2021-03-12 11:03:09,522 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:09,523 [main:53] - replacing (C(), C)
2021-03-12 11:03:09,524 [main:50] - replacing C() C
2021-03-12 11:03:09,524 [main:54] - Getting value of type C
2021-03-12 11:03:09,627 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:09,628 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:09,628 [main:58] - GENERATED VALUE OF TYPE C = C()
2021-03-12 11:03:09,628 [main:61] - GENERATED IS CALL =true
2021-03-12 11:03:09,630 [main:67] - randomType = S
2021-03-12 11:03:09,769 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:09,770 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:09,914 [main:194] - Type params = []
2021-03-12 11:03:10,007 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:10,017 [main:106] - GETTING C from String
2021-03-12 11:03:10,045 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], public inline fun <R : kotlin.Any, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapIndexedNotNullTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> R?): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@683b27ff]]
2021-03-12 11:03:10,046 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:10,128 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:10,227 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:10,228 [main:149] - GENERATING call of type public inline fun <R : kotlin.Any, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapIndexedNotNullTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> R?): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@683b27ff]
2021-03-12 11:03:10,316 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:10,316 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:10,399 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, R?> false depth = 0
2021-03-12 11:03:10,400 [main:302] - generating value of type = R false depth = 1
2021-03-12 11:03:10,518 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->C): R = TODO()
2021-03-12 11:03:10,520 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->C): R = TODO()
2021-03-12 11:03:10,834 [main:302] - generating value of type = Any false depth = 4
2021-03-12 11:03:10,835 [main:302] - generating value of type = Function0<C> false depth = 4
2021-03-12 11:03:10,835 [main:302] - generating value of type = C false depth = 5
2021-03-12 11:03:10,836 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:10,836 [main:95] - GENERATED = synchronized<C>("fajhx", { C()})
2021-03-12 11:03:10,837 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(-336418415, -1034908046).mapIndexedNotNullTo(C(), {a: Int, b: Char -> synchronized<C>("fajhx", { C()})})
2021-03-12 11:03:10,837 [main:113] - Case = [public inline fun <R : kotlin.Any, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapIndexedNotNullTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> R?): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@683b27ff]]
2021-03-12 11:03:10,837 [main:149] - GENERATING call of type public inline fun <R : kotlin.Any, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapIndexedNotNullTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> R?): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@683b27ff]
2021-03-12 11:03:10,919 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:10,920 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:11,012 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, R?> false depth = 0
2021-03-12 11:03:11,013 [main:302] - generating value of type = R false depth = 1
2021-03-12 11:03:11,402 [main:43] - GENERATING CALL OF fun <T, R> with(receiver: UInt?, block: T.()->UByte): R = TODO()
2021-03-12 11:03:11,404 [main:61] - WITHOUT TYPE PARAMS = fun <T, R> with(receiver: UInt?, block: T.()->UByte): R = TODO()
2021-03-12 11:03:11,800 [main:302] - generating value of type = UInt true depth = 4
2021-03-12 11:03:11,801 [main:385] - Cant generate call of fun <T, R> with(receiver: UInt?, block: T.()->UByte): R = TODO()
2021-03-12 11:03:11,802 [main:117] - GENERATED CALL = (S("ybpay").extension2()).mapIndexedNotNullTo(C(), {a: Int, b: Char -> })
2021-03-12 11:03:11,802 [main:113] - Case = [public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapTo(destination: C, transform: (kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1711881d]]
2021-03-12 11:03:11,802 [main:149] - GENERATING call of type public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapTo(destination: C, transform: (kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1711881d]
2021-03-12 11:03:11,887 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:11,888 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:12,012 [main:302] - generating value of type = Function1<Char, R> false depth = 0
2021-03-12 11:03:12,013 [main:302] - generating value of type = R false depth = 1
2021-03-12 11:03:12,455 [main:43] - GENERATING CALL OF fun <R> run(block: ()->Array<Pair<String, S>>): R = TODO()
2021-03-12 11:03:12,457 [main:61] - WITHOUT TYPE PARAMS = fun <R> run(block: ()->Array<Pair<String, S>>): R = TODO()
2021-03-12 11:03:12,689 [main:302] - generating value of type = Function0<Array<Pair<String, S>>> false depth = 4
2021-03-12 11:03:12,690 [main:302] - generating value of type = Array<Pair<String, S>> false depth = 5
2021-03-12 11:03:12,812 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Pair<Strg, S>> = TODO()
2021-03-12 11:03:12,816 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Pair<Strg, S>> = TODO()
2021-03-12 11:03:12,936 [main:95] - GENERATED = enumValues<Pair<String, S>>()
2021-03-12 11:03:12,937 [main:95] - GENERATED = run<Array<Pair<String, S>>>({ enumValues<Pair<String, S>>()})
2021-03-12 11:03:12,937 [main:117] - GENERATED CALL = (S("ybpay").extension2()).mapTo(C(), {a: Char -> run<Array<Pair<String, S>>>({ enumValues<Pair<String, S>>()})})
2021-03-12 11:03:12,938 [main:113] - Case = [public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapIndexedTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32d5630d]]
2021-03-12 11:03:12,938 [main:149] - GENERATING call of type public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapIndexedTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32d5630d]
2021-03-12 11:03:13,042 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:13,043 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:13,163 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, R> false depth = 0
2021-03-12 11:03:13,164 [main:302] - generating value of type = R false depth = 1
2021-03-12 11:03:13,669 [main:43] - GENERATING CALL OF fun <T, R> with(receiver: S?, block: T.()->Triple<S?, ULong, Boolean>): R = TODO()
2021-03-12 11:03:13,671 [main:61] - WITHOUT TYPE PARAMS = fun <T, R> with(receiver: S?, block: T.()->Triple<S?, ULong, Boolean>): R = TODO()
2021-03-12 11:03:13,922 [main:302] - generating value of type = S false depth = 4
2021-03-12 11:03:13,923 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:14,019 [main:194] - Type params = []
2021-03-12 11:03:14,108 [main:302] - generating value of type = String true depth = 6
2021-03-12 11:03:14,110 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<T, Triple<S?, ULong, Boolean>> false depth = 4
2021-03-12 11:03:14,110 [main:302] - generating value of type = Triple<S?, ULong, Boolean> false depth = 5
2021-03-12 11:03:14,219 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: S?, second: ULong, third: Boolean): Triple<S?, ULong, Boolean> = TODO()
2021-03-12 11:03:14,221 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: S?, second: ULong, third: Boolean): Triple<S?, ULong, Boolean> = TODO()
2021-03-12 11:03:14,316 [main:302] - generating value of type = S false depth = 8
2021-03-12 11:03:14,317 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:14,399 [main:194] - Type params = []
2021-03-12 11:03:14,499 [main:302] - generating value of type = String true depth = 10
2021-03-12 11:03:14,500 [main:302] - generating value of type = ULong true depth = 8
2021-03-12 11:03:14,500 [main:302] - generating value of type = Boolean true depth = 8
2021-03-12 11:03:14,501 [main:95] - GENERATED = Triple<S?, ULong, Boolean>(S("bekiz"), 2010445962070318155.toULong(), true)
2021-03-12 11:03:14,501 [main:95] - GENERATED = with<S?, Triple<S?, ULong, Boolean>>(S("tipde"), { Triple<S?, ULong, Boolean>(S("bekiz"), 2010445962070318155.toULong(), true)})
2021-03-12 11:03:14,502 [main:117] - GENERATED CALL = (S("ybpay").extension2()).mapIndexedTo(C(), {a: Int, b: Char -> with<S?, Triple<S?, ULong, Boolean>>(S("tipde"), { Triple<S?, ULong, Boolean>(S("bekiz"), 2010445962070318155.toULong(), true)})})
2021-03-12 11:03:14,503 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], public inline fun <C : kotlin.text.Appendable> kotlin.CharSequence.filterTo(destination: C, predicate: (kotlin.Char) -> kotlin.Boolean): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@518aa85f]]
2021-03-12 11:03:14,503 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:14,592 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:14,673 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:14,674 [main:149] - GENERATING call of type public inline fun <C : kotlin.text.Appendable> kotlin.CharSequence.filterTo(destination: C, predicate: (kotlin.Char) -> kotlin.Boolean): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@518aa85f]
2021-03-12 11:03:14,775 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:14,775 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:14,872 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:14,873 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:14,874 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(1634779720, 1444840037).filterTo(C(), {a: Char -> true})
2021-03-12 11:03:14,874 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapTo(destination: C, transform: (kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1711881d]]
2021-03-12 11:03:14,874 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:14,952 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:15,046 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:15,047 [main:149] - GENERATING call of type public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapTo(destination: C, transform: (kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1711881d]
2021-03-12 11:03:15,141 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:15,142 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:15,225 [main:302] - generating value of type = Function1<Char, R> false depth = 0
2021-03-12 11:03:15,226 [main:302] - generating value of type = R false depth = 1
2021-03-12 11:03:15,633 [main:43] - GENERATING CALL OF fun <T, R> with(receiver: C?, block: T.()->Function1<ArrayList<C>, Char>): R = TODO()
2021-03-12 11:03:15,634 [main:61] - WITHOUT TYPE PARAMS = fun <T, R> with(receiver: C?, block: T.()->Function1<ArrayList<C>, Char>): R = TODO()
2021-03-12 11:03:15,814 [main:302] - generating value of type = C false depth = 4
2021-03-12 11:03:15,814 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:15,815 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<T, Function1<ArrayList<C>, Char>> false depth = 4
2021-03-12 11:03:15,815 [main:302] - generating value of type = Function1<ArrayList<C>, Char> false depth = 5
2021-03-12 11:03:15,816 [main:302] - generating value of type = Char true depth = 6
2021-03-12 11:03:15,817 [main:95] - GENERATED = with<C?, Function1<ArrayList<C>, Char>>(C(), { {a: ArrayList<C> -> '팆'}})
2021-03-12 11:03:15,817 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(952761781, -828152920).mapTo(C(), {a: Char -> with<C?, Function1<ArrayList<C>, Char>>(C(), { {a: ArrayList<C> -> '팆'}})})
2021-03-12 11:03:15,818 [main:113] - Case = [public inline fun <C : kotlin.text.Appendable> kotlin.CharSequence.filterTo(destination: C, predicate: (kotlin.Char) -> kotlin.Boolean): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@518aa85f]]
2021-03-12 11:03:15,818 [main:149] - GENERATING call of type public inline fun <C : kotlin.text.Appendable> kotlin.CharSequence.filterTo(destination: C, predicate: (kotlin.Char) -> kotlin.Boolean): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@518aa85f]
2021-03-12 11:03:15,907 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:15,908 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:16,011 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:16,011 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:16,012 [main:117] - GENERATED CALL = (S("ybpay").extension2()).filterTo(C(), {a: Char -> true})
2021-03-12 11:03:16,013 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], public fun <C : kotlin.collections.MutableCollection<in kotlin.Char>> kotlin.CharSequence.toCollection(destination: C): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a60586d]]
2021-03-12 11:03:16,013 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:16,109 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:16,212 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:16,212 [main:149] - GENERATING call of type public fun <C : kotlin.collections.MutableCollection<in kotlin.Char>> kotlin.CharSequence.toCollection(destination: C): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a60586d]
2021-03-12 11:03:16,309 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:16,309 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:16,310 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(246963595, -410669721).toCollection(C())
2021-03-12 11:03:16,310 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.flatMapIndexedTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> kotlin.collections.Iterable<R>): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@639358f4]]
2021-03-12 11:03:16,310 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:16,391 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:16,494 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:16,495 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.flatMapIndexedTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> kotlin.collections.Iterable<R>): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@639358f4]
2021-03-12 11:03:16,605 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:16,605 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:16,693 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Iterable<R>> false depth = 0
2021-03-12 11:03:16,694 [main:302] - generating value of type = Iterable<R> false depth = 1
2021-03-12 11:03:16,830 [main:43] - GENERATING CALL OF fun <T> setOf(element: R): Iterable<R> = TODO()
2021-03-12 11:03:16,832 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOf(element: R): Iterable<R> = TODO()
2021-03-12 11:03:17,108 [main:302] - generating value of type = R false depth = 4
2021-03-12 11:03:17,308 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->UShort): R = TODO()
2021-03-12 11:03:17,309 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->UShort): R = TODO()
2021-03-12 11:03:17,596 [main:302] - generating value of type = Any false depth = 7
2021-03-12 11:03:17,597 [main:302] - generating value of type = Function0<UShort> false depth = 7
2021-03-12 11:03:17,597 [main:302] - generating value of type = UShort true depth = 8
2021-03-12 11:03:17,598 [main:95] - GENERATED = synchronized<UShort>("xntsa", { 1666.toUShort()})
2021-03-12 11:03:17,598 [main:95] - GENERATED = setOf<R>(synchronized<UShort>("xntsa", { 1666.toUShort()}))
2021-03-12 11:03:17,599 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(58357360, -507399385).flatMapIndexedTo(C(), {a: Int, b: Char -> setOf<R>(synchronized<UShort>("xntsa", { 1666.toUShort()}))})
2021-03-12 11:03:17,599 [main:113] - Case = [public fun <C : kotlin.collections.MutableCollection<in kotlin.Char>> kotlin.CharSequence.toCollection(destination: C): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a60586d]]
2021-03-12 11:03:17,599 [main:149] - GENERATING call of type public fun <C : kotlin.collections.MutableCollection<in kotlin.Char>> kotlin.CharSequence.toCollection(destination: C): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a60586d]
2021-03-12 11:03:17,696 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:17,697 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:17,698 [main:117] - GENERATED CALL = (S("ybpay").extension2()).toCollection(C())
2021-03-12 11:03:17,698 [main:61] - replacement of C() of type C is (S("ybpay").extension2()).subSequence(58357360, -507399385).flatMapIndexedTo(C(), {a: Int, b: Char -> setOf<R>(synchronized<UShort>("xntsa", { 1666.toUShort()}))})
2021-03-12 11:03:17,807 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:17,808 [main:66] - Compilation checking started
2021-03-12 11:03:18,176 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), (S("ybpay").extension2()).subSequence(58357360, -507399385).flatMapIndexedTo(C(), {a: Int, b: Char -> setOf<R>(synchronized<UShort>("xntsa", { 1666.toUShort()}))})::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:18,178 [main:53] - replacing (S("h"), S)
2021-03-12 11:03:18,179 [main:50] - replacing S("h") S
2021-03-12 11:03:18,179 [main:54] - Getting value of type S
2021-03-12 11:03:18,295 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:18,296 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:18,399 [main:194] - Type params = []
2021-03-12 11:03:18,520 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:18,522 [main:58] - GENERATED VALUE OF TYPE S = S("tqfbk")
2021-03-12 11:03:18,522 [main:61] - GENERATED IS CALL =true
2021-03-12 11:03:18,644 [main:67] - randomType = ArrayList<C>
2021-03-12 11:03:18,736 [main:302] - generating value of type = ArrayList<C> false depth = 0
2021-03-12 11:03:18,826 [main:43] - GENERATING CALL OF fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<C> = TODO()
2021-03-12 11:03:18,828 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<C> = TODO()
2021-03-12 11:03:19,037 [main:302] - generating value of type = Int true depth = 3
2021-03-12 11:03:19,038 [main:95] - GENERATED = ArrayList<C>(418380945)
2021-03-12 11:03:19,327 [main:149] - GENERATING call of type public open fun get(index: kotlin.Int): C defined in kotlin.collections.ArrayList[DeserializedSimpleFunctionDescriptor@132a4750]
2021-03-12 11:03:19,504 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:19,510 [main:149] - GENERATING call of type public final fun member(x: S, y: kotlin.String): S defined in C[SimpleFunctionDescriptorImpl@6423d8df]
2021-03-12 11:03:19,511 [main:78] - Generated call from random type = (ArrayList<C>(418380945)).get(214417694).member(S("dzlub").plus(), S("dzlub").value)
2021-03-12 11:03:19,511 [main:106] - GETTING S from S
2021-03-12 11:03:19,526 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:03:19,527 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:03:19,667 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:03:19,668 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:03:19,765 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:19,768 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:20,173 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:03:20,174 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 11:03:20,175 [main:302] - generating value of type = Any false depth = 5
2021-03-12 11:03:20,176 [main:95] - GENERATED = require(false, { "qlijh"})
2021-03-12 11:03:20,177 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).onEachIndexed({a: Int, b: Char -> require(false, { "qlijh"})})
2021-03-12 11:03:20,177 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:03:20,177 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:03:20,284 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:20,285 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:20,372 [main:194] - Type params = []
2021-03-12 11:03:20,501 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:20,502 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))
2021-03-12 11:03:20,503 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:03:20,503 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:03:20,613 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:03:20,613 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:03:20,703 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:03:20,704 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:03:20,907 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:03:20,908 [main:95] - GENERATED = require(false)
2021-03-12 11:03:20,908 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).onEach({a: Char -> require(false)})
2021-03-12 11:03:20,908 [main:61] - replacement of S("h") of type S is (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))
2021-03-12 11:03:20,993 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:20,993 [main:66] - Compilation checking started
2021-03-12 11:03:21,390 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = x + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:21,392 [main:53] - replacing (x, S)
2021-03-12 11:03:21,392 [main:50] - replacing x S
2021-03-12 11:03:21,392 [main:54] - Getting value of type S
2021-03-12 11:03:21,487 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:21,487 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:21,595 [main:194] - Type params = []
2021-03-12 11:03:21,706 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:21,707 [main:58] - GENERATED VALUE OF TYPE S = S("vfltf")
2021-03-12 11:03:21,707 [main:61] - GENERATED IS CALL =true
2021-03-12 11:03:21,819 [main:67] - randomType = S?
2021-03-12 11:03:21,916 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:21,918 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:22,042 [main:194] - Type params = []
2021-03-12 11:03:22,146 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:22,156 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@4b2dbc7a]
2021-03-12 11:03:22,157 [main:78] - Generated call from random type = (S("tekgf"))?.plus(x)
2021-03-12 11:03:22,157 [main:106] - GETTING S from S
2021-03-12 11:03:22,164 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:03:22,164 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:03:22,265 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:03:22,266 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:03:22,360 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:22,362 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:22,696 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:03:22,697 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 11:03:22,698 [main:302] - generating value of type = Any false depth = 5
2021-03-12 11:03:22,699 [main:95] - GENERATED = require(false, { "darvu"})
2021-03-12 11:03:22,699 [main:117] - GENERATED CALL = (x).onEach({a: Char -> require(false, { "darvu"})})
2021-03-12 11:03:22,700 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5faab93]]
2021-03-12 11:03:22,700 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5faab93]
2021-03-12 11:03:22,700 [main:117] - GENERATED CALL = (x).plus(S("hyluf").extension(S("vqfru")))
2021-03-12 11:03:22,700 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:03:22,700 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:03:22,819 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:03:22,819 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:03:22,825 [main:117] - GENERATED CALL = (x).onEachIndexed({a: Int, b: Char -> println()})
2021-03-12 11:03:22,825 [main:61] - replacement of x of type S is S("vfltf")
2021-03-12 11:03:22,926 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 11:03:22,926 [main:66] - Compilation checking started
2021-03-12 11:03:23,317 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:23,318 [main:53] - replacing ("cd", String)
2021-03-12 11:03:23,318 [main:50] - replacing "cd" String
2021-03-12 11:03:23,318 [main:54] - Getting value of type String
2021-03-12 11:03:23,436 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:23,437 [main:58] - GENERATED VALUE OF TYPE String = "cfuwz"
2021-03-12 11:03:23,437 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:23,545 [main:67] - randomType = S?
2021-03-12 11:03:23,657 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:23,657 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:23,758 [main:194] - Type params = []
2021-03-12 11:03:23,857 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:23,872 [main:149] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58c4d86a]
2021-03-12 11:03:23,873 [main:78] - Generated call from random type = (S("phjyb"))?.value.trimMargin(S("ybpay").extension2())
2021-03-12 11:03:23,873 [main:106] - GETTING String from String
2021-03-12 11:03:23,915 [main:113] - Case = [public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e1307a9]]
2021-03-12 11:03:23,915 [main:149] - GENERATING call of type public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e1307a9]
2021-03-12 11:03:24,047 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:24,048 [main:117] - GENERATED CALL = (S("ybpay").extension2()).substringAfter('', S("dzlub").value)
2021-03-12 11:03:24,048 [main:113] - Case = [public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2293e32a]]
2021-03-12 11:03:24,048 [main:149] - GENERATING call of type public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2293e32a]
2021-03-12 11:03:24,142 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:24,142 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:24,143 [main:117] - GENERATED CALL = (S("ybpay").extension2()).filterNot({a: Char -> false})
2021-03-12 11:03:24,144 [main:113] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@5bd48bbb], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@237175ea]]
2021-03-12 11:03:24,144 [main:149] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@5bd48bbb]
2021-03-12 11:03:24,232 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:24,233 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@237175ea]
2021-03-12 11:03:24,234 [main:117] - GENERATED CALL = (S("ybpay").extension2()).get(-990340368).plus(S("ybpay").extension2())
2021-03-12 11:03:24,234 [main:113] - Case = [public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]]
2021-03-12 11:03:24,234 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]
2021-03-12 11:03:24,369 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:24,471 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:24,472 [main:117] - GENERATED CALL = (S("ybpay").extension2()).padEnd(1603644591, '煮')
2021-03-12 11:03:24,472 [main:113] - Case = [public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]]
2021-03-12 11:03:24,472 [main:149] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]
2021-03-12 11:03:24,556 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:24,675 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:24,676 [main:117] - GENERATED CALL = (S("ybpay").extension2()).padStart(-1061646966, '㑫')
2021-03-12 11:03:24,676 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a5e6480]]
2021-03-12 11:03:24,676 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a5e6480]
2021-03-12 11:03:24,676 [main:117] - GENERATED CALL = (S("ybpay").extension2()).reversed()
2021-03-12 11:03:24,677 [main:113] - Case = [public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@79f017f]]
2021-03-12 11:03:24,677 [main:149] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@79f017f]
2021-03-12 11:03:24,772 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:24,773 [main:117] - GENERATED CALL = (S("ybpay").extension2()).takeLast(1753612640)
2021-03-12 11:03:24,773 [main:113] - Case = [public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:03:24,773 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:03:24,859 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:24,860 [main:117] - GENERATED CALL = (S("ybpay").extension2()).replaceAfter('ҭ', S("ybpay").extension2(), S("dzlub").value)
2021-03-12 11:03:24,860 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]]
2021-03-12 11:03:24,860 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]
2021-03-12 11:03:24,960 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:24,961 [main:117] - GENERATED CALL = (S("ybpay").extension2()).concat("cuphl")
2021-03-12 11:03:24,961 [main:113] - Case = [public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]]
2021-03-12 11:03:24,961 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]
2021-03-12 11:03:25,053 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:25,138 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:25,235 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:25,236 [main:117] - GENERATED CALL = (S("ybpay").extension2()).replace('⥢', '柜', true)
2021-03-12 11:03:25,237 [main:61] - replacement of "cd" of type String is (S("ybpay").extension2()).substringAfter('', S("dzlub").value)
2021-03-12 11:03:25,328 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:25,329 [main:53] - replacing (y, String)
2021-03-12 11:03:25,329 [main:50] - replacing y String
2021-03-12 11:03:25,329 [main:54] - Getting value of type String
2021-03-12 11:03:25,415 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:25,416 [main:58] - GENERATED VALUE OF TYPE String = "dkpft"
2021-03-12 11:03:25,416 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:25,417 [main:67] - randomType = Boolean
2021-03-12 11:03:25,515 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:25,530 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@130b5b00]
2021-03-12 11:03:25,623 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:25,624 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45075a13]
2021-03-12 11:03:25,715 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:25,717 [main:78] - Generated call from random type = (false).compareTo(false).toString(-332741690)
2021-03-12 11:03:25,718 [main:106] - GETTING String from S
2021-03-12 11:03:25,728 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]]
2021-03-12 11:03:25,728 [main:149] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]
2021-03-12 11:03:25,863 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:25,987 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:25,988 [main:117] - GENERATED CALL = (C().member()).value.padStart(488955656, '苛')
2021-03-12 11:03:25,989 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]]
2021-03-12 11:03:25,989 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]
2021-03-12 11:03:26,087 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:26,089 [main:117] - GENERATED CALL = (C().member()).value.replaceAfterLast('窥', S("ybpay").extension2(), S("ybpay").extension2())
2021-03-12 11:03:26,089 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]]
2021-03-12 11:03:26,089 [main:149] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]
2021-03-12 11:03:26,188 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:26,189 [main:117] - GENERATED CALL = (C().member()).value.substringBeforeLast('孯', S("ybpay").extension2())
2021-03-12 11:03:26,190 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58c4d86a]]
2021-03-12 11:03:26,190 [main:149] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58c4d86a]
2021-03-12 11:03:26,276 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:26,277 [main:117] - GENERATED CALL = (C().member()).value.trimMargin("fknxl")
2021-03-12 11:03:26,277 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:03:26,277 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:03:26,400 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:26,507 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:26,610 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:26,611 [main:117] - GENERATED CALL = (C().member()).value.replaceAfter('ヰ', "twfqu", "pcfjm")
2021-03-12 11:03:26,611 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]]
2021-03-12 11:03:26,611 [main:149] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]
2021-03-12 11:03:26,611 [main:117] - GENERATED CALL = (C().member()).value.decapitalize()
2021-03-12 11:03:26,611 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]]
2021-03-12 11:03:26,611 [main:149] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]
2021-03-12 11:03:26,703 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:26,704 [main:117] - GENERATED CALL = (C().member()).value.substringBefore('캌', S("dzlub").value)
2021-03-12 11:03:26,704 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]]
2021-03-12 11:03:26,704 [main:149] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]
2021-03-12 11:03:26,705 [main:117] - GENERATED CALL = (C().member()).value.trimIndent()
2021-03-12 11:03:26,705 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45092f86]]
2021-03-12 11:03:26,705 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45092f86]
2021-03-12 11:03:26,802 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:26,803 [main:117] - GENERATED CALL = (C().member()).value.replaceIndentByMargin("hyfkb", S("dzlub").value)
2021-03-12 11:03:26,803 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]]
2021-03-12 11:03:26,803 [main:149] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]
2021-03-12 11:03:26,898 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:26,899 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:26,900 [main:117] - GENERATED CALL = (C().member()).value.dropLastWhile({a: Char -> false})
2021-03-12 11:03:26,900 [main:61] - replacement of y of type String is (C().member()).value.substringBeforeLast('孯', S("ybpay").extension2())
2021-03-12 11:03:27,016 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:27,018 [main:53] - replacing ("mn", String)
2021-03-12 11:03:27,019 [main:50] - replacing "mn" String
2021-03-12 11:03:27,019 [main:54] - Getting value of type String
2021-03-12 11:03:27,116 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:27,117 [main:58] - GENERATED VALUE OF TYPE String = "qosek"
2021-03-12 11:03:27,117 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:27,228 [main:67] - randomType = Sequence<C>
2021-03-12 11:03:27,229 [main:106] - GETTING String from S
2021-03-12 11:03:27,234 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]]
2021-03-12 11:03:27,234 [main:149] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]
2021-03-12 11:03:27,331 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:27,426 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:27,427 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:27,629 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:03:27,630 [main:95] - GENERATED = StringBuilder("bdcrm")
2021-03-12 11:03:27,630 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.removePrefix(StringBuilder("bdcrm"))
2021-03-12 11:03:27,630 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]]
2021-03-12 11:03:27,631 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]
2021-03-12 11:03:27,722 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:27,807 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:27,906 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:27,908 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.replace('?', '쨨', true)
2021-03-12 11:03:27,908 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]]
2021-03-12 11:03:27,908 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]
2021-03-12 11:03:27,909 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.toLowerCase()
2021-03-12 11:03:27,909 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]]
2021-03-12 11:03:27,909 [main:149] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]
2021-03-12 11:03:28,010 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:28,011 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.dropLast(1183452661)
2021-03-12 11:03:28,011 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]]
2021-03-12 11:03:28,011 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]
2021-03-12 11:03:28,012 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.trimStart()
2021-03-12 11:03:28,012 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]]
2021-03-12 11:03:28,012 [main:149] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]
2021-03-12 11:03:28,097 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:28,098 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:28,099 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.dropWhile({a: Char -> false})
2021-03-12 11:03:28,099 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:03:28,099 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:03:28,210 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:28,212 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.replaceAfter('꾈', S("dzlub").value, S("dzlub").value)
2021-03-12 11:03:28,212 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19492f9c]]
2021-03-12 11:03:28,212 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19492f9c]
2021-03-12 11:03:28,331 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:28,445 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:28,554 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:28,559 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.replaceRange(1916062650, -118611760, StringBuilder())
2021-03-12 11:03:28,559 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]]
2021-03-12 11:03:28,559 [main:149] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]
2021-03-12 11:03:28,682 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:28,689 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.removeSuffix(StringBuilder())
2021-03-12 11:03:28,689 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45092f86]]
2021-03-12 11:03:28,689 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45092f86]
2021-03-12 11:03:28,690 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.replaceIndentByMargin(S("dzlub").value, S("dzlub").value)
2021-03-12 11:03:28,690 [main:61] - replacement of "mn" of type String is (topLevel(S("dzlub").value, C().member())).value.replace('?', '쨨', true)
2021-03-12 11:03:28,807 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:28,807 [main:66] - Compilation checking started
2021-03-12 11:03:29,070 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S((topLevel(S("dzlub").value, C().member())).value.replace('?', '쨨', true)), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:29,071 [main:53] - replacing (x, String)
2021-03-12 11:03:29,072 [main:50] - replacing x String
2021-03-12 11:03:29,072 [main:54] - Getting value of type String
2021-03-12 11:03:29,193 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:29,194 [main:58] - GENERATED VALUE OF TYPE String = "ellrf"
2021-03-12 11:03:29,195 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:29,388 [main:67] - randomType = HashSet<Byte>
2021-03-12 11:03:29,479 [main:302] - generating value of type = HashSet<Byte> false depth = 0
2021-03-12 11:03:29,575 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): HashSet<Byte> = TODO()
2021-03-12 11:03:29,576 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): HashSet<Byte> = TODO()
2021-03-12 11:03:29,664 [main:95] - GENERATED = linkedSetOf<Byte>()
2021-03-12 11:03:29,822 [main:149] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.HashSet[DeserializedSimpleFunctionDescriptor@70e56471]
2021-03-12 11:03:29,822 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1995883f]
2021-03-12 11:03:29,823 [main:78] - Generated call from random type = (linkedSetOf<Byte>()).toArray().contentToString()
2021-03-12 11:03:29,823 [main:61] - replacement of x of type String is (linkedSetOf<Byte>()).toArray().contentToString()
2021-03-12 11:03:29,955 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:29,955 [main:66] - Compilation checking started
2021-03-12 11:03:30,544 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:30,546 [main:53] - replacing (value, String)
2021-03-12 11:03:30,546 [main:50] - replacing value String
2021-03-12 11:03:30,546 [main:54] - Getting value of type String
2021-03-12 11:03:30,695 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:30,696 [main:58] - GENERATED VALUE OF TYPE String = "jylce"
2021-03-12 11:03:30,697 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:30,849 [main:67] - randomType = Short
2021-03-12 11:03:30,975 [main:302] - generating value of type = Short true depth = 0
2021-03-12 11:03:31,035 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@27290796]
2021-03-12 11:03:31,036 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45075a13]
2021-03-12 11:03:31,147 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:31,148 [main:78] - Generated call from random type = (-8894).toInt().toString(-1198667616)
2021-03-12 11:03:31,148 [main:61] - replacement of value of type String is (-8894).toInt().toString(-1198667616)
2021-03-12 11:03:31,264 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:31,265 [main:66] - Compilation checking started
2021-03-12 11:03:31,782 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:31,784 [main:53] - replacing (S("_"), S)
2021-03-12 11:03:31,785 [main:50] - replacing S("_") S
2021-03-12 11:03:31,785 [main:54] - Getting value of type S
2021-03-12 11:03:31,901 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:31,901 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:31,996 [main:194] - Type params = []
2021-03-12 11:03:32,090 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:32,091 [main:58] - GENERATED VALUE OF TYPE S = S("yjzvy")
2021-03-12 11:03:32,091 [main:61] - GENERATED IS CALL =true
2021-03-12 11:03:32,093 [main:67] - randomType = C
2021-03-12 11:03:32,195 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:32,196 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:32,203 [main:149] - GENERATING call of type public final fun member(x: S, y: kotlin.String): S defined in C[SimpleFunctionDescriptorImpl@10b1b0d0]
2021-03-12 11:03:32,305 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:32,306 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:32,405 [main:194] - Type params = []
2021-03-12 11:03:32,508 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:32,629 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:32,630 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:03:32,728 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:03:32,729 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:03:32,862 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:32,864 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:33,181 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:03:33,182 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 11:03:33,183 [main:302] - generating value of type = Any false depth = 5
2021-03-12 11:03:33,183 [main:95] - GENERATED = check(true, { "wlawb"})
2021-03-12 11:03:33,184 [main:78] - Generated call from random type = (C()).member(S("aphwh"), "pabts").onEachIndexed({a: Int, b: Char -> check(true, { "wlawb"})})
2021-03-12 11:03:33,184 [main:61] - replacement of S("_") of type S is (C()).member(S("aphwh"), "pabts").onEachIndexed({a: Int, b: Char -> check(true, { "wlawb"})})
2021-03-12 11:03:33,296 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:33,297 [main:66] - Compilation checking started
2021-03-12 11:03:33,675 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", (C()).member(S("aphwh"), "pabts").onEachIndexed({a: Int, b: Char -> check(true, { "wlawb"})})::extension2.call())

    return "OK"
}


2021-03-12 11:03:33,676 [main:53] - replacing (other.value, String)
2021-03-12 11:03:33,676 [main:50] - replacing other.value String
2021-03-12 11:03:33,676 [main:54] - Getting value of type String
2021-03-12 11:03:33,820 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:33,821 [main:58] - GENERATED VALUE OF TYPE String = "tzniv"
2021-03-12 11:03:33,821 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:33,935 [main:67] - randomType = C?
2021-03-12 11:03:34,048 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:34,049 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:34,058 [main:149] - GENERATING call of type public final fun member(x: S, y: kotlin.String): S defined in C[SimpleFunctionDescriptorImpl@3c470e9a]
2021-03-12 11:03:34,191 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:34,192 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:34,332 [main:194] - Type params = []
2021-03-12 11:03:34,433 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:34,435 [main:78] - Generated call from random type = (C())?.member(S("qasfw"), S("ybpay").extension2()).value
2021-03-12 11:03:34,436 [main:106] - GETTING String from S
2021-03-12 11:03:34,444 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]]
2021-03-12 11:03:34,444 [main:149] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]
2021-03-12 11:03:34,445 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.decapitalize()
2021-03-12 11:03:34,445 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]]
2021-03-12 11:03:34,445 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]
2021-03-12 11:03:34,578 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:34,580 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.drop(353049849)
2021-03-12 11:03:34,580 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]]
2021-03-12 11:03:34,580 [main:149] - GENERATING call of type public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]
2021-03-12 11:03:34,672 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:34,673 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.replaceBeforeLast('杫', S("dzlub").value, S("ybpay").extension2())
2021-03-12 11:03:34,673 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]]
2021-03-12 11:03:34,673 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:03:34,790 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:34,793 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.substring(-1569674492)
2021-03-12 11:03:34,793 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]]
2021-03-12 11:03:34,793 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]
2021-03-12 11:03:34,929 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:34,931 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.concat("xuolv")
2021-03-12 11:03:34,931 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]]
2021-03-12 11:03:34,931 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]
2021-03-12 11:03:34,931 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.uppercase()
2021-03-12 11:03:34,932 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]]
2021-03-12 11:03:34,932 [main:149] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]
2021-03-12 11:03:35,047 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:35,135 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:35,136 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.padStart(-1040064568, '䊍')
2021-03-12 11:03:35,136 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]]
2021-03-12 11:03:35,136 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]
2021-03-12 11:03:35,237 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:35,333 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:35,424 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:35,425 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.replace('퓐', '᫖', true)
2021-03-12 11:03:35,425 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]]
2021-03-12 11:03:35,425 [main:149] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]
2021-03-12 11:03:35,526 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:35,527 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.substringBefore('', S("dzlub").value)
2021-03-12 11:03:35,527 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@79f017f]]
2021-03-12 11:03:35,527 [main:149] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@79f017f]
2021-03-12 11:03:35,626 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:35,628 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.takeLast(351821351)
2021-03-12 11:03:35,628 [main:61] - replacement of other.value of type String is (S("hyluf").extension(S("vqfru"))).value.replace('퓐', '᫖', true)
2021-03-12 11:03:35,731 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:35,732 [main:53] - replacing (C(), C)
2021-03-12 11:03:35,733 [main:50] - replacing C() C
2021-03-12 11:03:35,733 [main:54] - Getting value of type C
2021-03-12 11:03:35,842 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:35,843 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:35,843 [main:58] - GENERATED VALUE OF TYPE C = C()
2021-03-12 11:03:35,843 [main:61] - GENERATED IS CALL =true
2021-03-12 11:03:35,844 [main:67] - randomType = Int
2021-03-12 11:03:35,944 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:36,017 [main:106] - GETTING C from String
2021-03-12 11:03:36,045 [main:113] - Case = [public inline fun <R : kotlin.Any, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapNotNullTo(destination: C, transform: (kotlin.Char) -> R?): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@432abcf5]]
2021-03-12 11:03:36,045 [main:149] - GENERATING call of type public inline fun <R : kotlin.Any, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapNotNullTo(destination: C, transform: (kotlin.Char) -> R?): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@432abcf5]
2021-03-12 11:03:36,153 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:36,155 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:36,252 [main:302] - generating value of type = Function1<Char, R?> false depth = 0
2021-03-12 11:03:36,261 [main:302] - generating value of type = R false depth = 1
2021-03-12 11:03:36,604 [main:43] - GENERATING CALL OF fun <R> run(block: ()->ArrayList<Float>): R = TODO()
2021-03-12 11:03:36,606 [main:61] - WITHOUT TYPE PARAMS = fun <R> run(block: ()->ArrayList<Float>): R = TODO()
2021-03-12 11:03:36,827 [main:302] - generating value of type = Function0<ArrayList<Float>> false depth = 4
2021-03-12 11:03:36,828 [main:302] - generating value of type = ArrayList<Float> false depth = 5
2021-03-12 11:03:36,953 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: Float): ArrayList<Float> = TODO()
2021-03-12 11:03:36,956 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: Float): ArrayList<Float> = TODO()
2021-03-12 11:03:37,168 [main:302] - generating value of type = Float true depth = 8
2021-03-12 11:03:37,171 [main:95] - GENERATED = arrayListOf<Float>(0.5422927f)
2021-03-12 11:03:37,172 [main:95] - GENERATED = run<ArrayList<Float>>({ arrayListOf<Float>(0.5422927f)})
2021-03-12 11:03:37,173 [main:117] - GENERATED CALL = (S("ybpay").extension2()).mapNotNullTo(C(), {a: Char -> run<ArrayList<Float>>({ arrayListOf<Float>(0.5422927f)})})
2021-03-12 11:03:37,173 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.flatMapIndexedTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> kotlin.collections.Iterable<R>): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@639358f4]]
2021-03-12 11:03:37,173 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:37,298 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:37,387 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:37,388 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.flatMapIndexedTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> kotlin.collections.Iterable<R>): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@639358f4]
2021-03-12 11:03:37,490 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:37,491 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:37,604 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Iterable<R>> false depth = 0
2021-03-12 11:03:37,605 [main:302] - generating value of type = Iterable<R> false depth = 1
2021-03-12 11:03:37,733 [main:43] - GENERATING CALL OF fun UIntArray(size: kotlin.Int): Iterable<R> = TODO()
2021-03-12 11:03:37,735 [main:61] - WITHOUT TYPE PARAMS = fun UIntArray(size: kotlin.Int): Iterable<R> = TODO()
2021-03-12 11:03:37,961 [main:302] - generating value of type = Int true depth = 4
2021-03-12 11:03:37,962 [main:95] - GENERATED = UIntArray(-332350083)
2021-03-12 11:03:37,963 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(-970852725, 307606113).flatMapIndexedTo(C(), {a: Int, b: Char -> UIntArray(-332350083)})
2021-03-12 11:03:37,963 [main:113] - Case = [public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapIndexedTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32d5630d]]
2021-03-12 11:03:37,963 [main:149] - GENERATING call of type public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapIndexedTo(destination: C, transform: (index: kotlin.Int, kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32d5630d]
2021-03-12 11:03:38,069 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:38,070 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:38,227 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, R> false depth = 0
2021-03-12 11:03:38,228 [main:302] - generating value of type = R false depth = 1
2021-03-12 11:03:38,514 [main:43] - GENERATING CALL OF fun <T, R> with(receiver: Boolean?, block: T.()->C): R = TODO()
2021-03-12 11:03:38,517 [main:61] - WITHOUT TYPE PARAMS = fun <T, R> with(receiver: Boolean?, block: T.()->C): R = TODO()
2021-03-12 11:03:38,760 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:03:38,761 [main:385] - Cant generate call of fun <T, R> with(receiver: Boolean?, block: T.()->C): R = TODO()
2021-03-12 11:03:38,762 [main:117] - GENERATED CALL = (S("ybpay").extension2()).mapIndexedTo(C(), {a: Int, b: Char -> })
2021-03-12 11:03:38,762 [main:113] - Case = [public fun <C : kotlin.collections.MutableCollection<in kotlin.Char>> kotlin.CharSequence.toCollection(destination: C): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a60586d]]
2021-03-12 11:03:38,762 [main:149] - GENERATING call of type public fun <C : kotlin.collections.MutableCollection<in kotlin.Char>> kotlin.CharSequence.toCollection(destination: C): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a60586d]
2021-03-12 11:03:38,873 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:38,874 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:38,874 [main:117] - GENERATED CALL = (S("ybpay").extension2()).toCollection(C())
2021-03-12 11:03:38,874 [main:113] - Case = [public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.flatMapTo(destination: C, transform: (kotlin.Char) -> kotlin.collections.Iterable<R>): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@f179ae]]
2021-03-12 11:03:38,874 [main:149] - GENERATING call of type public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.flatMapTo(destination: C, transform: (kotlin.Char) -> kotlin.collections.Iterable<R>): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@f179ae]
2021-03-12 11:03:38,970 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:38,971 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:39,066 [main:302] - generating value of type = Function1<Char, Iterable<R>> false depth = 0
2021-03-12 11:03:39,067 [main:302] - generating value of type = Iterable<R> false depth = 1
2021-03-12 11:03:39,171 [main:43] - GENERATING CALL OF fun <E> HashSet(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): Iterable<R> = TODO()
2021-03-12 11:03:39,173 [main:61] - WITHOUT TYPE PARAMS = fun <E> HashSet(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): Iterable<R> = TODO()
2021-03-12 11:03:39,534 [main:302] - generating value of type = Int true depth = 4
2021-03-12 11:03:39,534 [main:302] - generating value of type = Float true depth = 4
2021-03-12 11:03:39,535 [main:95] - GENERATED = HashSet<S>(790616727, 0.8294443f)
2021-03-12 11:03:39,536 [main:117] - GENERATED CALL = (S("ybpay").extension2()).flatMapTo(C(), {a: Char -> HashSet<S>(790616727, 0.8294443f)})
2021-03-12 11:03:39,536 [main:113] - Case = [public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapTo(destination: C, transform: (kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1711881d]]
2021-03-12 11:03:39,536 [main:149] - GENERATING call of type public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.mapTo(destination: C, transform: (kotlin.Char) -> R): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1711881d]
2021-03-12 11:03:39,636 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:39,637 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:39,733 [main:302] - generating value of type = Function1<Char, R> false depth = 0
2021-03-12 11:03:39,733 [main:302] - generating value of type = R false depth = 1
2021-03-12 11:03:39,949 [main:43] - GENERATING CALL OF fun <R> run(block: ()->S?): R = TODO()
2021-03-12 11:03:39,951 [main:61] - WITHOUT TYPE PARAMS = fun <R> run(block: ()->S?): R = TODO()
2021-03-12 11:03:40,143 [main:302] - generating value of type = Function0<S?> false depth = 4
2021-03-12 11:03:40,144 [main:302] - generating value of type = S false depth = 5
2021-03-12 11:03:40,145 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:40,253 [main:194] - Type params = []
2021-03-12 11:03:40,351 [main:302] - generating value of type = String true depth = 7
2021-03-12 11:03:40,352 [main:95] - GENERATED = run<S?>({ S("hgftx")})
2021-03-12 11:03:40,353 [main:117] - GENERATED CALL = (S("ybpay").extension2()).mapTo(C(), {a: Char -> run<S?>({ S("hgftx")})})
2021-03-12 11:03:40,353 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.flatMapTo(destination: C, transform: (kotlin.Char) -> kotlin.collections.Iterable<R>): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@f179ae]]
2021-03-12 11:03:40,353 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:40,445 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:40,540 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:40,541 [main:149] - GENERATING call of type public inline fun <R, C : kotlin.collections.MutableCollection<in R>> kotlin.CharSequence.flatMapTo(destination: C, transform: (kotlin.Char) -> kotlin.collections.Iterable<R>): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@f179ae]
2021-03-12 11:03:40,634 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:40,635 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:40,742 [main:302] - generating value of type = Function1<Char, Iterable<R>> false depth = 0
2021-03-12 11:03:40,743 [main:302] - generating value of type = Iterable<R> false depth = 1
2021-03-12 11:03:40,854 [main:43] - GENERATING CALL OF fun UShortArray(size: kotlin.Int): Iterable<R> = TODO()
2021-03-12 11:03:40,855 [main:61] - WITHOUT TYPE PARAMS = fun UShortArray(size: kotlin.Int): Iterable<R> = TODO()
2021-03-12 11:03:41,044 [main:302] - generating value of type = Int true depth = 4
2021-03-12 11:03:41,045 [main:95] - GENERATED = UShortArray(-1835652053)
2021-03-12 11:03:41,045 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(648612574, 603682424).flatMapTo(C(), {a: Char -> UShortArray(-1835652053)})
2021-03-12 11:03:41,045 [main:113] - Case = [public inline fun <C : kotlin.text.Appendable> kotlin.CharSequence.filterTo(destination: C, predicate: (kotlin.Char) -> kotlin.Boolean): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@518aa85f]]
2021-03-12 11:03:41,045 [main:149] - GENERATING call of type public inline fun <C : kotlin.text.Appendable> kotlin.CharSequence.filterTo(destination: C, predicate: (kotlin.Char) -> kotlin.Boolean): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@518aa85f]
2021-03-12 11:03:41,128 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:41,129 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:41,241 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:41,242 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:41,243 [main:117] - GENERATED CALL = (S("ybpay").extension2()).filterTo(C(), {a: Char -> false})
2021-03-12 11:03:41,243 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], public fun <C : kotlin.collections.MutableCollection<in kotlin.Char>> kotlin.CharSequence.toCollection(destination: C): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a60586d]]
2021-03-12 11:03:41,243 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:41,340 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:41,434 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:41,435 [main:149] - GENERATING call of type public fun <C : kotlin.collections.MutableCollection<in kotlin.Char>> kotlin.CharSequence.toCollection(destination: C): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a60586d]
2021-03-12 11:03:41,528 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:41,529 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:41,529 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(-1401641663, 489000819).toCollection(C())
2021-03-12 11:03:41,529 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], public inline fun <C : kotlin.text.Appendable> kotlin.CharSequence.filterIndexedTo(destination: C, predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@add212d]]
2021-03-12 11:03:41,529 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:41,624 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:41,710 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:41,711 [main:149] - GENERATING call of type public inline fun <C : kotlin.text.Appendable> kotlin.CharSequence.filterIndexedTo(destination: C, predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): C defined in kotlin.text[DeserializedSimpleFunctionDescriptor@add212d]
2021-03-12 11:03:41,806 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:41,806 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}
2021-03-12 11:03:41,894 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-12 11:03:41,902 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:41,904 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(-1637183789, 48674416).filterIndexedTo(C(), {a: Int, b: Char -> true})
2021-03-12 11:03:41,904 [main:61] - replacement of C() of type C is (S("ybpay").extension2()).toCollection(C())
2021-03-12 11:03:41,987 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:41,987 [main:66] - Compilation checking started
2021-03-12 11:03:42,238 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), (S("ybpay").extension2()).toCollection(C())::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:42,241 [main:53] - replacing (S("n"), S)
2021-03-12 11:03:42,241 [main:50] - replacing S("n") S
2021-03-12 11:03:42,241 [main:54] - Getting value of type S
2021-03-12 11:03:42,353 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:42,354 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:42,452 [main:194] - Type params = []
2021-03-12 11:03:42,537 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:42,538 [main:58] - GENERATED VALUE OF TYPE S = S("bioex")
2021-03-12 11:03:42,539 [main:61] - GENERATED IS CALL =true
2021-03-12 11:03:42,540 [main:67] - randomType = Boolean
2021-03-12 11:03:42,637 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:42,652 [main:106] - GETTING S from S
2021-03-12 11:03:42,659 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:03:42,659 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:03:42,755 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:03:42,756 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:03:42,865 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:03:42,867 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:03:43,196 [main:302] - generating value of type = Int true depth = 4
2021-03-12 11:03:43,197 [main:302] - generating value of type = Function1<Int, Unit> false depth = 4
2021-03-12 11:03:43,197 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 11:03:43,302 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:43,304 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:43,605 [main:302] - generating value of type = Boolean true depth = 8
2021-03-12 11:03:43,606 [main:302] - generating value of type = Function0<Any> false depth = 8
2021-03-12 11:03:43,607 [main:302] - generating value of type = Any false depth = 9
2021-03-12 11:03:43,607 [main:95] - GENERATED = require(true, { "midkn"})
2021-03-12 11:03:43,607 [main:95] - GENERATED = repeat(892593875, {a: Int -> require(true, { "midkn"})})
2021-03-12 11:03:43,608 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).onEachIndexed({a: Int, b: Char -> repeat(892593875, {a: Int -> require(true, { "midkn"})})})
2021-03-12 11:03:43,608 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:03:43,608 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:03:43,714 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:43,715 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:43,802 [main:194] - Type params = []
2021-03-12 11:03:43,900 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:43,901 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).plus(S("mugyg"))
2021-03-12 11:03:43,901 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:03:43,901 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:03:43,991 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:03:43,992 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:03:44,094 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:03:44,095 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:03:44,396 [main:302] - generating value of type = Int true depth = 4
2021-03-12 11:03:44,397 [main:302] - generating value of type = Function1<Int, Unit> false depth = 4
2021-03-12 11:03:44,398 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 11:03:44,485 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:44,486 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:03:44,792 [main:302] - generating value of type = Boolean true depth = 8
2021-03-12 11:03:44,793 [main:302] - generating value of type = Function0<Any> false depth = 8
2021-03-12 11:03:44,794 [main:302] - generating value of type = Any false depth = 9
2021-03-12 11:03:44,794 [main:95] - GENERATED = check(false, { "yhdrn"})
2021-03-12 11:03:44,794 [main:95] - GENERATED = repeat(750457990, {a: Int -> check(false, { "yhdrn"})})
2021-03-12 11:03:44,795 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).onEach({a: Char -> repeat(750457990, {a: Int -> check(false, { "yhdrn"})})})
2021-03-12 11:03:44,795 [main:61] - replacement of S("n") of type S is (topLevel(S("dzlub").value, C().member())).plus(S("mugyg"))
2021-03-12 11:03:44,911 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:44,911 [main:66] - Compilation checking started
2021-03-12 11:03:45,193 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call((topLevel(S("dzlub").value, C().member())).plus(S("mugyg"))))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:45,195 [main:53] - replacing ("a", String)
2021-03-12 11:03:45,195 [main:50] - replacing "a" String
2021-03-12 11:03:45,196 [main:54] - Getting value of type String
2021-03-12 11:03:45,302 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:45,304 [main:58] - GENERATED VALUE OF TYPE String = "tyllu"
2021-03-12 11:03:45,304 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:45,307 [main:67] - randomType = S
2021-03-12 11:03:45,422 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:45,423 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:45,534 [main:194] - Type params = []
2021-03-12 11:03:45,626 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:45,634 [main:149] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]
2021-03-12 11:03:45,743 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:45,745 [main:78] - Generated call from random type = (S("gdatk")).value.dropLast(-589589430)
2021-03-12 11:03:45,747 [main:106] - GETTING String from S
2021-03-12 11:03:45,757 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d7cb2d8]]
2021-03-12 11:03:45,757 [main:149] - GENERATING call of type public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d7cb2d8]
2021-03-12 11:03:45,863 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:45,864 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:45,865 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.filter({a: Char -> false})
2021-03-12 11:03:45,866 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]]
2021-03-12 11:03:45,866 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]
2021-03-12 11:03:45,963 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:46,071 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:46,183 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:46,184 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)
2021-03-12 11:03:46,184 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]]
2021-03-12 11:03:46,184 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]
2021-03-12 11:03:46,267 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:46,360 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:46,361 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.removeRange(-1428942198, -1180357347)
2021-03-12 11:03:46,361 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]]
2021-03-12 11:03:46,361 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]
2021-03-12 11:03:46,362 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.trimStart()
2021-03-12 11:03:46,362 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]]
2021-03-12 11:03:46,362 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]
2021-03-12 11:03:46,451 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:46,462 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.removeSurrounding("lsimw")
2021-03-12 11:03:46,462 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]]
2021-03-12 11:03:46,462 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:03:46,544 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:46,545 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.substring(538542884)
2021-03-12 11:03:46,545 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]]
2021-03-12 11:03:46,545 [main:149] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]
2021-03-12 11:03:46,641 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:46,642 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.dropLast(-969902179)
2021-03-12 11:03:46,643 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]]
2021-03-12 11:03:46,643 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]
2021-03-12 11:03:46,643 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.toLowerCase()
2021-03-12 11:03:46,643 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]]
2021-03-12 11:03:46,643 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]
2021-03-12 11:03:46,744 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:46,746 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.drop(-1181432491)
2021-03-12 11:03:46,746 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]]
2021-03-12 11:03:46,746 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]
2021-03-12 11:03:46,840 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:03:46,840 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.plus("gevtx")
2021-03-12 11:03:46,841 [main:61] - replacement of "a" of type String is (S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)
2021-03-12 11:03:46,937 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:46,938 [main:66] - Compilation checking started
2021-03-12 11:03:47,410 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true}))
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:47,412 [main:53] - replacing (S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true})), S)
2021-03-12 11:03:47,412 [main:50] - replacing S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true})) S
2021-03-12 11:03:47,412 [main:54] - Getting value of type S
2021-03-12 11:03:47,540 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:47,541 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:47,641 [main:194] - Type params = []
2021-03-12 11:03:47,727 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:47,728 [main:58] - GENERATED VALUE OF TYPE S = S("klans")
2021-03-12 11:03:47,728 [main:61] - GENERATED IS CALL =true
2021-03-12 11:03:47,830 [main:67] - randomType = Float
2021-03-12 11:03:47,918 [main:302] - generating value of type = Float true depth = 0
2021-03-12 11:03:47,974 [main:106] - GETTING S from String
2021-03-12 11:03:47,999 [main:106] - GETTING S from S
2021-03-12 11:03:48,005 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:03:48,006 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:03:48,096 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:03:48,097 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:03:48,197 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:03:48,199 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:03:48,394 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:03:48,395 [main:95] - GENERATED = require(true)
2021-03-12 11:03:48,396 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEachIndexed({a: Int, b: Char -> require(true)})
2021-03-12 11:03:48,396 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:03:48,396 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:03:48,501 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:03:48,502 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:03:48,593 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:03:48,595 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:03:48,803 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:03:48,804 [main:95] - GENERATED = check(false)
2021-03-12 11:03:48,804 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEach({a: Char -> check(false)})
2021-03-12 11:03:48,804 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:03:48,804 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:03:48,805 [main:117] - GENERATED CALL = (S("dzlub").plus()).plus(C().member())
2021-03-12 11:03:48,805 [main:61] - replacement of S("vfltf") + S((S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true})) of type S is S("klans")
2021-03-12 11:03:48,897 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 11:03:48,898 [main:66] - Compilation checking started
2021-03-12 11:03:49,424 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:49,425 [main:53] - replacing (other.value, String)
2021-03-12 11:03:49,425 [main:50] - replacing other.value String
2021-03-12 11:03:49,425 [main:54] - Getting value of type String
2021-03-12 11:03:49,589 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:49,591 [main:58] - GENERATED VALUE OF TYPE String = "pqtjc"
2021-03-12 11:03:49,591 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:49,980 [main:67] - randomType = ArrayDeque<UByte>
2021-03-12 11:03:50,087 [main:302] - generating value of type = ArrayDeque<UByte> false depth = 0
2021-03-12 11:03:50,206 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<UByte> = TODO()
2021-03-12 11:03:50,208 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<UByte> = TODO()
2021-03-12 11:03:50,490 [main:302] - generating value of type = Int true depth = 3
2021-03-12 11:03:50,492 [main:95] - GENERATED = ArrayDeque<UByte>(-1129248533)
2021-03-12 11:03:50,709 [main:149] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.ArrayDeque[DeserializedSimpleFunctionDescriptor@2eaa12c1]
2021-03-12 11:03:50,710 [main:149] - GENERATING call of type public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4dec6aa]
2021-03-12 11:03:50,815 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:50,914 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:51,017 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:51,146 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:51,149 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:51,353 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:03:51,354 [main:95] - GENERATED = StringBuilder("nwcij")
2021-03-12 11:03:51,440 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:51,548 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:51,643 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:51,645 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:51,837 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:03:51,838 [main:95] - GENERATED = StringBuilder("mupix")
2021-03-12 11:03:51,941 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 11:03:51,942 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 11:03:51,947 [main:78] - Generated call from random type = (ArrayDeque<UByte>(-1129248533)).toArray().joinToString("evzpq", StringBuilder(), StringBuilder("nwcij"), -510773806, StringBuilder("mupix"), {a: T -> "trnvn"})
2021-03-12 11:03:51,948 [main:106] - GETTING String from S
2021-03-12 11:03:51,955 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3359ba18]]
2021-03-12 11:03:51,955 [main:149] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3359ba18]
2021-03-12 11:03:52,042 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:52,043 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:52,044 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.takeWhile({a: Char -> true})
2021-03-12 11:03:52,044 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@680719d6]]
2021-03-12 11:03:52,044 [main:149] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@680719d6]
2021-03-12 11:03:52,142 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:52,143 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.replaceBefore('㖅', S("ybpay").extension2(), S("ybpay").extension2())
2021-03-12 11:03:52,143 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]]
2021-03-12 11:03:52,143 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]
2021-03-12 11:03:52,232 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:52,353 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:52,354 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.padEnd(1173726258, 'ᱹ')
2021-03-12 11:03:52,354 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]]
2021-03-12 11:03:52,354 [main:149] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]
2021-03-12 11:03:52,442 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-12 11:03:52,443 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:52,444 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.filterIndexed({a: Int, b: Char -> false})
2021-03-12 11:03:52,445 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]]
2021-03-12 11:03:52,445 [main:149] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]
2021-03-12 11:03:52,536 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:52,540 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.removeSuffix("minox")
2021-03-12 11:03:52,540 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]]
2021-03-12 11:03:52,540 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]
2021-03-12 11:03:52,628 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:52,629 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.drop(-889067232)
2021-03-12 11:03:52,629 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]]
2021-03-12 11:03:52,629 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]
2021-03-12 11:03:52,629 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.toLowerCase()
2021-03-12 11:03:52,630 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2293e32a]]
2021-03-12 11:03:52,630 [main:149] - GENERATING call of type public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2293e32a]
2021-03-12 11:03:52,737 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:52,738 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:52,740 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.filterNot({a: Char -> false})
2021-03-12 11:03:52,741 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]]
2021-03-12 11:03:52,741 [main:149] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]
2021-03-12 11:03:52,832 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:52,833 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:52,835 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.dropLastWhile({a: Char -> true})
2021-03-12 11:03:52,835 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]]
2021-03-12 11:03:52,835 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]
2021-03-12 11:03:52,835 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.trimEnd()
2021-03-12 11:03:52,835 [main:61] - replacement of other.value of type String is (S("dzlub").plus()).value.toLowerCase()
2021-03-12 11:03:52,961 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:52,963 [main:53] - replacing ("c", String)
2021-03-12 11:03:52,964 [main:50] - replacing "c" String
2021-03-12 11:03:52,964 [main:54] - Getting value of type String
2021-03-12 11:03:53,066 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:53,066 [main:58] - GENERATED VALUE OF TYPE String = "ywlqx"
2021-03-12 11:03:53,067 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:53,069 [main:67] - randomType = S
2021-03-12 11:03:53,158 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:53,160 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:53,268 [main:194] - Type params = []
2021-03-12 11:03:53,355 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:53,364 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19492f9c]
2021-03-12 11:03:53,465 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:53,553 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:53,645 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:53,732 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 11:03:53,734 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 11:03:54,023 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 11:03:54,114 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:03:54,116 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:03:54,401 [main:302] - generating value of type = Int true depth = 6
2021-03-12 11:03:54,402 [main:95] - GENERATED = StringBuilder(541373602)
2021-03-12 11:03:54,403 [main:95] - GENERATED = StringBuilder(StringBuilder(541373602))
2021-03-12 11:03:54,403 [main:78] - Generated call from random type = (S("lqmcl")).value.replaceRange(-2047486539, 1280393194, StringBuilder(StringBuilder(541373602)))
2021-03-12 11:03:54,405 [main:106] - GETTING String from S
2021-03-12 11:03:54,429 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]]
2021-03-12 11:03:54,429 [main:149] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]
2021-03-12 11:03:54,430 [main:117] - GENERATED CALL = (C().member()).value.trimIndent()
2021-03-12 11:03:54,430 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]]
2021-03-12 11:03:54,430 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:03:54,549 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:54,550 [main:117] - GENERATED CALL = (C().member()).value.substring(-373095848)
2021-03-12 11:03:54,551 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]]
2021-03-12 11:03:54,551 [main:149] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]
2021-03-12 11:03:54,683 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:54,688 [main:117] - GENERATED CALL = (C().member()).value.removeSuffix("ivldr")
2021-03-12 11:03:54,688 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]]
2021-03-12 11:03:54,688 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]
2021-03-12 11:03:54,689 [main:117] - GENERATED CALL = (C().member()).value.uppercase()
2021-03-12 11:03:54,689 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15c54857]]
2021-03-12 11:03:54,689 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15c54857]
2021-03-12 11:03:54,689 [main:117] - GENERATED CALL = (C().member()).value.toUpperCase()
2021-03-12 11:03:54,689 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]]
2021-03-12 11:03:54,689 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]
2021-03-12 11:03:54,800 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:54,801 [main:117] - GENERATED CALL = (C().member()).value.drop(-646885479)
2021-03-12 11:03:54,801 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]]
2021-03-12 11:03:54,801 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]
2021-03-12 11:03:54,801 [main:117] - GENERATED CALL = (C().member()).value.toLowerCase()
2021-03-12 11:03:54,802 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]]
2021-03-12 11:03:54,802 [main:149] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]
2021-03-12 11:03:54,906 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:54,907 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:54,908 [main:117] - GENERATED CALL = (C().member()).value.takeLastWhile({a: Char -> true})
2021-03-12 11:03:54,908 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]]
2021-03-12 11:03:54,908 [main:149] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]
2021-03-12 11:03:55,015 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:55,016 [main:117] - GENERATED CALL = (C().member()).value.dropLast(256667172)
2021-03-12 11:03:55,016 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19492f9c]]
2021-03-12 11:03:55,016 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19492f9c]
2021-03-12 11:03:55,147 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:55,272 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:55,384 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:55,388 [main:117] - GENERATED CALL = (C().member()).value.replaceRange(1105704486, -2091265599, "mnecq")
2021-03-12 11:03:55,388 [main:61] - replacement of "c" of type String is (C().member()).value.trimIndent()
2021-03-12 11:03:55,498 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:55,498 [main:66] - Compilation checking started
2021-03-12 11:03:55,955 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call((C().member()).value.trimIndent(), S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:55,956 [main:53] - replacing (this.value, String)
2021-03-12 11:03:55,956 [main:50] - replacing this.value String
2021-03-12 11:03:55,956 [main:54] - Getting value of type String
2021-03-12 11:03:56,070 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:56,071 [main:58] - GENERATED VALUE OF TYPE String = "xssnd"
2021-03-12 11:03:56,072 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:56,075 [main:67] - randomType = C
2021-03-12 11:03:56,161 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:03:56,161 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("klans")
}
2021-03-12 11:03:56,167 [main:149] - GENERATING call of type public final fun member(x: S, y: kotlin.String): S defined in C[SimpleFunctionDescriptorImpl@66fae416]
2021-03-12 11:03:56,260 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:03:56,261 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:03:56,348 [main:194] - Type params = []
2021-03-12 11:03:56,455 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:03:56,456 [main:78] - Generated call from random type = (C()).member(S("mqbmp"), S("dzlub").value).value
2021-03-12 11:03:56,457 [main:106] - GETTING String from S
2021-03-12 11:03:56,463 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]]
2021-03-12 11:03:56,463 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]
2021-03-12 11:03:56,552 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:03:56,552 [main:117] - GENERATED CALL = (other).value.plus("mvzpq")
2021-03-12 11:03:56,553 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]]
2021-03-12 11:03:56,553 [main:149] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]
2021-03-12 11:03:56,642 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:56,643 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:56,644 [main:117] - GENERATED CALL = (other).value.dropWhile({a: Char -> false})
2021-03-12 11:03:56,644 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@224ba657]]
2021-03-12 11:03:56,644 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@224ba657]
2021-03-12 11:03:56,644 [main:117] - GENERATED CALL = (other).value.trim()
2021-03-12 11:03:56,644 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]]
2021-03-12 11:03:56,644 [main:149] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]
2021-03-12 11:03:56,725 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:03:56,835 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:56,837 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:03:57,073 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:03:57,075 [main:95] - GENERATED = StringBuilder("fufcz")
2021-03-12 11:03:57,075 [main:117] - GENERATED CALL = (other).value.removePrefix(StringBuilder("fufcz"))
2021-03-12 11:03:57,076 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58c4d86a]]
2021-03-12 11:03:57,076 [main:149] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58c4d86a]
2021-03-12 11:03:57,170 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:57,171 [main:117] - GENERATED CALL = (other).value.trimMargin("hhpvt")
2021-03-12 11:03:57,171 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]]
2021-03-12 11:03:57,171 [main:149] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]
2021-03-12 11:03:57,269 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:57,270 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:57,271 [main:117] - GENERATED CALL = (other).value.dropLastWhile({a: Char -> false})
2021-03-12 11:03:57,271 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]]
2021-03-12 11:03:57,271 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]
2021-03-12 11:03:57,271 [main:117] - GENERATED CALL = (other).value.trimStart()
2021-03-12 11:03:57,271 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@680719d6]]
2021-03-12 11:03:57,271 [main:149] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@680719d6]
2021-03-12 11:03:57,360 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:57,483 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:57,485 [main:117] - GENERATED CALL = (other).value.replaceBefore('ꟶ', "qbujq", S("ybpay").extension2())
2021-03-12 11:03:57,485 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]]
2021-03-12 11:03:57,485 [main:149] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]
2021-03-12 11:03:57,580 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:03:57,581 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:03:57,582 [main:117] - GENERATED CALL = (other).value.takeLastWhile({a: Char -> false})
2021-03-12 11:03:57,582 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@5f7355f7], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]]
2021-03-12 11:03:57,582 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]
2021-03-12 11:03:57,582 [main:117] - GENERATED CALL = (other).value.concat(S("ybpay").extension2())
2021-03-12 11:03:57,582 [main:61] - replacement of this.value of type String is (C()).member(S("mqbmp"), S("dzlub").value).value
2021-03-12 11:03:57,677 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:03:57,678 [main:66] - Compilation checking started
2021-03-12 11:03:58,157 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:03:58,158 [main:53] - replacing ("a", String)
2021-03-12 11:03:58,158 [main:50] - replacing "a" String
2021-03-12 11:03:58,158 [main:54] - Getting value of type String
2021-03-12 11:03:58,262 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:58,263 [main:58] - GENERATED VALUE OF TYPE String = "pgnwh"
2021-03-12 11:03:58,263 [main:61] - GENERATED IS CALL =false
2021-03-12 11:03:58,371 [main:67] - randomType = Long
2021-03-12 11:03:58,477 [main:302] - generating value of type = Long true depth = 0
2021-03-12 11:03:58,533 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1cfc8b7c]
2021-03-12 11:03:58,534 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@c8072b4]
2021-03-12 11:03:58,627 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:58,629 [main:78] - Generated call from random type = (-5556182519143478478).toLong().toString(952042272)
2021-03-12 11:03:58,629 [main:106] - GETTING String from String
2021-03-12 11:03:58,658 [main:113] - Case = [public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58c4d86a]]
2021-03-12 11:03:58,658 [main:149] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58c4d86a]
2021-03-12 11:03:58,750 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:58,751 [main:117] - GENERATED CALL = (S("ybpay").extension2()).trimMargin("cilsv")
2021-03-12 11:03:58,751 [main:113] - Case = [public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]]
2021-03-12 11:03:58,751 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]
2021-03-12 11:03:58,831 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:58,925 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:59,014 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:03:59,015 [main:117] - GENERATED CALL = (S("ybpay").extension2()).replace('瘞', '', false)
2021-03-12 11:03:59,016 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]]
2021-03-12 11:03:59,016 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]
2021-03-12 11:03:59,122 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:59,123 [main:117] - GENERATED CALL = (S("ybpay").extension2()).concat("ufomf")
2021-03-12 11:03:59,123 [main:113] - Case = [public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]]
2021-03-12 11:03:59,123 [main:149] - GENERATING call of type public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]
2021-03-12 11:03:59,205 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:59,207 [main:117] - GENERATED CALL = (S("ybpay").extension2()).substringAfterLast('呷', S("ybpay").extension2())
2021-03-12 11:03:59,207 [main:113] - Case = [public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]]
2021-03-12 11:03:59,207 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]
2021-03-12 11:03:59,299 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:59,300 [main:117] - GENERATED CALL = (S("ybpay").extension2()).replaceAfterLast('⑕', S("ybpay").extension2(), S("ybpay").extension2())
2021-03-12 11:03:59,301 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@224ba657]]
2021-03-12 11:03:59,301 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@224ba657]
2021-03-12 11:03:59,301 [main:117] - GENERATED CALL = (S("ybpay").extension2()).trim()
2021-03-12 11:03:59,301 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59de6183]]
2021-03-12 11:03:59,301 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:03:59,388 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:59,490 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:59,491 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59de6183]
2021-03-12 11:03:59,571 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:59,666 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:59,668 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(-1388693662, 41006197).substring(1818517386, 163744731)
2021-03-12 11:03:59,668 [main:113] - Case = [public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:03:59,668 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:03:59,755 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:03:59,845 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:03:59,846 [main:117] - GENERATED CALL = (S("ybpay").extension2()).replaceAfter('籊', S("ybpay").extension2(), "ghlga")
2021-03-12 11:03:59,846 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]]
2021-03-12 11:03:59,846 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:03:59,931 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:03:59,932 [main:117] - GENERATED CALL = (S("ybpay").extension2()).substring(-61795572)
2021-03-12 11:03:59,932 [main:113] - Case = [public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]]
2021-03-12 11:03:59,933 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]
2021-03-12 11:04:00,034 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:00,121 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:00,122 [main:117] - GENERATED CALL = (S("ybpay").extension2()).padEnd(-1626414526, 'ᤕ')
2021-03-12 11:04:00,122 [main:61] - replacement of "a" of type String is (S("ybpay").extension2()).trim()
2021-03-12 11:04:00,224 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:00,225 [main:53] - replacing (S("nigoi"), S)
2021-03-12 11:04:00,226 [main:50] - replacing S("nigoi") S
2021-03-12 11:04:00,226 [main:54] - Getting value of type S
2021-03-12 11:04:00,305 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:00,306 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:00,401 [main:194] - Type params = []
2021-03-12 11:04:00,493 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:00,494 [main:58] - GENERATED VALUE OF TYPE S = S("djsed")
2021-03-12 11:04:00,494 [main:61] - GENERATED IS CALL =true
2021-03-12 11:04:00,682 [main:67] - randomType = Long?
2021-03-12 11:04:00,793 [main:302] - generating value of type = Long true depth = 0
2021-03-12 11:04:00,849 [main:106] - GETTING S from S
2021-03-12 11:04:00,858 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:04:00,858 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:04:00,859 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).plus(S("dzlub").plus())
2021-03-12 11:04:00,859 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:04:00,859 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:00,956 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:00,957 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:01,045 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:01,047 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:01,275 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-12 11:04:01,276 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 11:04:01,367 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:01,368 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:01,654 [main:302] - generating value of type = Boolean true depth = 8
2021-03-12 11:04:01,655 [main:302] - generating value of type = Function0<Any> false depth = 8
2021-03-12 11:04:01,656 [main:302] - generating value of type = Any false depth = 9
2021-03-12 11:04:01,656 [main:95] - GENERATED = check(true, { "jvaul"})
2021-03-12 11:04:01,656 [main:95] - GENERATED = contract({ check(true, { "jvaul"})})
2021-03-12 11:04:01,657 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).onEach({a: Char -> contract({ check(true, { "jvaul"})})})
2021-03-12 11:04:01,657 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:04:01,657 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:01,738 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:01,739 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:01,834 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:01,836 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:02,105 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:04:02,106 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 11:04:02,107 [main:302] - generating value of type = Any false depth = 5
2021-03-12 11:04:02,107 [main:95] - GENERATED = require(false, { "rvsjm"})
2021-03-12 11:04:02,108 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).onEachIndexed({a: Int, b: Char -> require(false, { "rvsjm"})})
2021-03-12 11:04:02,108 [main:61] - replacement of S("nigoi") of type S is topLevel(S("dzlub").value, C().member())
2021-03-12 11:04:02,202 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 11:04:02,202 [main:66] - Compilation checking started
2021-03-12 11:04:02,474 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(topLevel(S("dzlub").value, C().member()), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:02,474 [main:53] - replacing (other.value, String)
2021-03-12 11:04:02,474 [main:50] - replacing other.value String
2021-03-12 11:04:02,474 [main:54] - Getting value of type String
2021-03-12 11:04:02,581 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:02,582 [main:58] - GENERATED VALUE OF TYPE String = "rzogx"
2021-03-12 11:04:02,582 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:02,584 [main:67] - randomType = Boolean
2021-03-12 11:04:02,673 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:02,686 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@130b5b00]
2021-03-12 11:04:02,776 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:02,777 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45075a13]
2021-03-12 11:04:02,859 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:02,860 [main:78] - Generated call from random type = (false).compareTo(false).toString(-2128497199)
2021-03-12 11:04:02,861 [main:106] - GETTING String from S
2021-03-12 11:04:02,866 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]]
2021-03-12 11:04:02,866 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]
2021-03-12 11:04:02,866 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.toLowerCase()
2021-03-12 11:04:02,866 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2293e32a]]
2021-03-12 11:04:02,867 [main:149] - GENERATING call of type public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2293e32a]
2021-03-12 11:04:02,962 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:02,963 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:02,964 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.filterNot({a: Char -> true})
2021-03-12 11:04:02,964 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@79f017f]]
2021-03-12 11:04:02,964 [main:149] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@79f017f]
2021-03-12 11:04:03,049 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:03,050 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.takeLast(-1570231652)
2021-03-12 11:04:03,050 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]]
2021-03-12 11:04:03,050 [main:149] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@520822f3]
2021-03-12 11:04:03,143 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:03,228 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:03,229 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.substringBeforeLast('搩', "vjtjx")
2021-03-12 11:04:03,229 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]]
2021-03-12 11:04:03,229 [main:149] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]
2021-03-12 11:04:03,327 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:04:03,331 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.removePrefix("ueqgd")
2021-03-12 11:04:03,331 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]]
2021-03-12 11:04:03,331 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]
2021-03-12 11:04:03,417 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:03,510 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:03,511 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.removeRange(1161070160, -173271324)
2021-03-12 11:04:03,511 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]]
2021-03-12 11:04:03,511 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]
2021-03-12 11:04:03,597 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:03,709 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:03,710 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.padEnd(-877966450, 'ბ')
2021-03-12 11:04:03,710 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]]
2021-03-12 11:04:03,710 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]
2021-03-12 11:04:03,793 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:03,795 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.replaceIndent("zlzwp")
2021-03-12 11:04:03,795 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]]
2021-03-12 11:04:03,795 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]
2021-03-12 11:04:03,886 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:03,887 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.drop(-344261873)
2021-03-12 11:04:03,887 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e1307a9]]
2021-03-12 11:04:03,887 [main:149] - GENERATING call of type public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e1307a9]
2021-03-12 11:04:03,977 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:03,978 [main:117] - GENERATED CALL = (topLevel(S("dzlub").value, C().member())).value.substringAfter('觴', S("dzlub").value)
2021-03-12 11:04:03,978 [main:61] - replacement of other.value of type String is (topLevel(S("dzlub").value, C().member())).value.filterNot({a: Char -> true})
2021-03-12 11:04:04,075 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:04,077 [main:53] - replacing (S("ab"), S)
2021-03-12 11:04:04,077 [main:50] - replacing S("ab") S
2021-03-12 11:04:04,077 [main:54] - Getting value of type S
2021-03-12 11:04:04,161 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:04,162 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:04,251 [main:194] - Type params = []
2021-03-12 11:04:04,334 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:04,335 [main:58] - GENERATED VALUE OF TYPE S = S("wmstp")
2021-03-12 11:04:04,336 [main:61] - GENERATED IS CALL =true
2021-03-12 11:04:04,434 [main:67] - randomType = Double
2021-03-12 11:04:04,518 [main:302] - generating value of type = Double true depth = 0
2021-03-12 11:04:04,565 [main:106] - GETTING S from S
2021-03-12 11:04:04,571 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:04:04,571 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:04,653 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:04,653 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:04,753 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:04,755 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:05,045 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:04:05,047 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 11:04:05,048 [main:302] - generating value of type = Any false depth = 5
2021-03-12 11:04:05,048 [main:95] - GENERATED = check(true, { "gleub"})
2021-03-12 11:04:05,049 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEachIndexed({a: Int, b: Char -> check(true, { "gleub"})})
2021-03-12 11:04:05,049 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:04:05,049 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:05,143 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:05,144 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:05,233 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:05,235 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:05,448 [main:302] - generating value of type = Any false depth = 4
2021-03-12 11:04:05,449 [main:95] - GENERATED = println("kafeb")
2021-03-12 11:04:05,449 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEach({a: Char -> println("kafeb")})
2021-03-12 11:04:05,449 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:04:05,449 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:04:05,543 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:05,544 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:05,654 [main:194] - Type params = []
2021-03-12 11:04:05,768 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:05,769 [main:117] - GENERATED CALL = (S("dzlub").plus()).plus(S("tpomh"))
2021-03-12 11:04:05,769 [main:61] - replacement of S("ab") of type S is (S("dzlub").plus()).plus(S("tpomh"))
2021-03-12 11:04:05,858 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:05,858 [main:66] - Compilation checking started
2021-03-12 11:04:06,095 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals((S("dzlub").plus()).plus(S("tpomh")), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:06,097 [main:53] - replacing (this + y, S)
2021-03-12 11:04:06,097 [main:50] - replacing this + y S
2021-03-12 11:04:06,097 [main:54] - Getting value of type S
2021-03-12 11:04:06,195 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:06,195 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:06,286 [main:194] - Type params = []
2021-03-12 11:04:06,384 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:06,385 [main:58] - GENERATED VALUE OF TYPE S = S("nryvj")
2021-03-12 11:04:06,385 [main:61] - GENERATED IS CALL =true
2021-03-12 11:04:06,482 [main:67] - randomType = S?
2021-03-12 11:04:06,589 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:06,590 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:06,676 [main:194] - Type params = []
2021-03-12 11:04:06,759 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:06,768 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@d8a06f0]
2021-03-12 11:04:06,768 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:06,860 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:06,860 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:06,943 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:06,945 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:07,139 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-12 11:04:07,140 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 11:04:07,241 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:07,243 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:07,456 [main:302] - generating value of type = Any false depth = 8
2021-03-12 11:04:07,457 [main:95] - GENERATED = println("bxcvs")
2021-03-12 11:04:07,457 [main:95] - GENERATED = contract({ println("bxcvs")})
2021-03-12 11:04:07,458 [main:78] - Generated call from random type = (S("biiiv"))?.plus(topLevel(S("dzlub").value, C().member())).onEachIndexed({a: Int, b: Char -> contract({ println("bxcvs")})})
2021-03-12 11:04:07,458 [main:106] - GETTING S from S
2021-03-12 11:04:07,466 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:04:07,466 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:07,556 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:07,556 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:07,562 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).onEachIndexed({a: Int, b: Char -> println()})
2021-03-12 11:04:07,562 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:04:07,562 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:07,665 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:07,666 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:07,754 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:07,755 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:07,963 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:04:07,964 [main:95] - GENERATED = check(false)
2021-03-12 11:04:07,964 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).onEach({a: Char -> check(false)})
2021-03-12 11:04:07,964 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:04:07,965 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:04:07,965 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).plus(topLevel(S("dzlub").value, C().member()))
2021-03-12 11:04:07,965 [main:61] - replacement of this + y of type S is (S("hyluf").extension(S("vqfru"))).plus(topLevel(S("dzlub").value, C().member()))
2021-03-12 11:04:08,056 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:08,057 [main:66] - Compilation checking started
2021-03-12 11:04:08,292 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = (S("hyluf").extension(S("vqfru"))).plus(topLevel(S("dzlub").value, C().member()))

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:08,293 [main:53] - replacing ("d", String)
2021-03-12 11:04:08,294 [main:50] - replacing "d" String
2021-03-12 11:04:08,294 [main:54] - Getting value of type String
2021-03-12 11:04:08,388 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:08,389 [main:58] - GENERATED VALUE OF TYPE String = "kvrnj"
2021-03-12 11:04:08,389 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:08,481 [main:67] - randomType = UByte
2021-03-12 11:04:08,569 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 11:04:08,609 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@a22f83]
2021-03-12 11:04:08,688 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 11:04:08,689 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45075a13]
2021-03-12 11:04:08,782 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:08,783 [main:78] - Generated call from random type = (24.toUByte()).compareTo(27.toUByte()).toString(1805129510)
2021-03-12 11:04:08,783 [main:106] - GETTING String from String
2021-03-12 11:04:08,809 [main:113] - Case = [public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]]
2021-03-12 11:04:08,809 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]
2021-03-12 11:04:08,892 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:04:08,986 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:04:08,987 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:04:09,185 [main:302] - generating value of type = Int true depth = 3
2021-03-12 11:04:09,186 [main:95] - GENERATED = StringBuilder(-525928834)
2021-03-12 11:04:09,187 [main:117] - GENERATED CALL = (S("dzlub").value).removeSurrounding(StringBuilder(-525928834))
2021-03-12 11:04:09,187 [main:113] - Case = [public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58c4d86a]]
2021-03-12 11:04:09,187 [main:149] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58c4d86a]
2021-03-12 11:04:09,273 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:09,274 [main:117] - GENERATED CALL = (S("dzlub").value).trimMargin("njjil")
2021-03-12 11:04:09,274 [main:113] - Case = [public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]]
2021-03-12 11:04:09,274 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]
2021-03-12 11:04:09,366 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:09,453 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:09,454 [main:117] - GENERATED CALL = (S("dzlub").value).replaceAfterLast('᭲', S("dzlub").value, "wubsv")
2021-03-12 11:04:09,454 [main:113] - Case = [public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]]
2021-03-12 11:04:09,454 [main:149] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]
2021-03-12 11:04:09,556 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:09,557 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:09,559 [main:117] - GENERATED CALL = (S("dzlub").value).takeLastWhile({a: Char -> true})
2021-03-12 11:04:09,559 [main:113] - Case = [public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]]
2021-03-12 11:04:09,559 [main:149] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]
2021-03-12 11:04:09,648 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-12 11:04:09,649 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:09,650 [main:117] - GENERATED CALL = (S("dzlub").value).filterIndexed({a: Int, b: Char -> true})
2021-03-12 11:04:09,650 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70fc477e]]
2021-03-12 11:04:09,650 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:04:09,739 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:09,822 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:09,823 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70fc477e]
2021-03-12 11:04:09,919 [main:302] - generating value of type = Regex false depth = 0
2021-03-12 11:04:10,006 [main:43] - GENERATING CALL OF fun Regex(pattern: kotlin.String): Regex = TODO()
2021-03-12 11:04:10,008 [main:61] - WITHOUT TYPE PARAMS = fun Regex(pattern: kotlin.String): Regex = TODO()
2021-03-12 11:04:10,187 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:04:10,188 [main:95] - GENERATED = Regex("jkeyr")
2021-03-12 11:04:10,282 [main:302] - generating value of type = Function1<MatchResult, CharSequence> false depth = 0
2021-03-12 11:04:10,283 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 11:04:10,287 [main:117] - GENERATED CALL = (S("dzlub").value).subSequence(-15521289, -1019730226).replace(Regex("jkeyr"), {a: MatchResult -> "sipxh"})
2021-03-12 11:04:10,287 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]]
2021-03-12 11:04:10,287 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]
2021-03-12 11:04:10,371 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:10,461 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:10,462 [main:117] - GENERATED CALL = (S("dzlub").value).removeRange(-551595287, -1357041191)
2021-03-12 11:04:10,463 [main:113] - Case = [public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d7cb2d8]]
2021-03-12 11:04:10,463 [main:149] - GENERATING call of type public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d7cb2d8]
2021-03-12 11:04:10,563 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:10,564 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:10,565 [main:117] - GENERATED CALL = (S("dzlub").value).filter({a: Char -> false})
2021-03-12 11:04:10,565 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]]
2021-03-12 11:04:10,565 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]
2021-03-12 11:04:10,565 [main:117] - GENERATED CALL = (S("dzlub").value).toLowerCase()
2021-03-12 11:04:10,565 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]]
2021-03-12 11:04:10,565 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]
2021-03-12 11:04:10,566 [main:117] - GENERATED CALL = (S("dzlub").value).lowercase()
2021-03-12 11:04:10,566 [main:61] - replacement of "d" of type String is (S("dzlub").value).lowercase()
2021-03-12 11:04:10,688 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:10,689 [main:66] - Compilation checking started
2021-03-12 11:04:11,267 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:11,269 [main:53] - replacing (y, S)
2021-03-12 11:04:11,269 [main:50] - replacing y S
2021-03-12 11:04:11,269 [main:54] - Getting value of type S
2021-03-12 11:04:11,410 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:11,411 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:11,558 [main:194] - Type params = []
2021-03-12 11:04:11,667 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:11,668 [main:58] - GENERATED VALUE OF TYPE S = S("plodn")
2021-03-12 11:04:11,668 [main:61] - GENERATED IS CALL =true
2021-03-12 11:04:11,671 [main:67] - randomType = C
2021-03-12 11:04:11,759 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:04:11,760 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = S("klans")
}
2021-03-12 11:04:11,768 [main:149] - GENERATING call of type public final fun member(x: S, y: kotlin.String): S defined in C[SimpleFunctionDescriptorImpl@2ae02fd8]
2021-03-12 11:04:11,860 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:11,861 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:11,961 [main:194] - Type params = []
2021-03-12 11:04:12,049 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:12,050 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@38d932e8]
2021-03-12 11:04:12,051 [main:78] - Generated call from random type = (C()).member(S("vucgi"), S("dzlub").value).plus(topLevel(S("dzlub").value, C().member()))
2021-03-12 11:04:12,051 [main:106] - GETTING S from S
2021-03-12 11:04:12,057 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:04:12,057 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:04:12,058 [main:117] - GENERATED CALL = (S("dzlub").plus()).plus(S("dzlub").plus())
2021-03-12 11:04:12,058 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:04:12,058 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:12,155 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:12,156 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:12,245 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:12,246 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:12,459 [main:302] - generating value of type = Any false depth = 4
2021-03-12 11:04:12,459 [main:95] - GENERATED = println("ljtgh")
2021-03-12 11:04:12,460 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEachIndexed({a: Int, b: Char -> println("ljtgh")})
2021-03-12 11:04:12,460 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:04:12,460 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:12,568 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:12,569 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:12,659 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:12,660 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:12,855 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:04:12,856 [main:95] - GENERATED = check(true)
2021-03-12 11:04:12,857 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEach({a: Char -> check(true)})
2021-03-12 11:04:12,857 [main:61] - replacement of y of type S is (S("dzlub").plus()).plus(S("dzlub").plus())
2021-03-12 11:04:12,952 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:12,952 [main:66] - Compilation checking started
2021-03-12 11:04:13,241 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + (S("dzlub").plus()).plus(S("dzlub").plus())

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:13,241 [main:53] - replacing ("ij", String)
2021-03-12 11:04:13,241 [main:50] - replacing "ij" String
2021-03-12 11:04:13,241 [main:54] - Getting value of type String
2021-03-12 11:04:13,359 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:13,360 [main:58] - GENERATED VALUE OF TYPE String = "yfdxx"
2021-03-12 11:04:13,361 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:13,546 [main:67] - randomType = Long?
2021-03-12 11:04:13,628 [main:302] - generating value of type = Long true depth = 0
2021-03-12 11:04:13,661 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7427c402]
2021-03-12 11:04:13,661 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7996cd43]
2021-03-12 11:04:13,759 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:13,761 [main:78] - Generated call from random type = (-3780807399908056411)?.toByte().toString(-1006994196)
2021-03-12 11:04:13,761 [main:106] - GETTING String from String
2021-03-12 11:04:13,792 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]]
2021-03-12 11:04:13,792 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:04:13,884 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:13,885 [main:117] - GENERATED CALL = (S("dzlub").value).substring(-401161532)
2021-03-12 11:04:13,885 [main:113] - Case = [public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:04:13,885 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:04:13,974 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:13,975 [main:117] - GENERATED CALL = (S("dzlub").value).replaceAfter('㋼', S("ybpay").extension2(), S("dzlub").value)
2021-03-12 11:04:13,975 [main:113] - Case = [public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7186f66a]]
2021-03-12 11:04:13,975 [main:149] - GENERATING call of type public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7186f66a]
2021-03-12 11:04:13,976 [main:117] - GENERATED CALL = (S("dzlub").value).prependIndent(S("dzlub").value)
2021-03-12 11:04:13,976 [main:113] - Case = [public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]]
2021-03-12 11:04:13,976 [main:149] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]
2021-03-12 11:04:14,056 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-12 11:04:14,057 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:14,058 [main:117] - GENERATED CALL = (S("dzlub").value).filterIndexed({a: Int, b: Char -> false})
2021-03-12 11:04:14,058 [main:113] - Case = [public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]]
2021-03-12 11:04:14,058 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]
2021-03-12 11:04:14,151 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:04:14,240 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 11:04:14,242 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 11:04:14,451 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 11:04:14,579 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:04:14,580 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:04:14,810 [main:302] - generating value of type = Int true depth = 6
2021-03-12 11:04:14,812 [main:95] - GENERATED = StringBuilder(1585843705)
2021-03-12 11:04:14,812 [main:95] - GENERATED = StringBuilder(StringBuilder(1585843705))
2021-03-12 11:04:14,813 [main:117] - GENERATED CALL = (S("dzlub").value).removeSurrounding(StringBuilder(StringBuilder(1585843705)))
2021-03-12 11:04:14,813 [main:113] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@4b35d2db], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45075a13]]
2021-03-12 11:04:14,813 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45075a13]
2021-03-12 11:04:14,898 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:14,899 [main:117] - GENERATED CALL = (S("dzlub").value).length.toString(-1567407623)
2021-03-12 11:04:14,900 [main:113] - Case = [public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4fbe4484]]
2021-03-12 11:04:14,900 [main:149] - GENERATING call of type public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4fbe4484]
2021-03-12 11:04:14,992 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:04:15,080 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:04:15,082 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:04:15,269 [main:302] - generating value of type = Int true depth = 3
2021-03-12 11:04:15,271 [main:95] - GENERATED = StringBuilder(-1441925709)
2021-03-12 11:04:15,370 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:15,372 [main:117] - GENERATED CALL = (S("dzlub").value).commonPrefixWith(StringBuilder(-1441925709), true)
2021-03-12 11:04:15,372 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59de6183]]
2021-03-12 11:04:15,372 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:04:15,456 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:15,546 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:15,547 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59de6183]
2021-03-12 11:04:15,628 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:15,721 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:15,723 [main:117] - GENERATED CALL = (S("dzlub").value).subSequence(-385179135, -788722518).substring(1323681688, -1001135947)
2021-03-12 11:04:15,723 [main:113] - Case = [public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]]
2021-03-12 11:04:15,723 [main:149] - GENERATING call of type public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]
2021-03-12 11:04:15,818 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:15,910 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:15,911 [main:117] - GENERATED CALL = (S("dzlub").value).replaceBeforeLast('쮇', "pdjwe", S("dzlub").value)
2021-03-12 11:04:15,912 [main:113] - Case = [public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]]
2021-03-12 11:04:15,912 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]
2021-03-12 11:04:15,997 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:16,091 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:16,092 [main:117] - GENERATED CALL = (S("dzlub").value).replaceAfterLast('ꦡ', S("dzlub").value, "svehh")
2021-03-12 11:04:16,092 [main:61] - replacement of "ij" of type String is (S("dzlub").value).filterIndexed({a: Int, b: Char -> false})
2021-03-12 11:04:16,175 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:16,177 [main:53] - replacing ("_", String)
2021-03-12 11:04:16,178 [main:50] - replacing "_" String
2021-03-12 11:04:16,178 [main:54] - Getting value of type String
2021-03-12 11:04:16,268 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:16,269 [main:58] - GENERATED VALUE OF TYPE String = "rxceh"
2021-03-12 11:04:16,269 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:16,272 [main:67] - randomType = S
2021-03-12 11:04:16,354 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:16,354 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:16,451 [main:194] - Type params = []
2021-03-12 11:04:16,537 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:16,546 [main:149] - GENERATING call of type public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2293e32a]
2021-03-12 11:04:16,640 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:16,641 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:16,642 [main:78] - Generated call from random type = (S("annnj")).value.filterNot({a: Char -> false})
2021-03-12 11:04:16,642 [main:106] - GETTING String from String
2021-03-12 11:04:16,672 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59de6183]]
2021-03-12 11:04:16,672 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@54a8e7fb]
2021-03-12 11:04:16,754 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:16,846 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:16,847 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59de6183]
2021-03-12 11:04:16,932 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:17,027 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:17,029 [main:117] - GENERATED CALL = (S("ybpay").extension2()).subSequence(1241185449, 52561956).substring(-58409020, -195382034)
2021-03-12 11:04:17,029 [main:113] - Case = [public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]]
2021-03-12 11:04:17,029 [main:149] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]
2021-03-12 11:04:17,112 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-12 11:04:17,112 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:17,113 [main:117] - GENERATED CALL = (S("ybpay").extension2()).filterIndexed({a: Int, b: Char -> false})
2021-03-12 11:04:17,114 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]]
2021-03-12 11:04:17,114 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]
2021-03-12 11:04:17,210 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 11:04:17,300 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: Int): Iterable<Int> = TODO()
2021-03-12 11:04:17,302 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: Int): Iterable<Int> = TODO()
2021-03-12 11:04:17,395 [main:302] - generating value of type = Int true depth = 3
2021-03-12 11:04:17,396 [main:95] - GENERATED = arrayListOf<Int>(-1373201779)
2021-03-12 11:04:17,397 [main:117] - GENERATED CALL = (S("ybpay").extension2()).slice(arrayListOf<Int>(-1373201779))
2021-03-12 11:04:17,397 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]]
2021-03-12 11:04:17,397 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b34459e]
2021-03-12 11:04:17,397 [main:117] - GENERATED CALL = (S("ybpay").extension2()).toLowerCase()
2021-03-12 11:04:17,397 [main:113] - Case = [public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]]
2021-03-12 11:04:17,397 [main:149] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]
2021-03-12 11:04:17,477 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:04:17,481 [main:117] - GENERATED CALL = (S("ybpay").extension2()).removePrefix("ilyzz")
2021-03-12 11:04:17,481 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15c54857]]
2021-03-12 11:04:17,482 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15c54857]
2021-03-12 11:04:17,482 [main:117] - GENERATED CALL = (S("ybpay").extension2()).toUpperCase()
2021-03-12 11:04:17,482 [main:113] - Case = [public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b101baf]]
2021-03-12 11:04:17,482 [main:149] - GENERATING call of type public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b101baf]
2021-03-12 11:04:17,577 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:17,578 [main:117] - GENERATED CALL = (S("ybpay").extension2()).take(260077410)
2021-03-12 11:04:17,578 [main:113] - Case = [public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]]
2021-03-12 11:04:17,578 [main:149] - GENERATING call of type public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]
2021-03-12 11:04:17,662 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:17,752 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:17,753 [main:117] - GENERATED CALL = (S("ybpay").extension2()).substringAfterLast('䖷', "niihz")
2021-03-12 11:04:17,753 [main:113] - Case = [public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c62c2e2]]
2021-03-12 11:04:17,753 [main:149] - GENERATING call of type public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c62c2e2]
2021-03-12 11:04:17,754 [main:117] - GENERATED CALL = (S("ybpay").extension2()).capitalize()
2021-03-12 11:04:17,754 [main:113] - Case = [public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]]
2021-03-12 11:04:17,754 [main:149] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]
2021-03-12 11:04:17,754 [main:117] - GENERATED CALL = (S("ybpay").extension2()).trimIndent()
2021-03-12 11:04:17,754 [main:61] - replacement of "_" of type String is S("ybpay").extension2()
2021-03-12 11:04:17,835 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:17,835 [main:66] - Compilation checking started
2021-03-12 11:04:18,179 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:18,181 [main:53] - replacing ("ab", String)
2021-03-12 11:04:18,182 [main:50] - replacing "ab" String
2021-03-12 11:04:18,182 [main:54] - Getting value of type String
2021-03-12 11:04:18,290 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:18,291 [main:58] - GENERATED VALUE OF TYPE String = "pogbe"
2021-03-12 11:04:18,292 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:18,810 [main:67] - randomType = LinkedHashMap<ArrayDeque<Char?>, UInt>?
2021-03-12 11:04:18,899 [main:302] - generating value of type = LinkedHashMap<ArrayDeque<Char?>, UInt> false depth = 0
2021-03-12 11:04:18,988 [main:43] - GENERATING CALL OF fun <K, V> LinkedHashMap(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): LinkedHashMap<ArrayDeque<Char?>, UInt> = TODO()
2021-03-12 11:04:18,990 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> LinkedHashMap(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): LinkedHashMap<ArrayDeque<Char?>, UInt> = TODO()
2021-03-12 11:04:19,305 [main:302] - generating value of type = Int true depth = 3
2021-03-12 11:04:19,306 [main:302] - generating value of type = Float true depth = 3
2021-03-12 11:04:19,307 [main:95] - GENERATED = LinkedHashMap<ArrayDeque<Char?>, UInt>(-1609342071, 0.6247316f)
2021-03-12 11:04:19,572 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@45075a13]
2021-03-12 11:04:19,687 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:19,689 [main:78] - Generated call from random type = (LinkedHashMap<ArrayDeque<Char?>, UInt>(-1609342071, 0.6247316f))?.size.toString(-1480351185)
2021-03-12 11:04:19,690 [main:106] - GETTING String from S
2021-03-12 11:04:19,698 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c62c2e2]]
2021-03-12 11:04:19,698 [main:149] - GENERATING call of type public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c62c2e2]
2021-03-12 11:04:19,699 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.capitalize()
2021-03-12 11:04:19,699 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]]
2021-03-12 11:04:19,699 [main:149] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]
2021-03-12 11:04:19,793 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:19,794 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:19,796 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})
2021-03-12 11:04:19,796 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]]
2021-03-12 11:04:19,796 [main:149] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]
2021-03-12 11:04:19,889 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:19,889 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:19,891 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.dropWhile({a: Char -> true})
2021-03-12 11:04:19,891 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]]
2021-03-12 11:04:19,891 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]
2021-03-12 11:04:19,990 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 11:04:20,079 [main:43] - GENERATING CALL OF fun CharRange(start: kotlin.Char, endInclusive: kotlin.Char): Iterable<Int> = TODO()
2021-03-12 11:04:20,081 [main:61] - WITHOUT TYPE PARAMS = fun CharRange(start: kotlin.Char, endInclusive: kotlin.Char): Iterable<Int> = TODO()
2021-03-12 11:04:20,369 [main:302] - generating value of type = Char true depth = 3
2021-03-12 11:04:20,370 [main:302] - generating value of type = Char true depth = 3
2021-03-12 11:04:20,371 [main:95] - GENERATED = CharRange('ꔹ', '仪')
2021-03-12 11:04:20,371 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.slice(CharRange('ꔹ', '仪'))
2021-03-12 11:04:20,372 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]]
2021-03-12 11:04:20,372 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]
2021-03-12 11:04:20,372 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.lowercase()
2021-03-12 11:04:20,372 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]]
2021-03-12 11:04:20,372 [main:149] - GENERATING call of type public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63b4cae3]
2021-03-12 11:04:20,463 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:20,464 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.substringAfterLast('榿', S("ybpay").extension2())
2021-03-12 11:04:20,465 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6990ce12]]
2021-03-12 11:04:20,465 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6990ce12]
2021-03-12 11:04:20,546 [main:302] - generating value of type = Function1<Char, Char> false depth = 0
2021-03-12 11:04:20,547 [main:302] - generating value of type = Char true depth = 1
2021-03-12 11:04:20,548 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.replaceFirstChar({a: Char -> '抃'})
2021-03-12 11:04:20,548 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]]
2021-03-12 11:04:20,548 [main:149] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]
2021-03-12 11:04:20,650 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:20,651 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:20,652 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.dropLastWhile({a: Char -> true})
2021-03-12 11:04:20,652 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]]
2021-03-12 11:04:20,652 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]
2021-03-12 11:04:20,653 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.replaceIndent(S("ybpay").extension2())
2021-03-12 11:04:20,653 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]]
2021-03-12 11:04:20,653 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]
2021-03-12 11:04:20,737 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:04:20,742 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).value.removeSurrounding(StringBuilder())
2021-03-12 11:04:20,742 [main:61] - replacement of "ab" of type String is (S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})
2021-03-12 11:04:20,837 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:20,837 [main:66] - Compilation checking started
2021-03-12 11:04:21,212 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:21,214 [main:53] - replacing (S("gh"), S)
2021-03-12 11:04:21,215 [main:50] - replacing S("gh") S
2021-03-12 11:04:21,215 [main:54] - Getting value of type S
2021-03-12 11:04:21,318 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:21,319 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:21,407 [main:194] - Type params = []
2021-03-12 11:04:21,505 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:21,506 [main:58] - GENERATED VALUE OF TYPE S = S("lzico")
2021-03-12 11:04:21,506 [main:61] - GENERATED IS CALL =true
2021-03-12 11:04:21,956 [main:67] - randomType = Sequence<HashMap<Byte, Set<ULong>>>
2021-03-12 11:04:21,957 [main:106] - GETTING S from S
2021-03-12 11:04:21,964 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:04:21,964 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:22,066 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:22,067 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:22,164 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:22,166 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:22,366 [main:302] - generating value of type = Any false depth = 4
2021-03-12 11:04:22,366 [main:95] - GENERATED = print("rckgq")
2021-03-12 11:04:22,367 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEachIndexed({a: Int, b: Char -> print("rckgq")})
2021-03-12 11:04:22,367 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:04:22,367 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:22,451 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:22,452 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:22,456 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEach({a: Char -> println()})
2021-03-12 11:04:22,456 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:04:22,456 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:04:22,456 [main:117] - GENERATED CALL = (S("dzlub").plus()).plus(S("hyluf").extension(S("vqfru")))
2021-03-12 11:04:22,456 [main:61] - replacement of S("gh") of type S is (S("dzlub").plus()).onEach({a: Char -> println()})
2021-03-12 11:04:22,552 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:22,552 [main:66] - Compilation checking started
2021-03-12 11:04:22,876 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals((S("dzlub").plus()).onEach({a: Char -> println()}), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:22,877 [main:53] - replacing (S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz")), S)
2021-03-12 11:04:22,877 [main:50] - replacing S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz")) S
2021-03-12 11:04:22,877 [main:54] - Getting value of type S
2021-03-12 11:04:23,010 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:23,012 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:23,125 [main:194] - Type params = []
2021-03-12 11:04:23,216 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:23,217 [main:58] - GENERATED VALUE OF TYPE S = S("ugvfx")
2021-03-12 11:04:23,217 [main:61] - GENERATED IS CALL =true
2021-03-12 11:04:23,220 [main:67] - randomType = S
2021-03-12 11:04:23,305 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:23,305 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:23,411 [main:194] - Type params = []
2021-03-12 11:04:23,525 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:23,532 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@2f7241f1]
2021-03-12 11:04:23,532 [main:78] - Generated call from random type = (S("yqiry")).plus(S("dzlub").plus())
2021-03-12 11:04:23,532 [main:106] - GETTING S from S
2021-03-12 11:04:23,538 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:04:23,539 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:23,629 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:23,630 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:23,718 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:23,720 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:23,927 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-12 11:04:23,928 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 11:04:24,028 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:24,029 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:24,233 [main:302] - generating value of type = Any false depth = 8
2021-03-12 11:04:24,233 [main:95] - GENERATED = print("dbcmq")
2021-03-12 11:04:24,233 [main:95] - GENERATED = contract({ print("dbcmq")})
2021-03-12 11:04:24,234 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEachIndexed({a: Int, b: Char -> contract({ print("dbcmq")})})
2021-03-12 11:04:24,234 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:04:24,234 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:04:24,234 [main:117] - GENERATED CALL = (S("dzlub").plus()).plus(S("dzlub").plus())
2021-03-12 11:04:24,234 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:04:24,235 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:24,321 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:24,321 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:24,417 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:24,419 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:24,709 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:04:24,710 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 11:04:24,711 [main:302] - generating value of type = Any false depth = 5
2021-03-12 11:04:24,711 [main:95] - GENERATED = check(false, { "nnago"})
2021-03-12 11:04:24,712 [main:117] - GENERATED CALL = (S("dzlub").plus()).onEach({a: Char -> check(false, { "nnago"})})
2021-03-12 11:04:24,712 [main:61] - replacement of S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz")) of type S is (S("dzlub").plus()).plus(S("dzlub").plus())
2021-03-12 11:04:24,807 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:24,808 [main:66] - Compilation checking started
2021-03-12 11:04:25,056 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = (S("dzlub").plus()).plus(S("dzlub").plus())
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:25,057 [main:53] - replacing (this, S)
2021-03-12 11:04:25,057 [main:50] - replacing this S
2021-03-12 11:04:25,058 [main:54] - Getting value of type S
2021-03-12 11:04:25,153 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:25,154 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:25,241 [main:194] - Type params = []
2021-03-12 11:04:25,333 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:25,334 [main:58] - GENERATED VALUE OF TYPE S = S("amcjs")
2021-03-12 11:04:25,334 [main:61] - GENERATED IS CALL =true
2021-03-12 11:04:25,433 [main:67] - randomType = S?
2021-03-12 11:04:25,542 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:25,543 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:25,642 [main:194] - Type params = []
2021-03-12 11:04:25,741 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:25,750 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@69c4780]
2021-03-12 11:04:25,751 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:25,848 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:25,849 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:25,951 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:25,953 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 11:04:26,252 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:04:26,253 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 11:04:26,254 [main:302] - generating value of type = Any false depth = 5
2021-03-12 11:04:26,254 [main:95] - GENERATED = require(true, { "xaflv"})
2021-03-12 11:04:26,255 [main:78] - Generated call from random type = (S("sfmif"))?.plus(topLevel(S("dzlub").value, C().member())).onEach({a: Char -> require(true, { "xaflv"})})
2021-03-12 11:04:26,255 [main:106] - GETTING S from S
2021-03-12 11:04:26,261 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:04:26,261 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:26,359 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:26,360 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:26,451 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:26,452 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:26,819 [main:302] - generating value of type = Int true depth = 4
2021-03-12 11:04:26,820 [main:302] - generating value of type = Function1<Int, Unit> false depth = 4
2021-03-12 11:04:26,821 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 11:04:26,915 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:26,916 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:27,220 [main:302] - generating value of type = Int true depth = 8
2021-03-12 11:04:27,221 [main:302] - generating value of type = Function1<Int, Unit> false depth = 8
2021-03-12 11:04:27,222 [main:302] - generating value of type = Unit false depth = 9
2021-03-12 11:04:27,312 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:27,314 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:27,610 [main:302] - generating value of type = Int true depth = 12
2021-03-12 11:04:27,611 [main:302] - generating value of type = Function1<Int, Unit> false depth = 12
2021-03-12 11:04:27,612 [main:302] - generating value of type = Unit false depth = 13
2021-03-12 11:04:27,732 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:27,733 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:28,061 [main:302] - generating value of type = Int true depth = 16
2021-03-12 11:04:28,062 [main:385] - Cant generate call of fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:28,062 [main:95] - GENERATED = repeat(-150028035, {a: Int -> })
2021-03-12 11:04:28,062 [main:95] - GENERATED = repeat(1883145104, {a: Int -> repeat(-150028035, {a: Int -> })})
2021-03-12 11:04:28,062 [main:95] - GENERATED = repeat(1089445996, {a: Int -> repeat(1883145104, {a: Int -> repeat(-150028035, {a: Int -> })})})
2021-03-12 11:04:28,063 [main:117] - GENERATED CALL = (y).onEachIndexed({a: Int, b: Char -> repeat(1089445996, {a: Int -> repeat(1883145104, {a: Int -> repeat(-150028035, {a: Int -> })})})})
2021-03-12 11:04:28,063 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:04:28,063 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:28,165 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:28,166 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:28,264 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:28,266 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:28,472 [main:302] - generating value of type = Any false depth = 4
2021-03-12 11:04:28,473 [main:95] - GENERATED = print("iceyv")
2021-03-12 11:04:28,473 [main:117] - GENERATED CALL = (y).onEach({a: Char -> print("iceyv")})
2021-03-12 11:04:28,473 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5faab93]]
2021-03-12 11:04:28,473 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5faab93]
2021-03-12 11:04:28,473 [main:117] - GENERATED CALL = (y).plus(S("dzlub").plus())
2021-03-12 11:04:28,473 [main:61] - replacement of this of type S is (y).onEachIndexed({a: Int, b: Char -> repeat(1089445996, {a: Int -> repeat(1883145104, {a: Int -> repeat(-150028035, {a: Int -> })})})})
2021-03-12 11:04:28,576 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:28,576 [main:66] - Compilation checking started
2021-03-12 11:04:28,979 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = (y).onEachIndexed({a: Int, b: Char -> repeat(1089445996, {a: Int -> repeat(1883145104, {a: Int -> repeat(-150028035, {a: Int -> })})})}) + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:28,981 [main:53] - replacing (S((S("dzlub").value).lowercase()), S)
2021-03-12 11:04:28,982 [main:50] - replacing S((S("dzlub").value).lowercase()) S
2021-03-12 11:04:28,982 [main:54] - Getting value of type S
2021-03-12 11:04:29,093 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:29,094 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:29,208 [main:194] - Type params = []
2021-03-12 11:04:29,326 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:29,327 [main:58] - GENERATED VALUE OF TYPE S = S("whenq")
2021-03-12 11:04:29,327 [main:61] - GENERATED IS CALL =true
2021-03-12 11:04:29,547 [main:67] - randomType = List<C>
2021-03-12 11:04:29,547 [main:106] - GETTING S from S
2021-03-12 11:04:29,555 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:04:29,555 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:04:29,556 [main:117] - GENERATED CALL = (C().member()).plus(topLevel(S("dzlub").value, C().member()))
2021-03-12 11:04:29,556 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:04:29,556 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:29,657 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:29,658 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:29,760 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:29,763 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:29,964 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:04:29,966 [main:95] - GENERATED = require(false)
2021-03-12 11:04:29,966 [main:117] - GENERATED CALL = (C().member()).onEach({a: Char -> require(false)})
2021-03-12 11:04:29,966 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:04:29,966 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:30,061 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:30,062 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:30,158 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:30,159 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:30,364 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:04:30,365 [main:95] - GENERATED = check(true)
2021-03-12 11:04:30,366 [main:117] - GENERATED CALL = (C().member()).onEachIndexed({a: Int, b: Char -> check(true)})
2021-03-12 11:04:30,366 [main:61] - replacement of S((S("dzlub").value).lowercase()) of type S is (C().member()).onEach({a: Char -> require(false)})
2021-03-12 11:04:30,459 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:30,459 [main:66] - Compilation checking started
2021-03-12 11:04:30,744 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", (C().member()).onEach({a: Char -> require(false)})))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:30,744 [main:53] - replacing ("cd", String)
2021-03-12 11:04:30,744 [main:50] - replacing "cd" String
2021-03-12 11:04:30,745 [main:54] - Getting value of type String
2021-03-12 11:04:30,866 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:30,867 [main:58] - GENERATED VALUE OF TYPE String = "amjls"
2021-03-12 11:04:30,867 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:30,967 [main:67] - randomType = Float
2021-03-12 11:04:31,067 [main:302] - generating value of type = Float true depth = 0
2021-03-12 11:04:31,126 [main:149] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@751bb6ff]
2021-03-12 11:04:31,126 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1067c7d9]
2021-03-12 11:04:31,226 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:31,227 [main:78] - Generated call from random type = (0.25882143f).toShort().toString(1769427744)
2021-03-12 11:04:31,228 [main:106] - GETTING String from S
2021-03-12 11:04:31,235 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]]
2021-03-12 11:04:31,235 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a9d17a8]
2021-03-12 11:04:31,323 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:31,420 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:31,421 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.removeRange(1960519231, -2080786861)
2021-03-12 11:04:31,421 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]]
2021-03-12 11:04:31,421 [main:149] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]
2021-03-12 11:04:31,510 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:31,511 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:31,512 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.dropWhile({a: Char -> true})
2021-03-12 11:04:31,512 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]]
2021-03-12 11:04:31,512 [main:149] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]
2021-03-12 11:04:31,599 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:31,599 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:31,601 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.dropLastWhile({a: Char -> false})
2021-03-12 11:04:31,601 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]]
2021-03-12 11:04:31,601 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]
2021-03-12 11:04:31,601 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.replaceIndent(S("ybpay").extension2())
2021-03-12 11:04:31,601 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]]
2021-03-12 11:04:31,601 [main:149] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]
2021-03-12 11:04:31,698 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:04:31,788 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:04:31,790 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 11:04:31,978 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:04:31,979 [main:95] - GENERATED = StringBuilder("jgtbb")
2021-03-12 11:04:31,979 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.removeSuffix(StringBuilder("jgtbb"))
2021-03-12 11:04:31,979 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]]
2021-03-12 11:04:31,980 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]
2021-03-12 11:04:31,980 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.lowercase()
2021-03-12 11:04:31,980 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]]
2021-03-12 11:04:31,980 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]
2021-03-12 11:04:31,980 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.trimStart()
2021-03-12 11:04:31,980 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e1307a9]]
2021-03-12 11:04:31,980 [main:149] - GENERATING call of type public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e1307a9]
2021-03-12 11:04:32,080 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:32,169 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:32,170 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.substringAfter('蹿', "zbuui")
2021-03-12 11:04:32,170 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]]
2021-03-12 11:04:32,170 [main:149] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]
2021-03-12 11:04:32,171 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.trimIndent()
2021-03-12 11:04:32,171 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:04:32,171 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:04:32,266 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:32,356 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:32,358 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.replaceAfter('텿', "hewav", S("dzlub").value)
2021-03-12 11:04:32,358 [main:61] - replacement of "cd" of type String is (S("dzlub").plus()).value.lowercase()
2021-03-12 11:04:32,445 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:32,446 [main:53] - replacing ("OK", String)
2021-03-12 11:04:32,447 [main:50] - replacing "OK" String
2021-03-12 11:04:32,447 [main:54] - Getting value of type String
2021-03-12 11:04:32,543 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:32,544 [main:58] - GENERATED VALUE OF TYPE String = "uoatv"
2021-03-12 11:04:32,544 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:32,641 [main:67] - randomType = S?
2021-03-12 11:04:32,733 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:32,734 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:32,818 [main:194] - Type params = []
2021-03-12 11:04:32,922 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:32,931 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]
2021-03-12 11:04:33,018 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:33,019 [main:78] - Generated call from random type = (S("ytqyi"))?.value.drop(-245994818)
2021-03-12 11:04:33,020 [main:106] - GETTING String from S
2021-03-12 11:04:33,026 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]]
2021-03-12 11:04:33,026 [main:149] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]
2021-03-12 11:04:33,118 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:33,119 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:33,120 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.dropLastWhile({a: Char -> false})
2021-03-12 11:04:33,120 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]]
2021-03-12 11:04:33,120 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]
2021-03-12 11:04:33,224 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:33,351 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:33,353 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.padEnd(-399085923, '젻')
2021-03-12 11:04:33,353 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d7cb2d8]]
2021-03-12 11:04:33,353 [main:149] - GENERATING call of type public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d7cb2d8]
2021-03-12 11:04:33,439 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:33,440 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:33,441 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.filter({a: Char -> false})
2021-03-12 11:04:33,441 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]]
2021-03-12 11:04:33,441 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@db8615d]
2021-03-12 11:04:33,532 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:33,533 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.replaceIndent("dwqpc")
2021-03-12 11:04:33,533 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]]
2021-03-12 11:04:33,533 [main:149] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]
2021-03-12 11:04:33,617 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:33,715 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:33,716 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.padStart(-6321433, 'ꜥ')
2021-03-12 11:04:33,716 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b101baf]]
2021-03-12 11:04:33,716 [main:149] - GENERATING call of type public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b101baf]
2021-03-12 11:04:33,803 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:33,804 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.take(164988430)
2021-03-12 11:04:33,804 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]]
2021-03-12 11:04:33,805 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]
2021-03-12 11:04:33,898 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 11:04:33,988 [main:43] - GENERATING CALL OF fun <T> setOf(element: Int): Iterable<Int> = TODO()
2021-03-12 11:04:33,989 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOf(element: Int): Iterable<Int> = TODO()
2021-03-12 11:04:34,256 [main:302] - generating value of type = Int true depth = 3
2021-03-12 11:04:34,257 [main:95] - GENERATED = setOf<Int>(-218179375)
2021-03-12 11:04:34,257 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.slice(setOf<Int>(-218179375))
2021-03-12 11:04:34,257 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]]
2021-03-12 11:04:34,257 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a18bff6]
2021-03-12 11:04:34,344 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:04:34,348 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.removeSurrounding("efumg")
2021-03-12 11:04:34,348 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]]
2021-03-12 11:04:34,348 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]
2021-03-12 11:04:34,437 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:34,438 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.drop(-1251869601)
2021-03-12 11:04:34,439 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@246cba58], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6990ce12]]
2021-03-12 11:04:34,439 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6990ce12]
2021-03-12 11:04:34,558 [main:302] - generating value of type = Function1<Char, Char> false depth = 0
2021-03-12 11:04:34,558 [main:302] - generating value of type = Char true depth = 1
2021-03-12 11:04:34,560 [main:117] - GENERATED CALL = (S("dzlub").plus()).value.replaceFirstChar({a: Char -> 'ᒤ'})
2021-03-12 11:04:34,560 [main:61] - replacement of "OK" of type String is (S("dzlub").plus()).value.drop(-1251869601)
2021-03-12 11:04:34,645 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:34,645 [main:66] - Compilation checking started
2021-03-12 11:04:34,886 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S((S("dzlub").value).padEnd(984967812, '㏑')), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return (S("dzlub").plus()).value.drop(-1251869601)
}


2021-03-12 11:04:34,887 [main:53] - replacing (S((S("dzlub").value).padEnd(984967812, '㏑')), S)
2021-03-12 11:04:34,888 [main:50] - replacing S((S("dzlub").value).padEnd(984967812, '㏑')) S
2021-03-12 11:04:34,888 [main:54] - Getting value of type S
2021-03-12 11:04:34,990 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:34,990 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}
2021-03-12 11:04:35,080 [main:194] - Type params = []
2021-03-12 11:04:35,175 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:35,177 [main:58] - GENERATED VALUE OF TYPE S = S("nyxih")
2021-03-12 11:04:35,177 [main:61] - GENERATED IS CALL =true
2021-03-12 11:04:35,795 [main:67] - randomType = Collection<Collection<Function1<Function1<Char, S>, Float>>>?
2021-03-12 11:04:35,796 [main:106] - GETTING S from S
2021-03-12 11:04:35,803 [main:113] - Case = [public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]]
2021-03-12 11:04:35,803 [main:149] - GENERATING call of type public final operator fun plus(other: S): S defined in S[SimpleFunctionDescriptorImpl@5fdea267]
2021-03-12 11:04:35,804 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).plus(S("hyluf").extension(S("vqfru")))
2021-03-12 11:04:35,804 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]]
2021-03-12 11:04:35,804 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75644d58]
2021-03-12 11:04:35,890 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-12 11:04:35,891 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:35,986 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:35,988 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 11:04:36,186 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-12 11:04:36,187 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 11:04:36,280 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:36,281 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 11:04:36,468 [main:302] - generating value of type = Any false depth = 8
2021-03-12 11:04:36,468 [main:95] - GENERATED = println("kpajt")
2021-03-12 11:04:36,468 [main:95] - GENERATED = contract({ println("kpajt")})
2021-03-12 11:04:36,469 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).onEachIndexed({a: Int, b: Char -> contract({ println("kpajt")})})
2021-03-12 11:04:36,469 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]]
2021-03-12 11:04:36,469 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <S : kotlin.CharSequence> S.onEach(action: (kotlin.Char) -> kotlin.Unit): S defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08eb4]
2021-03-12 11:04:36,567 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-12 11:04:36,568 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 11:04:36,658 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:36,660 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 11:04:36,888 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 11:04:36,889 [main:95] - GENERATED = check(true)
2021-03-12 11:04:36,890 [main:117] - GENERATED CALL = (S("hyluf").extension(S("vqfru"))).onEach({a: Char -> check(true)})
2021-03-12 11:04:36,890 [main:61] - replacement of S((S("dzlub").value).padEnd(984967812, '㏑')) of type S is S("nyxih")
2021-03-12 11:04:36,994 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 11:04:36,995 [main:66] - Compilation checking started
2021-03-12 11:04:37,441 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S("nyxih"), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:37,544 [main:119] - TRYING TO REPLACE CONSTANT 8894
2021-03-12 11:04:37,636 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 11:04:37,637 [main:66] - Compilation checking started
2021-03-12 11:04:37,918 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (toInt()).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('ᳶ', '徍', false)), "b"))
    assertEquals(S("nyxih"), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:37,919 [main:119] - TRYING TO REPLACE CONSTANT 1198667616
2021-03-12 11:04:38,021 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-12 11:04:38,022 [main:66] - Compilation checking started
2021-03-12 11:04:38,450 [main:119] - TRYING TO REPLACE CONSTANT 'ᳶ'
2021-03-12 11:04:38,548 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(CHARACTER_CONSTANT)
2021-03-12 11:04:38,548 [main:66] - Compilation checking started
2021-03-12 11:04:38,982 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('徍', '徍', false)), "b"))
    assertEquals(S("nyxih"), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:38,982 [main:119] - TRYING TO REPLACE CONSTANT '徍'
2021-03-12 11:04:39,098 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(CHARACTER_CONSTANT)
2021-03-12 11:04:39,098 [main:66] - Compilation checking started
2021-03-12 11:04:39,491 [main:119] - TRYING TO REPLACE CONSTANT false
2021-03-12 11:04:39,600 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(BOOLEAN_CONSTANT)
2021-03-12 11:04:39,601 [main:66] - Compilation checking started
2021-03-12 11:04:40,055 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> true})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('徍', '徍', true)), "b"))
    assertEquals(S("nyxih"), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:40,055 [main:119] - TRYING TO REPLACE CONSTANT true
2021-03-12 11:04:40,158 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(BOOLEAN_CONSTANT)
2021-03-12 11:04:40,159 [main:66] - Compilation checking started
2021-03-12 11:04:40,571 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S((C()).member(S("mqbmp"), S("dzlub").value).value + (S("ybpay").extension2()).plus("iwwzz"))
}

class C {
    fun member(x: S, y: String): S = S("klans")
}

fun topLevel(x: String, y: S): S = S((linkedSetOf<Byte>()).toArray().contentToString()) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = (-8894).toInt().toString(-1198667616)

fun box(): String {
    assertEquals(S((S("hyluf").extension(S("vqfru"))).value.takeLastWhile({a: Char -> false})), C::member.call(C(), S((S("hyluf").extension(S("vqfru"))).value.replace('徍', '徍', true)), "b"))
    assertEquals(S("nyxih"), ::topLevel.call("c", S((S("dzlub").value).lowercase())))
    assertEquals(S("gh"), S::extension.call(S("g"), (S("hyluf").extension(S("vqfru"))).plus(S("xtbnn"))))
    assertEquals("_", S::extension2.call(S(S("ybpay").extension2())))

    assertEquals(S("nigoi"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}


2021-03-12 11:04:40,602 [main:41] - AFTER TRY 0 res = import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}
2021-03-12 11:04:40,759 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:04:40,833 [main:194] - Type params = []
2021-03-12 11:04:40,913 [main:302] - generating value of type = String true depth = 1
2021-03-12 11:04:40,914 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S(y)
}
2021-03-12 11:04:41,092 [main:43] - GENERATING CALL OF fun topLevel(x: String, y: S): S = S(x) + y
2021-03-12 11:04:41,093 [main:61] - WITHOUT TYPE PARAMS = fun topLevel(x: String, y: S): S = S(x) + y
2021-03-12 11:04:41,169 [main:302] - generating value of type = String true depth = 1
2021-03-12 11:04:41,170 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:04:41,170 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:04:41,245 [main:194] - Type params = []
2021-03-12 11:04:41,324 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:04:41,325 [main:95] - GENERATED = topLevel("cwqit", S("srlti"))
2021-03-12 11:04:41,399 [main:43] - GENERATING CALL OF fun S.extension(y: S): S = this + y
2021-03-12 11:04:41,399 [main:61] - WITHOUT TYPE PARAMS = fun S.extension(y: S): S = this + y
2021-03-12 11:04:41,490 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:04:41,491 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:04:41,566 [main:194] - Type params = []
2021-03-12 11:04:41,640 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:04:41,641 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:04:41,641 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:04:41,730 [main:194] - Type params = []
2021-03-12 11:04:41,811 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:04:41,812 [main:95] - GENERATED = S("ltypn").extension(S("rvemh"))
2021-03-12 11:04:41,900 [main:43] - GENERATING CALL OF fun S.extension2(): String = value
2021-03-12 11:04:41,901 [main:61] - WITHOUT TYPE PARAMS = fun S.extension2(): String = value
2021-03-12 11:04:41,978 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:04:41,978 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:04:42,053 [main:194] - Type params = []
2021-03-12 11:04:42,133 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:04:42,134 [main:95] - GENERATED = S("scsdv").extension2()
2021-03-12 11:04:42,222 [main:43] - Try №0
2021-03-12 11:04:43,517 [main:48] - Already checked
2021-03-12 11:04:43,947 [main:69] - Trying to insert fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if (prope4 != "LambdaInObjectExpressionKt\$box\$l\$1") return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if (prope5 != null) return "anonymous function has a declaring class: $prope5"

    return "OK"
}
2021-03-12 11:04:44,077 [main:66] - Compilation checking started
2021-03-12 11:04:44,973 [main:103] - Trying to change 15 nodes
2021-03-12 11:04:44,973 [main:107] - replacing (prope0, Any)
2021-03-12 11:04:44,974 [main:50] - replacing prope0 Any
2021-03-12 11:04:44,974 [main:54] - Getting value of type Any
2021-03-12 11:04:45,134 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:04:45,134 [main:58] - GENERATED VALUE OF TYPE Any = "mswpl"
2021-03-12 11:04:45,135 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:45,416 [main:67] - randomType = Array<S>
2021-03-12 11:04:45,548 [main:302] - generating value of type = Array<S> false depth = 0
2021-03-12 11:04:45,705 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<S> = TODO()
2021-03-12 11:04:45,707 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<S> = TODO()
2021-03-12 11:04:45,844 [main:95] - GENERATED = emptyArray<S>()
2021-03-12 11:04:45,879 [main:106] - GETTING Any from String
2021-03-12 11:04:45,917 [main:114] - replacement of prope0 of type Any is S("cimca").value
2021-03-12 11:04:46,038 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:46,038 [main:66] - Compilation checking started
2021-03-12 11:04:46,399 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            S("cimca").value = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if (prope4 != "LambdaInObjectExpressionKt\$box\$l\$1") return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if (prope5 != null) return "anonymous function has a declaring class: $prope5"

    return "OK"
}


2021-03-12 11:04:46,403 [main:107] - replacing ("OK", String)
2021-03-12 11:04:46,403 [main:50] - replacing "OK" String
2021-03-12 11:04:46,403 [main:54] - Getting value of type String
2021-03-12 11:04:46,525 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:46,526 [main:58] - GENERATED VALUE OF TYPE String = "qacuk"
2021-03-12 11:04:46,526 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:46,528 [main:67] - randomType = Kla0
2021-03-12 11:04:46,529 [main:106] - GETTING String from KFunction1<[@kotlin.ParameterName] S, S>
2021-03-12 11:04:46,601 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]]
2021-03-12 11:04:46,601 [main:149] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1dc0ed6]
2021-03-12 11:04:46,602 [main:117] - GENERATED CALL = (S("m")::extension).name.decapitalize()
2021-03-12 11:04:46,602 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]]
2021-03-12 11:04:46,602 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3e118985]
2021-03-12 11:04:46,602 [main:117] - GENERATED CALL = (S("m")::extension).name.trimStart()
2021-03-12 11:04:46,603 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]]
2021-03-12 11:04:46,603 [main:149] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14c39672]
2021-03-12 11:04:46,772 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:04:46,773 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:46,774 [main:117] - GENERATED CALL = (S("m")::extension).name.dropWhile({a: Char -> false})
2021-03-12 11:04:46,774 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]]
2021-03-12 11:04:46,774 [main:149] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]
2021-03-12 11:04:46,955 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:47,101 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:47,225 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:47,226 [main:117] - GENERATED CALL = (S("m")::extension).name.replaceFirst('삅', '褐', false)
2021-03-12 11:04:47,227 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]]
2021-03-12 11:04:47,227 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@33283784]
2021-03-12 11:04:47,342 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 11:04:47,481 [main:43] - GENERATING CALL OF fun CharRange(start: kotlin.Char, endInclusive: kotlin.Char): Iterable<Int> = TODO()
2021-03-12 11:04:47,484 [main:61] - WITHOUT TYPE PARAMS = fun CharRange(start: kotlin.Char, endInclusive: kotlin.Char): Iterable<Int> = TODO()
2021-03-12 11:04:47,870 [main:302] - generating value of type = Char true depth = 3
2021-03-12 11:04:47,871 [main:302] - generating value of type = Char true depth = 3
2021-03-12 11:04:47,871 [main:95] - GENERATED = CharRange('঄', '㗳')
2021-03-12 11:04:47,872 [main:117] - GENERATED CALL = (S("m")::extension).name.slice(CharRange('঄', '㗳'))
2021-03-12 11:04:47,872 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a5e6480]]
2021-03-12 11:04:47,872 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a5e6480]
2021-03-12 11:04:47,872 [main:117] - GENERATED CALL = (S("m")::extension).name.reversed()
2021-03-12 11:04:47,872 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]]
2021-03-12 11:04:47,873 [main:149] - GENERATING call of type public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]
2021-03-12 11:04:48,036 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:48,135 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:48,137 [main:117] - GENERATED CALL = (S("m")::extension).name.replaceBeforeLast('䦸', "ppica", S("cimca").value)
2021-03-12 11:04:48,137 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@224ba657]]
2021-03-12 11:04:48,137 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@224ba657]
2021-03-12 11:04:48,137 [main:117] - GENERATED CALL = (S("m")::extension).name.trim()
2021-03-12 11:04:48,137 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]]
2021-03-12 11:04:48,138 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]
2021-03-12 11:04:48,254 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:48,255 [main:117] - GENERATED CALL = (S("m")::extension).name.drop(1557081621)
2021-03-12 11:04:48,256 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@61cbbc56], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]]
2021-03-12 11:04:48,256 [main:149] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@685904ca]
2021-03-12 11:04:48,381 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:04:48,382 [main:117] - GENERATED CALL = (S("m")::extension).name.substringBefore('ᢹ', S("cimca").value)
2021-03-12 11:04:48,382 [main:114] - replacement of "OK" of type String is (S("m")::extension).name.replaceFirst('삅', '褐', false)
2021-03-12 11:04:48,517 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:48,518 [main:66] - Compilation checking started
2021-03-12 11:04:48,999 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if (prope4 != "LambdaInObjectExpressionKt\$box\$l\$1") return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if (prope5 != null) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', false)
}


2021-03-12 11:04:49,000 [main:107] - replacing ("LambdaInObjectExpressionKt\$box\$l\$1", String)
2021-03-12 11:04:49,000 [main:50] - replacing "LambdaInObjectExpressionKt\$box\$l\$1" String
2021-03-12 11:04:49,000 [main:54] - Getting value of type String
2021-03-12 11:04:49,143 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:49,143 [main:58] - GENERATED VALUE OF TYPE String = "uuuso"
2021-03-12 11:04:49,144 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:49,490 [main:67] - randomType = UInt?
2021-03-12 11:04:49,607 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 11:04:49,655 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@62630508]
2021-03-12 11:04:49,655 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ed66b1c]
2021-03-12 11:04:49,781 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:49,782 [main:78] - Generated call from random type = (2051726361.toUInt())?.toUByte().toString(1349504053)
2021-03-12 11:04:49,783 [main:106] - GETTING String from KFunction1<S, String>
2021-03-12 11:04:49,824 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@3a987e15], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]]
2021-03-12 11:04:49,824 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]
2021-03-12 11:04:49,825 [main:117] - GENERATED CALL = (S::extension2).name.trimEnd()
2021-03-12 11:04:49,825 [main:113] - Case = [public abstract operator fun invoke(p1: S): kotlin.String defined in kotlin.Function1[FunctionInvokeDescriptor@391508b8], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]]
2021-03-12 11:04:49,825 [main:149] - GENERATING call of type public abstract operator fun invoke(p1: S): kotlin.String defined in kotlin.Function1[FunctionInvokeDescriptor@391508b8]
2021-03-12 11:04:49,825 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]
2021-03-12 11:04:49,826 [main:117] - GENERATED CALL = (S::extension2).invoke(C().member()).trimEnd()
2021-03-12 11:04:49,826 [main:113] - Case = [public abstract operator fun invoke(p1: S): kotlin.String defined in kotlin.Function1[FunctionInvokeDescriptor@391508b8], public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]]
2021-03-12 11:04:49,826 [main:149] - GENERATING call of type public abstract operator fun invoke(p1: S): kotlin.String defined in kotlin.Function1[FunctionInvokeDescriptor@391508b8]
2021-03-12 11:04:49,926 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:04:49,927 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:04:50,049 [main:194] - Type params = []
2021-03-12 11:04:50,221 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:50,223 [main:149] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14958dff]
2021-03-12 11:04:50,354 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-12 11:04:50,355 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:04:50,357 [main:117] - GENERATED CALL = (S::extension2).invoke(S("vdrgc")).filterIndexed({a: Int, b: Char -> false})
2021-03-12 11:04:50,357 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@3a987e15], public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b101baf]]
2021-03-12 11:04:50,357 [main:149] - GENERATING call of type public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b101baf]
2021-03-12 11:04:50,564 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:04:50,569 [main:117] - GENERATED CALL = (S::extension2).name.take(999077586)
2021-03-12 11:04:50,570 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@3a987e15], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6990ce12]]
2021-03-12 11:04:50,570 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6990ce12]
2021-03-12 11:04:50,743 [main:302] - generating value of type = Function1<Char, Char> false depth = 0
2021-03-12 11:04:50,745 [main:302] - generating value of type = Char true depth = 1
2021-03-12 11:04:50,747 [main:117] - GENERATED CALL = (S::extension2).name.replaceFirstChar({a: Char -> 'ꈥ'})
2021-03-12 11:04:50,747 [main:113] - Case = [public abstract operator fun invoke(p1: S): kotlin.String defined in kotlin.Function1[FunctionInvokeDescriptor@391508b8], public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]]
2021-03-12 11:04:50,747 [main:149] - GENERATING call of type public abstract operator fun invoke(p1: S): kotlin.String defined in kotlin.Function1[FunctionInvokeDescriptor@391508b8]
2021-03-12 11:04:50,748 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@10ed3435]
2021-03-12 11:04:50,918 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:04:50,919 [main:117] - GENERATED CALL = (S::extension2).invoke(S("m")).plus("qnyva")
2021-03-12 11:04:50,920 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@3a987e15], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]]
2021-03-12 11:04:50,920 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]
2021-03-12 11:04:50,920 [main:117] - GENERATED CALL = (S::extension2).name.lowercase()
2021-03-12 11:04:50,920 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@3a987e15], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]]
2021-03-12 11:04:50,920 [main:149] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]
2021-03-12 11:04:50,921 [main:117] - GENERATED CALL = (S::extension2).name.trimIndent()
2021-03-12 11:04:50,921 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@3a987e15], @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15c54857]]
2021-03-12 11:04:50,921 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15c54857]
2021-03-12 11:04:50,921 [main:117] - GENERATED CALL = (S::extension2).name.toUpperCase()
2021-03-12 11:04:50,922 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@3a987e15], public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7186f66a]]
2021-03-12 11:04:50,922 [main:149] - GENERATING call of type public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7186f66a]
2021-03-12 11:04:50,922 [main:117] - GENERATED CALL = (S::extension2).name.prependIndent(S("scsdv").extension2())
2021-03-12 11:04:50,923 [main:114] - replacement of "LambdaInObjectExpressionKt\$box\$l\$1" of type String is (S::extension2).name.trimEnd()
2021-03-12 11:04:51,068 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:51,070 [main:66] - Compilation checking started
2021-03-12 11:04:51,593 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if (prope4 != (S::extension2).name.trimEnd()) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if (prope5 != null) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', false)
}


2021-03-12 11:04:51,593 [main:107] - replacing (prope4 != (S::extension2).name.trimEnd(), Boolean)
2021-03-12 11:04:51,594 [main:50] - replacing prope4 != (S::extension2).name.trimEnd() Boolean
2021-03-12 11:04:51,594 [main:54] - Getting value of type Boolean
2021-03-12 11:04:51,794 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:51,795 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 11:04:51,795 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:51,929 [main:67] - randomType = Boolean?
2021-03-12 11:04:52,082 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:52,104 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4ee6cf9e]
2021-03-12 11:04:52,255 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:52,257 [main:78] - Generated call from random type = (false)?.and(true)
2021-03-12 11:04:52,260 [main:106] - GETTING Boolean from KFunction2<[@kotlin.ParameterName] String, [@kotlin.ParameterName] S, S>
2021-03-12 11:04:52,360 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction2[DeserializedSimpleFunctionDescriptor@38314921], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4c841ccb]]
2021-03-12 11:04:52,360 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction2[DeserializedSimpleFunctionDescriptor@38314921]
2021-03-12 11:04:52,559 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:04:52,559 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4c841ccb]
2021-03-12 11:04:52,703 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:52,704 [main:117] - GENERATED CALL = (::topLevel).equals("prhbs").xor(false)
2021-03-12 11:04:52,704 [main:113] - Case = [public abstract fun invoke(x: kotlin.String, y: S): S defined in kotlin.reflect.KFunction2[FunctionInvokeDescriptor@a6b2e39], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@1f5cb845]]
2021-03-12 11:04:52,704 [main:149] - GENERATING call of type public abstract fun invoke(x: kotlin.String, y: S): S defined in kotlin.reflect.KFunction2[FunctionInvokeDescriptor@a6b2e39]
2021-03-12 11:04:52,842 [main:302] - generating value of type = [@kotlin.ParameterName] String true depth = 0
2021-03-12 11:04:53,022 [main:302] - generating value of type = [@kotlin.ParameterName] S false depth = 0
2021-03-12 11:04:53,023 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:04:53,164 [main:194] - Type params = []
2021-03-12 11:04:53,333 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:04:53,337 [main:158] - CANT GENERATE PARAMS FOR public abstract fun invoke(x: kotlin.String, y: S): S defined in kotlin.reflect.KFunction2[FunctionInvokeDescriptor@a6b2e39]
2021-03-12 11:04:53,337 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction2[DeserializedPropertyDescriptor@48e7d223], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@6ad4aa3e]]
2021-03-12 11:04:53,337 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@6ad4aa3e]
2021-03-12 11:04:53,486 [main:117] - GENERATED CALL = (::topLevel).name.equals(null)
2021-03-12 11:04:53,487 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction2[DeserializedSimpleFunctionDescriptor@38314921], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@443fae4a]]
2021-03-12 11:04:53,487 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction2[DeserializedSimpleFunctionDescriptor@38314921]
2021-03-12 11:04:53,638 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:04:53,638 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@443fae4a]
2021-03-12 11:04:53,765 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:53,767 [main:117] - GENERATED CALL = (::topLevel).equals("hngcq").or(true)
2021-03-12 11:04:53,767 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction2[DeserializedSimpleFunctionDescriptor@38314921], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@db9950e]]
2021-03-12 11:04:53,767 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction2[DeserializedSimpleFunctionDescriptor@38314921]
2021-03-12 11:04:53,921 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:04:53,921 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@db9950e]
2021-03-12 11:04:54,063 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:04:54,064 [main:117] - GENERATED CALL = (::topLevel).equals("xqnhy").equals("johmq")
2021-03-12 11:04:54,064 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction2[DeserializedPropertyDescriptor@48e7d223], @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63c395ec]]
2021-03-12 11:04:54,064 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63c395ec]
2021-03-12 11:04:54,065 [main:117] - GENERATED CALL = (::topLevel).name.toBoolean()
2021-03-12 11:04:54,065 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction2[DeserializedPropertyDescriptor@48e7d223], public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b8c063e]]
2021-03-12 11:04:54,065 [main:149] - GENERATING call of type public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b8c063e]
2021-03-12 11:04:54,202 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:04:54,352 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:54,354 [main:117] - GENERATED CALL = (::topLevel).name.endsWith("capup", true)
2021-03-12 11:04:54,354 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction2[DeserializedPropertyDescriptor@48e7d223], public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ab0c73f]]
2021-03-12 11:04:54,354 [main:149] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ab0c73f]
2021-03-12 11:04:54,500 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:54,502 [main:117] - GENERATED CALL = (::topLevel).name.startsWith(S("scsdv").extension2(), true)
2021-03-12 11:04:54,502 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction2[DeserializedSimpleFunctionDescriptor@38314921], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@d2527b5]]
2021-03-12 11:04:54,502 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction2[DeserializedSimpleFunctionDescriptor@38314921]
2021-03-12 11:04:54,672 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:04:54,674 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@d2527b5]
2021-03-12 11:04:54,839 [main:117] - GENERATED CALL = (::topLevel).equals("tribb").not()
2021-03-12 11:04:54,839 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction2[DeserializedPropertyDescriptor@48e7d223], public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46c74d5d]]
2021-03-12 11:04:54,840 [main:149] - GENERATING call of type public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46c74d5d]
2021-03-12 11:04:54,841 [main:117] - GENERATED CALL = (::topLevel).name.matches(S("cimca").value)
2021-03-12 11:04:54,841 [main:114] - replacement of prope4 != (S::extension2).name.trimEnd() of type Boolean is (::topLevel).name.startsWith(S("scsdv").extension2(), true)
2021-03-12 11:04:54,962 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:54,962 [main:66] - Compilation checking started
2021-03-12 11:04:55,418 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), true)) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if (prope5 != null) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', false)
}


2021-03-12 11:04:55,419 [main:107] - replacing (prope5 != null, Boolean)
2021-03-12 11:04:55,419 [main:50] - replacing prope5 != null Boolean
2021-03-12 11:04:55,419 [main:54] - Getting value of type Boolean
2021-03-12 11:04:55,557 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:55,558 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 11:04:55,558 [main:61] - GENERATED IS CALL =false
2021-03-12 11:04:55,562 [main:67] - randomType = C
2021-03-12 11:04:55,676 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:04:55,676 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S(y)
}
2021-03-12 11:04:55,684 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in C[DeserializedSimpleFunctionDescriptor@69ca15d7]
2021-03-12 11:04:55,800 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:04:55,800 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@443fae4a]
2021-03-12 11:04:55,959 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:04:55,960 [main:78] - Generated call from random type = (C()).equals("ykyac").or(true)
2021-03-12 11:04:55,961 [main:114] - replacement of prope5 != null of type Boolean is (C()).equals("ykyac").or(true)
2021-03-12 11:04:56,110 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:56,111 [main:66] - Compilation checking started
2021-03-12 11:04:56,549 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), true)) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(true)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', false)
}


2021-03-12 11:04:56,689 [main:141] - TRYING TO REPLACE CONSTANT '삅'
2021-03-12 11:04:56,799 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(CHARACTER_CONSTANT)
2021-03-12 11:04:56,799 [main:66] - Compilation checking started
2021-03-12 11:04:57,399 [main:141] - TRYING TO REPLACE CONSTANT '褐'
2021-03-12 11:04:57,547 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(CHARACTER_CONSTANT)
2021-03-12 11:04:57,548 [main:66] - Compilation checking started
2021-03-12 11:04:58,278 [main:141] - TRYING TO REPLACE CONSTANT false
2021-03-12 11:04:58,438 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(BOOLEAN_CONSTANT)
2021-03-12 11:04:58,439 [main:66] - Compilation checking started
2021-03-12 11:04:59,098 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), true)) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(true)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}


2021-03-12 11:04:59,099 [main:141] - TRYING TO REPLACE CONSTANT true
2021-03-12 11:04:59,236 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:04:59,236 [main:66] - Compilation checking started
2021-03-12 11:04:59,774 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(true)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}


2021-03-12 11:04:59,774 [main:141] - TRYING TO REPLACE CONSTANT true
2021-03-12 11:04:59,932 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(BINARY_EXPRESSION)
2021-03-12 11:04:59,933 [main:66] - Compilation checking started
2021-03-12 11:05:00,494 [main:53] - Result = true
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}


2021-03-12 11:05:00,494 [main:41] - AFTER TRY 1 res = import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}


2021-03-12 11:05:00,767 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:00,895 [main:194] - Type params = []
2021-03-12 11:05:01,021 [main:302] - generating value of type = String true depth = 1
2021-03-12 11:05:01,023 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S(y)
}
2021-03-12 11:05:01,023 [main:112] - generating klass Kla0 text = interface Kla0 {
    val prope0: Any
}
2021-03-12 11:05:01,248 [main:112] - generating klass null text = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
2021-03-12 11:05:01,524 [main:43] - GENERATING CALL OF fun topLevel(x: String, y: S): S = S(x) + y
2021-03-12 11:05:01,525 [main:61] - WITHOUT TYPE PARAMS = fun topLevel(x: String, y: S): S = S(x) + y
2021-03-12 11:05:01,658 [main:302] - generating value of type = String true depth = 1
2021-03-12 11:05:01,660 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:05:01,661 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:01,809 [main:194] - Type params = []
2021-03-12 11:05:01,944 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:01,945 [main:95] - GENERATED = topLevel("mcjpn", S("bpmwo"))
2021-03-12 11:05:02,108 [main:43] - GENERATING CALL OF fun S.extension(y: S): S = this + y
2021-03-12 11:05:02,110 [main:61] - WITHOUT TYPE PARAMS = fun S.extension(y: S): S = this + y
2021-03-12 11:05:02,260 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:05:02,261 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:02,373 [main:194] - Type params = []
2021-03-12 11:05:02,514 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:02,515 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:05:02,516 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:02,631 [main:194] - Type params = []
2021-03-12 11:05:02,773 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:02,776 [main:95] - GENERATED = S("mvrbf").extension(S("fgusc"))
2021-03-12 11:05:02,871 [main:43] - GENERATING CALL OF fun S.extension2(): String = value
2021-03-12 11:05:02,872 [main:61] - WITHOUT TYPE PARAMS = fun S.extension2(): String = value
2021-03-12 11:05:02,979 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:05:02,979 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:03,097 [main:194] - Type params = []
2021-03-12 11:05:03,189 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:03,190 [main:95] - GENERATED = S("zurle").extension2()
2021-03-12 11:05:03,284 [main:43] - Try №1
2021-03-12 11:05:04,414 [main:69] - Trying to insert fun Kla2.fu0(): Boolean = true
2021-03-12 11:05:04,581 [main:66] - Compilation checking started
2021-03-12 11:05:05,475 [main:103] - Trying to change 16 nodes
2021-03-12 11:05:05,475 [main:107] - replacing (action, Function0<Ty0>)
2021-03-12 11:05:05,475 [main:50] - replacing action Function0<Ty0>
2021-03-12 11:05:05,475 [main:54] - Getting value of type Function0<Ty0>
2021-03-12 11:05:05,644 [main:302] - generating value of type = Function0<Ty0> false depth = 0
2021-03-12 11:05:05,645 [main:302] - generating value of type = Ty0 false depth = 1
2021-03-12 11:05:05,649 [main:58] - GENERATED VALUE OF TYPE Function0<Ty0> = { }
2021-03-12 11:05:05,651 [main:61] - GENERATED IS CALL =false
2021-03-12 11:05:05,776 [main:67] - randomType = Double
2021-03-12 11:05:05,937 [main:302] - generating value of type = Double true depth = 0
2021-03-12 11:05:06,013 [main:106] - GETTING Function0<Ty0> from String
2021-03-12 11:05:06,056 [main:106] - GETTING Function0<Ty0> from KFunction1<[@kotlin.ParameterName] S, S>
2021-03-12 11:05:06,123 [main:106] - GETTING Function0<Ty0> from S
2021-03-12 11:05:06,132 [main:106] - GETTING Function0<Ty0> from String
2021-03-12 11:05:06,133 [main:106] - GETTING Function0<Ty0> from KFunction2<[@kotlin.ParameterName] String, [@kotlin.ParameterName] S, S>
2021-03-12 11:05:06,219 [main:106] - GETTING Function0<Ty0> from C
2021-03-12 11:05:06,228 [main:106] - GETTING Function0<Ty0> from S
2021-03-12 11:05:06,229 [main:106] - GETTING Function0<Ty0> from Any
2021-03-12 11:05:06,235 [main:106] - GETTING Function0<Ty0> from KFunction2<S, [@kotlin.ParameterName] S, S>
2021-03-12 11:05:06,295 [main:106] - GETTING Function0<Ty0> from S
2021-03-12 11:05:06,296 [main:106] - GETTING Function0<Ty0> from Boolean
2021-03-12 11:05:06,310 [main:106] - GETTING Function0<Ty0> from S
2021-03-12 11:05:06,311 [main:106] - GETTING Function0<Ty0> from S
2021-03-12 11:05:06,313 [main:106] - GETTING Function0<Ty0> from KFunction2<[@kotlin.ParameterName] S, [@kotlin.ParameterName] String, S>
2021-03-12 11:05:06,385 [main:106] - GETTING Function0<Ty0> from KFunction2<[@kotlin.ParameterName] String, [@kotlin.ParameterName] S, S>
2021-03-12 11:05:06,386 [main:106] - GETTING Function0<Ty0> from String
2021-03-12 11:05:06,387 [main:106] - GETTING Function0<Ty0> from S
2021-03-12 11:05:06,388 [main:106] - GETTING Function0<Ty0> from KFunction1<S, String>
2021-03-12 11:05:06,416 [main:106] - GETTING Function0<Ty0> from KFunction1<[@kotlin.ParameterName] S, S>
2021-03-12 11:05:06,418 [main:106] - GETTING Function0<Ty0> from KFunction0<String>
2021-03-12 11:05:06,442 [main:106] - GETTING Function0<Ty0> from <no name provided>
2021-03-12 11:05:06,450 [main:106] - GETTING Function0<Ty0> from S
2021-03-12 11:05:06,452 [main:106] - GETTING Function0<Ty0> from C
2021-03-12 11:05:06,453 [main:106] - GETTING Function0<Ty0> from KFunction3<C, [@kotlin.ParameterName] S, [@kotlin.ParameterName] String, S>
2021-03-12 11:05:06,517 [main:106] - GETTING Function0<Ty0> from String
2021-03-12 11:05:06,517 [main:114] - replacement of action of type Function0<Ty0> is { }
2021-03-12 11:05:06,608 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-12 11:05:06,608 [main:66] - Compilation checking started
2021-03-12 11:05:06,855 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = true

fun <Ty0> fu1(action: () -> Ty0): Ty0 = { }()

fun fu0(a: Kla1): String {
    return when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    }
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:06,855 [main:107] - replacing ({ a.fu0() }, Function0<Boolean>)
2021-03-12 11:05:06,857 [main:50] - replacing { a.fu0() } Function0<Boolean>
2021-03-12 11:05:06,857 [main:54] - Getting value of type Function0<Boolean>
2021-03-12 11:05:06,954 [main:302] - generating value of type = Function0<Boolean> false depth = 0
2021-03-12 11:05:06,955 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:05:06,956 [main:58] - GENERATED VALUE OF TYPE Function0<Boolean> = { true}
2021-03-12 11:05:06,956 [main:61] - GENERATED IS CALL =false
2021-03-12 11:05:07,508 [main:67] - randomType = Function2<Short, ULong, Sequence<Long>>
2021-03-12 11:05:07,510 [main:106] - GETTING Function0<Boolean> from S
2021-03-12 11:05:07,518 [main:106] - GETTING Function0<Boolean> from KFunction2<[@kotlin.ParameterName] S, [@kotlin.ParameterName] String, S>
2021-03-12 11:05:07,592 [main:106] - GETTING Function0<Boolean> from <no name provided>
2021-03-12 11:05:07,602 [main:106] - GETTING Function0<Boolean> from KFunction1<S, String>
2021-03-12 11:05:07,626 [main:106] - GETTING Function0<Boolean> from S
2021-03-12 11:05:07,627 [main:106] - GETTING Function0<Boolean> from C
2021-03-12 11:05:07,632 [main:106] - GETTING Function0<Boolean> from S
2021-03-12 11:05:07,633 [main:106] - GETTING Function0<Boolean> from KFunction2<[@kotlin.ParameterName] String, [@kotlin.ParameterName] S, S>
2021-03-12 11:05:07,718 [main:106] - GETTING Function0<Boolean> from S
2021-03-12 11:05:07,719 [main:106] - GETTING Function0<Boolean> from KFunction1<[@kotlin.ParameterName] S, S>
2021-03-12 11:05:07,815 [main:106] - GETTING Function0<Boolean> from String
2021-03-12 11:05:07,834 [main:106] - GETTING Function0<Boolean> from C
2021-03-12 11:05:07,835 [main:106] - GETTING Function0<Boolean> from S
2021-03-12 11:05:07,836 [main:106] - GETTING Function0<Boolean> from String
2021-03-12 11:05:07,837 [main:106] - GETTING Function0<Boolean> from String
2021-03-12 11:05:07,838 [main:106] - GETTING Function0<Boolean> from Boolean
2021-03-12 11:05:07,848 [main:106] - GETTING Function0<Boolean> from KFunction2<[@kotlin.ParameterName] String, [@kotlin.ParameterName] S, S>
2021-03-12 11:05:07,849 [main:106] - GETTING Function0<Boolean> from S
2021-03-12 11:05:07,851 [main:106] - GETTING Function0<Boolean> from KFunction1<[@kotlin.ParameterName] S, S>
2021-03-12 11:05:07,852 [main:106] - GETTING Function0<Boolean> from String
2021-03-12 11:05:07,853 [main:106] - GETTING Function0<Boolean> from S
2021-03-12 11:05:07,854 [main:106] - GETTING Function0<Boolean> from KFunction3<C, [@kotlin.ParameterName] S, [@kotlin.ParameterName] String, S>
2021-03-12 11:05:07,916 [main:106] - GETTING Function0<Boolean> from KFunction0<String>
2021-03-12 11:05:07,939 [main:106] - GETTING Function0<Boolean> from Any
2021-03-12 11:05:07,942 [main:106] - GETTING Function0<Boolean> from KFunction2<S, [@kotlin.ParameterName] S, S>
2021-03-12 11:05:07,986 [main:114] - replacement of { a.fu0() } of type Function0<Boolean> is { true}
2021-03-12 11:05:08,078 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 11:05:08,079 [main:66] - Compilation checking started
2021-03-12 11:05:08,406 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = true

fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()

fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> when {
            fu1 { true} -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    }
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:08,407 [main:107] - replacing (when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }, String)
2021-03-12 11:05:08,408 [main:50] - replacing when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        } String
2021-03-12 11:05:08,408 [main:54] - Getting value of type String
2021-03-12 11:05:08,538 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:05:08,540 [main:58] - GENERATED VALUE OF TYPE String = "xocpi"
2021-03-12 11:05:08,540 [main:61] - GENERATED IS CALL =false
2021-03-12 11:05:08,645 [main:67] - randomType = Int
2021-03-12 11:05:08,746 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:05:08,801 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4fc5f450]
2021-03-12 11:05:08,801 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@249bd13b]
2021-03-12 11:05:08,801 [main:78] - Generated call from random type = (-1854847161).toChar().titlecase()
2021-03-12 11:05:08,801 [main:114] - replacement of when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        } of type String is (-1854847161).toChar().titlecase()
2021-03-12 11:05:08,899 [main:33] - Trying to replace Element(WHEN) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:05:08,899 [main:66] - Compilation checking started
2021-03-12 11:05:09,219 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = true

fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()

fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> (-1854847161).toChar().titlecase()
        else -> "Fail 2"
    }
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:09,220 [main:107] - replacing (when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }, String)
2021-03-12 11:05:09,220 [main:50] - replacing when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        } String
2021-03-12 11:05:09,220 [main:54] - Getting value of type String
2021-03-12 11:05:09,347 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:05:09,348 [main:58] - GENERATED VALUE OF TYPE String = "smkzq"
2021-03-12 11:05:09,348 [main:61] - GENERATED IS CALL =false
2021-03-12 11:05:09,350 [main:67] - randomType = Char
2021-03-12 11:05:09,467 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:09,504 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@249bd13b]
2021-03-12 11:05:09,505 [main:78] - Generated call from random type = ('俚').titlecase()
2021-03-12 11:05:09,506 [main:106] - GETTING String from KFunction0<String>
2021-03-12 11:05:09,547 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction0[DeserializedPropertyDescriptor@25b9090b], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]]
2021-03-12 11:05:09,547 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]
2021-03-12 11:05:09,650 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:09,755 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:09,863 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:05:09,865 [main:117] - GENERATED CALL = (S("_")::extension2).name.replace('攘', '棗', true)
2021-03-12 11:05:09,865 [main:113] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@60b2a530], public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d7cb2d8]]
2021-03-12 11:05:09,865 [main:149] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@60b2a530]
2021-03-12 11:05:09,865 [main:149] - GENERATING call of type public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d7cb2d8]
2021-03-12 11:05:09,987 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:05:09,988 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:05:09,989 [main:117] - GENERATED CALL = (S("_")::extension2).invoke().filter({a: Char -> true})
2021-03-12 11:05:09,990 [main:113] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@60b2a530], public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]]
2021-03-12 11:05:09,990 [main:149] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@60b2a530]
2021-03-12 11:05:09,990 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]
2021-03-12 11:05:10,100 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:10,103 [main:117] - GENERATED CALL = (S("_")::extension2).invoke().replaceAfterLast('ᑆ', (::topLevel).name, S("xldhp").value)
2021-03-12 11:05:10,103 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction0[DeserializedPropertyDescriptor@25b9090b], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]]
2021-03-12 11:05:10,103 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e8546ed]
2021-03-12 11:05:10,103 [main:117] - GENERATED CALL = (S("_")::extension2).name.trimEnd()
2021-03-12 11:05:10,103 [main:113] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@60b2a530], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:05:10,103 [main:149] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@60b2a530]
2021-03-12 11:05:10,103 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:05:10,228 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:10,375 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:05:10,378 [main:117] - GENERATED CALL = (S("_")::extension2).invoke().replaceAfter('䋘', "rdbod", (::topLevel).name)
2021-03-12 11:05:10,378 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction0[DeserializedPropertyDescriptor@25b9090b], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]]
2021-03-12 11:05:10,378 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68ae5c12]
2021-03-12 11:05:10,485 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:05:10,486 [main:117] - GENERATED CALL = (S("_")::extension2).name.drop(-333938205)
2021-03-12 11:05:10,486 [main:113] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@60b2a530], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]]
2021-03-12 11:05:10,486 [main:149] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@60b2a530]
2021-03-12 11:05:10,487 [main:149] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37b1b7b5]
2021-03-12 11:05:10,600 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:05:10,601 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:05:10,603 [main:117] - GENERATED CALL = (S("_")::extension2).invoke().dropLastWhile({a: Char -> false})
2021-03-12 11:05:10,603 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction0[DeserializedPropertyDescriptor@25b9090b], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]]
2021-03-12 11:05:10,603 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b1e626]
2021-03-12 11:05:10,727 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:05:10,873 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:10,875 [main:117] - GENERATED CALL = (S("_")::extension2).name.padEnd(2094427923, 'ᚁ')
2021-03-12 11:05:10,875 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction0[DeserializedPropertyDescriptor@25b9090b], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]]
2021-03-12 11:05:10,875 [main:149] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b195b5a]
2021-03-12 11:05:10,994 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:05:10,999 [main:117] - GENERATED CALL = (S("_")::extension2).name.removePrefix("tytyc")
2021-03-12 11:05:10,999 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction0[DeserializedPropertyDescriptor@25b9090b], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]]
2021-03-12 11:05:11,000 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6ec80e5c]
2021-03-12 11:05:11,098 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:11,099 [main:117] - GENERATED CALL = (S("_")::extension2).name.replaceAfter('逗', (::topLevel).name, S("zurle").extension2())
2021-03-12 11:05:11,099 [main:114] - replacement of when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        } of type String is (S("_")::extension2).name.removePrefix("tytyc")
2021-03-12 11:05:11,212 [main:33] - Trying to replace Element(WHEN) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:05:11,212 [main:66] - Compilation checking started
2021-03-12 11:05:11,477 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = true

fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()

fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> (S("_")::extension2).name.removePrefix("tytyc")
        else -> "Fail 2"
    }
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:11,478 [main:107] - replacing ("Fail 2", String)
2021-03-12 11:05:11,478 [main:50] - replacing "Fail 2" String
2021-03-12 11:05:11,478 [main:54] - Getting value of type String
2021-03-12 11:05:11,592 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:05:11,593 [main:58] - GENERATED VALUE OF TYPE String = "zfvjx"
2021-03-12 11:05:11,593 [main:61] - GENERATED IS CALL =false
2021-03-12 11:05:11,596 [main:67] - randomType = S
2021-03-12 11:05:11,723 [main:302] - generating value of type = S false depth = 0
2021-03-12 11:05:11,724 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:11,835 [main:194] - Type params = []
2021-03-12 11:05:11,992 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:05:12,004 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:05:12,136 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:05:12,138 [main:78] - Generated call from random type = (S("tugpg")).value.substring(-1188614264)
2021-03-12 11:05:12,138 [main:106] - GETTING String from String
2021-03-12 11:05:12,179 [main:113] - Case = [public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]]
2021-03-12 11:05:12,179 [main:149] - GENERATING call of type public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@887d8d2]
2021-03-12 11:05:12,285 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:12,392 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:05:12,394 [main:117] - GENERATED CALL = ((::topLevel).name).replaceBeforeLast('鐱', "lensy", (::topLevel).name)
2021-03-12 11:05:12,394 [main:113] - Case = [public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4fbe4484]]
2021-03-12 11:05:12,394 [main:149] - GENERATING call of type public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4fbe4484]
2021-03-12 11:05:12,527 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:05:12,673 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:05:12,674 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 11:05:12,936 [main:302] - generating value of type = Int true depth = 3
2021-03-12 11:05:12,938 [main:95] - GENERATED = StringBuilder(846362624)
2021-03-12 11:05:12,938 [main:117] - GENERATED CALL = ((::topLevel).name).commonPrefixWith(StringBuilder(846362624), (C()).equals("ykyac"))
2021-03-12 11:05:12,939 [main:113] - Case = [public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]]
2021-03-12 11:05:12,939 [main:149] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f43fcab]
2021-03-12 11:05:13,035 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:05:13,136 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:13,138 [main:117] - GENERATED CALL = ((::topLevel).name).padStart(1873089697, 'ጻ')
2021-03-12 11:05:13,138 [main:113] - Case = [public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]]
2021-03-12 11:05:13,138 [main:149] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e42559e]
2021-03-12 11:05:13,259 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:05:13,260 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:05:13,261 [main:117] - GENERATED CALL = ((::topLevel).name).takeLastWhile({a: Char -> false})
2021-03-12 11:05:13,261 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]]
2021-03-12 11:05:13,261 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e6e5804]
2021-03-12 11:05:13,261 [main:117] - GENERATED CALL = ((::topLevel).name).lowercase()
2021-03-12 11:05:13,261 [main:113] - Case = [public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]]
2021-03-12 11:05:13,262 [main:149] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]
2021-03-12 11:05:13,357 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:13,490 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:13,492 [main:117] - GENERATED CALL = ((::topLevel).name).replaceFirst('᭕', '⃘', (C()).equals("ykyac"))
2021-03-12 11:05:13,492 [main:113] - Case = [public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c62c2e2]]
2021-03-12 11:05:13,492 [main:149] - GENERATING call of type public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c62c2e2]
2021-03-12 11:05:13,492 [main:117] - GENERATED CALL = ((::topLevel).name).capitalize()
2021-03-12 11:05:13,492 [main:113] - Case = [public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]]
2021-03-12 11:05:13,493 [main:149] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4830593a]
2021-03-12 11:05:13,618 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:05:13,619 [main:117] - GENERATED CALL = ((::topLevel).name).dropLast(1237698257)
2021-03-12 11:05:13,619 [main:113] - Case = [public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]]
2021-03-12 11:05:13,619 [main:149] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]
2021-03-12 11:05:13,744 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:05:13,748 [main:117] - GENERATED CALL = ((::topLevel).name).removeSuffix("mwvko")
2021-03-12 11:05:13,748 [main:113] - Case = [public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]]
2021-03-12 11:05:13,748 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1329596f]
2021-03-12 11:05:13,853 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:13,854 [main:117] - GENERATED CALL = ((::topLevel).name).replaceAfterLast('붰', (::topLevel).name, S("xldhp").value)
2021-03-12 11:05:13,854 [main:114] - replacement of "Fail 2" of type String is ((::topLevel).name).replaceFirst('᭕', '⃘', (C()).equals("ykyac"))
2021-03-12 11:05:13,959 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:05:13,959 [main:66] - Compilation checking started
2021-03-12 11:05:14,216 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = true

fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()

fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }
        else -> ((::topLevel).name).replaceFirst('᭕', '⃘', (C()).equals("ykyac"))
    }
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:14,216 [main:107] - replacing ("Fail 1", String)
2021-03-12 11:05:14,216 [main:50] - replacing "Fail 1" String
2021-03-12 11:05:14,216 [main:54] - Getting value of type String
2021-03-12 11:05:14,357 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:05:14,358 [main:58] - GENERATED VALUE OF TYPE String = "rnogf"
2021-03-12 11:05:14,359 [main:61] - GENERATED IS CALL =false
2021-03-12 11:05:14,622 [main:67] - randomType = Set<UShort>
2021-03-12 11:05:14,623 [main:106] - GETTING String from S
2021-03-12 11:05:14,630 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]]
2021-03-12 11:05:14,630 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55b33d63]
2021-03-12 11:05:14,630 [main:117] - GENERATED CALL = (S("m")).value.uppercase()
2021-03-12 11:05:14,630 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]]
2021-03-12 11:05:14,630 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12953bf1]
2021-03-12 11:05:14,723 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:14,818 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:14,819 [main:117] - GENERATED CALL = (S("m")).value.replace('', '', (C()).equals("ykyac"))
2021-03-12 11:05:14,819 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15c54857]]
2021-03-12 11:05:14,819 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15c54857]
2021-03-12 11:05:14,819 [main:117] - GENERATED CALL = (S("m")).value.toUpperCase()
2021-03-12 11:05:14,820 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]]
2021-03-12 11:05:14,820 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a448b5e]
2021-03-12 11:05:14,953 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:05:14,954 [main:117] - GENERATED CALL = (S("m")).value.substring(482310194)
2021-03-12 11:05:14,955 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]]
2021-03-12 11:05:14,955 [main:149] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f89995b]
2021-03-12 11:05:15,073 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 11:05:15,077 [main:117] - GENERATED CALL = (S("m")).value.removeSuffix("ecokq")
2021-03-12 11:05:15,077 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]]
2021-03-12 11:05:15,077 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ac138ef]
2021-03-12 11:05:15,077 [main:117] - GENERATED CALL = (S("m")).value.concat((::topLevel).name)
2021-03-12 11:05:15,077 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7186f66a]]
2021-03-12 11:05:15,077 [main:149] - GENERATING call of type public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7186f66a]
2021-03-12 11:05:15,078 [main:117] - GENERATED CALL = (S("m")).value.prependIndent(S("xldhp").value)
2021-03-12 11:05:15,078 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]]
2021-03-12 11:05:15,078 [main:149] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@43c0d50a]
2021-03-12 11:05:15,209 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:15,338 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:15,340 [main:117] - GENERATED CALL = (S("m")).value.replaceFirst('싲', '꿝', (C()).equals("ykyac"))
2021-03-12 11:05:15,340 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]]
2021-03-12 11:05:15,340 [main:149] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@301287b6]
2021-03-12 11:05:15,340 [main:117] - GENERATED CALL = (S("m")).value.trimIndent()
2021-03-12 11:05:15,340 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3359ba18]]
2021-03-12 11:05:15,341 [main:149] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3359ba18]
2021-03-12 11:05:15,445 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 11:05:15,447 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 11:05:15,448 [main:117] - GENERATED CALL = (S("m")).value.takeWhile({a: Char -> false})
2021-03-12 11:05:15,448 [main:114] - replacement of "Fail 1" of type String is (S("m")).value.uppercase()
2021-03-12 11:05:15,561 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:05:15,562 [main:66] - Compilation checking started
2021-03-12 11:05:15,863 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = true

fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()

fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> (S("m")).value.uppercase()
        }
        else -> "Fail 2"
    }
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:15,864 [main:107] - replacing (when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    }, String)
2021-03-12 11:05:15,864 [main:50] - replacing when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    } String
2021-03-12 11:05:15,864 [main:54] - Getting value of type String
2021-03-12 11:05:15,997 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:05:15,997 [main:58] - GENERATED VALUE OF TYPE String = "gcxjm"
2021-03-12 11:05:15,998 [main:61] - GENERATED IS CALL =false
2021-03-12 11:05:16,274 [main:67] - randomType = Pair<String?, String>
2021-03-12 11:05:16,383 [main:302] - generating value of type = Pair<String?, String> false depth = 0
2021-03-12 11:05:16,489 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: String?, second: String): Pair<String?, String> = TODO()
2021-03-12 11:05:16,491 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: String?, second: String): Pair<String?, String> = TODO()
2021-03-12 11:05:16,588 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:16,589 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:16,590 [main:95] - GENERATED = Pair<String?, String>("zmfcm", "utmmb")
2021-03-12 11:05:16,606 [main:149] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@680719d6]
2021-03-12 11:05:16,711 [main:302] - generating value of type = Char true depth = 0
2021-03-12 11:05:16,713 [main:78] - Generated call from random type = (Pair<String?, String>("zmfcm", "utmmb")).second.replaceBefore('磟', (::topLevel).name, (S("m")::extension).name)
2021-03-12 11:05:16,713 [main:114] - replacement of when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    } of type String is (Pair<String?, String>("zmfcm", "utmmb")).second.replaceBefore('磟', (::topLevel).name, (S("m")::extension).name)
2021-03-12 11:05:16,811 [main:33] - Trying to replace Element(WHEN) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:05:16,811 [main:66] - Compilation checking started
2021-03-12 11:05:17,131 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = true

fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()

fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return (Pair<String?, String>("zmfcm", "utmmb")).second.replaceBefore('磟', (::topLevel).name, (S("m")::extension).name)
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:17,131 [main:107] - replacing (a.fu0(), Boolean)
2021-03-12 11:05:17,132 [main:50] - replacing a.fu0() Boolean
2021-03-12 11:05:17,132 [main:54] - Getting value of type Boolean
2021-03-12 11:05:17,233 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:05:17,234 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 11:05:17,234 [main:61] - GENERATED IS CALL =false
2021-03-12 11:05:17,237 [main:67] - randomType = C
2021-03-12 11:05:17,382 [main:302] - generating value of type = C false depth = 0
2021-03-12 11:05:17,384 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S(y)
}
2021-03-12 11:05:17,394 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in C[DeserializedSimpleFunctionDescriptor@4563bb5d]
2021-03-12 11:05:17,535 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:17,535 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4c841ccb]
2021-03-12 11:05:17,536 [main:78] - Generated call from random type = (C()).equals("tdwhd").xor((C()).equals("ykyac"))
2021-03-12 11:05:17,537 [main:106] - GETTING Boolean from KFunction1<[@kotlin.ParameterName] S, S>
2021-03-12 11:05:17,616 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@f6beb41], public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b8c063e]]
2021-03-12 11:05:17,616 [main:149] - GENERATING call of type public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b8c063e]
2021-03-12 11:05:17,617 [main:117] - GENERATED CALL = (S("m")::extension).name.endsWith(S("zurle").extension2(), (C()).equals("ykyac"))
2021-03-12 11:05:17,617 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80]]
2021-03-12 11:05:17,617 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80]
2021-03-12 11:05:17,738 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:17,739 [main:117] - GENERATED CALL = (S("m")::extension).equals("efzlz")
2021-03-12 11:05:17,739 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@db9950e]]
2021-03-12 11:05:17,739 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80]
2021-03-12 11:05:17,874 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:17,874 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@db9950e]
2021-03-12 11:05:17,990 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:17,990 [main:117] - GENERATED CALL = (S("m")::extension).equals("dafel").equals("ubujr")
2021-03-12 11:05:17,990 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@f6beb41], public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46c74d5d]]
2021-03-12 11:05:17,991 [main:149] - GENERATING call of type public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46c74d5d]
2021-03-12 11:05:17,991 [main:117] - GENERATED CALL = (S("m")::extension).name.matches((::topLevel).name)
2021-03-12 11:05:17,991 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@443fae4a]]
2021-03-12 11:05:17,991 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80]
2021-03-12 11:05:18,092 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:18,093 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@443fae4a]
2021-03-12 11:05:18,192 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:05:18,194 [main:117] - GENERATED CALL = (S("m")::extension).equals("igcee").or(false)
2021-03-12 11:05:18,194 [main:113] - Case = [public expect abstract val name: kotlin.String defined in kotlin.reflect.KFunction1[DeserializedPropertyDescriptor@f6beb41], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@6ad4aa3e]]
2021-03-12 11:05:18,194 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@6ad4aa3e]
2021-03-12 11:05:18,305 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:18,306 [main:117] - GENERATED CALL = (S("m")::extension).name.equals("uonxp")
2021-03-12 11:05:18,306 [main:113] - Case = [public abstract fun invoke(y: S): S defined in kotlin.reflect.KFunction1[FunctionInvokeDescriptor@35e87609], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e]]
2021-03-12 11:05:18,306 [main:149] - GENERATING call of type public abstract fun invoke(y: S): S defined in kotlin.reflect.KFunction1[FunctionInvokeDescriptor@35e87609]
2021-03-12 11:05:18,403 [main:302] - generating value of type = [@kotlin.ParameterName] S false depth = 0
2021-03-12 11:05:18,404 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:18,499 [main:194] - Type params = []
2021-03-12 11:05:18,626 [main:302] - generating value of type = String true depth = 2
2021-03-12 11:05:18,627 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e]
2021-03-12 11:05:18,724 [main:117] - GENERATED CALL = (S("m")::extension).invoke(S("mexap")).equals(null)
2021-03-12 11:05:18,724 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4c841ccb]]
2021-03-12 11:05:18,724 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80]
2021-03-12 11:05:18,818 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:18,818 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4c841ccb]
2021-03-12 11:05:18,916 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:05:18,917 [main:117] - GENERATED CALL = (S("m")::extension).equals("ahwwu").xor(true)
2021-03-12 11:05:18,918 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@d2527b5]]
2021-03-12 11:05:18,918 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80]
2021-03-12 11:05:19,009 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:19,009 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@d2527b5]
2021-03-12 11:05:19,009 [main:117] - GENERATED CALL = (S("m")::extension).equals("jcrmt").not()
2021-03-12 11:05:19,009 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4ee6cf9e]]
2021-03-12 11:05:19,010 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.reflect.KFunction1[DeserializedSimpleFunctionDescriptor@7853f80]
2021-03-12 11:05:19,141 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:19,141 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4ee6cf9e]
2021-03-12 11:05:19,142 [main:117] - GENERATED CALL = (S("m")::extension).equals("gkqev").and((C()).equals("ykyac"))
2021-03-12 11:05:19,142 [main:114] - replacement of a.fu0() of type Boolean is (S("m")::extension).invoke(S("mexap")).equals(null)
2021-03-12 11:05:19,238 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:05:19,238 [main:66] - Compilation checking started
2021-03-12 11:05:19,535 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = true

fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()

fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> when {
            fu1 { (S("m")::extension).invoke(S("mexap")).equals(null) } -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    }
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:19,536 [main:107] - replacing (true, Boolean)
2021-03-12 11:05:19,536 [main:50] - replacing true Boolean
2021-03-12 11:05:19,536 [main:54] - Getting value of type Boolean
2021-03-12 11:05:19,639 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:05:19,640 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 11:05:19,640 [main:61] - GENERATED IS CALL =false
2021-03-12 11:05:19,642 [main:67] - randomType = String
2021-03-12 11:05:19,749 [main:302] - generating value of type = String true depth = 0
2021-03-12 11:05:19,792 [main:149] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@5bd48bbb]
2021-03-12 11:05:19,893 [main:302] - generating value of type = Int true depth = 0
2021-03-12 11:05:19,894 [main:149] - GENERATING call of type public fun kotlin.Char.isISOControl(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5422e84d]
2021-03-12 11:05:19,895 [main:78] - Generated call from random type = ("mmtpy").get(-182576845).isISOControl()
2021-03-12 11:05:19,896 [main:106] - GETTING Boolean from S
2021-03-12 11:05:19,902 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@6ad4aa3e]]
2021-03-12 11:05:19,902 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@6ad4aa3e]
2021-03-12 11:05:19,999 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:20,000 [main:117] - GENERATED CALL = (S("m")).value.equals("bxqzi")
2021-03-12 11:05:20,000 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ab0c73f]]
2021-03-12 11:05:20,000 [main:149] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3ab0c73f]
2021-03-12 11:05:20,000 [main:117] - GENERATED CALL = (S("m")).value.startsWith(S("xldhp").value, (C()).equals("ykyac"))
2021-03-12 11:05:20,001 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63c395ec]]
2021-03-12 11:05:20,001 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63c395ec]
2021-03-12 11:05:20,001 [main:117] - GENERATED CALL = (S("m")).value.toBoolean()
2021-03-12 11:05:20,001 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4ee6cf9e]]
2021-03-12 11:05:20,001 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e]
2021-03-12 11:05:20,095 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:20,095 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4ee6cf9e]
2021-03-12 11:05:20,095 [main:117] - GENERATED CALL = (S("m")).equals("hbqgw").and((C()).equals("ykyac"))
2021-03-12 11:05:20,095 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4c841ccb]]
2021-03-12 11:05:20,095 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e]
2021-03-12 11:05:20,210 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:20,210 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4c841ccb]
2021-03-12 11:05:20,211 [main:117] - GENERATED CALL = (S("m")).equals("auyig").xor((C()).equals("ykyac"))
2021-03-12 11:05:20,211 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@db9950e]]
2021-03-12 11:05:20,211 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e]
2021-03-12 11:05:20,308 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:20,308 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@db9950e]
2021-03-12 11:05:20,408 [main:117] - GENERATED CALL = (S("m")).equals("yfjtk").equals(null)
2021-03-12 11:05:20,408 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@443fae4a]]
2021-03-12 11:05:20,408 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e]
2021-03-12 11:05:20,510 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:20,511 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@443fae4a]
2021-03-12 11:05:20,511 [main:117] - GENERATED CALL = (S("m")).equals("wblbz").or((C()).equals("ykyac"))
2021-03-12 11:05:20,511 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46c74d5d]]
2021-03-12 11:05:20,511 [main:149] - GENERATING call of type public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46c74d5d]
2021-03-12 11:05:20,511 [main:117] - GENERATED CALL = (S("m")).value.matches(S("xldhp").value)
2021-03-12 11:05:20,511 [main:113] - Case = [public final val value: kotlin.String defined in S[PropertyDescriptorImpl@392d35cf], public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b8c063e]]
2021-03-12 11:05:20,511 [main:149] - GENERATING call of type public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b8c063e]
2021-03-12 11:05:20,602 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 11:05:20,604 [main:117] - GENERATED CALL = (S("m")).value.endsWith(S("zurle").extension2(), false)
2021-03-12 11:05:20,604 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e]]
2021-03-12 11:05:20,604 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in S[SimpleFunctionDescriptorImpl@4a2ae93e]
2021-03-12 11:05:20,707 [main:302] - generating value of type = Any false depth = 0
2021-03-12 11:05:20,707 [main:117] - GENERATED CALL = (S("m")).equals("qscki")
2021-03-12 11:05:20,707 [main:114] - replacement of true of type Boolean is (S("m")).value.matches(S("xldhp").value)
2021-03-12 11:05:20,804 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 11:05:20,804 [main:66] - Compilation checking started
2021-03-12 11:05:21,108 [main:49] - Result = false
Text:
import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = (S("m")).value.matches(S("xldhp").value)

fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()

fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    }
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:21,209 [main:41] - AFTER TRY 2 res = import kotlin.test.assertEquals

inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}

class C {
    fun member(x: S, y: String): S = x + S(y)
}

fun topLevel(x: String, y: S): S = S(x) + y

fun S.extension(y: S): S = this + y

fun S.extension2(): String = value

fun box(): String {
    assertEquals(S("ab"), C::member.call(C(), S("a"), "b"))
    assertEquals(S("cd"), ::topLevel.call("c", S("d")))
    assertEquals(S("gh"), S::extension.call(S("g"), S("h")))
    assertEquals("_", S::extension2.call(S("_")))

    assertEquals(S("ij"), C()::member.call(S("i"), "j"))
    assertEquals(S("mn"), S("m")::extension.call(S("n")))
    assertEquals("_", S("_")::extension2.call())

    return "OK"
}

interface Kla0 {
    val prope0: Any
}

fun box344(): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }

    val javaClass = prope1.prope0.javaClass
    val prope3 = javaClass.getEnclosingConstructor()!!.getName()
    if (prope3 != "LambdaInObjectExpressionKt\$box\$l\$1") return "ctor: $prope3"

    val prope4 = javaClass.getEnclosingClass()!!.getName()
    if ((::topLevel).name.startsWith(S("scsdv").extension2(), (C()).equals("ykyac"))) return "enclosing class: $prope4"

    if (prope3 != prope4) return "$prope4 != $prope3"

    val prope5 = javaClass.getDeclaringClass()
    if ((C()).equals("ykyac").or(prope3 != prope4)) return "anonymous function has a declaring class: $prope5"

    return (S("m")::extension).name.replaceFirst('삅', '褐', true)
}

interface Kla1

interface Kla2 : Kla1

fun Kla2.fu0(): Boolean = true

fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()

fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    }
}

class Kla3 : Kla2

fun box497(): String = fu0(Kla3())


2021-03-12 11:05:21,425 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:21,523 [main:194] - Type params = []
2021-03-12 11:05:21,631 [main:302] - generating value of type = String true depth = 1
2021-03-12 11:05:21,632 [main:112] - generating klass C text = class C {
    fun member(x: S, y: String): S = x + S(y)
}
2021-03-12 11:05:21,633 [main:112] - generating klass Kla0 text = interface Kla0 {
    val prope0: Any
}
2021-03-12 11:05:21,875 [main:112] - generating klass Kla1 text = interface Kla1
2021-03-12 11:05:22,083 [main:112] - generating klass Kla2 text = interface Kla2 : Kla1
2021-03-12 11:05:22,286 [main:302] - generating value of type = Kla3 false depth = 1
2021-03-12 11:05:22,288 [main:112] - generating klass Kla3 text = class Kla3 : Kla2
2021-03-12 11:05:22,288 [main:112] - generating klass Kla3 text = class Kla3 : Kla2
2021-03-12 11:05:22,288 [main:112] - generating klass null text = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
2021-03-12 11:05:22,288 [main:112] - generating klass null text = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
2021-03-12 11:05:22,552 [main:43] - GENERATING CALL OF fun topLevel(x: String, y: S): S = S(x) + y
2021-03-12 11:05:22,553 [main:61] - WITHOUT TYPE PARAMS = fun topLevel(x: String, y: S): S = S(x) + y
2021-03-12 11:05:22,656 [main:302] - generating value of type = String true depth = 1
2021-03-12 11:05:22,657 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:05:22,658 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:22,758 [main:194] - Type params = []
2021-03-12 11:05:22,849 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:22,851 [main:95] - GENERATED = topLevel("rekhx", S("nyohf"))
2021-03-12 11:05:22,942 [main:43] - GENERATING CALL OF fun S.extension(y: S): S = this + y
2021-03-12 11:05:22,942 [main:61] - WITHOUT TYPE PARAMS = fun S.extension(y: S): S = this + y
2021-03-12 11:05:23,069 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:05:23,070 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:23,169 [main:194] - Type params = []
2021-03-12 11:05:23,267 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:23,268 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:05:23,269 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:23,373 [main:194] - Type params = []
2021-03-12 11:05:23,468 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:23,470 [main:95] - GENERATED = S("skgyy").extension(S("pujfl"))
2021-03-12 11:05:23,569 [main:43] - GENERATING CALL OF fun S.extension2(): String = value
2021-03-12 11:05:23,570 [main:61] - WITHOUT TYPE PARAMS = fun S.extension2(): String = value
2021-03-12 11:05:23,692 [main:302] - generating value of type = S false depth = 1
2021-03-12 11:05:23,693 [main:112] - generating klass S text = inline class S(val value: String) {
    operator fun plus(other: S): S = S(this.value + other.value)
}
2021-03-12 11:05:23,800 [main:194] - Type params = []
2021-03-12 11:05:23,922 [main:302] - generating value of type = String true depth = 3
2021-03-12 11:05:23,923 [main:95] - GENERATED = S("ymwgi").extension2()
2021-03-12 11:05:24,021 [main:43] - GENERATING CALL OF fun Kla2.fu0(): Boolean = true
2021-03-12 11:05:24,021 [main:61] - WITHOUT TYPE PARAMS = fun Kla2.fu0(): Boolean = true
2021-03-12 11:05:24,117 [main:302] - generating value of type = Kla2 false depth = 1
2021-03-12 11:05:24,118 [main:112] - generating klass Kla2 text = interface Kla2 : Kla1
2021-03-12 11:05:24,344 [main:302] - generating value of type = Kla3 false depth = 3
2021-03-12 11:05:24,346 [main:112] - generating klass Kla3 text = class Kla3 : Kla2
2021-03-12 11:05:24,347 [main:95] - GENERATED = Kla3().fu0()
2021-03-12 11:05:24,455 [main:43] - GENERATING CALL OF fun <Ty0> fu1(action: () -> Ty0): Ty0 = action()
2021-03-12 11:05:24,659 [main:61] - WITHOUT TYPE PARAMS = fun <Ty0> fu1(action: () -> ArrayDeque<Short>): ArrayDeque<Short> = action()
2021-03-12 11:05:24,875 [main:302] - generating value of type = Function0<ArrayDeque<Short>> false depth = 1
2021-03-12 11:05:24,876 [main:302] - generating value of type = ArrayDeque<Short> false depth = 2
2021-03-12 11:05:24,984 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Short>): ArrayDeque<Short> = TODO()
2021-03-12 11:05:24,986 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Short>): ArrayDeque<Short> = TODO()
2021-03-12 11:05:25,185 [main:302] - generating value of type = Collection<Short> false depth = 5
2021-03-12 11:05:25,349 [main:43] - GENERATING CALL OF fun UShortArray(size: kotlin.Int): Collection<Short> = TODO()
2021-03-12 11:05:25,351 [main:61] - WITHOUT TYPE PARAMS = fun UShortArray(size: kotlin.Int): Collection<Short> = TODO()
2021-03-12 11:05:25,565 [main:302] - generating value of type = Int true depth = 8
2021-03-12 11:05:25,566 [main:95] - GENERATED = UShortArray(213768167)
2021-03-12 11:05:25,566 [main:95] - GENERATED = ArrayDeque<Short>(UShortArray(213768167))
2021-03-12 11:05:25,567 [main:95] - GENERATED = fu1<ArrayDeque<Short>>({ ArrayDeque<Short>(UShortArray(213768167))})
2021-03-12 11:05:25,680 [main:43] - GENERATING CALL OF fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    }
}
2021-03-12 11:05:25,681 [main:61] - WITHOUT TYPE PARAMS = fun fu0(a: Kla1): String {
    val prope1 = object : Kla0 {
        override val prope0: Any

        init {
            prope0 = {}
        }
    }
override val prope0: Any
return when (a) {
        is Kla2 -> when {
            fu1 { a.fu0() } -> "OK"
            else -> "Fail 1"
        }
        else -> "Fail 2"
    }
}
2021-03-12 11:05:25,777 [main:302] - generating value of type = Kla1 false depth = 1
2021-03-12 11:05:25,778 [main:112] - generating klass Kla1 text = interface Kla1
2021-03-12 11:05:25,992 [main:95] - GENERATED = fu0(TODO())
2021-03-12 11:05:26,118 [main:43] - Try №2
