2021-03-12 08:33:09,790 [main:66] - Compilation checking started
2021-03-12 08:33:11,680 [main:112] - generating klass ALA text = abstract class ALA : List<Any>
2021-03-12 08:33:12,393 [main:112] - generating klass ALAN text = abstract class ALAN : List<Any?>
2021-03-12 08:33:12,667 [main:112] - generating klass ALT text = abstract class ALT<T> : List<T>
2021-03-12 08:33:13,118 [main:112] - generating klass ALI text = abstract class ALI : List<Int>
2021-03-12 08:33:13,374 [main:112] - generating klass ALIN text = abstract class ALIN : List<Int?>
2021-03-12 08:33:13,633 [main:112] - generating klass ALS text = abstract class ALS : List<String>
2021-03-12 08:33:13,870 [main:112] - generating klass ALSN text = abstract class ALSN : List<String?>
2021-03-12 08:33:14,297 [main:45] - Trying to change 0 nodes
2021-03-12 08:33:14,498 [main:41] - AFTER TRY 0 res = abstract class ALA : List<Any>

abstract class ALAN : List<Any?>

abstract class ALT<T> : List<T>

abstract class ALI : List<Int>

abstract class ALIN : List<Int?>

abstract class ALS : List<String>

abstract class ALSN : List<String?>
2021-03-12 08:33:14,656 [main:112] - generating klass ALA text = abstract class ALA : List<Any>
2021-03-12 08:33:14,848 [main:112] - generating klass ALAN text = abstract class ALAN : List<Any?>
2021-03-12 08:33:15,046 [main:112] - generating klass ALT text = abstract class ALT<T> : List<T>
2021-03-12 08:33:15,510 [main:112] - generating klass ALI text = abstract class ALI : List<Int>
2021-03-12 08:33:15,675 [main:112] - generating klass ALIN text = abstract class ALIN : List<Int?>
2021-03-12 08:33:15,842 [main:112] - generating klass ALS text = abstract class ALS : List<String>
2021-03-12 08:33:16,060 [main:112] - generating klass ALSN text = abstract class ALSN : List<String?>
2021-03-12 08:33:16,395 [main:43] - Try №0
2021-03-12 08:33:18,394 [main:69] - Trying to insert fun box176(): String {
    val prope0 = with(Kla0("VALUE")) { "OK".fu0() }
    return if (prope0 == "OKOK") "OK" else "fail 1: $prope0"
}
2021-03-12 08:33:18,484 [main:66] - Compilation checking started
2021-03-12 08:33:19,524 [main:103] - Trying to change 28 nodes
2021-03-12 08:33:19,524 [main:107] - replacing (with(Kla0("VALUE")) { "OK".fu0() }, String)
2021-03-12 08:33:19,524 [main:50] - replacing with(Kla0("VALUE")) { "OK".fu0() } String
2021-03-12 08:33:19,524 [main:54] - Getting value of type String
2021-03-12 08:33:19,628 [main:302] - generating value of type = String true depth = 0
2021-03-12 08:33:19,631 [main:58] - GENERATED VALUE OF TYPE String = "gtvqi"
2021-03-12 08:33:19,632 [main:61] - GENERATED IS CALL =false
2021-03-12 08:33:19,744 [main:67] - randomType = Char
2021-03-12 08:33:19,851 [main:302] - generating value of type = Char true depth = 0
2021-03-12 08:33:19,923 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1a0e4283]
2021-03-12 08:33:19,925 [main:78] - Generated call from random type = ('궾').uppercase()
2021-03-12 08:33:19,925 [main:114] - replacement of with(Kla0("VALUE")) { "OK".fu0() } of type String is ('궾').uppercase()
2021-03-12 08:33:20,027 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 08:33:20,027 [main:66] - Compilation checking started
2021-03-12 08:33:20,737 [main:53] - Result = true
Text:
abstract class ALA : List<Any>

abstract class ALAN : List<Any?>

abstract class ALT<T> : List<T>

abstract class ALI : List<Int>

abstract class ALIN : List<Int?>

abstract class ALS : List<String>

abstract class ALSN : List<String?>

class Kla0(val value: String) {
    inline fun String.fu0(crossinline lambda: () -> String = { { this }() }): String {
        return {
            {
                this + lambda()
            }()
        }()
    }
}

fun box176(): String {
    val prope0 = ('궾').uppercase()
    return if (prope0 == "OKOK") "OK" else "fail 1: $prope0"
}


2021-03-12 08:33:20,738 [main:107] - replacing (this, String)
2021-03-12 08:33:20,738 [main:50] - replacing this String
2021-03-12 08:33:20,738 [main:54] - Getting value of type String
2021-03-12 08:33:20,855 [main:302] - generating value of type = String true depth = 0
2021-03-12 08:33:20,855 [main:58] - GENERATED VALUE OF TYPE String = "zdjeb"
2021-03-12 08:33:20,856 [main:61] - GENERATED IS CALL =false
2021-03-12 08:33:21,284 [main:67] - randomType = MutableMap<ULong, Byte>
2021-03-12 08:33:21,285 [main:114] - replacement of this of type String is "zdjeb"
2021-03-12 08:33:21,383 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-12 08:33:21,384 [main:66] - Compilation checking started
2021-03-12 08:33:22,051 [main:53] - Result = true
Text:
abstract class ALA : List<Any>

abstract class ALAN : List<Any?>

abstract class ALT<T> : List<T>

abstract class ALI : List<Int>

abstract class ALIN : List<Int?>

abstract class ALS : List<String>

abstract class ALSN : List<String?>

class Kla0(val value: String) {
    inline fun String.fu0(crossinline lambda: () -> String = { { this }() }): String {
        return {
            {
                "zdjeb" + lambda()
            }()
        }()
    }
}

fun box176(): String {
    val prope0 = ('궾').uppercase()
    return if (prope0 == "OKOK") "OK" else "fail 1: $prope0"
}


2021-03-12 08:33:22,052 [main:107] - replacing ({
                "zdjeb" + lambda()
            }(), String)
2021-03-12 08:33:22,052 [main:50] - replacing {
                "zdjeb" + lambda()
            }() String
2021-03-12 08:33:22,052 [main:54] - Getting value of type String
