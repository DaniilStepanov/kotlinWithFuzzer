2021-03-11 12:01:21,798 [main:66] - Compilation checking started
2021-03-11 12:01:24,355 [main:52] - Trying to change 119 nodes
2021-03-11 12:01:24,355 [main:56] - replacing (7, Int)
2021-03-11 12:01:24,359 [main:38] - replacing 7 Int
2021-03-11 12:01:24,360 [main:42] - Getting value of type Int
2021-03-11 12:01:24,501 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:24,503 [main:46] - GENERATED VALUE OF TYPE Int = -427435975
2021-03-11 12:01:24,503 [main:49] - GENERATED IS CALL =false
2021-03-11 12:01:25,121 [main:55] - randomType = Double
2021-03-11 12:01:25,331 [main:302] - generating value of type = Double true depth = 0
2021-03-11 12:01:25,516 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437]
2021-03-11 12:01:25,518 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@45357530]
2021-03-11 12:01:25,519 [main:66] - Generated call from random type = (0.23043083880947424).toInt().takeHighestOneBit()
2021-03-11 12:01:25,534 [main:94] - GETTING Int from UIntProgression
2021-03-11 12:01:25,572 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3ced8b72]]
2021-03-11 12:01:25,572 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3ced8b72]
2021-03-11 12:01:25,573 [main:105] - GENERATED CALL = (uintProgression).first.toInt()
2021-03-11 12:01:25,573 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@256b48b2]]
2021-03-11 12:01:25,574 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@256b48b2]
2021-03-11 12:01:25,575 [main:105] - GENERATED CALL = (uintProgression).step.countOneBits()
2021-03-11 12:01:25,576 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14a689a]]
2021-03-11 12:01:25,576 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14a689a]
2021-03-11 12:01:25,708 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-11 12:01:25,708 [main:302] - generating value of type = Int true depth = 1
2021-03-11 12:01:25,711 [main:105] - GENERATED CALL = (uintProgression).sumBy({a: T -> 1102717009})
2021-03-11 12:01:25,711 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6695efc9]]
2021-03-11 12:01:25,711 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6695efc9]
2021-03-11 12:01:25,847 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:01:25,848 [main:105] - GENERATED CALL = (uintProgression).step.times(82)
2021-03-11 12:01:25,849 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f0f2690]]
2021-03-11 12:01:25,849 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f0f2690]
2021-03-11 12:01:25,981 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-11 12:01:25,981 [main:302] - generating value of type = Int true depth = 1
2021-03-11 12:01:25,984 [main:105] - GENERATED CALL = (uintProgression).sumOf({a: T -> 533411407})
2021-03-11 12:01:25,984 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1c8f1c73]]
2021-03-11 12:01:25,984 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1c8f1c73]
2021-03-11 12:01:25,986 [main:105] - GENERATED CALL = (uintProgression).step.takeLowestOneBit()
2021-03-11 12:01:25,986 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@12b1dcec]]
2021-03-11 12:01:25,987 [main:105] - GENERATED CALL = (uintProgression).step.absoluteValue
2021-03-11 12:01:25,987 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2867e79]]
2021-03-11 12:01:25,987 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2867e79]
2021-03-11 12:01:26,143 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:26,144 [main:105] - GENERATED CALL = (uintProgression).step.shl(-1874168238)
2021-03-11 12:01:26,145 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25]]
2021-03-11 12:01:26,145 [main:105] - GENERATED CALL = (uintProgression).step
2021-03-11 12:01:26,146 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34cd7055]]
2021-03-11 12:01:26,146 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34cd7055]
2021-03-11 12:01:26,147 [main:105] - GENERATED CALL = (uintProgression).step.countLeadingZeroBits()
2021-03-11 12:01:26,147 [main:63] - replacement of 7 of type Int is (uintProgression).step
2021-03-11 12:01:26,303 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:01:26,304 [main:66] - Compilation checking started
2021-03-11 12:01:27,005 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step (uintProgression).step) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}
2021-03-11 12:01:27,008 [main:56] - replacing (7L, Long)
2021-03-11 12:01:27,008 [main:38] - replacing 7L Long
2021-03-11 12:01:27,008 [main:42] - Getting value of type Long
2021-03-11 12:01:27,117 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:01:27,117 [main:46] - GENERATED VALUE OF TYPE Long = -8910106673234310219
2021-03-11 12:01:27,117 [main:49] - GENERATED IS CALL =false
2021-03-11 12:01:27,229 [main:55] - randomType = Boolean
2021-03-11 12:01:27,358 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:01:27,383 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]
2021-03-11 12:01:27,501 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:01:27,502 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@128f0a3c]
2021-03-11 12:01:27,503 [main:66] - Generated call from random type = (true).compareTo(true).toLong()
2021-03-11 12:01:27,506 [main:94] - GETTING Long from ULongProgression
2021-03-11 12:01:27,541 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Long.absoluteValue: kotlin.Long defined in kotlin.math[DeserializedPropertyDescriptor@9936615]]
2021-03-11 12:01:27,542 [main:105] - GENERATED CALL = (ulongProgression).step.absoluteValue
2021-03-11 12:01:27,543 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4cd775f3]]
2021-03-11 12:01:27,543 [main:137] - GENERATING call of type public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4cd775f3]
2021-03-11 12:01:27,544 [main:105] - GENERATED CALL = (ulongProgression).step.inv()
2021-03-11 12:01:27,544 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@18e20fa8]]
2021-03-11 12:01:27,545 [main:137] - GENERATING call of type public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@18e20fa8]
2021-03-11 12:01:27,716 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:01:27,717 [main:105] - GENERATED CALL = (ulongProgression).step.coerceAtMost(-5234005427881421130)
2021-03-11 12:01:27,718 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], public final operator fun inc(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4f015995]]
2021-03-11 12:01:27,718 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4f015995]
2021-03-11 12:01:27,719 [main:105] - GENERATED CALL = (ulongProgression).step.inc()
2021-03-11 12:01:27,719 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], public final operator fun times(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@24ae81d3]]
2021-03-11 12:01:27,719 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@24ae81d3]
2021-03-11 12:01:27,832 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:01:27,833 [main:105] - GENERATED CALL = (ulongProgression).step.times(67)
2021-03-11 12:01:27,834 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4f91f4f6]]
2021-03-11 12:01:27,834 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4f91f4f6]
2021-03-11 12:01:27,955 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:01:27,956 [main:105] - GENERATED CALL = (ulongProgression).step.rem(58)
2021-03-11 12:01:27,956 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@27d40d38]]
2021-03-11 12:01:27,956 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@27d40d38]
2021-03-11 12:01:27,957 [main:105] - GENERATED CALL = (ulongProgression).sum()
2021-03-11 12:01:27,957 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@653b3345]]
2021-03-11 12:01:27,957 [main:137] - GENERATING call of type public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@653b3345]
2021-03-11 12:01:28,069 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:01:28,070 [main:105] - GENERATED CALL = (ulongProgression).step.coerceAtLeast(765929494885430299)
2021-03-11 12:01:28,070 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@143ef384]]
2021-03-11 12:01:28,070 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@143ef384]
2021-03-11 12:01:28,190 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:01:28,191 [main:105] - GENERATED CALL = (ulongProgression).step.and(-1896995554626979000)
2021-03-11 12:01:28,192 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6af24d36]]
2021-03-11 12:01:28,192 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6af24d36]
2021-03-11 12:01:28,301 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:01:28,303 [main:105] - GENERATED CALL = (ulongProgression).step.or(2487701740105032226)
2021-03-11 12:01:28,303 [main:63] - replacement of 7L of type Long is (ulongProgression).step.and(-1896995554626979000)
2021-03-11 12:01:28,417 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:01:28,417 [main:66] - Compilation checking started
2021-03-11 12:01:29,028 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step (uintProgression).step) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}
2021-03-11 12:01:29,030 [main:56] - replacing (7u downTo 1u, UIntProgression)
2021-03-11 12:01:29,030 [main:38] - replacing 7u downTo 1u UIntProgression
2021-03-11 12:01:29,030 [main:42] - Getting value of type UIntProgression
2021-03-11 12:01:29,166 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-11 12:01:29,339 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:01:29,344 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:01:29,753 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:01:29,754 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:01:29,754 [main:95] - GENERATED = UIntRange(564494377.toUInt(), 405262077.toUInt())
2021-03-11 12:01:29,754 [main:46] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(564494377.toUInt(), 405262077.toUInt())
2021-03-11 12:01:29,755 [main:49] - GENERATED IS CALL =true
2021-03-11 12:01:30,075 [main:55] - randomType = LinkedHashSet<UByte>
2021-03-11 12:01:30,187 [main:302] - generating value of type = LinkedHashSet<UByte> false depth = 0
2021-03-11 12:01:30,363 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): LkedHashSet<UByte> = TODO()
2021-03-11 12:01:30,366 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): LkedHashSet<UByte> = TODO()
2021-03-11 12:01:30,475 [main:95] - GENERATED = linkedSetOf<UByte>()
2021-03-11 12:01:30,695 [main:94] - GETTING UIntProgression from ULongProgression
2021-03-11 12:01:30,717 [main:94] - GETTING UIntProgression from UIntProgression
2021-03-11 12:01:30,735 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]]
2021-03-11 12:01:30,736 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]
2021-03-11 12:01:30,736 [main:105] - GENERATED CALL = (uintProgression).reversed()
2021-03-11 12:01:30,736 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]]
2021-03-11 12:01:30,737 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]
2021-03-11 12:01:30,842 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:30,843 [main:105] - GENERATED CALL = (uintProgression).step(-434687081)
2021-03-11 12:01:30,843 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]]
2021-03-11 12:01:30,843 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:01:31,007 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:01:31,008 [main:105] - GENERATED CALL = (uintProgression).first.downTo(1529347021.toUInt())
2021-03-11 12:01:31,008 [main:63] - replacement of 7u downTo 1u of type UIntProgression is (uintProgression).first.downTo(1529347021.toUInt())
2021-03-11 12:01:31,116 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:01:31,117 [main:66] - Compilation checking started
2021-03-11 12:01:31,517 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (uintProgression).first.downTo(1529347021.toUInt())
    for (i in uintProgression step (uintProgression).step) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}


2021-03-11 12:01:31,518 [main:56] - replacing (listOf(7uL), List<ULong>)
2021-03-11 12:01:31,518 [main:38] - replacing listOf(7uL) List<ULong>
2021-03-11 12:01:31,518 [main:42] - Getting value of type List<ULong>
2021-03-11 12:01:31,644 [main:302] - generating value of type = List<ULong> false depth = 0
2021-03-11 12:01:31,768 [main:43] - GENERATING CALL OF fun <T> listOf(element: ULong): List<ULong> = TODO()
2021-03-11 12:01:31,771 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOf(element: ULong): List<ULong> = TODO()
2021-03-11 12:01:31,903 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:01:31,904 [main:95] - GENERATED = listOf<ULong>(5072505777835648763.toULong())
2021-03-11 12:01:31,904 [main:46] - GENERATED VALUE OF TYPE List<ULong> = listOf<ULong>(5072505777835648763.toULong())
2021-03-11 12:01:31,904 [main:49] - GENERATED IS CALL =true
2021-03-11 12:01:32,992 [main:55] - randomType = Function2<HashMap<Map<Int?, UInt>, UShort>?, LinkedHashMap<Byte, Char>, ULong>
2021-03-11 12:01:33,063 [main:94] - GETTING List<ULong> from ULongProgression
2021-03-11 12:01:33,087 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filterIndexed(predicate: (index: kotlin.Int, T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]]
2021-03-11 12:01:33,087 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filterIndexed(predicate: (index: kotlin.Int, T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]
2021-03-11 12:01:33,190 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, T, Boolean> false depth = 0
2021-03-11 12:01:33,191 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:01:33,192 [main:105] - GENERATED CALL = (ulongProgression).filterIndexed({a: Int, b: T -> false})
2021-03-11 12:01:33,192 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filter(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67b020cd]]
2021-03-11 12:01:33,192 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filter(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67b020cd]
2021-03-11 12:01:33,290 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:01:33,290 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:01:33,291 [main:105] - GENERATED CALL = (ulongProgression).filter({a: T -> false})
2021-03-11 12:01:33,292 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3128baef]]
2021-03-11 12:01:33,292 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3128baef]
2021-03-11 12:01:33,422 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:01:33,423 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:01:33,424 [main:105] - GENERATED CALL = (ulongProgression).takeWhile({a: T -> true})
2021-03-11 12:01:33,424 [main:101] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d7b5971]]
2021-03-11 12:01:33,424 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d7b5971]
2021-03-11 12:01:33,425 [main:105] - GENERATED CALL = (ulongProgression).shuffled()
2021-03-11 12:01:33,425 [main:101] - Case = [public fun <T : kotlin.Any> kotlin.collections.Iterable<T?>.filterNotNull(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14ffb9ff]]
2021-03-11 12:01:33,425 [main:137] - GENERATING call of type public fun <T : kotlin.Any> kotlin.collections.Iterable<T?>.filterNotNull(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14ffb9ff]
2021-03-11 12:01:33,426 [main:105] - GENERATED CALL = (ulongProgression).filterNotNull()
2021-03-11 12:01:33,426 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a61862]]
2021-03-11 12:01:33,426 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a61862]
2021-03-11 12:01:33,427 [main:105] - GENERATED CALL = (ulongProgression).sorted()
2021-03-11 12:01:33,427 [main:101] - Case = [public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedBy(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d5b21c1]]
2021-03-11 12:01:33,427 [main:137] - GENERATING call of type public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedBy(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d5b21c1]
2021-03-11 12:01:33,559 [main:302] - generating value of type = Function1<T, R?> false depth = 0
2021-03-11 12:01:33,560 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:01:33,986 [main:43] - GENERATING CALL OF fun <R> run(block: ()->ArrayDeque<UShort>): R = TODO()
2021-03-11 12:01:33,988 [main:61] - WITHOUT TYPE PARAMS = fun <R> run(block: ()->ArrayDeque<UShort>): R = TODO()
2021-03-11 12:01:34,200 [main:302] - generating value of type = Function0<ArrayDeque<UShort>> false depth = 4
2021-03-11 12:01:34,200 [main:302] - generating value of type = ArrayDeque<UShort> false depth = 5
2021-03-11 12:01:34,302 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<UShort> = TODO()
2021-03-11 12:01:34,303 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<UShort> = TODO()
2021-03-11 12:01:34,536 [main:302] - generating value of type = Int true depth = 8
2021-03-11 12:01:34,537 [main:95] - GENERATED = ArrayDeque<UShort>(-1277426893)
2021-03-11 12:01:34,537 [main:95] - GENERATED = run<ArrayDeque<UShort>>({ ArrayDeque<UShort>(-1277426893)})
2021-03-11 12:01:34,538 [main:105] - GENERATED CALL = (ulongProgression).sortedBy({a: T -> run<ArrayDeque<UShort>>({ ArrayDeque<UShort>(-1277426893)})})
2021-03-11 12:01:34,539 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.take(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f8c60f0]]
2021-03-11 12:01:34,539 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.take(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f8c60f0]
2021-03-11 12:01:34,637 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:34,638 [main:105] - GENERATED CALL = (ulongProgression).take(-826579270)
2021-03-11 12:01:34,638 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.dropWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3b6635f2]]
2021-03-11 12:01:34,638 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.dropWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3b6635f2]
2021-03-11 12:01:34,728 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:01:34,729 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:01:34,730 [main:105] - GENERATED CALL = (ulongProgression).dropWhile({a: T -> false})
2021-03-11 12:01:34,730 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.distinct(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2486c31f]]
2021-03-11 12:01:34,730 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.distinct(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2486c31f]
2021-03-11 12:01:34,730 [main:105] - GENERATED CALL = (ulongProgression).distinct()
2021-03-11 12:01:34,730 [main:63] - replacement of listOf(7uL) of type List<ULong> is (ulongProgression).dropWhile({a: T -> false})
2021-03-11 12:01:34,818 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:01:34,819 [main:66] - Compilation checking started
2021-03-11 12:01:35,114 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step (uintProgression).step) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals((ulongProgression).dropWhile({a: T -> false}), ulongList)

    return "OK"
}


2021-03-11 12:01:35,115 [main:56] - replacing (7u, UInt)
2021-03-11 12:01:35,115 [main:38] - replacing 7u UInt
2021-03-11 12:01:35,115 [main:42] - Getting value of type UInt
2021-03-11 12:01:35,220 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:01:35,221 [main:46] - GENERATED VALUE OF TYPE UInt = 672550882.toUInt()
2021-03-11 12:01:35,221 [main:49] - GENERATED IS CALL =false
2021-03-11 12:01:35,323 [main:55] - randomType = Boolean
2021-03-11 12:01:35,412 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:01:35,426 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]
2021-03-11 12:01:35,520 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:01:35,521 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@67a8eb0a]
2021-03-11 12:01:35,521 [main:66] - Generated call from random type = (false).compareTo(true).toUInt()
2021-03-11 12:01:35,528 [main:94] - GETTING UInt from UIntProgression
2021-03-11 12:01:35,552 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2]]
2021-03-11 12:01:35,553 [main:105] - GENERATED CALL = (uintProgression).first
2021-03-11 12:01:35,553 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a161942]]
2021-03-11 12:01:35,553 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a161942]
2021-03-11 12:01:35,554 [main:105] - GENERATED CALL = (uintProgression).singleOrNull()
2021-03-11 12:01:35,554 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1863ebc6]]
2021-03-11 12:01:35,554 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1863ebc6]
2021-03-11 12:01:35,658 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:35,756 [main:302] - generating value of type = Function1<Int, T> false depth = 0
2021-03-11 12:01:35,756 [main:302] - generating value of type = T false depth = 1
2021-03-11 12:01:36,200 [main:43] - GENERATING CALL OF fun <T> requireNotNull(value: Set<UByte>, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-11 12:01:36,201 [main:61] - WITHOUT TYPE PARAMS = fun <T> requireNotNull(value: Set<UByte>, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-11 12:01:36,400 [main:302] - generating value of type = Set<UByte> false depth = 4
2021-03-11 12:01:36,509 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): Set<UByte> = TODO()
2021-03-11 12:01:36,511 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): Set<UByte> = TODO()
2021-03-11 12:01:36,632 [main:95] - GENERATED = linkedSetOf<UByte>()
2021-03-11 12:01:36,632 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 12:01:36,632 [main:302] - generating value of type = Any false depth = 5
2021-03-11 12:01:36,635 [main:95] - GENERATED = requireNotNull<Set<UByte>>(linkedSetOf<UByte>(), { "nvfsf"})
2021-03-11 12:01:36,636 [main:105] - GENERATED CALL = (uintProgression).elementAtOrElse(812443642, {a: Int -> requireNotNull<Set<UByte>>(linkedSetOf<UByte>(), { "nvfsf"})})
2021-03-11 12:01:36,636 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@519c0918]]
2021-03-11 12:01:36,636 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@519c0918]
2021-03-11 12:01:36,740 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:01:36,740 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:01:36,742 [main:105] - GENERATED CALL = (uintProgression).find({a: T -> true})
2021-03-11 12:01:36,742 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.max(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@de3cdeb]]
2021-03-11 12:01:36,742 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.max(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@de3cdeb]
2021-03-11 12:01:36,743 [main:105] - GENERATED CALL = (uintProgression).max()
2021-03-11 12:01:36,743 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]]
2021-03-11 12:01:36,743 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]
2021-03-11 12:01:36,743 [main:105] - GENERATED CALL = (uintProgression).first.takeLowestOneBit()
2021-03-11 12:01:36,744 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.coerceAtLeast(minimumValue: kotlin.UInt): kotlin.UInt defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@a9313af]]
2021-03-11 12:01:36,744 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.coerceAtLeast(minimumValue: kotlin.UInt): kotlin.UInt defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@a9313af]
2021-03-11 12:01:36,838 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:01:36,839 [main:105] - GENERATED CALL = (uintProgression).first.coerceAtLeast(1329993021.toUInt())
2021-03-11 12:01:36,840 [main:101] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7249d9ce]]
2021-03-11 12:01:36,840 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 12:01:36,934 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-11 12:01:37,808 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>>, selector: (T)->LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>): Comparator<T> = TODO()
2021-03-11 12:01:37,810 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>>, selector: (T)->LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>): Comparator<T> = TODO()
2021-03-11 12:01:38,144 [main:302] - generating value of type = Comparator<LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>> false depth = 3
2021-03-11 12:01:38,247 [main:43] - GENERATING CALL OF fun <T> compareBy(selectors: Function1<LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>, Comparable<*>?>): Comparator<LkedHashMap<Double, Function1<Char?, Collection<Byte?>>>> = TODO()
2021-03-11 12:01:38,249 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selectors: Function1<LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>, Comparable<*>?>): Comparator<LkedHashMap<Double, Function1<Char?, Collection<Byte?>>>> = TODO()
2021-03-11 12:01:38,342 [main:302] - generating value of type = Function1<LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>, Comparable<*>?> false depth = 6
2021-03-11 12:01:38,342 [main:302] - generating value of type = Comparable<*> false depth = 7
2021-03-11 12:01:38,348 [main:95] - GENERATED = compareBy<LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>>({a: LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>> -> 1897323088031919093})
2021-03-11 12:01:38,348 [main:302] - generating value of type = Function1<T, LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>> false depth = 3
2021-03-11 12:01:38,348 [main:302] - generating value of type = LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>> false depth = 4
2021-03-11 12:01:38,452 [main:43] - GENERATING CALL OF fun <K, V> LinkedHashMap(): LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>> = TODO()
2021-03-11 12:01:38,454 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> LinkedHashMap(): LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>> = TODO()
2021-03-11 12:01:38,595 [main:95] - GENERATED = LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>()
2021-03-11 12:01:38,596 [main:95] - GENERATED = compareByDescending<T, LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>>(compareBy<LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>>({a: LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>> -> 1897323088031919093}), {a: T -> LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>()})
2021-03-11 12:01:38,598 [main:105] - GENERATED CALL = (uintProgression).minWithOrNull(compareByDescending<T, LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>>(compareBy<LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>>({a: LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>> -> 1897323088031919093}), {a: T -> LinkedHashMap<Double, Function1<Char?, Collection<Byte?>>>()}))
2021-03-11 12:01:38,599 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@67a8eb0a]]
2021-03-11 12:01:38,599 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@67a8eb0a]
2021-03-11 12:01:38,599 [main:105] - GENERATED CALL = (uintProgression).step.toUInt()
2021-03-11 12:01:38,599 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a3769ed]]
2021-03-11 12:01:38,599 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a3769ed]
2021-03-11 12:01:38,701 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:01:38,702 [main:105] - GENERATED CALL = (uintProgression).first.plus(25.toUByte())
2021-03-11 12:01:38,702 [main:63] - replacement of 7u of type UInt is (uintProgression).first.plus(25.toUByte())
2021-03-11 12:01:38,788 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:01:38,788 [main:66] - Compilation checking started
2021-03-11 12:01:39,272 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step (uintProgression).step) {
        uintList += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}


2021-03-11 12:01:39,273 [main:56] - replacing (uintProgression, UIntProgression)
2021-03-11 12:01:39,273 [main:38] - replacing uintProgression UIntProgression
2021-03-11 12:01:39,273 [main:42] - Getting value of type UIntProgression
2021-03-11 12:01:39,360 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-11 12:01:39,449 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:01:39,451 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:01:39,764 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:01:39,765 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:01:39,765 [main:95] - GENERATED = UIntRange(1340925293.toUInt(), 4069433.toUInt())
2021-03-11 12:01:39,765 [main:46] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1340925293.toUInt(), 4069433.toUInt())
2021-03-11 12:01:39,765 [main:49] - GENERATED IS CALL =true
2021-03-11 12:01:40,621 [main:55] - randomType = Function2<Function2<Char?, Boolean, UInt>, HashMap<Float, Short>, Float>
2021-03-11 12:01:40,621 [main:94] - GETTING UIntProgression from UIntProgression
2021-03-11 12:01:40,645 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]]
2021-03-11 12:01:40,645 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:01:40,734 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:01:40,735 [main:105] - GENERATED CALL = (uintProgression).first.downTo(725550050.toUInt())
2021-03-11 12:01:40,735 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]]
2021-03-11 12:01:40,735 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]
2021-03-11 12:01:40,868 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:40,870 [main:105] - GENERATED CALL = (uintProgression).step(1406209828)
2021-03-11 12:01:40,870 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]]
2021-03-11 12:01:40,870 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]
2021-03-11 12:01:40,871 [main:105] - GENERATED CALL = (uintProgression).reversed()
2021-03-11 12:01:40,871 [main:63] - replacement of uintProgression of type UIntProgression is uintProgression
2021-03-11 12:01:41,011 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:01:41,013 [main:56] - replacing (7uL downTo 1uL, ULongProgression)
2021-03-11 12:01:41,013 [main:38] - replacing 7uL downTo 1uL ULongProgression
2021-03-11 12:01:41,013 [main:42] - Getting value of type ULongProgression
2021-03-11 12:01:41,103 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-11 12:01:41,193 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-11 12:01:41,194 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-11 12:01:41,507 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:01:41,507 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:01:41,508 [main:95] - GENERATED = ULongRange(6450381923599107812.toULong(), 6557988248443411658.toULong())
2021-03-11 12:01:41,508 [main:46] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(6450381923599107812.toULong(), 6557988248443411658.toULong())
2021-03-11 12:01:41,509 [main:49] - GENERATED IS CALL =true
2021-03-11 12:01:41,510 [main:55] - randomType = Int
2021-03-11 12:01:41,618 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:41,688 [main:94] - GETTING ULongProgression from UIntProgression
2021-03-11 12:01:41,708 [main:94] - GETTING ULongProgression from ULongProgression
2021-03-11 12:01:41,727 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.ULongProgression.reversed(): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@69e2995e]]
2021-03-11 12:01:41,727 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.ULongProgression.reversed(): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@69e2995e]
2021-03-11 12:01:41,727 [main:105] - GENERATED CALL = (ulongProgression).reversed()
2021-03-11 12:01:41,727 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f43b557]]
2021-03-11 12:01:41,728 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f43b557]
2021-03-11 12:01:41,812 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:01:41,812 [main:105] - GENERATED CALL = (ulongProgression).first.downTo(5772182743236328872.toULong())
2021-03-11 12:01:41,813 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.ULongProgression.step(step: kotlin.Long): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@8e10577]]
2021-03-11 12:01:41,813 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.ULongProgression.step(step: kotlin.Long): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@8e10577]
2021-03-11 12:01:41,895 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:01:41,896 [main:105] - GENERATED CALL = (ulongProgression).step(-929474838905296151)
2021-03-11 12:01:41,896 [main:63] - replacement of 7uL downTo 1uL of type ULongProgression is (ulongProgression).step(-929474838905296151)
2021-03-11 12:01:41,981 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:01:41,981 [main:66] - Compilation checking started
2021-03-11 12:01:42,248 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step (uintProgression).step) {
        uintList += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (ulongProgression).step(-929474838905296151)
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}


2021-03-11 12:01:42,249 [main:56] - replacing (uintList, MutableList<UInt>)
2021-03-11 12:01:42,250 [main:38] - replacing uintList MutableList<UInt>
2021-03-11 12:01:42,250 [main:42] - Getting value of type MutableList<UInt>
2021-03-11 12:01:42,375 [main:302] - generating value of type = MutableList<UInt> false depth = 0
2021-03-11 12:01:42,474 [main:43] - GENERATING CALL OF fun <T> MutableList(size: kotlin.Int, init: (index: kotlin.Int)->UInt): MutableList<UInt> = TODO()
2021-03-11 12:01:42,476 [main:61] - WITHOUT TYPE PARAMS = fun <T> MutableList(size: kotlin.Int, init: (index: kotlin.Int)->UInt): MutableList<UInt> = TODO()
2021-03-11 12:01:42,756 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:01:42,756 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, UInt> false depth = 3
2021-03-11 12:01:42,756 [main:302] - generating value of type = UInt true depth = 4
2021-03-11 12:01:42,757 [main:95] - GENERATED = MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()})
2021-03-11 12:01:42,757 [main:46] - GENERATED VALUE OF TYPE MutableList<UInt> = MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()})
2021-03-11 12:01:42,758 [main:49] - GENERATED IS CALL =true
2021-03-11 12:01:42,758 [main:55] - randomType = UInt
2021-03-11 12:01:42,844 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:01:42,890 [main:94] - GETTING MutableList<UInt> from UIntProgression
2021-03-11 12:01:42,912 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:01:42,912 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:01:42,913 [main:105] - GENERATED CALL = (uintProgression).toMutableList()
2021-03-11 12:01:42,913 [main:63] - replacement of uintList of type MutableList<UInt> is MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()})
2021-03-11 12:01:43,001 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:01:43,002 [main:66] - Compilation checking started
2021-03-11 12:01:43,515 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step (uintProgression).step) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}


2021-03-11 12:01:43,517 [main:56] - replacing (7uL, ULong)
2021-03-11 12:01:43,517 [main:38] - replacing 7uL ULong
2021-03-11 12:01:43,517 [main:42] - Getting value of type ULong
2021-03-11 12:01:43,622 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:01:43,622 [main:46] - GENERATED VALUE OF TYPE ULong = 3509435421906117602.toULong()
2021-03-11 12:01:43,622 [main:49] - GENERATED IS CALL =false
2021-03-11 12:01:43,904 [main:55] - randomType = Array<ULong?>?
2021-03-11 12:01:43,992 [main:302] - generating value of type = Array<ULong?> false depth = 0
2021-03-11 12:01:44,086 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->ULong?): Array<ULong?> = TODO()
2021-03-11 12:01:44,087 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->ULong?): Array<ULong?> = TODO()
2021-03-11 12:01:44,417 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:01:44,417 [main:302] - generating value of type = Function1<Int, ULong?> false depth = 3
2021-03-11 12:01:44,418 [main:302] - generating value of type = ULong true depth = 4
2021-03-11 12:01:44,418 [main:95] - GENERATED = Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()})
2021-03-11 12:01:44,449 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.ULong? defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@73ad2913]
2021-03-11 12:01:44,538 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:44,539 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@41cd5cc7]
2021-03-11 12:01:44,541 [main:66] - Generated call from random type = (Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()}))?.get(803360572)?.inv()!!
2021-03-11 12:01:44,543 [main:94] - GETTING ULong from UIntProgression
2021-03-11 12:01:44,568 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@51cd3b50]]
2021-03-11 12:01:44,568 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@51cd3b50]
2021-03-11 12:01:44,659 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:01:44,660 [main:105] - GENERATED CALL = (uintProgression).first.rem(2270568267392072228.toULong())
2021-03-11 12:01:44,660 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@26949d82]]
2021-03-11 12:01:44,660 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@26949d82]
2021-03-11 12:01:44,755 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:01:44,756 [main:105] - GENERATED CALL = (uintProgression).first.plus(2204863154141461771.toULong())
2021-03-11 12:01:44,756 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]]
2021-03-11 12:01:44,756 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:01:44,757 [main:105] - GENERATED CALL = (uintProgression).step.toULong()
2021-03-11 12:01:44,757 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@19e90def]]
2021-03-11 12:01:44,757 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@19e90def]
2021-03-11 12:01:44,850 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:01:44,850 [main:105] - GENERATED CALL = (uintProgression).first.times(7848982001818142089.toULong())
2021-03-11 12:01:44,851 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@54e324d1]]
2021-03-11 12:01:44,851 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@54e324d1]
2021-03-11 12:01:44,935 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:01:44,936 [main:105] - GENERATED CALL = (uintProgression).first.minus(4134585909442232537.toULong())
2021-03-11 12:01:44,936 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7b5ea373]]
2021-03-11 12:01:44,936 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7b5ea373]
2021-03-11 12:01:44,937 [main:105] - GENERATED CALL = (uintProgression).first.toULong()
2021-03-11 12:01:44,937 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@32ae2303]]
2021-03-11 12:01:44,937 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@32ae2303]
2021-03-11 12:01:44,937 [main:105] - GENERATED CALL = (uintProgression).sum()
2021-03-11 12:01:44,937 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.ULong): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71886642]]
2021-03-11 12:01:44,937 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.ULong): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71886642]
2021-03-11 12:01:45,045 [main:302] - generating value of type = Function1<T, ULong> false depth = 0
2021-03-11 12:01:45,046 [main:302] - generating value of type = ULong true depth = 1
2021-03-11 12:01:45,047 [main:105] - GENERATED CALL = (uintProgression).sumOf({a: T -> 7677054043930188373.toULong()})
2021-03-11 12:01:45,047 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c9fb03]]
2021-03-11 12:01:45,047 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c9fb03]
2021-03-11 12:01:45,148 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:01:45,149 [main:105] - GENERATED CALL = (uintProgression).first.div(1686213524663275576.toULong())
2021-03-11 12:01:45,149 [main:63] - replacement of 7uL of type ULong is (Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()}))?.get(803360572)?.inv()!!
2021-03-11 12:01:45,234 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(POSTFIX_EXPRESSION)
2021-03-11 12:01:45,234 [main:66] - Compilation checking started
2021-03-11 12:01:45,836 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step (uintProgression).step) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals(listOf((Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()}))?.get(803360572)?.inv()!!), ulongList)

    return "OK"
}


2021-03-11 12:01:45,839 [main:56] - replacing (uintProgression step (uintProgression).step, UIntProgression)
2021-03-11 12:01:45,840 [main:38] - replacing uintProgression step (uintProgression).step UIntProgression
2021-03-11 12:01:45,840 [main:42] - Getting value of type UIntProgression
2021-03-11 12:01:45,955 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-11 12:01:46,065 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:01:46,067 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:01:46,423 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:01:46,423 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:01:46,424 [main:95] - GENERATED = UIntRange(2116096502.toUInt(), 1742363949.toUInt())
2021-03-11 12:01:46,424 [main:46] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(2116096502.toUInt(), 1742363949.toUInt())
2021-03-11 12:01:46,424 [main:49] - GENERATED IS CALL =true
2021-03-11 12:01:46,531 [main:55] - randomType = Boolean
2021-03-11 12:01:46,638 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:01:46,656 [main:94] - GETTING UIntProgression from ULongProgression
2021-03-11 12:01:46,678 [main:94] - GETTING UIntProgression from UIntProgression
2021-03-11 12:01:46,702 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]]
2021-03-11 12:01:46,702 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]
2021-03-11 12:01:46,702 [main:105] - GENERATED CALL = (uintProgression).reversed()
2021-03-11 12:01:46,702 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]]
2021-03-11 12:01:46,703 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]
2021-03-11 12:01:46,804 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:46,805 [main:105] - GENERATED CALL = (uintProgression).step(2092458601)
2021-03-11 12:01:46,805 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]]
2021-03-11 12:01:46,806 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:01:46,909 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:01:46,910 [main:105] - GENERATED CALL = (uintProgression).first.downTo(1021795894.toUInt())
2021-03-11 12:01:46,910 [main:63] - replacement of uintProgression step (uintProgression).step of type UIntProgression is (uintProgression).step(2092458601)
2021-03-11 12:01:47,015 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:01:47,016 [main:66] - Compilation checking started
2021-03-11 12:01:47,531 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals(listOf((Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()}))?.get(803360572)?.inv()!!), ulongList)

    return "OK"
}


2021-03-11 12:01:47,533 [main:56] - replacing (7uL, ULong)
2021-03-11 12:01:47,533 [main:38] - replacing 7uL ULong
2021-03-11 12:01:47,533 [main:42] - Getting value of type ULong
2021-03-11 12:01:47,633 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:01:47,634 [main:46] - GENERATED VALUE OF TYPE ULong = 6897449810909497241.toULong()
2021-03-11 12:01:47,634 [main:49] - GENERATED IS CALL =false
2021-03-11 12:01:47,846 [main:55] - randomType = Boolean?
2021-03-11 12:01:47,975 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:01:47,994 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]
2021-03-11 12:01:48,098 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:01:48,099 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:01:48,099 [main:66] - Generated call from random type = (false)?.compareTo(true).toULong()
2021-03-11 12:01:48,101 [main:94] - GETTING ULong from ULongProgression
2021-03-11 12:01:48,126 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.rotateRight(bitCount: kotlin.Int): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7603119f]]
2021-03-11 12:01:48,127 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.rotateRight(bitCount: kotlin.Int): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7603119f]
2021-03-11 12:01:48,228 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:48,229 [main:105] - GENERATED CALL = (ulongProgression).first.rotateRight(860864556)
2021-03-11 12:01:48,229 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.takeLowestOneBit(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@5d4b06f4]]
2021-03-11 12:01:48,229 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.takeLowestOneBit(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@5d4b06f4]
2021-03-11 12:01:48,230 [main:105] - GENERATED CALL = (ulongProgression).first.takeLowestOneBit()
2021-03-11 12:01:48,230 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.coerceAtLeast(minimumValue: kotlin.ULong): kotlin.ULong defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@368ea8a3]]
2021-03-11 12:01:48,230 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.coerceAtLeast(minimumValue: kotlin.ULong): kotlin.ULong defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@368ea8a3]
2021-03-11 12:01:48,330 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:01:48,331 [main:105] - GENERATED CALL = (ulongProgression).first.coerceAtLeast(7837858972616411100.toULong())
2021-03-11 12:01:48,331 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3ae58b76]]
2021-03-11 12:01:48,331 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3ae58b76]
2021-03-11 12:01:48,331 [main:105] - GENERATED CALL = (ulongProgression).first.toULong()
2021-03-11 12:01:48,332 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@1be36b12]]
2021-03-11 12:01:48,332 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@1be36b12]
2021-03-11 12:01:48,332 [main:105] - GENERATED CALL = (ulongProgression).first.inc()
2021-03-11 12:01:48,332 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@32ae2303]]
2021-03-11 12:01:48,332 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@32ae2303]
2021-03-11 12:01:48,332 [main:105] - GENERATED CALL = (ulongProgression).sum()
2021-03-11 12:01:48,332 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@55851bc0]]
2021-03-11 12:01:48,333 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@55851bc0]
2021-03-11 12:01:48,333 [main:105] - GENERATED CALL = (ulongProgression).single()
2021-03-11 12:01:48,333 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.internal.InlineOnly public final inline infix fun shl(bitCount: kotlin.Int): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@68cbf488]]
2021-03-11 12:01:48,333 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun shl(bitCount: kotlin.Int): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@68cbf488]
2021-03-11 12:01:48,454 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:48,455 [main:105] - GENERATED CALL = (ulongProgression).first.shl(-1426901420)
2021-03-11 12:01:48,455 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@19b7f8f6]]
2021-03-11 12:01:48,455 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@19b7f8f6]
2021-03-11 12:01:48,456 [main:105] - GENERATED CALL = (ulongProgression).step.toULong()
2021-03-11 12:01:48,456 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@7792e75e]]
2021-03-11 12:01:48,456 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@7792e75e]
2021-03-11 12:01:48,559 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:01:48,559 [main:105] - GENERATED CALL = (ulongProgression).first.plus(37.toUByte())
2021-03-11 12:01:48,559 [main:63] - replacement of 7uL of type ULong is (ulongProgression).single()
2021-03-11 12:01:48,650 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:01:48,650 [main:66] - Compilation checking started
2021-03-11 12:01:48,917 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (ulongProgression).single() downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals(listOf((Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()}))?.get(803360572)?.inv()!!), ulongList)

    return "OK"
}


2021-03-11 12:01:48,918 [main:56] - replacing (7u, UInt)
2021-03-11 12:01:48,919 [main:38] - replacing 7u UInt
2021-03-11 12:01:48,919 [main:42] - Getting value of type UInt
2021-03-11 12:01:49,019 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:01:49,019 [main:46] - GENERATED VALUE OF TYPE UInt = 1006872872.toUInt()
2021-03-11 12:01:49,019 [main:49] - GENERATED IS CALL =false
2021-03-11 12:01:49,312 [main:55] - randomType = ArrayList<Double>
2021-03-11 12:01:49,421 [main:302] - generating value of type = ArrayList<Double> false depth = 0
2021-03-11 12:01:49,520 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): ArrayList<Double> = TODO()
2021-03-11 12:01:49,521 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): ArrayList<Double> = TODO()
2021-03-11 12:01:49,614 [main:95] - GENERATED = arrayListOf<Double>()
2021-03-11 12:01:49,807 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Double defined in kotlin.collections.ArrayList[DeserializedSimpleFunctionDescriptor@80d9710]
2021-03-11 12:01:49,902 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:01:49,903 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@56232a19]
2021-03-11 12:01:49,903 [main:66] - Generated call from random type = (arrayListOf<Double>()).get(-649534936).toUInt()
2021-03-11 12:01:49,903 [main:63] - replacement of 7u of type UInt is (arrayListOf<Double>()).get(-649534936).toUInt()
2021-03-11 12:01:49,995 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:01:49,996 [main:66] - Compilation checking started
2021-03-11 12:01:50,564 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals(listOf((Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()}))?.get(803360572)?.inv()!!), ulongList)

    return "OK"
}


2021-03-11 12:01:50,567 [main:56] - replacing (listOf((Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()}))?.get(803360572)?.inv()!!), List<ULong>)
2021-03-11 12:01:50,568 [main:38] - replacing listOf((Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()}))?.get(803360572)?.inv()!!) List<ULong>
2021-03-11 12:01:50,568 [main:42] - Getting value of type List<ULong>
2021-03-11 12:01:50,687 [main:302] - generating value of type = List<ULong> false depth = 0
2021-03-11 12:01:50,804 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): List<ULong> = TODO()
2021-03-11 12:01:50,806 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): List<ULong> = TODO()
2021-03-11 12:01:50,903 [main:95] - GENERATED = arrayListOf<ULong>()
2021-03-11 12:01:50,903 [main:46] - GENERATED VALUE OF TYPE List<ULong> = arrayListOf<ULong>()
2021-03-11 12:01:50,903 [main:49] - GENERATED IS CALL =true
2021-03-11 12:01:50,904 [main:55] - randomType = UByte
2021-03-11 12:01:51,005 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:01:51,059 [main:94] - GETTING List<ULong> from UIntProgression
2021-03-11 12:01:51,087 [main:94] - GETTING List<ULong> from ULongProgression
2021-03-11 12:01:51,111 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@396e50c0]]
2021-03-11 12:01:51,112 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@396e50c0]
2021-03-11 12:01:51,112 [main:105] - GENERATED CALL = (ulongProgression).sortedDescending()
2021-03-11 12:01:51,112 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filterNot(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3b91f637]]
2021-03-11 12:01:51,112 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filterNot(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3b91f637]
2021-03-11 12:01:51,210 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:01:51,211 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:01:51,211 [main:105] - GENERATED CALL = (ulongProgression).filterNot({a: T -> true})
2021-03-11 12:01:51,212 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.plusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e10067d]]
2021-03-11 12:01:51,212 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.plusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e10067d]
2021-03-11 12:01:51,302 [main:302] - generating value of type = T false depth = 0
2021-03-11 12:01:51,487 [main:43] - GENERATING CALL OF fun <T> minOf(a: Boolean, other: Boolean, comparator: kotlin.Comparator<Boolean>): T = TODO()
2021-03-11 12:01:51,488 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Boolean, other: Boolean, comparator: kotlin.Comparator<Boolean>): T = TODO()
2021-03-11 12:01:51,708 [main:302] - generating value of type = Boolean true depth = 3
2021-03-11 12:01:51,709 [main:302] - generating value of type = Boolean true depth = 3
2021-03-11 12:01:51,709 [main:302] - generating value of type = Comparator<Boolean> false depth = 3
2021-03-11 12:01:51,863 [main:43] - GENERATING CALL OF fun <T, K> compareBy(comparator: kotlin.Comparator<UInt>, selector: (Boolean)->UInt): Comparator<Boolean> = TODO()
2021-03-11 12:01:51,865 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareBy(comparator: kotlin.Comparator<UInt>, selector: (Boolean)->UInt): Comparator<Boolean> = TODO()
2021-03-11 12:01:52,184 [main:302] - generating value of type = Comparator<UInt> false depth = 6
2021-03-11 12:01:52,279 [main:43] - GENERATING CALL OF fun <T> compareBy(selector: (UInt)->kotlin.Comparable<*>?): Comparator<UInt> = TODO()
2021-03-11 12:01:52,281 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selector: (UInt)->kotlin.Comparable<*>?): Comparator<UInt> = TODO()
2021-03-11 12:01:52,463 [main:302] - generating value of type = Function1<UInt, Comparable<*>?> false depth = 9
2021-03-11 12:01:52,464 [main:302] - generating value of type = Comparable<*> false depth = 10
2021-03-11 12:01:52,468 [main:95] - GENERATED = compareBy<UInt>({a: UInt -> 110.toUByte()})
2021-03-11 12:01:52,468 [main:302] - generating value of type = Function1<Boolean, UInt> false depth = 6
2021-03-11 12:01:52,469 [main:302] - generating value of type = UInt true depth = 7
2021-03-11 12:01:52,469 [main:95] - GENERATED = compareBy<Boolean, UInt>(compareBy<UInt>({a: UInt -> 110.toUByte()}), {a: Boolean -> 1666746162.toUInt()})
2021-03-11 12:01:52,469 [main:95] - GENERATED = minOf<Boolean>(true, false, compareBy<Boolean, UInt>(compareBy<UInt>({a: UInt -> 110.toUByte()}), {a: Boolean -> 1666746162.toUInt()}))
2021-03-11 12:01:52,470 [main:105] - GENERATED CALL = (ulongProgression).plusElement(minOf<Boolean>(true, false, compareBy<Boolean, UInt>(compareBy<UInt>({a: UInt -> 110.toUByte()}), {a: Boolean -> 1666746162.toUInt()})))
2021-03-11 12:01:52,470 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.distinct(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2486c31f]]
2021-03-11 12:01:52,470 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.distinct(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2486c31f]
2021-03-11 12:01:52,470 [main:105] - GENERATED CALL = (ulongProgression).distinct()
2021-03-11 12:01:52,471 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filterIndexed(predicate: (index: kotlin.Int, T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]]
2021-03-11 12:01:52,471 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filterIndexed(predicate: (index: kotlin.Int, T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]
2021-03-11 12:01:52,558 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, T, Boolean> false depth = 0
2021-03-11 12:01:52,559 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:01:52,560 [main:105] - GENERATED CALL = (ulongProgression).filterIndexed({a: Int, b: T -> true})
2021-03-11 12:01:52,560 [main:101] - Case = [public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedBy(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d5b21c1]]
2021-03-11 12:01:52,560 [main:137] - GENERATING call of type public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedBy(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d5b21c1]
2021-03-11 12:01:52,671 [main:302] - generating value of type = Function1<T, R?> false depth = 0
2021-03-11 12:01:52,672 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:01:52,973 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->ArrayList<HashSet<String>>): R = TODO()
2021-03-11 12:01:52,975 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->ArrayList<HashSet<String>>): R = TODO()
2021-03-11 12:01:53,256 [main:302] - generating value of type = Any false depth = 4
2021-03-11 12:01:53,256 [main:302] - generating value of type = Function0<ArrayList<HashSet<String>>> false depth = 4
2021-03-11 12:01:53,257 [main:302] - generating value of type = ArrayList<HashSet<String>> false depth = 5
2021-03-11 12:01:53,380 [main:43] - GENERATING CALL OF fun <E> ArrayList(): ArrayList<HashSet<String>> = TODO()
2021-03-11 12:01:53,382 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): ArrayList<HashSet<String>> = TODO()
2021-03-11 12:01:53,490 [main:95] - GENERATED = ArrayList<HashSet<String>>()
2021-03-11 12:01:53,491 [main:95] - GENERATED = synchronized<ArrayList<HashSet<String>>>("gtewf", { ArrayList<HashSet<String>>()})
2021-03-11 12:01:53,492 [main:105] - GENERATED CALL = (ulongProgression).sortedBy({a: T -> synchronized<ArrayList<HashSet<String>>>("gtewf", { ArrayList<HashSet<String>>()})})
2021-03-11 12:01:53,492 [main:101] - Case = [public operator fun <T> kotlin.collections.Iterable<T>.minus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 12:01:53,492 [main:137] - GENERATING call of type public operator fun <T> kotlin.collections.Iterable<T>.minus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 12:01:53,580 [main:302] - generating value of type = T false depth = 0
2021-03-11 12:01:53,775 [main:43] - GENERATING CALL OF fun <T> requireNotNull(value: UShort): T = TODO()
2021-03-11 12:01:53,776 [main:61] - WITHOUT TYPE PARAMS = fun <T> requireNotNull(value: UShort): T = TODO()
2021-03-11 12:01:53,864 [main:302] - generating value of type = UShort true depth = 3
2021-03-11 12:01:53,865 [main:95] - GENERATED = requireNotNull<UShort>(24991.toUShort())
2021-03-11 12:01:53,865 [main:105] - GENERATED CALL = (ulongProgression).minus(requireNotNull<UShort>(24991.toUShort()))
2021-03-11 12:01:53,865 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.reversed(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49ee30ca]]
2021-03-11 12:01:53,865 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.reversed(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49ee30ca]
2021-03-11 12:01:53,865 [main:105] - GENERATED CALL = (ulongProgression).reversed()
2021-03-11 12:01:53,865 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.minusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e7b53df]]
2021-03-11 12:01:53,866 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.minusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e7b53df]
2021-03-11 12:01:53,951 [main:302] - generating value of type = T false depth = 0
2021-03-11 12:01:55,583 [main:43] - GENERATING CALL OF fun <T> minOf(a: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>, b: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>, c: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>, comparator: kotlin.Comparator<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>): T = TODO()
2021-03-11 12:01:55,585 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>, b: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>, c: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>, comparator: kotlin.Comparator<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>): T = TODO()
2021-03-11 12:01:55,801 [main:302] - generating value of type = Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> false depth = 3
2021-03-11 12:01:55,900 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, second: Int, third: Map<ULong?, Short>): Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> = TODO()
2021-03-11 12:01:55,902 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, second: Int, third: Map<ULong?, Short>): Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> = TODO()
2021-03-11 12:01:55,993 [main:302] - generating value of type = Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>> false depth = 6
2021-03-11 12:01:55,994 [main:302] - generating value of type = LinkedHashMap<Int, ArrayDeque<Short?>> false depth = 7
2021-03-11 12:01:56,088 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<Int, ArrayDeque<Short?>>): LkedHashMap<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:56,090 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<Int, ArrayDeque<Short?>>): LkedHashMap<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:56,181 [main:302] - generating value of type = Pair<Int, ArrayDeque<Short?>> false depth = 10
2021-03-11 12:01:56,269 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Int, second: ArrayDeque<Short?>): Pair<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:56,270 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Int, second: ArrayDeque<Short?>): Pair<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:56,391 [main:302] - generating value of type = Int true depth = 13
2021-03-11 12:01:56,391 [main:302] - generating value of type = ArrayDeque<Short?> false depth = 13
2021-03-11 12:01:56,491 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Short?> = TODO()
2021-03-11 12:01:56,492 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Short?> = TODO()
2021-03-11 12:01:56,669 [main:302] - generating value of type = Int true depth = 16
2021-03-11 12:01:56,669 [main:385] - Cant generate call of fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Short?> = TODO()
2021-03-11 12:01:56,669 [main:385] - Cant generate call of fun <A, B> Pair(first: Int, second: ArrayDeque<Short?>): Pair<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:56,669 [main:385] - Cant generate call of fun <K, V> linkedMapOf(pairs: Pair<Int, ArrayDeque<Short?>>): LkedHashMap<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:56,669 [main:302] - generating value of type = Int true depth = 6
2021-03-11 12:01:56,669 [main:302] - generating value of type = Map<ULong?, Short> false depth = 6
2021-03-11 12:01:56,759 [main:43] - GENERATING CALL OF fun <K, V> buildMap(capacity: kotlin.Int, builderAction: kotlin.collections.MutableMap<ULong?, Short>.()->kotlin.Unit): Map<ULong?, Short> = TODO()
2021-03-11 12:01:56,760 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> buildMap(capacity: kotlin.Int, builderAction: kotlin.collections.MutableMap<ULong?, Short>.()->kotlin.Unit): Map<ULong?, Short> = TODO()
2021-03-11 12:01:57,024 [main:302] - generating value of type = Int true depth = 9
2021-03-11 12:01:57,024 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<MutableMap<ULong?, Short>, Unit> false depth = 9
2021-03-11 12:01:57,025 [main:302] - generating value of type = Unit false depth = 10
2021-03-11 12:01:57,153 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 12:01:57,155 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 12:01:57,437 [main:302] - generating value of type = Int true depth = 13
2021-03-11 12:01:57,438 [main:302] - generating value of type = Function1<Int, Unit> false depth = 13
2021-03-11 12:01:57,438 [main:302] - generating value of type = Unit false depth = 14
2021-03-11 12:01:57,527 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:01:57,528 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:01:57,830 [main:302] - generating value of type = Boolean true depth = 17
2021-03-11 12:01:57,831 [main:385] - Cant generate call of fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:01:57,831 [main:95] - GENERATED = repeat(-1450136329, {a: Int -> })
2021-03-11 12:01:57,831 [main:95] - GENERATED = buildMap<ULong?, Short>(1906544739, { repeat(-1450136329, {a: Int -> })})
2021-03-11 12:01:57,832 [main:95] - GENERATED = Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>({a: Set<HashMap<LinkedHashSet<Short>, Int>>?, b: Boolean? -> }, -350667523, buildMap<ULong?, Short>(1906544739, { repeat(-1450136329, {a: Int -> })}))
2021-03-11 12:01:57,832 [main:302] - generating value of type = Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> false depth = 3
2021-03-11 12:01:57,937 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, second: Int, third: Map<ULong?, Short>): Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> = TODO()
2021-03-11 12:01:57,939 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, second: Int, third: Map<ULong?, Short>): Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> = TODO()
2021-03-11 12:01:58,032 [main:302] - generating value of type = Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>> false depth = 6
2021-03-11 12:01:58,033 [main:302] - generating value of type = LinkedHashMap<Int, ArrayDeque<Short?>> false depth = 7
2021-03-11 12:01:58,126 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<Int, ArrayDeque<Short?>>): LkedHashMap<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:58,127 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<Int, ArrayDeque<Short?>>): LkedHashMap<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:58,220 [main:302] - generating value of type = Pair<Int, ArrayDeque<Short?>> false depth = 10
2021-03-11 12:01:58,309 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Int, second: ArrayDeque<Short?>): Pair<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:58,311 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Int, second: ArrayDeque<Short?>): Pair<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:58,430 [main:302] - generating value of type = Int true depth = 13
2021-03-11 12:01:58,431 [main:302] - generating value of type = ArrayDeque<Short?> false depth = 13
2021-03-11 12:01:58,530 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(): ArrayDeque<Short?> = TODO()
2021-03-11 12:01:58,531 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(): ArrayDeque<Short?> = TODO()
2021-03-11 12:01:58,622 [main:95] - GENERATED = ArrayDeque<Short?>()
2021-03-11 12:01:58,622 [main:95] - GENERATED = Pair<Int, ArrayDeque<Short?>>(-1602539306, ArrayDeque<Short?>())
2021-03-11 12:01:58,622 [main:95] - GENERATED = linkedMapOf<Int, ArrayDeque<Short?>>(Pair<Int, ArrayDeque<Short?>>(-1602539306, ArrayDeque<Short?>()))
2021-03-11 12:01:58,622 [main:302] - generating value of type = Int true depth = 6
2021-03-11 12:01:58,623 [main:302] - generating value of type = Map<ULong?, Short> false depth = 6
2021-03-11 12:01:58,712 [main:43] - GENERATING CALL OF fun <K, V> LinkedHashMap(): Map<ULong?, Short> = TODO()
2021-03-11 12:01:58,713 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> LinkedHashMap(): Map<ULong?, Short> = TODO()
2021-03-11 12:01:58,804 [main:95] - GENERATED = LinkedHashMap<ULong?, Short>()
2021-03-11 12:01:58,804 [main:95] - GENERATED = Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>({a: Set<HashMap<LinkedHashSet<Short>, Int>>?, b: Boolean? -> linkedMapOf<Int, ArrayDeque<Short?>>(Pair<Int, ArrayDeque<Short?>>(-1602539306, ArrayDeque<Short?>()))}, 1791439194, LinkedHashMap<ULong?, Short>())
2021-03-11 12:01:58,804 [main:302] - generating value of type = Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> false depth = 3
2021-03-11 12:01:58,900 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, second: Int, third: Map<ULong?, Short>): Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> = TODO()
2021-03-11 12:01:58,901 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, second: Int, third: Map<ULong?, Short>): Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> = TODO()
2021-03-11 12:01:58,989 [main:302] - generating value of type = Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>> false depth = 6
2021-03-11 12:01:58,989 [main:302] - generating value of type = LinkedHashMap<Int, ArrayDeque<Short?>> false depth = 7
2021-03-11 12:01:59,091 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): LkedHashMap<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:59,093 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): LkedHashMap<Int, ArrayDeque<Short?>> = TODO()
2021-03-11 12:01:59,206 [main:95] - GENERATED = linkedMapOf<Int, ArrayDeque<Short?>>()
2021-03-11 12:01:59,206 [main:302] - generating value of type = Int true depth = 6
2021-03-11 12:01:59,206 [main:302] - generating value of type = Map<ULong?, Short> false depth = 6
2021-03-11 12:01:59,309 [main:43] - GENERATING CALL OF fun <K, V> mutableMapOf(): Map<ULong?, Short> = TODO()
2021-03-11 12:01:59,311 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> mutableMapOf(): Map<ULong?, Short> = TODO()
2021-03-11 12:01:59,408 [main:95] - GENERATED = mutableMapOf<ULong?, Short>()
2021-03-11 12:01:59,408 [main:95] - GENERATED = Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>({a: Set<HashMap<LinkedHashSet<Short>, Int>>?, b: Boolean? -> linkedMapOf<Int, ArrayDeque<Short?>>()}, -1969622895, mutableMapOf<ULong?, Short>())
2021-03-11 12:01:59,408 [main:302] - generating value of type = Comparator<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>> false depth = 3
2021-03-11 12:01:59,519 [main:43] - GENERATING CALL OF fun <T> nullsLast(comparator: kotlin.Comparator<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>): Comparator<Triple<Function2<Set<HashMap<LkedHashSet<Short>, Int>>?, Boolean?, LkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>> = TODO()
2021-03-11 12:01:59,520 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(comparator: kotlin.Comparator<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>): Comparator<Triple<Function2<Set<HashMap<LkedHashSet<Short>, Int>>?, Boolean?, LkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>> = TODO()
2021-03-11 12:01:59,758 [main:302] - generating value of type = Comparator<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>> false depth = 6
2021-03-11 12:01:59,878 [main:43] - GENERATING CALL OF fun <T> compareByDescending(selector: (Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>)->kotlin.Comparable<*>?): Comparator<Triple<Function2<Set<HashMap<LkedHashSet<Short>, Int>>?, Boolean?, LkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>> = TODO()
2021-03-11 12:01:59,879 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareByDescending(selector: (Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>)->kotlin.Comparable<*>?): Comparator<Triple<Function2<Set<HashMap<LkedHashSet<Short>, Int>>?, Boolean?, LkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>> = TODO()
2021-03-11 12:02:00,065 [main:302] - generating value of type = Function1<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>, Comparable<*>?> false depth = 9
2021-03-11 12:02:00,066 [main:302] - generating value of type = Comparable<*> false depth = 10
2021-03-11 12:02:00,070 [main:95] - GENERATED = compareByDescending<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>({a: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> -> 3826034952498355362.toULong()})
2021-03-11 12:02:00,071 [main:95] - GENERATED = nullsLast<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>(compareByDescending<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>({a: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> -> 3826034952498355362.toULong()}))
2021-03-11 12:02:00,072 [main:95] - GENERATED = minOf<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>(Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>({a: Set<HashMap<LinkedHashSet<Short>, Int>>?, b: Boolean? -> }, -350667523, buildMap<ULong?, Short>(1906544739, { repeat(-1450136329, {a: Int -> })})), Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>({a: Set<HashMap<LinkedHashSet<Short>, Int>>?, b: Boolean? -> linkedMapOf<Int, ArrayDeque<Short?>>(Pair<Int, ArrayDeque<Short?>>(-1602539306, ArrayDeque<Short?>()))}, 1791439194, LinkedHashMap<ULong?, Short>()), Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>({a: Set<HashMap<LinkedHashSet<Short>, Int>>?, b: Boolean? -> linkedMapOf<Int, ArrayDeque<Short?>>()}, -1969622895, mutableMapOf<ULong?, Short>()), nullsLast<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>(compareByDescending<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>({a: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> -> 3826034952498355362.toULong()})))
2021-03-11 12:02:00,075 [main:105] - GENERATED CALL = (ulongProgression).minusElement(minOf<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>(Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>({a: Set<HashMap<LinkedHashSet<Short>, Int>>?, b: Boolean? -> }, -350667523, buildMap<ULong?, Short>(1906544739, { repeat(-1450136329, {a: Int -> })})), Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>({a: Set<HashMap<LinkedHashSet<Short>, Int>>?, b: Boolean? -> linkedMapOf<Int, ArrayDeque<Short?>>(Pair<Int, ArrayDeque<Short?>>(-1602539306, ArrayDeque<Short?>()))}, 1791439194, LinkedHashMap<ULong?, Short>()), Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>({a: Set<HashMap<LinkedHashSet<Short>, Int>>?, b: Boolean? -> linkedMapOf<Int, ArrayDeque<Short?>>()}, -1969622895, mutableMapOf<ULong?, Short>()), nullsLast<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>(compareByDescending<Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>>>({a: Triple<Function2<Set<HashMap<LinkedHashSet<Short>, Int>>?, Boolean?, LinkedHashMap<Int, ArrayDeque<Short?>>>, Int, Map<ULong?, Short>> -> 3826034952498355362.toULong()}))))
2021-03-11 12:02:00,076 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a61862]]
2021-03-11 12:02:00,076 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a61862]
2021-03-11 12:02:00,076 [main:105] - GENERATED CALL = (ulongProgression).sorted()
2021-03-11 12:02:00,076 [main:63] - replacement of listOf((Array<ULong?>(-495932139, {a: Int -> 1427568564020051110.toULong()}))?.get(803360572)?.inv()!!) of type List<ULong> is (ulongProgression).minus(requireNotNull<UShort>(24991.toUShort()))
2021-03-11 12:02:00,166 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:00,166 [main:66] - Compilation checking started
2021-03-11 12:02:00,699 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        ulongList += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), ulongList)

    return "OK"
}


2021-03-11 12:02:00,700 [main:56] - replacing (ulongList, MutableList<ULong>)
2021-03-11 12:02:00,700 [main:38] - replacing ulongList MutableList<ULong>
2021-03-11 12:02:00,700 [main:42] - Getting value of type MutableList<ULong>
2021-03-11 12:02:00,799 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-11 12:02:00,919 [main:43] - GENERATING CALL OF fun <T> mutableListOf(): MutableList<ULong> = TODO()
2021-03-11 12:02:00,921 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(): MutableList<ULong> = TODO()
2021-03-11 12:02:01,022 [main:95] - GENERATED = mutableListOf<ULong>()
2021-03-11 12:02:01,023 [main:46] - GENERATED VALUE OF TYPE MutableList<ULong> = mutableListOf<ULong>()
2021-03-11 12:02:01,023 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:01,229 [main:55] - randomType = Char?
2021-03-11 12:02:01,326 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:02:01,367 [main:94] - GETTING MutableList<ULong> from UIntProgression
2021-03-11 12:02:01,393 [main:94] - GETTING MutableList<ULong> from ULongProgression
2021-03-11 12:02:01,415 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:01,415 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:01,415 [main:105] - GENERATED CALL = (ulongProgression).toMutableList()
2021-03-11 12:02:01,415 [main:63] - replacement of ulongList of type MutableList<ULong> is (ulongProgression).toMutableList()
2021-03-11 12:02:01,506 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:01,507 [main:66] - Compilation checking started
2021-03-11 12:02:01,955 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), ulongList)

    return "OK"
}


2021-03-11 12:02:01,957 [main:56] - replacing (1uL, ULong)
2021-03-11 12:02:01,957 [main:38] - replacing 1uL ULong
2021-03-11 12:02:01,957 [main:42] - Getting value of type ULong
2021-03-11 12:02:02,043 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:02,043 [main:46] - GENERATED VALUE OF TYPE ULong = 4037310908356017660.toULong()
2021-03-11 12:02:02,044 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:02,244 [main:55] - randomType = Char?
2021-03-11 12:02:02,333 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:02:02,365 [main:137] - GENERATING call of type public final fun toDouble(): kotlin.Double defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@697b1b46]
2021-03-11 12:02:02,365 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@55f2111b]
2021-03-11 12:02:02,366 [main:66] - Generated call from random type = ('踽')?.toDouble().toULong()
2021-03-11 12:02:02,366 [main:63] - replacement of 1uL of type ULong is ('踽')?.toDouble().toULong()
2021-03-11 12:02:02,452 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:02,452 [main:66] - Compilation checking started
2021-03-11 12:02:02,935 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), ulongList)

    return "OK"
}


2021-03-11 12:02:02,937 [main:56] - replacing (7uL, ULong)
2021-03-11 12:02:02,937 [main:38] - replacing 7uL ULong
2021-03-11 12:02:02,938 [main:42] - Getting value of type ULong
2021-03-11 12:02:03,034 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:03,035 [main:46] - GENERATED VALUE OF TYPE ULong = 1637243588452950915.toULong()
2021-03-11 12:02:03,035 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:03,133 [main:55] - randomType = UInt?
2021-03-11 12:02:03,221 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:03,273 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@35e35791]
2021-03-11 12:02:03,413 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:03,413 [main:66] - Generated call from random type = (845708919.toUInt())?.times(3925410857009214145.toULong())
2021-03-11 12:02:03,414 [main:94] - GETTING ULong from UIntProgression
2021-03-11 12:02:03,429 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7b5ea373]]
2021-03-11 12:02:03,430 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7b5ea373]
2021-03-11 12:02:03,430 [main:105] - GENERATED CALL = (uintProgression).first.toULong()
2021-03-11 12:02:03,430 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@32ae2303]]
2021-03-11 12:02:03,430 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@32ae2303]
2021-03-11 12:02:03,430 [main:105] - GENERATED CALL = (uintProgression).sum()
2021-03-11 12:02:03,430 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@54e324d1]]
2021-03-11 12:02:03,430 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@54e324d1]
2021-03-11 12:02:03,517 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:03,518 [main:105] - GENERATED CALL = (uintProgression).first.minus(2588186148427016734.toULong())
2021-03-11 12:02:03,518 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@26949d82]]
2021-03-11 12:02:03,518 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@26949d82]
2021-03-11 12:02:03,603 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:03,604 [main:105] - GENERATED CALL = (uintProgression).first.plus(3718770071004162190.toULong())
2021-03-11 12:02:03,604 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@51cd3b50]]
2021-03-11 12:02:03,604 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@51cd3b50]
2021-03-11 12:02:03,688 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:03,689 [main:105] - GENERATED CALL = (uintProgression).first.rem(7534278316363094875.toULong())
2021-03-11 12:02:03,689 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.ULong): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71886642]]
2021-03-11 12:02:03,689 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.ULong): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71886642]
2021-03-11 12:02:03,777 [main:302] - generating value of type = Function1<T, ULong> false depth = 0
2021-03-11 12:02:03,777 [main:302] - generating value of type = ULong true depth = 1
2021-03-11 12:02:03,778 [main:105] - GENERATED CALL = (uintProgression).sumOf({a: T -> 7336447552254034945.toULong()})
2021-03-11 12:02:03,778 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@19e90def]]
2021-03-11 12:02:03,778 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@19e90def]
2021-03-11 12:02:03,863 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:03,864 [main:105] - GENERATED CALL = (uintProgression).first.times(2141056306140311297.toULong())
2021-03-11 12:02:03,864 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c9fb03]]
2021-03-11 12:02:03,864 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c9fb03]
2021-03-11 12:02:03,950 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:03,950 [main:105] - GENERATED CALL = (uintProgression).first.div(8402992999482881329.toULong())
2021-03-11 12:02:03,950 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]]
2021-03-11 12:02:03,951 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:02:03,951 [main:105] - GENERATED CALL = (uintProgression).step.toULong()
2021-03-11 12:02:03,951 [main:63] - replacement of 7uL of type ULong is (uintProgression).first.div(8402992999482881329.toULong())
2021-03-11 12:02:04,036 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:04,037 [main:66] - Compilation checking started
2021-03-11 12:02:04,437 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), ulongList)

    return "OK"
}


2021-03-11 12:02:04,439 [main:56] - replacing (mutableListOf<ULong>(), MutableList<ULong>)
2021-03-11 12:02:04,440 [main:38] - replacing mutableListOf<ULong>() MutableList<ULong>
2021-03-11 12:02:04,440 [main:42] - Getting value of type MutableList<ULong>
2021-03-11 12:02:04,575 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-11 12:02:04,670 [main:43] - GENERATING CALL OF fun <T> MutableList(size: kotlin.Int, init: (index: kotlin.Int)->ULong): MutableList<ULong> = TODO()
2021-03-11 12:02:04,671 [main:61] - WITHOUT TYPE PARAMS = fun <T> MutableList(size: kotlin.Int, init: (index: kotlin.Int)->ULong): MutableList<ULong> = TODO()
2021-03-11 12:02:04,981 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:02:04,981 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, ULong> false depth = 3
2021-03-11 12:02:04,981 [main:302] - generating value of type = ULong true depth = 4
2021-03-11 12:02:04,982 [main:95] - GENERATED = MutableList<ULong>(816983266, {a: Int -> 7920724681437360728.toULong()})
2021-03-11 12:02:04,982 [main:46] - GENERATED VALUE OF TYPE MutableList<ULong> = MutableList<ULong>(816983266, {a: Int -> 7920724681437360728.toULong()})
2021-03-11 12:02:04,982 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:05,075 [main:55] - randomType = Boolean
2021-03-11 12:02:05,161 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:02:05,177 [main:94] - GETTING MutableList<ULong> from UIntProgression
2021-03-11 12:02:05,203 [main:94] - GETTING MutableList<ULong> from ULongProgression
2021-03-11 12:02:05,224 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:05,224 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:05,225 [main:105] - GENERATED CALL = (ulongProgression).toMutableList()
2021-03-11 12:02:05,225 [main:63] - replacement of mutableListOf<ULong>() of type MutableList<ULong> is (ulongProgression).toMutableList()
2021-03-11 12:02:05,312 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:05,312 [main:66] - Compilation checking started
2021-03-11 12:02:05,557 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = (ulongProgression).toMutableList()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), ulongList)

    return "OK"
}


2021-03-11 12:02:05,558 [main:56] - replacing ("OK", String)
2021-03-11 12:02:05,559 [main:38] - replacing "OK" String
2021-03-11 12:02:05,559 [main:42] - Getting value of type String
2021-03-11 12:02:05,677 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:02:05,678 [main:46] - GENERATED VALUE OF TYPE String = "hgalg"
2021-03-11 12:02:05,678 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:06,246 [main:55] - randomType = Function1<Set<Function1<Int, LinkedHashMap<UShort?, String>?>>, Int>
2021-03-11 12:02:06,247 [main:94] - GETTING String from ULongProgression
2021-03-11 12:02:06,260 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:02:06,261 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:02:06,345 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:06,346 [main:105] - GENERATED CALL = (ulongProgression).first.toString(807701410)
2021-03-11 12:02:06,346 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:02:06,346 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:02:06,429 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:02:06,537 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:02:06,636 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:02:06,638 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:02:06,817 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:02:06,818 [main:95] - GENERATED = StringBuilder(418172861)
2021-03-11 12:02:06,910 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:02:07,005 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:07,090 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:02:07,179 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:02:07,181 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:02:07,386 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:02:07,387 [main:95] - GENERATED = StringBuilder(143860584)
2021-03-11 12:02:07,508 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:02:07,509 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:02:07,598 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:02:07,599 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:02:07,775 [main:302] - generating value of type = CharSequence false depth = 4
2021-03-11 12:02:07,867 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:02:07,868 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:02:08,042 [main:302] - generating value of type = CharSequence false depth = 7
2021-03-11 12:02:08,131 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:02:08,132 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:02:08,355 [main:302] - generating value of type = String true depth = 10
2021-03-11 12:02:08,356 [main:95] - GENERATED = StringBuilder("ajcis")
2021-03-11 12:02:08,356 [main:95] - GENERATED = StringBuilder(StringBuilder("ajcis"))
2021-03-11 12:02:08,356 [main:95] - GENERATED = StringBuilder(StringBuilder(StringBuilder("ajcis")))
2021-03-11 12:02:08,357 [main:105] - GENERATED CALL = (ulongProgression).joinToString("mlcph", StringBuilder(418172861), "zcpvl", -1072798883, StringBuilder(143860584), {a: T -> StringBuilder(StringBuilder(StringBuilder("ajcis")))})
2021-03-11 12:02:08,357 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:02:08,357 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:02:08,444 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:08,445 [main:105] - GENERATED CALL = (ulongProgression).step.toString(-1163219740)
2021-03-11 12:02:08,445 [main:63] - replacement of "OK" of type String is "hgalg"
2021-03-11 12:02:08,529 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:02:08,530 [main:66] - Compilation checking started
2021-03-11 12:02:08,942 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression step (ulongProgression).step.and(-1896995554626979000)) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), ulongList)

    return "hgalg"
}


2021-03-11 12:02:08,944 [main:56] - replacing (ulongProgression step (ulongProgression).step.and(-1896995554626979000), ULongProgression)
2021-03-11 12:02:08,944 [main:38] - replacing ulongProgression step (ulongProgression).step.and(-1896995554626979000) ULongProgression
2021-03-11 12:02:08,944 [main:42] - Getting value of type ULongProgression
2021-03-11 12:02:09,055 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-11 12:02:09,146 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-11 12:02:09,147 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-11 12:02:09,429 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:02:09,429 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:02:09,430 [main:95] - GENERATED = ULongRange(7941763412337242463.toULong(), 2968759030664652368.toULong())
2021-03-11 12:02:09,430 [main:46] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(7941763412337242463.toULong(), 2968759030664652368.toULong())
2021-03-11 12:02:09,430 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:09,612 [main:55] - randomType = Array<ULong?>
2021-03-11 12:02:09,700 [main:302] - generating value of type = Array<ULong?> false depth = 0
2021-03-11 12:02:09,790 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<ULong?> = TODO()
2021-03-11 12:02:09,791 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<ULong?> = TODO()
2021-03-11 12:02:09,877 [main:95] - GENERATED = enumValues<ULong?>()
2021-03-11 12:02:09,894 [main:94] - GETTING ULongProgression from ULongProgression
2021-03-11 12:02:09,916 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f43b557]]
2021-03-11 12:02:09,916 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f43b557]
2021-03-11 12:02:10,003 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:10,004 [main:105] - GENERATED CALL = (ulongProgression).first.downTo(6094840182494441138.toULong())
2021-03-11 12:02:10,004 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.ULongProgression.reversed(): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@69e2995e]]
2021-03-11 12:02:10,004 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.ULongProgression.reversed(): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@69e2995e]
2021-03-11 12:02:10,004 [main:105] - GENERATED CALL = (ulongProgression).reversed()
2021-03-11 12:02:10,004 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.ULongProgression.step(step: kotlin.Long): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@8e10577]]
2021-03-11 12:02:10,004 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.ULongProgression.step(step: kotlin.Long): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@8e10577]
2021-03-11 12:02:10,088 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:02:10,089 [main:105] - GENERATED CALL = (ulongProgression).step(696403612228112257)
2021-03-11 12:02:10,089 [main:63] - replacement of ulongProgression step (ulongProgression).step.and(-1896995554626979000) of type ULongProgression is ulongProgression
2021-03-11 12:02:10,174 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:02:10,174 [main:66] - Compilation checking started
2021-03-11 12:02:10,587 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), ulongList)

    return "hgalg"
}


2021-03-11 12:02:10,589 [main:56] - replacing (ulongList, MutableList<ULong>)
2021-03-11 12:02:10,589 [main:38] - replacing ulongList MutableList<ULong>
2021-03-11 12:02:10,589 [main:42] - Getting value of type MutableList<ULong>
2021-03-11 12:02:10,675 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-11 12:02:10,762 [main:43] - GENERATING CALL OF fun <E> ArrayList(initialCapacity: kotlin.Int): MutableList<ULong> = TODO()
2021-03-11 12:02:10,763 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(initialCapacity: kotlin.Int): MutableList<ULong> = TODO()
2021-03-11 12:02:10,934 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:02:10,935 [main:95] - GENERATED = ArrayList<ULong>(-1347156037)
2021-03-11 12:02:10,935 [main:46] - GENERATED VALUE OF TYPE MutableList<ULong> = ArrayList<ULong>(-1347156037)
2021-03-11 12:02:10,935 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:11,024 [main:55] - randomType = UByte?
2021-03-11 12:02:11,111 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:02:11,151 [main:94] - GETTING MutableList<ULong> from UIntProgression
2021-03-11 12:02:11,170 [main:94] - GETTING MutableList<ULong> from ULongProgression
2021-03-11 12:02:11,186 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:11,186 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:11,187 [main:105] - GENERATED CALL = (ulongProgression).toMutableList()
2021-03-11 12:02:11,187 [main:63] - replacement of ulongList of type MutableList<ULong> is (ulongProgression).toMutableList()
2021-03-11 12:02:11,271 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:11,271 [main:66] - Compilation checking started
2021-03-11 12:02:11,644 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:11,645 [main:56] - replacing (1u, UInt)
2021-03-11 12:02:11,645 [main:38] - replacing 1u UInt
2021-03-11 12:02:11,645 [main:42] - Getting value of type UInt
2021-03-11 12:02:11,727 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:11,728 [main:46] - GENERATED VALUE OF TYPE UInt = 949551595.toUInt()
2021-03-11 12:02:11,728 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:11,919 [main:55] - randomType = Function2<Int, Int, Float>
2021-03-11 12:02:11,921 [main:94] - GETTING UInt from ULongProgression
2021-03-11 12:02:11,948 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]]
2021-03-11 12:02:11,948 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]
2021-03-11 12:02:11,949 [main:105] - GENERATED CALL = (ulongProgression).step.toUInt()
2021-03-11 12:02:11,949 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fd27d5e]]
2021-03-11 12:02:11,949 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fd27d5e]
2021-03-11 12:02:11,949 [main:105] - GENERATED CALL = (ulongProgression).first.toUInt()
2021-03-11 12:02:11,949 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]]
2021-03-11 12:02:11,949 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]
2021-03-11 12:02:11,950 [main:105] - GENERATED CALL = (ulongProgression).sum()
2021-03-11 12:02:11,950 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-11 12:02:11,950 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-11 12:02:12,036 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-11 12:02:12,037 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:02:12,037 [main:105] - GENERATED CALL = (ulongProgression).sumOf({a: T -> 1321703265.toUInt()})
2021-03-11 12:02:12,038 [main:63] - replacement of 1u of type UInt is (ulongProgression).first.toUInt()
2021-03-11 12:02:12,124 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:12,125 [main:66] - Compilation checking started
2021-03-11 12:02:12,369 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo (ulongProgression).first.toUInt()
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:12,370 [main:56] - replacing (1u, UInt)
2021-03-11 12:02:12,370 [main:38] - replacing 1u UInt
2021-03-11 12:02:12,371 [main:42] - Getting value of type UInt
2021-03-11 12:02:12,460 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:12,460 [main:46] - GENERATED VALUE OF TYPE UInt = 802817860.toUInt()
2021-03-11 12:02:12,460 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:12,812 [main:55] - randomType = HashMap<Byte?, String>?
2021-03-11 12:02:12,896 [main:302] - generating value of type = HashMap<Byte?, String> false depth = 0
2021-03-11 12:02:12,997 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(pairs: Pair<Byte?, String>): HashMap<Byte?, Strg> = TODO()
2021-03-11 12:02:12,998 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(pairs: Pair<Byte?, String>): HashMap<Byte?, Strg> = TODO()
2021-03-11 12:02:13,083 [main:302] - generating value of type = Pair<Byte?, String> false depth = 3
2021-03-11 12:02:13,170 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Byte?, second: String): Pair<Byte?, String> = TODO()
2021-03-11 12:02:13,171 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Byte?, second: String): Pair<Byte?, String> = TODO()
2021-03-11 12:02:13,256 [main:302] - generating value of type = Byte true depth = 6
2021-03-11 12:02:13,256 [main:302] - generating value of type = String true depth = 6
2021-03-11 12:02:13,256 [main:95] - GENERATED = Pair<Byte?, String>(24, "kpoql")
2021-03-11 12:02:13,256 [main:95] - GENERATED = hashMapOf<Byte?, String>(Pair<Byte?, String>(24, "kpoql"))
2021-03-11 12:02:13,383 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@67a8eb0a]
2021-03-11 12:02:13,383 [main:66] - Generated call from random type = (hashMapOf<Byte?, String>(Pair<Byte?, String>(24, "kpoql")))?.size.toUInt()
2021-03-11 12:02:13,384 [main:94] - GETTING UInt from UIntProgression
2021-03-11 12:02:13,403 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.min(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3192f6c3]]
2021-03-11 12:02:13,403 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.min(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3192f6c3]
2021-03-11 12:02:13,403 [main:105] - GENERATED CALL = (uintProgression).min()
2021-03-11 12:02:13,403 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@736c02d2]]
2021-03-11 12:02:13,403 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@736c02d2]
2021-03-11 12:02:13,404 [main:105] - GENERATED CALL = (uintProgression).first.inv()
2021-03-11 12:02:13,404 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a161942]]
2021-03-11 12:02:13,404 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a161942]
2021-03-11 12:02:13,404 [main:105] - GENERATED CALL = (uintProgression).singleOrNull()
2021-03-11 12:02:13,404 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]]
2021-03-11 12:02:13,404 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]
2021-03-11 12:02:13,404 [main:105] - GENERATED CALL = (uintProgression).first.takeLowestOneBit()
2021-03-11 12:02:13,404 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.coerceAtLeast(minimumValue: kotlin.UInt): kotlin.UInt defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@a9313af]]
2021-03-11 12:02:13,404 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.coerceAtLeast(minimumValue: kotlin.UInt): kotlin.UInt defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@a9313af]
2021-03-11 12:02:13,493 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:13,494 [main:105] - GENERATED CALL = (uintProgression).first.coerceAtLeast(1326078103.toUInt())
2021-03-11 12:02:13,494 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]]
2021-03-11 12:02:13,494 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]
2021-03-11 12:02:13,494 [main:105] - GENERATED CALL = (uintProgression).sum()
2021-03-11 12:02:13,494 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.lastOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]]
2021-03-11 12:02:13,494 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.lastOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71e70f8d]
2021-03-11 12:02:13,494 [main:105] - GENERATED CALL = (uintProgression).lastOrNull()
2021-03-11 12:02:13,494 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.findLast(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@608e2661]]
2021-03-11 12:02:13,495 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.findLast(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@608e2661]
2021-03-11 12:02:13,586 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:02:13,586 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:02:13,587 [main:105] - GENERATED CALL = (uintProgression).findLast({a: T -> false})
2021-03-11 12:02:13,587 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1f731c3a]]
2021-03-11 12:02:13,587 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1f731c3a]
2021-03-11 12:02:13,676 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-11 12:02:13,677 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:02:13,855 [main:43] - GENERATING CALL OF fun <T, R> with(receiver: ArrayDeque<Int>, block: T.()->Long): R = TODO()
2021-03-11 12:02:13,856 [main:61] - WITHOUT TYPE PARAMS = fun <T, R> with(receiver: ArrayDeque<Int>, block: T.()->Long): R = TODO()
2021-03-11 12:02:14,032 [main:302] - generating value of type = ArrayDeque<Int> false depth = 4
2021-03-11 12:02:14,141 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Int> = TODO()
2021-03-11 12:02:14,142 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Int> = TODO()
2021-03-11 12:02:14,331 [main:302] - generating value of type = Int true depth = 7
2021-03-11 12:02:14,332 [main:95] - GENERATED = ArrayDeque<Int>(1660868871)
2021-03-11 12:02:14,332 [main:385] - Cant generate call of fun <T, R> with(receiver: ArrayDeque<Int>, block: T.()->Long): R = TODO()
2021-03-11 12:02:14,332 [main:105] - GENERATED CALL = (uintProgression).minBy({a: T -> })
2021-03-11 12:02:14,333 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.coerceIn(minimumValue: kotlin.UInt, maximumValue: kotlin.UInt): kotlin.UInt defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@94c0d3c]]
2021-03-11 12:02:14,333 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.coerceIn(minimumValue: kotlin.UInt, maximumValue: kotlin.UInt): kotlin.UInt defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@94c0d3c]
2021-03-11 12:02:14,421 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:14,508 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:14,509 [main:105] - GENERATED CALL = (uintProgression).first.coerceIn(868119238.toUInt(), 1576519602.toUInt())
2021-03-11 12:02:14,509 [main:63] - replacement of 1u of type UInt is (uintProgression).findLast({a: T -> false})
2021-03-11 12:02:14,596 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:14,596 [main:66] - Compilation checking started
2021-03-11 12:02:14,853 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo (uintProgression).findLast({a: T -> false})
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:14,855 [main:56] - replacing (listOf((uintProgression).first.plus(25.toUByte())), List<UInt>)
2021-03-11 12:02:14,855 [main:38] - replacing listOf((uintProgression).first.plus(25.toUByte())) List<UInt>
2021-03-11 12:02:14,855 [main:42] - Getting value of type List<UInt>
2021-03-11 12:02:14,949 [main:302] - generating value of type = List<UInt> false depth = 0
2021-03-11 12:02:15,044 [main:43] - GENERATING CALL OF fun <T> emptyList(): List<UInt> = TODO()
2021-03-11 12:02:15,045 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyList(): List<UInt> = TODO()
2021-03-11 12:02:15,134 [main:95] - GENERATED = emptyList<UInt>()
2021-03-11 12:02:15,135 [main:46] - GENERATED VALUE OF TYPE List<UInt> = emptyList<UInt>()
2021-03-11 12:02:15,135 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:15,135 [main:55] - randomType = UShort
2021-03-11 12:02:15,219 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:02:15,252 [main:94] - GETTING List<UInt> from ULongProgression
2021-03-11 12:02:15,269 [main:94] - GETTING List<UInt> from UIntProgression
2021-03-11 12:02:15,285 [main:101] - Case = [public inline fun <T, K> kotlin.collections.Iterable<T>.distinctBy(selector: (T) -> K): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@c123d31]]
2021-03-11 12:02:15,285 [main:137] - GENERATING call of type public inline fun <T, K> kotlin.collections.Iterable<T>.distinctBy(selector: (T) -> K): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@c123d31]
2021-03-11 12:02:15,382 [main:302] - generating value of type = Function1<T, K> false depth = 0
2021-03-11 12:02:15,382 [main:302] - generating value of type = K false depth = 1
2021-03-11 12:02:15,386 [main:105] - GENERATED CALL = (uintProgression).distinctBy({a: T -> })
2021-03-11 12:02:15,386 [main:101] - Case = [public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedByDescending(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@304542ec]]
2021-03-11 12:02:15,386 [main:137] - GENERATING call of type public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedByDescending(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@304542ec]
2021-03-11 12:02:15,468 [main:302] - generating value of type = Function1<T, R?> false depth = 0
2021-03-11 12:02:15,468 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:02:15,556 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->UByte): R = TODO()
2021-03-11 12:02:15,558 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->UByte): R = TODO()
2021-03-11 12:02:15,822 [main:302] - generating value of type = Any false depth = 4
2021-03-11 12:02:15,822 [main:302] - generating value of type = Function0<UByte> false depth = 4
2021-03-11 12:02:15,822 [main:302] - generating value of type = UByte true depth = 5
2021-03-11 12:02:15,822 [main:95] - GENERATED = synchronized<UByte>("khyif", { 99.toUByte()})
2021-03-11 12:02:15,823 [main:105] - GENERATED CALL = (uintProgression).sortedByDescending({a: T -> synchronized<UByte>("khyif", { 99.toUByte()})})
2021-03-11 12:02:15,823 [main:101] - Case = [public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedBy(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d5b21c1]]
2021-03-11 12:02:15,823 [main:137] - GENERATING call of type public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedBy(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d5b21c1]
2021-03-11 12:02:15,905 [main:302] - generating value of type = Function1<T, R?> false depth = 0
2021-03-11 12:02:15,906 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:02:16,001 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->UInt): R = TODO()
2021-03-11 12:02:16,003 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->UInt): R = TODO()
2021-03-11 12:02:16,284 [main:302] - generating value of type = Any false depth = 4
2021-03-11 12:02:16,284 [main:302] - generating value of type = Function0<UInt> false depth = 4
2021-03-11 12:02:16,285 [main:302] - generating value of type = UInt true depth = 5
2021-03-11 12:02:16,285 [main:95] - GENERATED = synchronized<UInt>("rpwle", { 1879723323.toUInt()})
2021-03-11 12:02:16,286 [main:105] - GENERATED CALL = (uintProgression).sortedBy({a: T -> synchronized<UInt>("rpwle", { 1879723323.toUInt()})})
2021-03-11 12:02:16,286 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.dropWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3b6635f2]]
2021-03-11 12:02:16,286 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.dropWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3b6635f2]
2021-03-11 12:02:16,428 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:02:16,429 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:02:16,430 [main:105] - GENERATED CALL = (uintProgression).dropWhile({a: T -> true})
2021-03-11 12:02:16,430 [main:101] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d7b5971]]
2021-03-11 12:02:16,430 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d7b5971]
2021-03-11 12:02:16,430 [main:105] - GENERATED CALL = (uintProgression).shuffled()
2021-03-11 12:02:16,430 [main:101] - Case = [public operator fun <T> kotlin.collections.Iterable<T>.minus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 12:02:16,430 [main:137] - GENERATING call of type public operator fun <T> kotlin.collections.Iterable<T>.minus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 12:02:16,542 [main:302] - generating value of type = T false depth = 0
2021-03-11 12:02:16,637 [main:43] - GENERATING CALL OF fun <T> maxOf(a: Comparable<T>, b: Comparable<T>, c: Comparable<T>): T = TODO()
2021-03-11 12:02:16,638 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: Comparable<T>, b: Comparable<T>, c: Comparable<T>): T = TODO()
2021-03-11 12:02:16,724 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-11 12:02:16,816 [main:43] - GENERATING CALL OF fun <E> Enum(name: kotlin.String, ordinal: kotlin.Int): Comparable<T> = TODO()
2021-03-11 12:02:16,817 [main:61] - WITHOUT TYPE PARAMS = fun <E> Enum(name: kotlin.String, ordinal: kotlin.Int): Comparable<T> = TODO()
2021-03-11 12:02:17,075 [main:302] - generating value of type = String true depth = 6
2021-03-11 12:02:17,076 [main:302] - generating value of type = Int true depth = 6
2021-03-11 12:02:17,076 [main:95] - GENERATED = Enum<Enum<E>>("tfaqu", -1800466357)
2021-03-11 12:02:17,076 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-11 12:02:17,166 [main:43] - GENERATING CALL OF fun <E> Enum(name: kotlin.String, ordinal: kotlin.Int): Comparable<T> = TODO()
2021-03-11 12:02:17,166 [main:61] - WITHOUT TYPE PARAMS = fun <E> Enum(name: kotlin.String, ordinal: kotlin.Int): Comparable<T> = TODO()
2021-03-11 12:02:17,459 [main:302] - generating value of type = String true depth = 6
2021-03-11 12:02:17,459 [main:302] - generating value of type = Int true depth = 6
2021-03-11 12:02:17,460 [main:95] - GENERATED = Enum<Enum<E>>("msdtl", -1686511231)
2021-03-11 12:02:17,460 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-11 12:02:17,464 [main:95] - GENERATED = maxOf<Comparable<T>>(Enum<Enum<E>>("tfaqu", -1800466357), Enum<Enum<E>>("msdtl", -1686511231), 3605045887301486792)
2021-03-11 12:02:17,464 [main:105] - GENERATED CALL = (uintProgression).minus(maxOf<Comparable<T>>(Enum<Enum<E>>("tfaqu", -1800466357), Enum<Enum<E>>("msdtl", -1686511231), 3605045887301486792))
2021-03-11 12:02:17,464 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.plusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e10067d]]
2021-03-11 12:02:17,464 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.plusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e10067d]
2021-03-11 12:02:17,548 [main:302] - generating value of type = T false depth = 0
2021-03-11 12:02:17,638 [main:43] - GENERATING CALL OF fun <T> checkNotNull(value: UInt, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-11 12:02:17,639 [main:61] - WITHOUT TYPE PARAMS = fun <T> checkNotNull(value: UInt, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-11 12:02:17,811 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:17,811 [main:302] - generating value of type = Function0<Any> false depth = 3
2021-03-11 12:02:17,811 [main:302] - generating value of type = Any false depth = 4
2021-03-11 12:02:17,812 [main:95] - GENERATED = checkNotNull<UInt>(542419282.toUInt(), { "ibvid"})
2021-03-11 12:02:17,812 [main:105] - GENERATED CALL = (uintProgression).plusElement(checkNotNull<UInt>(542419282.toUInt(), { "ibvid"}))
2021-03-11 12:02:17,812 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filterIndexed(predicate: (index: kotlin.Int, T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]]
2021-03-11 12:02:17,812 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filterIndexed(predicate: (index: kotlin.Int, T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]
2021-03-11 12:02:17,896 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, T, Boolean> false depth = 0
2021-03-11 12:02:17,897 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:02:17,897 [main:105] - GENERATED CALL = (uintProgression).filterIndexed({a: Int, b: T -> true})
2021-03-11 12:02:17,898 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3128baef]]
2021-03-11 12:02:17,898 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3128baef]
2021-03-11 12:02:17,986 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:02:17,986 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:02:17,987 [main:105] - GENERATED CALL = (uintProgression).takeWhile({a: T -> true})
2021-03-11 12:02:17,987 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.minusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e7b53df]]
2021-03-11 12:02:17,987 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.minusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e7b53df]
2021-03-11 12:02:18,095 [main:302] - generating value of type = T false depth = 0
2021-03-11 12:02:19,023 [main:43] - GENERATING CALL OF fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<MutableMap<Function2<Boolean, Function1<List<Short>, UShort>, Boolean>, Sequence<Byte>>>)->kotlin.Unit): T = TODO()
2021-03-11 12:02:19,024 [main:61] - WITHOUT TYPE PARAMS = fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<MutableMap<Function2<Boolean, Function1<List<Short>, UShort>, Boolean>, Sequence<Byte>>>)->kotlin.Unit): T = TODO()
2021-03-11 12:02:19,201 [main:302] - generating value of type = Function1<Continuation<MutableMap<Function2<Boolean, Function1<List<Short>, UShort>, Boolean>, Sequence<Byte>>>, Unit> false depth = 3
2021-03-11 12:02:19,201 [main:302] - generating value of type = Unit false depth = 4
2021-03-11 12:02:19,288 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 12:02:19,289 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 12:02:19,552 [main:302] - generating value of type = Int true depth = 7
2021-03-11 12:02:19,553 [main:302] - generating value of type = Function1<Int, Unit> false depth = 7
2021-03-11 12:02:19,553 [main:302] - generating value of type = Unit false depth = 8
2021-03-11 12:02:19,640 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 12:02:19,641 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 12:02:19,944 [main:302] - generating value of type = Int true depth = 11
2021-03-11 12:02:19,945 [main:302] - generating value of type = Function1<Int, Unit> false depth = 11
2021-03-11 12:02:19,945 [main:302] - generating value of type = Unit false depth = 12
2021-03-11 12:02:20,032 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:02:20,033 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:02:20,291 [main:302] - generating value of type = Boolean true depth = 15
2021-03-11 12:02:20,291 [main:302] - generating value of type = Function0<Any> false depth = 15
2021-03-11 12:02:20,292 [main:302] - generating value of type = Any false depth = 16
2021-03-11 12:02:20,292 [main:95] - GENERATED = require(true, { })
2021-03-11 12:02:20,292 [main:95] - GENERATED = repeat(-1130579187, {a: Int -> require(true, { })})
2021-03-11 12:02:20,293 [main:95] - GENERATED = repeat(-1271427930, {a: Int -> repeat(-1130579187, {a: Int -> require(true, { })})})
2021-03-11 12:02:20,293 [main:95] - GENERATED = suspendCoroutine<MutableMap<Function2<Boolean, Function1<List<Short>, UShort>, Boolean>, Sequence<Byte>>>({a: Continuation<MutableMap<Function2<Boolean, Function1<List<Short>, UShort>, Boolean>, Sequence<Byte>>> -> repeat(-1271427930, {a: Int -> repeat(-1130579187, {a: Int -> require(true, { })})})})
2021-03-11 12:02:20,294 [main:105] - GENERATED CALL = (uintProgression).minusElement(suspendCoroutine<MutableMap<Function2<Boolean, Function1<List<Short>, UShort>, Boolean>, Sequence<Byte>>>({a: Continuation<MutableMap<Function2<Boolean, Function1<List<Short>, UShort>, Boolean>, Sequence<Byte>>> -> repeat(-1271427930, {a: Int -> repeat(-1130579187, {a: Int -> require(true, { })})})}))
2021-03-11 12:02:20,294 [main:63] - replacement of listOf((uintProgression).first.plus(25.toUByte())) of type List<UInt> is (uintProgression).dropWhile({a: T -> true})
2021-03-11 12:02:20,376 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:20,376 [main:66] - Compilation checking started
2021-03-11 12:02:20,597 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals((uintProgression).dropWhile({a: T -> true}), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:20,599 [main:56] - replacing (1u, UInt)
2021-03-11 12:02:20,599 [main:38] - replacing 1u UInt
2021-03-11 12:02:20,599 [main:42] - Getting value of type UInt
2021-03-11 12:02:20,705 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:20,706 [main:46] - GENERATED VALUE OF TYPE UInt = 1763289813.toUInt()
2021-03-11 12:02:20,706 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:20,706 [main:55] - randomType = String
2021-03-11 12:02:20,789 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:02:20,811 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@4fbf731]
2021-03-11 12:02:20,897 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:02:20,898 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@67a8eb0a]
2021-03-11 12:02:20,898 [main:66] - Generated call from random type = ("sitsw").compareTo("ljkcg").toUInt()
2021-03-11 12:02:20,899 [main:94] - GETTING UInt from ULongProgression
2021-03-11 12:02:20,921 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]]
2021-03-11 12:02:20,922 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]
2021-03-11 12:02:20,922 [main:105] - GENERATED CALL = (ulongProgression).sum()
2021-03-11 12:02:20,922 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fd27d5e]]
2021-03-11 12:02:20,922 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fd27d5e]
2021-03-11 12:02:20,922 [main:105] - GENERATED CALL = (ulongProgression).first.toUInt()
2021-03-11 12:02:20,922 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]]
2021-03-11 12:02:20,922 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]
2021-03-11 12:02:20,922 [main:105] - GENERATED CALL = (ulongProgression).step.toUInt()
2021-03-11 12:02:20,923 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-11 12:02:20,923 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-11 12:02:21,007 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-11 12:02:21,008 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:02:21,008 [main:105] - GENERATED CALL = (ulongProgression).sumOf({a: T -> 94704271.toUInt()})
2021-03-11 12:02:21,008 [main:63] - replacement of 1u of type UInt is (ulongProgression).sumOf({a: T -> 94704271.toUInt()})
2021-03-11 12:02:21,090 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:21,090 [main:66] - Compilation checking started
2021-03-11 12:02:21,324 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo (ulongProgression).sumOf({a: T -> 94704271.toUInt()})
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:21,326 [main:56] - replacing (1u, UInt)
2021-03-11 12:02:21,326 [main:38] - replacing 1u UInt
2021-03-11 12:02:21,326 [main:42] - Getting value of type UInt
2021-03-11 12:02:21,413 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:21,414 [main:46] - GENERATED VALUE OF TYPE UInt = 1644649487.toUInt()
2021-03-11 12:02:21,414 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:21,585 [main:55] - randomType = Byte?
2021-03-11 12:02:21,669 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:02:21,702 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a0af7cb]
2021-03-11 12:02:21,702 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@56232a19]
2021-03-11 12:02:21,703 [main:66] - Generated call from random type = (55)?.toDouble().toUInt()
2021-03-11 12:02:21,704 [main:94] - GETTING UInt from UIntProgression
2021-03-11 12:02:21,716 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.min(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3192f6c3]]
2021-03-11 12:02:21,716 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.min(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3192f6c3]
2021-03-11 12:02:21,716 [main:105] - GENERATED CALL = (uintProgression).min()
2021-03-11 12:02:21,716 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeHighestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@5c8292df]]
2021-03-11 12:02:21,716 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeHighestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@5c8292df]
2021-03-11 12:02:21,716 [main:105] - GENERATED CALL = (uintProgression).first.takeHighestOneBit()
2021-03-11 12:02:21,716 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2]]
2021-03-11 12:02:21,717 [main:105] - GENERATED CALL = (uintProgression).first
2021-03-11 12:02:21,717 [main:101] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@227a2e32], public abstract fun nextUInt(): kotlin.UInt defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@285c185e]]
2021-03-11 12:02:21,717 [main:137] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@227a2e32]
2021-03-11 12:02:21,717 [main:137] - GENERATING call of type public abstract fun nextUInt(): kotlin.UInt defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@285c185e]
2021-03-11 12:02:21,717 [main:105] - GENERATED CALL = (uintProgression).iterator().nextUInt()
2021-03-11 12:02:21,717 [main:101] - Case = [@kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e4e53f4]]
2021-03-11 12:02:21,717 [main:137] - GENERATING call of type @kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e4e53f4]
2021-03-11 12:02:21,810 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-11 12:02:21,810 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:02:21,987 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->Byte): R = TODO()
2021-03-11 12:02:21,988 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->Byte): R = TODO()
2021-03-11 12:02:22,255 [main:302] - generating value of type = Any false depth = 4
2021-03-11 12:02:22,255 [main:302] - generating value of type = Function0<Byte> false depth = 4
2021-03-11 12:02:22,255 [main:302] - generating value of type = Byte true depth = 5
2021-03-11 12:02:22,256 [main:95] - GENERATED = synchronized<Byte>("qbalj", { -118})
2021-03-11 12:02:22,256 [main:105] - GENERATED CALL = (uintProgression).minByOrNull({a: T -> synchronized<Byte>("qbalj", { -118})})
2021-03-11 12:02:22,256 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@45ed3fa9]]
2021-03-11 12:02:22,256 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@45ed3fa9]
2021-03-11 12:02:22,256 [main:105] - GENERATED CALL = (uintProgression).first.inc()
2021-03-11 12:02:22,256 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1863ebc6]]
2021-03-11 12:02:22,256 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1863ebc6]
2021-03-11 12:02:22,340 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:22,423 [main:302] - generating value of type = Function1<Int, T> false depth = 0
2021-03-11 12:02:22,424 [main:302] - generating value of type = T false depth = 1
2021-03-11 12:02:22,511 [main:43] - GENERATING CALL OF fun <T> maxOf(a: UInt, other: UInt, comparator: kotlin.Comparator<UInt>): T = TODO()
2021-03-11 12:02:22,511 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: UInt, other: UInt, comparator: kotlin.Comparator<UInt>): T = TODO()
2021-03-11 12:02:22,714 [main:302] - generating value of type = UInt true depth = 4
2021-03-11 12:02:22,714 [main:302] - generating value of type = UInt true depth = 4
2021-03-11 12:02:22,714 [main:302] - generating value of type = Comparator<UInt> false depth = 4
2021-03-11 12:02:22,814 [main:43] - GENERATING CALL OF fun <T> naturalOrder(): Comparator<UInt> = TODO()
2021-03-11 12:02:22,815 [main:61] - WITHOUT TYPE PARAMS = fun <T> naturalOrder(): Comparator<UInt> = TODO()
2021-03-11 12:02:22,902 [main:95] - GENERATED = naturalOrder<UInt>()
2021-03-11 12:02:22,902 [main:95] - GENERATED = maxOf<UInt>(771494120.toUInt(), 1439323363.toUInt(), naturalOrder<UInt>())
2021-03-11 12:02:22,902 [main:105] - GENERATED CALL = (uintProgression).elementAtOrElse(741709929, {a: Int -> maxOf<UInt>(771494120.toUInt(), 1439323363.toUInt(), naturalOrder<UInt>())})
2021-03-11 12:02:22,902 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline infix fun xor(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@1e7ea33b]]
2021-03-11 12:02:22,902 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun xor(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@1e7ea33b]
2021-03-11 12:02:22,989 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:22,990 [main:105] - GENERATED CALL = (uintProgression).first.xor(947185539.toUInt())
2021-03-11 12:02:22,990 [main:101] - Case = [public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@227a2e32], public final fun next(): kotlin.UInt defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@59168cdc]]
2021-03-11 12:02:22,990 [main:137] - GENERATING call of type public open fun iterator(): kotlin.collections.UIntIterator defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@227a2e32]
2021-03-11 12:02:22,990 [main:137] - GENERATING call of type public final fun next(): kotlin.UInt defined in kotlin.collections.UIntIterator[DeserializedSimpleFunctionDescriptor@59168cdc]
2021-03-11 12:02:22,990 [main:105] - GENERATED CALL = (uintProgression).iterator().next()
2021-03-11 12:02:22,990 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@ec0917b]]
2021-03-11 12:02:22,990 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@ec0917b]
2021-03-11 12:02:23,077 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:23,077 [main:105] - GENERATED CALL = (uintProgression).first.rotateLeft(1408571413)
2021-03-11 12:02:23,077 [main:63] - replacement of 1u of type UInt is (uintProgression).first.xor(947185539.toUInt())
2021-03-11 12:02:23,162 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:23,163 [main:66] - Compilation checking started
2021-03-11 12:02:23,383 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo (uintProgression).first.xor(947185539.toUInt())
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:23,384 [main:56] - replacing (mutableListOf<UInt>(), MutableList<UInt>)
2021-03-11 12:02:23,385 [main:38] - replacing mutableListOf<UInt>() MutableList<UInt>
2021-03-11 12:02:23,385 [main:42] - Getting value of type MutableList<UInt>
2021-03-11 12:02:23,474 [main:302] - generating value of type = MutableList<UInt> false depth = 0
2021-03-11 12:02:23,567 [main:43] - GENERATING CALL OF fun <T> mutableListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:23,568 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:23,655 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:23,656 [main:95] - GENERATED = mutableListOf<UInt>(1760746194.toUInt())
2021-03-11 12:02:23,656 [main:46] - GENERATED VALUE OF TYPE MutableList<UInt> = mutableListOf<UInt>(1760746194.toUInt())
2021-03-11 12:02:23,656 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:23,853 [main:55] - randomType = Function1<Char, UByte?>
2021-03-11 12:02:23,857 [main:94] - GETTING MutableList<UInt> from ULongProgression
2021-03-11 12:02:23,887 [main:94] - GETTING MutableList<UInt> from UIntProgression
2021-03-11 12:02:23,907 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:23,908 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:23,908 [main:105] - GENERATED CALL = (uintProgression).toMutableList()
2021-03-11 12:02:23,908 [main:63] - replacement of mutableListOf<UInt>() of type MutableList<UInt> is (uintProgression).toMutableList()
2021-03-11 12:02:23,995 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:23,996 [main:66] - Compilation checking started
2021-03-11 12:02:24,220 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = (uintProgression).toMutableList()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:24,221 [main:56] - replacing ((arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u, UIntProgression)
2021-03-11 12:02:24,222 [main:38] - replacing (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u UIntProgression
2021-03-11 12:02:24,222 [main:42] - Getting value of type UIntProgression
2021-03-11 12:02:24,309 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-11 12:02:24,399 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:24,400 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:24,657 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:24,657 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:24,658 [main:95] - GENERATED = UIntRange(1485303614.toUInt(), 1785936411.toUInt())
2021-03-11 12:02:24,658 [main:46] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1485303614.toUInt(), 1785936411.toUInt())
2021-03-11 12:02:24,658 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:24,659 [main:55] - randomType = String
2021-03-11 12:02:24,744 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:02:24,767 [main:94] - GETTING UIntProgression from UIntProgression
2021-03-11 12:02:24,781 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]]
2021-03-11 12:02:24,781 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]
2021-03-11 12:02:24,880 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:24,880 [main:105] - GENERATED CALL = (uintProgression).step(1703220858)
2021-03-11 12:02:24,880 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]]
2021-03-11 12:02:24,880 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]
2021-03-11 12:02:24,880 [main:105] - GENERATED CALL = (uintProgression).reversed()
2021-03-11 12:02:24,880 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]]
2021-03-11 12:02:24,881 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:02:24,970 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:24,970 [main:105] - GENERATED CALL = (uintProgression).first.downTo(503849562.toUInt())
2021-03-11 12:02:24,970 [main:63] - replacement of (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u of type UIntProgression is (uintProgression).first.downTo(503849562.toUInt())
2021-03-11 12:02:25,064 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:25,065 [main:66] - Compilation checking started
2021-03-11 12:02:25,269 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (uintProgression).first.downTo(503849562.toUInt())
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += i
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:25,271 [main:56] - replacing (i, UInt)
2021-03-11 12:02:25,272 [main:38] - replacing i UInt
2021-03-11 12:02:25,272 [main:42] - Getting value of type UInt
2021-03-11 12:02:25,371 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:25,372 [main:46] - GENERATED VALUE OF TYPE UInt = 652623044.toUInt()
2021-03-11 12:02:25,372 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:25,576 [main:55] - randomType = Function1<UByte, Float>
2021-03-11 12:02:25,577 [main:94] - GETTING UInt from ULongProgression
2021-03-11 12:02:25,593 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-11 12:02:25,593 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-11 12:02:25,675 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-11 12:02:25,676 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:02:25,676 [main:105] - GENERATED CALL = (ulongProgression).sumOf({a: T -> 1482626173.toUInt()})
2021-03-11 12:02:25,676 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]]
2021-03-11 12:02:25,677 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]
2021-03-11 12:02:25,677 [main:105] - GENERATED CALL = (ulongProgression).sum()
2021-03-11 12:02:25,677 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fd27d5e]]
2021-03-11 12:02:25,677 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fd27d5e]
2021-03-11 12:02:25,677 [main:105] - GENERATED CALL = (ulongProgression).first.toUInt()
2021-03-11 12:02:25,677 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]]
2021-03-11 12:02:25,677 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]
2021-03-11 12:02:25,677 [main:105] - GENERATED CALL = (ulongProgression).step.toUInt()
2021-03-11 12:02:25,677 [main:63] - replacement of i of type UInt is (ulongProgression).sum()
2021-03-11 12:02:25,762 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:25,762 [main:66] - Compilation checking started
2021-03-11 12:02:26,003 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (ulongProgression).sum()
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:26,005 [main:56] - replacing (ulongProgression, ULongProgression)
2021-03-11 12:02:26,005 [main:38] - replacing ulongProgression ULongProgression
2021-03-11 12:02:26,005 [main:42] - Getting value of type ULongProgression
2021-03-11 12:02:26,122 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-11 12:02:26,215 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-11 12:02:26,216 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-11 12:02:26,469 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:02:26,469 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:02:26,471 [main:95] - GENERATED = ULongRange(6461454965473288628.toULong(), 3485285694749531934.toULong())
2021-03-11 12:02:26,471 [main:46] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(6461454965473288628.toULong(), 3485285694749531934.toULong())
2021-03-11 12:02:26,471 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:26,824 [main:55] - randomType = Function2<Function1<UInt, UByte>, Float, ULong?>
2021-03-11 12:02:26,824 [main:94] - GETTING ULongProgression from ULongProgression
2021-03-11 12:02:26,839 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.ULongProgression.step(step: kotlin.Long): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@8e10577]]
2021-03-11 12:02:26,839 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.ULongProgression.step(step: kotlin.Long): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@8e10577]
2021-03-11 12:02:26,922 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:02:26,922 [main:105] - GENERATED CALL = (ulongProgression).step(6128589426535409079)
2021-03-11 12:02:26,922 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.ULongProgression.reversed(): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@69e2995e]]
2021-03-11 12:02:26,922 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.ULongProgression.reversed(): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@69e2995e]
2021-03-11 12:02:26,922 [main:105] - GENERATED CALL = (ulongProgression).reversed()
2021-03-11 12:02:26,922 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f43b557]]
2021-03-11 12:02:26,922 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f43b557]
2021-03-11 12:02:27,025 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:27,026 [main:105] - GENERATED CALL = (ulongProgression).first.downTo(1941478721233831406.toULong())
2021-03-11 12:02:27,026 [main:63] - replacement of ulongProgression of type ULongProgression is (ulongProgression).step(6128589426535409079)
2021-03-11 12:02:27,117 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:27,118 [main:56] - replacing (i, UInt)
2021-03-11 12:02:27,119 [main:38] - replacing i UInt
2021-03-11 12:02:27,119 [main:42] - Getting value of type UInt
2021-03-11 12:02:27,214 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:27,214 [main:46] - GENERATED VALUE OF TYPE UInt = 1352468841.toUInt()
2021-03-11 12:02:27,215 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:27,215 [main:55] - randomType = UShort
2021-03-11 12:02:27,298 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:02:27,324 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@4739e841]
2021-03-11 12:02:27,406 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:02:27,406 [main:66] - Generated call from random type = (22203.toUShort()).plus(106.toUByte())
2021-03-11 12:02:27,406 [main:63] - replacement of i of type UInt is (22203.toUShort()).plus(106.toUByte())
2021-03-11 12:02:27,488 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:27,488 [main:66] - Compilation checking started
2021-03-11 12:02:27,850 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += i
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:27,851 [main:56] - replacing (i, ULong)
2021-03-11 12:02:27,852 [main:38] - replacing i ULong
2021-03-11 12:02:27,852 [main:42] - Getting value of type ULong
2021-03-11 12:02:27,937 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:27,938 [main:46] - GENERATED VALUE OF TYPE ULong = 2570176788138128984.toULong()
2021-03-11 12:02:27,938 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:27,938 [main:55] - randomType = Char
2021-03-11 12:02:28,021 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:02:28,041 [main:137] - GENERATING call of type public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@68f07ef9]
2021-03-11 12:02:28,041 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Float.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7c35782e]
2021-03-11 12:02:28,041 [main:66] - Generated call from random type = ('츅').toFloat().toULong()
2021-03-11 12:02:28,042 [main:94] - GETTING ULong from UIntProgression
2021-03-11 12:02:28,058 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@19e90def]]
2021-03-11 12:02:28,059 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@19e90def]
2021-03-11 12:02:28,141 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:28,142 [main:105] - GENERATED CALL = (uintProgression).first.times(9134529082147209972.toULong())
2021-03-11 12:02:28,142 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.ULong): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71886642]]
2021-03-11 12:02:28,142 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.ULong): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71886642]
2021-03-11 12:02:28,243 [main:302] - generating value of type = Function1<T, ULong> false depth = 0
2021-03-11 12:02:28,243 [main:302] - generating value of type = ULong true depth = 1
2021-03-11 12:02:28,244 [main:105] - GENERATED CALL = (uintProgression).sumOf({a: T -> 483875766016478239.toULong()})
2021-03-11 12:02:28,244 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@51cd3b50]]
2021-03-11 12:02:28,244 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@51cd3b50]
2021-03-11 12:02:28,332 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:28,332 [main:105] - GENERATED CALL = (uintProgression).first.rem(2648271833774019029.toULong())
2021-03-11 12:02:28,333 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7b5ea373]]
2021-03-11 12:02:28,333 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7b5ea373]
2021-03-11 12:02:28,333 [main:105] - GENERATED CALL = (uintProgression).first.toULong()
2021-03-11 12:02:28,333 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c9fb03]]
2021-03-11 12:02:28,333 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@12c9fb03]
2021-03-11 12:02:28,418 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:28,419 [main:105] - GENERATED CALL = (uintProgression).first.div(1020961641176345521.toULong())
2021-03-11 12:02:28,419 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@2514fb25], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]]
2021-03-11 12:02:28,419 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:02:28,419 [main:105] - GENERATED CALL = (uintProgression).step.toULong()
2021-03-11 12:02:28,419 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@32ae2303]]
2021-03-11 12:02:28,419 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.ULong>.sum(): kotlin.ULong defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@32ae2303]
2021-03-11 12:02:28,419 [main:105] - GENERATED CALL = (uintProgression).sum()
2021-03-11 12:02:28,419 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@26949d82]]
2021-03-11 12:02:28,419 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@26949d82]
2021-03-11 12:02:28,502 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:28,503 [main:105] - GENERATED CALL = (uintProgression).first.plus(8205815800287030981.toULong())
2021-03-11 12:02:28,503 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@54e324d1]]
2021-03-11 12:02:28,503 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@54e324d1]
2021-03-11 12:02:28,587 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:28,588 [main:105] - GENERATED CALL = (uintProgression).first.minus(5493256787928450474.toULong())
2021-03-11 12:02:28,588 [main:63] - replacement of i of type ULong is (uintProgression).first.minus(5493256787928450474.toULong())
2021-03-11 12:02:28,671 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:28,671 [main:66] - Compilation checking started
2021-03-11 12:02:29,038 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:29,040 [main:56] - replacing (uintList, MutableList<UInt>)
2021-03-11 12:02:29,040 [main:38] - replacing uintList MutableList<UInt>
2021-03-11 12:02:29,040 [main:42] - Getting value of type MutableList<UInt>
2021-03-11 12:02:29,128 [main:302] - generating value of type = MutableList<UInt> false depth = 0
2021-03-11 12:02:29,221 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:29,222 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:29,307 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:29,307 [main:95] - GENERATED = arrayListOf<UInt>(80807937.toUInt())
2021-03-11 12:02:29,308 [main:46] - GENERATED VALUE OF TYPE MutableList<UInt> = arrayListOf<UInt>(80807937.toUInt())
2021-03-11 12:02:29,308 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:29,590 [main:55] - randomType = Set<HashMap<Char, String>>
2021-03-11 12:02:29,594 [main:94] - GETTING MutableList<UInt> from UIntProgression
2021-03-11 12:02:29,612 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:29,612 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:29,612 [main:105] - GENERATED CALL = (uintProgression).toMutableList()
2021-03-11 12:02:29,613 [main:63] - replacement of uintList of type MutableList<UInt> is arrayListOf<UInt>(80807937.toUInt())
2021-03-11 12:02:29,697 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:02:29,697 [main:66] - Compilation checking started
2021-03-11 12:02:30,062 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:30,065 [main:56] - replacing (listOf((uintProgression).first.plus(25.toUByte())), List<UInt>)
2021-03-11 12:02:30,065 [main:38] - replacing listOf((uintProgression).first.plus(25.toUByte())) List<UInt>
2021-03-11 12:02:30,066 [main:42] - Getting value of type List<UInt>
2021-03-11 12:02:30,162 [main:302] - generating value of type = List<UInt> false depth = 0
2021-03-11 12:02:30,267 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(): List<UInt> = TODO()
2021-03-11 12:02:30,268 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(): List<UInt> = TODO()
2021-03-11 12:02:30,357 [main:95] - GENERATED = ArrayDeque<UInt>()
2021-03-11 12:02:30,357 [main:46] - GENERATED VALUE OF TYPE List<UInt> = ArrayDeque<UInt>()
2021-03-11 12:02:30,357 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:30,537 [main:55] - randomType = Boolean?
2021-03-11 12:02:30,624 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:02:30,641 [main:94] - GETTING List<UInt> from ULongProgression
2021-03-11 12:02:30,659 [main:94] - GETTING List<UInt> from UIntProgression
2021-03-11 12:02:30,678 [main:101] - Case = [public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedBy(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d5b21c1]]
2021-03-11 12:02:30,678 [main:137] - GENERATING call of type public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedBy(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5d5b21c1]
2021-03-11 12:02:30,767 [main:302] - generating value of type = Function1<T, R?> false depth = 0
2021-03-11 12:02:30,767 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:02:30,983 [main:43] - GENERATING CALL OF fun <R> run(block: ()->Int?): R = TODO()
2021-03-11 12:02:30,984 [main:61] - WITHOUT TYPE PARAMS = fun <R> run(block: ()->Int?): R = TODO()
2021-03-11 12:02:31,166 [main:302] - generating value of type = Function0<Int?> false depth = 4
2021-03-11 12:02:31,166 [main:302] - generating value of type = Int true depth = 5
2021-03-11 12:02:31,167 [main:95] - GENERATED = run<Int?>({ -1633205697})
2021-03-11 12:02:31,167 [main:105] - GENERATED CALL = (uintProgression).sortedBy({a: T -> run<Int?>({ -1633205697})})
2021-03-11 12:02:31,167 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toList(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52d1600c]]
2021-03-11 12:02:31,167 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toList(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52d1600c]
2021-03-11 12:02:31,168 [main:105] - GENERATED CALL = (uintProgression).toList()
2021-03-11 12:02:31,168 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@396e50c0]]
2021-03-11 12:02:31,168 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@396e50c0]
2021-03-11 12:02:31,168 [main:105] - GENERATED CALL = (uintProgression).sortedDescending()
2021-03-11 12:02:31,168 [main:101] - Case = [public fun <T : kotlin.Any> kotlin.collections.Iterable<T?>.filterNotNull(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14ffb9ff]]
2021-03-11 12:02:31,168 [main:137] - GENERATING call of type public fun <T : kotlin.Any> kotlin.collections.Iterable<T?>.filterNotNull(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14ffb9ff]
2021-03-11 12:02:31,168 [main:105] - GENERATED CALL = (uintProgression).filterNotNull()
2021-03-11 12:02:31,168 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3128baef]]
2021-03-11 12:02:31,168 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3128baef]
2021-03-11 12:02:31,255 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:02:31,255 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:02:31,256 [main:105] - GENERATED CALL = (uintProgression).takeWhile({a: T -> false})
2021-03-11 12:02:31,256 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a61862]]
2021-03-11 12:02:31,256 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a61862]
2021-03-11 12:02:31,256 [main:105] - GENERATED CALL = (uintProgression).sorted()
2021-03-11 12:02:31,256 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.take(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f8c60f0]]
2021-03-11 12:02:31,256 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.take(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f8c60f0]
2021-03-11 12:02:31,341 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:31,341 [main:105] - GENERATED CALL = (uintProgression).take(-213582259)
2021-03-11 12:02:31,341 [main:101] - Case = [public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedByDescending(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@304542ec]]
2021-03-11 12:02:31,341 [main:137] - GENERATING call of type public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedByDescending(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@304542ec]
2021-03-11 12:02:31,425 [main:302] - generating value of type = Function1<T, R?> false depth = 0
2021-03-11 12:02:31,425 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:02:31,515 [main:43] - GENERATING CALL OF fun <T, R> with(receiver: Char, block: T.()->UInt): R = TODO()
2021-03-11 12:02:31,516 [main:61] - WITHOUT TYPE PARAMS = fun <T, R> with(receiver: Char, block: T.()->UInt): R = TODO()
2021-03-11 12:02:31,701 [main:302] - generating value of type = Char true depth = 4
2021-03-11 12:02:31,701 [main:385] - Cant generate call of fun <T, R> with(receiver: Char, block: T.()->UInt): R = TODO()
2021-03-11 12:02:31,702 [main:105] - GENERATED CALL = (uintProgression).sortedByDescending({a: T -> })
2021-03-11 12:02:31,702 [main:101] - Case = [public operator fun <T> kotlin.collections.Iterable<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3c7ca576]]
2021-03-11 12:02:31,702 [main:137] - GENERATING call of type public operator fun <T> kotlin.collections.Iterable<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3c7ca576]
2021-03-11 12:02:31,785 [main:302] - generating value of type = T false depth = 0
2021-03-11 12:02:31,988 [main:43] - GENERATING CALL OF fun <T> checkNotNull(value: Byte): T = TODO()
2021-03-11 12:02:31,989 [main:61] - WITHOUT TYPE PARAMS = fun <T> checkNotNull(value: Byte): T = TODO()
2021-03-11 12:02:32,089 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 12:02:32,089 [main:95] - GENERATED = checkNotNull<Byte>(-34)
2021-03-11 12:02:32,090 [main:105] - GENERATED CALL = (uintProgression).plus(checkNotNull<Byte>(-34))
2021-03-11 12:02:32,090 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.distinct(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2486c31f]]
2021-03-11 12:02:32,090 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.distinct(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2486c31f]
2021-03-11 12:02:32,090 [main:105] - GENERATED CALL = (uintProgression).distinct()
2021-03-11 12:02:32,090 [main:63] - replacement of listOf((uintProgression).first.plus(25.toUByte())) of type List<UInt> is (uintProgression).sortedByDescending({a: T -> })
2021-03-11 12:02:32,180 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:32,181 [main:66] - Compilation checking started
2021-03-11 12:02:32,423 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).sortedByDescending({a: T -> }), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong()
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:32,426 [main:56] - replacing ((uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong(), ULongProgression)
2021-03-11 12:02:32,427 [main:38] - replacing (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong() ULongProgression
2021-03-11 12:02:32,427 [main:42] - Getting value of type ULongProgression
2021-03-11 12:02:32,531 [main:302] - generating value of type = ULongProgression false depth = 0
2021-03-11 12:02:32,624 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-11 12:02:32,625 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongProgression = TODO()
2021-03-11 12:02:32,907 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:02:32,908 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:02:32,908 [main:95] - GENERATED = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
2021-03-11 12:02:32,908 [main:46] - GENERATED VALUE OF TYPE ULongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
2021-03-11 12:02:32,908 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:33,459 [main:55] - randomType = HashMap<Function1<Byte, MutableMap<Char, HashSet<ArrayList<UInt>>>>, String>
2021-03-11 12:02:33,548 [main:302] - generating value of type = HashMap<Function1<Byte, MutableMap<Char, HashSet<ArrayList<UInt>>>>, String> false depth = 0
2021-03-11 12:02:33,640 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(): HashMap<Function1<Byte, MutableMap<Char, HashSet<ArrayList<UInt>>>>, Strg> = TODO()
2021-03-11 12:02:33,641 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(): HashMap<Function1<Byte, MutableMap<Char, HashSet<ArrayList<UInt>>>>, Strg> = TODO()
2021-03-11 12:02:33,728 [main:95] - GENERATED = hashMapOf<Function1<Byte, MutableMap<Char, HashSet<ArrayList<UInt>>>>, String>()
2021-03-11 12:02:33,921 [main:94] - GETTING ULongProgression from UIntProgression
2021-03-11 12:02:33,941 [main:94] - GETTING ULongProgression from ULongProgression
2021-03-11 12:02:33,962 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.ULongProgression.step(step: kotlin.Long): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@8e10577]]
2021-03-11 12:02:33,962 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.ULongProgression.step(step: kotlin.Long): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@8e10577]
2021-03-11 12:02:34,051 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:02:34,052 [main:105] - GENERATED CALL = (ulongProgression).step(3309723668318536447)
2021-03-11 12:02:34,052 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f43b557]]
2021-03-11 12:02:34,052 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.downTo(to: kotlin.ULong): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f43b557]
2021-03-11 12:02:34,142 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:02:34,143 [main:105] - GENERATED CALL = (ulongProgression).first.downTo(2230632105006189638.toULong())
2021-03-11 12:02:34,143 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.ULongProgression.reversed(): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@69e2995e]]
2021-03-11 12:02:34,143 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.ULongProgression.reversed(): kotlin.ranges.ULongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@69e2995e]
2021-03-11 12:02:34,143 [main:105] - GENERATED CALL = (ulongProgression).reversed()
2021-03-11 12:02:34,143 [main:63] - replacement of (uintProgression).first.div(8402992999482881329.toULong()) downTo ('踽')?.toDouble().toULong() of type ULongProgression is ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
2021-03-11 12:02:34,234 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:02:34,234 [main:66] - Compilation checking started
2021-03-11 12:02:34,619 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals(listOf((uintProgression).first.plus(25.toUByte())), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:34,620 [main:56] - replacing (listOf((uintProgression).first.plus(25.toUByte())), List<UInt>)
2021-03-11 12:02:34,621 [main:38] - replacing listOf((uintProgression).first.plus(25.toUByte())) List<UInt>
2021-03-11 12:02:34,621 [main:42] - Getting value of type List<UInt>
2021-03-11 12:02:34,738 [main:302] - generating value of type = List<UInt> false depth = 0
2021-03-11 12:02:34,830 [main:43] - GENERATING CALL OF fun <E> ArrayList(elements: kotlin.collections.Collection<UInt>): List<UInt> = TODO()
2021-03-11 12:02:34,831 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(elements: kotlin.collections.Collection<UInt>): List<UInt> = TODO()
2021-03-11 12:02:35,002 [main:302] - generating value of type = Collection<UInt> false depth = 3
2021-03-11 12:02:35,092 [main:43] - GENERATING CALL OF fun <T> emptySet(): Collection<UInt> = TODO()
2021-03-11 12:02:35,093 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptySet(): Collection<UInt> = TODO()
2021-03-11 12:02:35,178 [main:95] - GENERATED = emptySet<UInt>()
2021-03-11 12:02:35,178 [main:95] - GENERATED = ArrayList<UInt>(emptySet<UInt>())
2021-03-11 12:02:35,178 [main:46] - GENERATED VALUE OF TYPE List<UInt> = ArrayList<UInt>(emptySet<UInt>())
2021-03-11 12:02:35,178 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:35,266 [main:55] - randomType = Float
2021-03-11 12:02:35,352 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:02:35,384 [main:94] - GETTING List<UInt> from UIntProgression
2021-03-11 12:02:35,396 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filterIndexed(predicate: (index: kotlin.Int, T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]]
2021-03-11 12:02:35,396 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filterIndexed(predicate: (index: kotlin.Int, T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]
2021-03-11 12:02:35,484 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, T, Boolean> false depth = 0
2021-03-11 12:02:35,484 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:02:35,485 [main:105] - GENERATED CALL = (uintProgression).filterIndexed({a: Int, b: T -> true})
2021-03-11 12:02:35,485 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a61862]]
2021-03-11 12:02:35,485 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65a61862]
2021-03-11 12:02:35,485 [main:105] - GENERATED CALL = (uintProgression).sorted()
2021-03-11 12:02:35,485 [main:101] - Case = [public operator fun <T> kotlin.collections.Iterable<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3c7ca576]]
2021-03-11 12:02:35,485 [main:137] - GENERATING call of type public operator fun <T> kotlin.collections.Iterable<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3c7ca576]
2021-03-11 12:02:35,570 [main:302] - generating value of type = T false depth = 0
2021-03-11 12:02:35,658 [main:43] - GENERATING CALL OF fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<UShort>)->kotlin.Unit): T = TODO()
2021-03-11 12:02:35,659 [main:61] - WITHOUT TYPE PARAMS = fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<UShort>)->kotlin.Unit): T = TODO()
2021-03-11 12:02:35,873 [main:302] - generating value of type = Function1<Continuation<UShort>, Unit> false depth = 3
2021-03-11 12:02:35,873 [main:302] - generating value of type = Unit false depth = 4
2021-03-11 12:02:35,971 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 12:02:35,972 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 12:02:36,243 [main:302] - generating value of type = Int true depth = 7
2021-03-11 12:02:36,244 [main:302] - generating value of type = Function1<Int, Unit> false depth = 7
2021-03-11 12:02:36,244 [main:302] - generating value of type = Unit false depth = 8
2021-03-11 12:02:36,332 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:02:36,333 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:02:36,589 [main:302] - generating value of type = Boolean true depth = 11
2021-03-11 12:02:36,590 [main:302] - generating value of type = Function0<Any> false depth = 11
2021-03-11 12:02:36,590 [main:302] - generating value of type = Any false depth = 12
2021-03-11 12:02:36,590 [main:95] - GENERATED = require(true, { "lcakh"})
2021-03-11 12:02:36,590 [main:95] - GENERATED = repeat(1279892437, {a: Int -> require(true, { "lcakh"})})
2021-03-11 12:02:36,591 [main:95] - GENERATED = suspendCoroutine<UShort>({a: Continuation<UShort> -> repeat(1279892437, {a: Int -> require(true, { "lcakh"})})})
2021-03-11 12:02:36,591 [main:105] - GENERATED CALL = (uintProgression).plus(suspendCoroutine<UShort>({a: Continuation<UShort> -> repeat(1279892437, {a: Int -> require(true, { "lcakh"})})}))
2021-03-11 12:02:36,591 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.sortedWith(comparator: kotlin.Comparator<in T>): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d0af3c9]]
2021-03-11 12:02:36,591 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.sortedWith(comparator: kotlin.Comparator<in T>): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d0af3c9]
2021-03-11 12:02:36,677 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-11 12:02:36,766 [main:43] - GENERATING CALL OF fun <T> reverseOrder(): Comparator<T> = TODO()
2021-03-11 12:02:36,767 [main:61] - WITHOUT TYPE PARAMS = fun <T> reverseOrder(): Comparator<T> = TODO()
2021-03-11 12:02:36,878 [main:95] - GENERATED = reverseOrder<T>()
2021-03-11 12:02:36,878 [main:105] - GENERATED CALL = (uintProgression).sortedWith(reverseOrder<T>())
2021-03-11 12:02:36,878 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filterNot(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3b91f637]]
2021-03-11 12:02:36,878 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filterNot(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3b91f637]
2021-03-11 12:02:36,970 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:02:36,971 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:02:36,971 [main:105] - GENERATED CALL = (uintProgression).filterNot({a: T -> false})
2021-03-11 12:02:36,972 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.minusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e7b53df]]
2021-03-11 12:02:36,972 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.minusElement(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e7b53df]
2021-03-11 12:02:37,069 [main:105] - GENERATED CALL = (uintProgression).minusElement(null)
2021-03-11 12:02:37,070 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filter(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67b020cd]]
2021-03-11 12:02:37,070 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filter(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67b020cd]
2021-03-11 12:02:37,156 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:02:37,156 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:02:37,157 [main:105] - GENERATED CALL = (uintProgression).filter({a: T -> true})
2021-03-11 12:02:37,157 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.drop(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c6c059e]]
2021-03-11 12:02:37,157 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.drop(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c6c059e]
2021-03-11 12:02:37,243 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:37,244 [main:105] - GENERATED CALL = (uintProgression).drop(-1057244192)
2021-03-11 12:02:37,244 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@396e50c0]]
2021-03-11 12:02:37,244 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@396e50c0]
2021-03-11 12:02:37,244 [main:105] - GENERATED CALL = (uintProgression).sortedDescending()
2021-03-11 12:02:37,244 [main:101] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d7b5971]]
2021-03-11 12:02:37,244 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.shuffled(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d7b5971]
2021-03-11 12:02:37,244 [main:105] - GENERATED CALL = (uintProgression).shuffled()
2021-03-11 12:02:37,244 [main:63] - replacement of listOf((uintProgression).first.plus(25.toUByte())) of type List<UInt> is (uintProgression).minusElement(null)
2021-03-11 12:02:37,328 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:37,329 [main:66] - Compilation checking started
2021-03-11 12:02:37,680 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:37,682 [main:56] - replacing ((arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u, UIntProgression)
2021-03-11 12:02:37,682 [main:38] - replacing (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u UIntProgression
2021-03-11 12:02:37,682 [main:42] - Getting value of type UIntProgression
2021-03-11 12:02:37,769 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-11 12:02:37,856 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:37,857 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:38,117 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:38,118 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:38,118 [main:95] - GENERATED = UIntRange(1913401686.toUInt(), 1404777743.toUInt())
2021-03-11 12:02:38,118 [main:46] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1913401686.toUInt(), 1404777743.toUInt())
2021-03-11 12:02:38,118 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:38,229 [main:55] - randomType = Float
2021-03-11 12:02:38,314 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:02:38,363 [main:94] - GETTING UIntProgression from ULongProgression
2021-03-11 12:02:38,383 [main:94] - GETTING UIntProgression from UIntProgression
2021-03-11 12:02:38,401 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]]
2021-03-11 12:02:38,401 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]
2021-03-11 12:02:38,401 [main:105] - GENERATED CALL = (uintProgression).reversed()
2021-03-11 12:02:38,401 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]]
2021-03-11 12:02:38,401 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]
2021-03-11 12:02:38,483 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:38,484 [main:105] - GENERATED CALL = (uintProgression).step(-1560716051)
2021-03-11 12:02:38,484 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]]
2021-03-11 12:02:38,484 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:02:38,566 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:38,567 [main:105] - GENERATED CALL = (uintProgression).first.downTo(913150388.toUInt())
2021-03-11 12:02:38,567 [main:63] - replacement of (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u of type UIntProgression is (uintProgression).step(-1560716051)
2021-03-11 12:02:38,649 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:38,649 [main:66] - Compilation checking started
2021-03-11 12:02:38,866 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (uintProgression).step(-1560716051)
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:38,867 [main:56] - replacing (mutableListOf<UInt>(), MutableList<UInt>)
2021-03-11 12:02:38,868 [main:38] - replacing mutableListOf<UInt>() MutableList<UInt>
2021-03-11 12:02:38,868 [main:42] - Getting value of type MutableList<UInt>
2021-03-11 12:02:38,950 [main:302] - generating value of type = MutableList<UInt> false depth = 0
2021-03-11 12:02:39,037 [main:43] - GENERATING CALL OF fun <T> mutableListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:39,038 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:39,123 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:39,123 [main:95] - GENERATED = mutableListOf<UInt>(960974987.toUInt())
2021-03-11 12:02:39,123 [main:46] - GENERATED VALUE OF TYPE MutableList<UInt> = mutableListOf<UInt>(960974987.toUInt())
2021-03-11 12:02:39,123 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:39,599 [main:55] - randomType = Pair<Sequence<UByte?>?, Float>
2021-03-11 12:02:39,682 [main:302] - generating value of type = Pair<Sequence<UByte?>?, Float> false depth = 0
2021-03-11 12:02:39,768 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Sequence<UByte?>?, second: Float): Pair<Sequence<UByte?>?, Float> = TODO()
2021-03-11 12:02:39,769 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Sequence<UByte?>?, second: Float): Pair<Sequence<UByte?>?, Float> = TODO()
2021-03-11 12:02:39,853 [main:302] - generating value of type = Sequence<UByte?> false depth = 3
2021-03-11 12:02:39,942 [main:43] - GENERATING CALL OF fun <T> emptySequence(): Sequence<UByte?> = TODO()
2021-03-11 12:02:39,943 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptySequence(): Sequence<UByte?> = TODO()
2021-03-11 12:02:40,028 [main:95] - GENERATED = emptySequence<UByte?>()
2021-03-11 12:02:40,028 [main:302] - generating value of type = Float true depth = 3
2021-03-11 12:02:40,029 [main:95] - GENERATED = Pair<Sequence<UByte?>?, Float>(emptySequence<UByte?>(), 0.15650642f)
2021-03-11 12:02:40,049 [main:94] - GETTING MutableList<UInt> from UIntProgression
2021-03-11 12:02:40,067 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:40,068 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:40,068 [main:105] - GENERATED CALL = (uintProgression).toMutableList()
2021-03-11 12:02:40,068 [main:63] - replacement of mutableListOf<UInt>() of type MutableList<UInt> is (uintProgression).toMutableList()
2021-03-11 12:02:40,151 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:40,151 [main:66] - Compilation checking started
2021-03-11 12:02:40,369 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = (uintProgression).toMutableList()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:40,371 [main:56] - replacing (mutableListOf<UInt>(), MutableList<UInt>)
2021-03-11 12:02:40,371 [main:38] - replacing mutableListOf<UInt>() MutableList<UInt>
2021-03-11 12:02:40,371 [main:42] - Getting value of type MutableList<UInt>
2021-03-11 12:02:40,456 [main:302] - generating value of type = MutableList<UInt> false depth = 0
2021-03-11 12:02:40,543 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:40,544 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:40,628 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:40,629 [main:95] - GENERATED = arrayListOf<UInt>(2034971319.toUInt())
2021-03-11 12:02:40,629 [main:46] - GENERATED VALUE OF TYPE MutableList<UInt> = arrayListOf<UInt>(2034971319.toUInt())
2021-03-11 12:02:40,629 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:40,809 [main:55] - randomType = Float?
2021-03-11 12:02:40,892 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:02:40,952 [main:94] - GETTING MutableList<UInt> from ULongProgression
2021-03-11 12:02:40,967 [main:94] - GETTING MutableList<UInt> from UIntProgression
2021-03-11 12:02:40,980 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:40,980 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:40,980 [main:105] - GENERATED CALL = (uintProgression).toMutableList()
2021-03-11 12:02:40,980 [main:63] - replacement of mutableListOf<UInt>() of type MutableList<UInt> is (uintProgression).toMutableList()
2021-03-11 12:02:41,062 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:41,062 [main:66] - Compilation checking started
2021-03-11 12:02:41,271 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = (uintProgression).toMutableList()
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:41,272 [main:56] - replacing ((arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u, UIntProgression)
2021-03-11 12:02:41,273 [main:38] - replacing (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u UIntProgression
2021-03-11 12:02:41,273 [main:42] - Getting value of type UIntProgression
2021-03-11 12:02:41,355 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-11 12:02:41,441 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:41,442 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:41,697 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:41,697 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:41,699 [main:95] - GENERATED = UIntRange(510477726.toUInt(), 1990874385.toUInt())
2021-03-11 12:02:41,699 [main:46] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(510477726.toUInt(), 1990874385.toUInt())
2021-03-11 12:02:41,699 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:41,875 [main:55] - randomType = Function1<String, Float>
2021-03-11 12:02:41,877 [main:94] - GETTING UIntProgression from ULongProgression
2021-03-11 12:02:41,899 [main:94] - GETTING UIntProgression from UIntProgression
2021-03-11 12:02:41,914 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]]
2021-03-11 12:02:41,914 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]
2021-03-11 12:02:41,997 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:41,998 [main:105] - GENERATED CALL = (uintProgression).step(-1424988459)
2021-03-11 12:02:41,998 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]]
2021-03-11 12:02:41,998 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]
2021-03-11 12:02:41,998 [main:105] - GENERATED CALL = (uintProgression).reversed()
2021-03-11 12:02:41,998 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]]
2021-03-11 12:02:41,998 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:02:42,081 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:42,082 [main:105] - GENERATED CALL = (uintProgression).first.downTo(1701542180.toUInt())
2021-03-11 12:02:42,082 [main:63] - replacement of (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u of type UIntProgression is (uintProgression).reversed()
2021-03-11 12:02:42,166 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:42,166 [main:66] - Compilation checking started
2021-03-11 12:02:42,372 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = (uintProgression).reversed()
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:42,373 [main:56] - replacing (mutableListOf<UInt>(), MutableList<UInt>)
2021-03-11 12:02:42,374 [main:38] - replacing mutableListOf<UInt>() MutableList<UInt>
2021-03-11 12:02:42,374 [main:42] - Getting value of type MutableList<UInt>
2021-03-11 12:02:42,482 [main:302] - generating value of type = MutableList<UInt> false depth = 0
2021-03-11 12:02:42,569 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:42,570 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: UInt): MutableList<UInt> = TODO()
2021-03-11 12:02:42,653 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:42,654 [main:95] - GENERATED = arrayListOf<UInt>(90362397.toUInt())
2021-03-11 12:02:42,654 [main:46] - GENERATED VALUE OF TYPE MutableList<UInt> = arrayListOf<UInt>(90362397.toUInt())
2021-03-11 12:02:42,654 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:42,994 [main:55] - randomType = Collection<Function1<String, List<Float>>>
2021-03-11 12:02:42,997 [main:94] - GETTING MutableList<UInt> from ULongProgression
2021-03-11 12:02:43,013 [main:94] - GETTING MutableList<UInt> from UIntProgression
2021-03-11 12:02:43,025 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:43,025 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:43,025 [main:105] - GENERATED CALL = (uintProgression).toMutableList()
2021-03-11 12:02:43,025 [main:63] - replacement of mutableListOf<UInt>() of type MutableList<UInt> is arrayListOf<UInt>(90362397.toUInt())
2021-03-11 12:02:43,108 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:02:43,108 [main:66] - Compilation checking started
2021-03-11 12:02:43,452 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:43,453 [main:56] - replacing ((arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u, UIntProgression)
2021-03-11 12:02:43,453 [main:38] - replacing (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u UIntProgression
2021-03-11 12:02:43,453 [main:42] - Getting value of type UIntProgression
2021-03-11 12:02:43,538 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-11 12:02:43,625 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:43,626 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:43,882 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:43,882 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:43,882 [main:95] - GENERATED = UIntRange(1215820668.toUInt(), 1729836582.toUInt())
2021-03-11 12:02:43,882 [main:46] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1215820668.toUInt(), 1729836582.toUInt())
2021-03-11 12:02:43,882 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:43,883 [main:55] - randomType = UShort
2021-03-11 12:02:43,986 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:02:44,013 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@3ea8ae78]
2021-03-11 12:02:44,095 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:02:44,096 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:02:44,178 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:44,178 [main:66] - Generated call from random type = (25755.toUShort()).div(84.toUByte()).downTo(1565466340.toUInt())
2021-03-11 12:02:44,179 [main:94] - GETTING UIntProgression from ULongProgression
2021-03-11 12:02:44,196 [main:94] - GETTING UIntProgression from UIntProgression
2021-03-11 12:02:44,207 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]]
2021-03-11 12:02:44,208 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]
2021-03-11 12:02:44,208 [main:105] - GENERATED CALL = (uintProgression).reversed()
2021-03-11 12:02:44,208 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]]
2021-03-11 12:02:44,208 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]
2021-03-11 12:02:44,290 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:44,290 [main:105] - GENERATED CALL = (uintProgression).step(2064983735)
2021-03-11 12:02:44,290 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]]
2021-03-11 12:02:44,290 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:02:44,372 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:44,372 [main:105] - GENERATED CALL = (uintProgression).first.downTo(1122548579.toUInt())
2021-03-11 12:02:44,372 [main:63] - replacement of (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u of type UIntProgression is (uintProgression).first.downTo(1122548579.toUInt())
2021-03-11 12:02:44,454 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:44,454 [main:66] - Compilation checking started
2021-03-11 12:02:44,661 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = (uintProgression).first.downTo(1122548579.toUInt())
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:44,663 [main:56] - replacing ((arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u, UIntProgression)
2021-03-11 12:02:44,663 [main:38] - replacing (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u UIntProgression
2021-03-11 12:02:44,663 [main:42] - Getting value of type UIntProgression
2021-03-11 12:02:44,748 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-11 12:02:44,834 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:44,835 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:02:45,098 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:45,099 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:02:45,099 [main:95] - GENERATED = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
2021-03-11 12:02:45,100 [main:46] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
2021-03-11 12:02:45,100 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:45,270 [main:55] - randomType = Float?
2021-03-11 12:02:45,353 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:02:45,384 [main:94] - GETTING UIntProgression from ULongProgression
2021-03-11 12:02:45,397 [main:94] - GETTING UIntProgression from UIntProgression
2021-03-11 12:02:45,408 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]]
2021-03-11 12:02:45,408 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ranges.UIntProgression.reversed(): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@732dd94b]
2021-03-11 12:02:45,408 [main:105] - GENERATED CALL = (uintProgression).reversed()
2021-03-11 12:02:45,408 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]]
2021-03-11 12:02:45,408 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ranges.UIntProgression.step(step: kotlin.Int): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@31fb8848]
2021-03-11 12:02:45,518 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:45,519 [main:105] - GENERATED CALL = (uintProgression).step(399325693)
2021-03-11 12:02:45,519 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@5565fdd2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]]
2021-03-11 12:02:45,519 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:02:45,605 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:45,606 [main:105] - GENERATED CALL = (uintProgression).first.downTo(1397191096.toUInt())
2021-03-11 12:02:45,606 [main:63] - replacement of (arrayListOf<Double>()).get(-649534936).toUInt() downTo 1u of type UIntProgression is UIntRange(1079481874.toUInt(), 1854871123.toUInt())
2021-03-11 12:02:45,689 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:02:45,689 [main:66] - Compilation checking started
2021-03-11 12:02:46,025 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:46,027 [main:56] - replacing (1u, UInt)
2021-03-11 12:02:46,027 [main:38] - replacing 1u UInt
2021-03-11 12:02:46,027 [main:42] - Getting value of type UInt
2021-03-11 12:02:46,115 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:02:46,116 [main:46] - GENERATED VALUE OF TYPE UInt = 1295633153.toUInt()
2021-03-11 12:02:46,116 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:46,459 [main:55] - randomType = Pair<Byte, Char?>
2021-03-11 12:02:46,542 [main:302] - generating value of type = Pair<Byte, Char?> false depth = 0
2021-03-11 12:02:46,628 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Byte, second: Char?): Pair<Byte, Char?> = TODO()
2021-03-11 12:02:46,628 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Byte, second: Char?): Pair<Byte, Char?> = TODO()
2021-03-11 12:02:46,712 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 12:02:46,712 [main:302] - generating value of type = Char true depth = 3
2021-03-11 12:02:46,714 [main:95] - GENERATED = Pair<Byte, Char?>(-35, '즌')
2021-03-11 12:02:46,726 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@230f9f56]
2021-03-11 12:02:46,726 [main:66] - Generated call from random type = (Pair<Byte, Char?>(-35, '즌')).first.toUInt()
2021-03-11 12:02:46,727 [main:94] - GETTING UInt from ULongProgression
2021-03-11 12:02:46,738 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-11 12:02:46,739 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-11 12:02:46,821 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-11 12:02:46,821 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:02:46,822 [main:105] - GENERATED CALL = (ulongProgression).sumOf({a: T -> 1348008127.toUInt()})
2021-03-11 12:02:46,822 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@737e773a], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]]
2021-03-11 12:02:46,822 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]
2021-03-11 12:02:46,822 [main:105] - GENERATED CALL = (ulongProgression).step.toUInt()
2021-03-11 12:02:46,822 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@14674f57], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fd27d5e]]
2021-03-11 12:02:46,822 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fd27d5e]
2021-03-11 12:02:46,822 [main:105] - GENERATED CALL = (ulongProgression).first.toUInt()
2021-03-11 12:02:46,822 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]]
2021-03-11 12:02:46,822 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]
2021-03-11 12:02:46,823 [main:105] - GENERATED CALL = (ulongProgression).sum()
2021-03-11 12:02:46,823 [main:63] - replacement of 1u of type UInt is (Pair<Byte, Char?>(-35, '즌')).first.toUInt()
2021-03-11 12:02:46,905 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:46,907 [main:56] - replacing (mutableListOf<ULong>(), MutableList<ULong>)
2021-03-11 12:02:46,907 [main:38] - replacing mutableListOf<ULong>() MutableList<ULong>
2021-03-11 12:02:46,907 [main:42] - Getting value of type MutableList<ULong>
2021-03-11 12:02:46,989 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-11 12:02:47,074 [main:43] - GENERATING CALL OF fun <T> MutableList(size: kotlin.Int, init: (index: kotlin.Int)->ULong): MutableList<ULong> = TODO()
2021-03-11 12:02:47,075 [main:61] - WITHOUT TYPE PARAMS = fun <T> MutableList(size: kotlin.Int, init: (index: kotlin.Int)->ULong): MutableList<ULong> = TODO()
2021-03-11 12:02:47,357 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:02:47,357 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, ULong> false depth = 3
2021-03-11 12:02:47,357 [main:302] - generating value of type = ULong true depth = 4
2021-03-11 12:02:47,358 [main:95] - GENERATED = MutableList<ULong>(1835489257, {a: Int -> 266177405861405945.toULong()})
2021-03-11 12:02:47,358 [main:46] - GENERATED VALUE OF TYPE MutableList<ULong> = MutableList<ULong>(1835489257, {a: Int -> 266177405861405945.toULong()})
2021-03-11 12:02:47,358 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:47,442 [main:55] - randomType = Char
2021-03-11 12:02:47,524 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:02:47,549 [main:94] - GETTING MutableList<ULong> from ULongProgression
2021-03-11 12:02:47,562 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:47,562 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:47,562 [main:105] - GENERATED CALL = (ulongProgression).toMutableList()
2021-03-11 12:02:47,562 [main:63] - replacement of mutableListOf<ULong>() of type MutableList<ULong> is (ulongProgression).toMutableList()
2021-03-11 12:02:47,644 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:02:47,644 [main:66] - Compilation checking started
2021-03-11 12:02:47,854 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = (ulongProgression).toMutableList()
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:47,855 [main:56] - replacing (mutableListOf<ULong>(), MutableList<ULong>)
2021-03-11 12:02:47,855 [main:38] - replacing mutableListOf<ULong>() MutableList<ULong>
2021-03-11 12:02:47,855 [main:42] - Getting value of type MutableList<ULong>
2021-03-11 12:02:47,937 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-11 12:02:48,024 [main:43] - GENERATING CALL OF fun <T> mutableListOf(elements: ULong): MutableList<ULong> = TODO()
2021-03-11 12:02:48,025 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(elements: ULong): MutableList<ULong> = TODO()
2021-03-11 12:02:48,109 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:02:48,109 [main:95] - GENERATED = mutableListOf<ULong>(7566546976130795339.toULong())
2021-03-11 12:02:48,109 [main:46] - GENERATED VALUE OF TYPE MutableList<ULong> = mutableListOf<ULong>(7566546976130795339.toULong())
2021-03-11 12:02:48,109 [main:49] - GENERATED IS CALL =true
2021-03-11 12:02:48,363 [main:55] - randomType = LinkedHashSet<Double>
2021-03-11 12:02:48,445 [main:302] - generating value of type = LinkedHashSet<Double> false depth = 0
2021-03-11 12:02:48,531 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Double): LkedHashSet<Double> = TODO()
2021-03-11 12:02:48,532 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Double): LkedHashSet<Double> = TODO()
2021-03-11 12:02:48,616 [main:302] - generating value of type = Double true depth = 3
2021-03-11 12:02:48,616 [main:95] - GENERATED = linkedSetOf<Double>(0.5486721191267655)
2021-03-11 12:02:48,764 [main:94] - GETTING MutableList<ULong> from UIntProgression
2021-03-11 12:02:48,780 [main:94] - GETTING MutableList<ULong> from ULongProgression
2021-03-11 12:02:48,794 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:02:48,794 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:02:48,794 [main:105] - GENERATED CALL = (ulongProgression).toMutableList()
2021-03-11 12:02:48,794 [main:63] - replacement of mutableListOf<ULong>() of type MutableList<ULong> is mutableListOf<ULong>(7566546976130795339.toULong())
2021-03-11 12:02:48,879 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:02:48,880 [main:66] - Compilation checking started
2021-03-11 12:02:49,213 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1542276457, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:49,305 [main:90] - TRYING TO REPLACE CONSTANT 1542276457
2021-03-11 12:02:49,386 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:49,386 [main:66] - Compilation checking started
2021-03-11 12:02:49,730 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1079481874, {a: Int -> 101486349.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:49,731 [main:90] - TRYING TO REPLACE CONSTANT 101486349
2021-03-11 12:02:49,814 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:49,814 [main:66] - Compilation checking started
2021-03-11 12:02:50,168 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(2092458601)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:50,169 [main:90] - TRYING TO REPLACE CONSTANT 2092458601
2021-03-11 12:02:50,253 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:50,254 [main:66] - Compilation checking started
2021-03-11 12:02:50,594 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(24991.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:50,594 [main:90] - TRYING TO REPLACE CONSTANT 24991
2021-03-11 12:02:50,692 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:50,692 [main:66] - Compilation checking started
2021-03-11 12:02:51,049 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(106.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:51,049 [main:90] - TRYING TO REPLACE CONSTANT 22203
2021-03-11 12:02:51,133 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:51,133 [main:66] - Compilation checking started
2021-03-11 12:02:51,478 [main:90] - TRYING TO REPLACE CONSTANT 106
2021-03-11 12:02:51,559 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:51,559 [main:66] - Compilation checking started
2021-03-11 12:02:51,879 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(5493256787928450474.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:51,879 [main:90] - TRYING TO REPLACE CONSTANT 5493256787928450474
2021-03-11 12:02:51,962 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:51,962 [main:66] - Compilation checking started
2021-03-11 12:02:52,293 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(80807937.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:52,293 [main:90] - TRYING TO REPLACE CONSTANT 80807937
2021-03-11 12:02:52,376 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:52,376 [main:66] - Compilation checking started
2021-03-11 12:02:52,700 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(4753980416103278681.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:52,701 [main:90] - TRYING TO REPLACE CONSTANT 4753980416103278681
2021-03-11 12:02:52,828 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:52,828 [main:66] - Compilation checking started
2021-03-11 12:02:53,140 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(90362397.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:53,140 [main:90] - TRYING TO REPLACE CONSTANT 4478790838590408090
2021-03-11 12:02:53,224 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:53,224 [main:66] - Compilation checking started
2021-03-11 12:02:53,536 [main:90] - TRYING TO REPLACE CONSTANT null
2021-03-11 12:02:53,624 [main:33] - Trying to replace Element(NULL) on Element(NULL)
2021-03-11 12:02:53,624 [main:66] - Compilation checking started
2021-03-11 12:02:53,960 [main:90] - TRYING TO REPLACE CONSTANT 90362397
2021-03-11 12:02:54,047 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:54,047 [main:66] - Compilation checking started
2021-03-11 12:02:54,383 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(1079481874.toUInt())
    val uintProgression = UIntRange(1079481874.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:54,383 [main:90] - TRYING TO REPLACE CONSTANT 1079481874
2021-03-11 12:02:54,480 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:54,480 [main:66] - Compilation checking started
2021-03-11 12:02:54,800 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(1079481874.toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 1854871123.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:54,801 [main:90] - TRYING TO REPLACE CONSTANT 1854871123
2021-03-11 12:02:54,901 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:54,901 [main:66] - Compilation checking started
2021-03-11 12:02:55,223 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(1079481874.toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(7566546976130795339.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:55,223 [main:90] - TRYING TO REPLACE CONSTANT 7566546976130795339
2021-03-11 12:02:55,306 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:02:55,306 [main:66] - Compilation checking started
2021-03-11 12:02:55,613 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(1079481874.toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step(90362397)) {
        MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:02:55,641 [main:46] - AFTER TRY 0 res = import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}
2021-03-11 12:02:55,934 [main:48] - Try №0
2021-03-11 12:02:57,179 [main:71] - Trying to insert public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()
2021-03-11 12:02:57,281 [main:66] - Compilation checking started
2021-03-11 12:02:57,838 [main:99] - Trying to change 11 nodes
2021-03-11 12:02:57,839 [main:103] - replacing (fu2<String>(), Function0<String>)
2021-03-11 12:02:57,841 [main:38] - replacing fu2<String>() Function0<String>
2021-03-11 12:02:57,841 [main:42] - Getting value of type Function0<String>
2021-03-11 12:02:57,927 [main:302] - generating value of type = Function0<String> false depth = 0
2021-03-11 12:02:57,928 [main:302] - generating value of type = String true depth = 1
2021-03-11 12:02:57,928 [main:46] - GENERATED VALUE OF TYPE Function0<String> = { "ebdjj"}
2021-03-11 12:02:57,928 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:57,929 [main:55] - randomType = Int
2021-03-11 12:02:58,027 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:02:58,071 [main:94] - GETTING Function0<String> from UIntProgression
2021-03-11 12:02:58,085 [main:94] - GETTING Function0<String> from ULongProgression
2021-03-11 12:02:58,099 [main:110] - replacement of fu2<String>() of type Function0<String> is { "ebdjj"}
2021-03-11 12:02:58,187 [main:33] - Trying to replace Element(CALL_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 12:02:58,187 [main:66] - Compilation checking started
2021-03-11 12:02:58,526 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run(tasksFactory)
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = fu0<Ty0, String>() {"OK"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}


2021-03-11 12:02:58,527 [main:103] - replacing ({"OK"}, Function0<String>)
2021-03-11 12:02:58,527 [main:38] - replacing {"OK"} Function0<String>
2021-03-11 12:02:58,527 [main:42] - Getting value of type Function0<String>
2021-03-11 12:02:58,635 [main:302] - generating value of type = Function0<String> false depth = 0
2021-03-11 12:02:58,636 [main:302] - generating value of type = String true depth = 1
2021-03-11 12:02:58,636 [main:46] - GENERATED VALUE OF TYPE Function0<String> = { "qxarm"}
2021-03-11 12:02:58,636 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:58,723 [main:55] - randomType = UByte
2021-03-11 12:02:58,806 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:02:58,832 [main:94] - GETTING Function0<String> from UIntProgression
2021-03-11 12:02:58,846 [main:94] - GETTING Function0<String> from ULongProgression
2021-03-11 12:02:58,857 [main:110] - replacement of {"OK"} of type Function0<String> is { "qxarm"}
2021-03-11 12:02:58,961 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:02:58,962 [main:66] - Compilation checking started
2021-03-11 12:02:59,287 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run(tasksFactory)
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = fu0<Ty0, String>() { "qxarm"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}


2021-03-11 12:02:59,287 [main:103] - replacing (tasksFactory, Function0<Ty1>)
2021-03-11 12:02:59,287 [main:38] - replacing tasksFactory Function0<Ty1>
2021-03-11 12:02:59,287 [main:42] - Getting value of type Function0<Ty1>
2021-03-11 12:02:59,372 [main:302] - generating value of type = Function0<Ty1> false depth = 0
2021-03-11 12:02:59,372 [main:46] - GENERATED VALUE OF TYPE Function0<Ty1> = { null}
2021-03-11 12:02:59,372 [main:49] - GENERATED IS CALL =false
2021-03-11 12:02:59,541 [main:55] - randomType = UByte?
2021-03-11 12:02:59,622 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:02:59,656 [main:94] - GETTING Function0<Ty1> from UIntProgression
2021-03-11 12:02:59,668 [main:94] - GETTING Function0<Ty1> from ULongProgression
2021-03-11 12:02:59,680 [main:110] - replacement of tasksFactory of type Function0<Ty1> is { null}
2021-03-11 12:02:59,761 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 12:02:59,761 [main:66] - Compilation checking started
2021-03-11 12:03:00,087 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ null})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = fu0<Ty0, String>() { "qxarm"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}


2021-03-11 12:03:00,087 [main:103] - replacing (f, Function0<Ty1>)
2021-03-11 12:03:00,088 [main:38] - replacing f Function0<Ty1>
2021-03-11 12:03:00,088 [main:42] - Getting value of type Function0<Ty1>
2021-03-11 12:03:00,175 [main:302] - generating value of type = Function0<Ty1> false depth = 0
2021-03-11 12:03:00,176 [main:302] - generating value of type = Ty1 false depth = 1
2021-03-11 12:03:00,179 [main:46] - GENERATED VALUE OF TYPE Function0<Ty1> = { }
2021-03-11 12:03:00,179 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:00,275 [main:55] - randomType = Byte
2021-03-11 12:03:00,368 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:03:00,414 [main:94] - GETTING Function0<Ty1> from ULongProgression
2021-03-11 12:03:00,430 [main:94] - GETTING Function0<Ty1> from UIntProgression
2021-03-11 12:03:00,442 [main:110] - replacement of f of type Function0<Ty1> is { }
2021-03-11 12:03:00,525 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 12:03:00,525 [main:66] - Compilation checking started
2021-03-11 12:03:00,738 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ null})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = { }()

inline fun <reified Ty0> fu2() = fu0<Ty0, String>() { "qxarm"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}


2021-03-11 12:03:00,738 [main:103] - replacing (run({ null}), Ty1)
2021-03-11 12:03:00,738 [main:38] - replacing run({ null}) Ty1
2021-03-11 12:03:00,738 [main:42] - Getting value of type Ty1
2021-03-11 12:03:00,824 [main:302] - generating value of type = Ty1 false depth = 0
2021-03-11 12:03:00,827 [main:46] - GENERATED VALUE OF TYPE Ty1 = 
2021-03-11 12:03:00,938 [main:55] - randomType = Short
2021-03-11 12:03:01,024 [main:302] - generating value of type = Short true depth = 0
2021-03-11 12:03:01,077 [main:94] - GETTING Ty1 from UIntProgression
2021-03-11 12:03:01,096 [main:94] - GETTING Ty1 from ULongProgression
2021-03-11 12:03:01,110 [main:107] - Cant find and generate replacement for run({ null}) type Ty1
2021-03-11 12:03:01,110 [main:103] - replacing (fu0<Ty0, String>() { "qxarm"}, Function0<String>)
2021-03-11 12:03:01,110 [main:38] - replacing fu0<Ty0, String>() { "qxarm"} Function0<String>
2021-03-11 12:03:01,110 [main:42] - Getting value of type Function0<String>
2021-03-11 12:03:01,191 [main:302] - generating value of type = Function0<String> false depth = 0
2021-03-11 12:03:01,191 [main:302] - generating value of type = String true depth = 1
2021-03-11 12:03:01,191 [main:46] - GENERATED VALUE OF TYPE Function0<String> = { "kxpjp"}
2021-03-11 12:03:01,191 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:01,275 [main:55] - randomType = UInt?
2021-03-11 12:03:01,354 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:03:01,392 [main:94] - GETTING Function0<String> from UIntProgression
2021-03-11 12:03:01,407 [main:94] - GETTING Function0<String> from ULongProgression
2021-03-11 12:03:01,419 [main:110] - replacement of fu0<Ty0, String>() { "qxarm"} of type Function0<String> is { "kxpjp"}
2021-03-11 12:03:01,499 [main:33] - Trying to replace Element(CALL_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 12:03:01,499 [main:66] - Compilation checking started
2021-03-11 12:03:01,803 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ null})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}


2021-03-11 12:03:01,803 [main:103] - replacing (run({ null}), Ty1)
2021-03-11 12:03:01,803 [main:38] - replacing run({ null}) Ty1
2021-03-11 12:03:01,803 [main:42] - Getting value of type Ty1
2021-03-11 12:03:01,885 [main:302] - generating value of type = Ty1 false depth = 0
2021-03-11 12:03:01,888 [main:46] - GENERATED VALUE OF TYPE Ty1 = 
2021-03-11 12:03:02,064 [main:55] - randomType = Map<Int, Double>
2021-03-11 12:03:02,065 [main:94] - GETTING Ty1 from ULongProgression
2021-03-11 12:03:02,083 [main:94] - GETTING Ty1 from UIntProgression
2021-03-11 12:03:02,095 [main:107] - Cant find and generate replacement for run({ null}) type Ty1
2021-03-11 12:03:02,095 [main:103] - replacing (null is Ty0, Boolean)
2021-03-11 12:03:02,096 [main:38] - replacing null is Ty0 Boolean
2021-03-11 12:03:02,096 [main:42] - Getting value of type Boolean
2021-03-11 12:03:02,175 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:02,175 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 12:03:02,175 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:02,176 [main:55] - randomType = ULong
2021-03-11 12:03:02,258 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:03:02,284 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2da13ea]
2021-03-11 12:03:02,284 [main:137] - GENERATING call of type public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@647aa680]
2021-03-11 12:03:02,284 [main:66] - Generated call from random type = (1084711265840444327.toULong()).toFloat().isNaN()
2021-03-11 12:03:02,285 [main:94] - GETTING Boolean from ULongProgression
2021-03-11 12:03:02,298 [main:101] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b5375e0]]
2021-03-11 12:03:02,298 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b5375e0]
2021-03-11 12:03:02,378 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:03:02,378 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:03:02,379 [main:105] - GENERATED CALL = (ulongProgression).all({a: T -> false})
2021-03-11 12:03:02,379 [main:101] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@6403f96]]
2021-03-11 12:03:02,379 [main:137] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@6403f96]
2021-03-11 12:03:02,379 [main:105] - GENERATED CALL = (ulongProgression).isEmpty()
2021-03-11 12:03:02,379 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@3e486c24], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4b6be6fc]]
2021-03-11 12:03:02,379 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@3e486c24]
2021-03-11 12:03:02,463 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:02,463 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4b6be6fc]
2021-03-11 12:03:02,546 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:02,547 [main:105] - GENERATED CALL = (ulongProgression).equals("lqfow").or(true)
2021-03-11 12:03:02,547 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@3e486c24], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1a4323ac]]
2021-03-11 12:03:02,547 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@3e486c24]
2021-03-11 12:03:02,630 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:02,630 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1a4323ac]
2021-03-11 12:03:02,754 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:02,755 [main:105] - GENERATED CALL = (ulongProgression).equals("eldwi").and(true)
2021-03-11 12:03:02,755 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cd2a401]]
2021-03-11 12:03:02,755 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cd2a401]
2021-03-11 12:03:02,755 [main:105] - GENERATED CALL = (ulongProgression).none()
2021-03-11 12:03:02,755 [main:101] - Case = [public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1f70ab49]]
2021-03-11 12:03:02,755 [main:137] - GENERATING call of type public operator fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.contains(element: T): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1f70ab49]
2021-03-11 12:03:02,837 [main:302] - generating value of type = T false depth = 0
2021-03-11 12:03:02,920 [main:43] - GENERATING CALL OF fun <T> enumValueOf(name: kotlin.String): T = TODO()
2021-03-11 12:03:02,921 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValueOf(name: kotlin.String): T = TODO()
2021-03-11 12:03:03,086 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:03:03,086 [main:95] - GENERATED = enumValueOf<Enum<T>>("yakkm")
2021-03-11 12:03:03,087 [main:105] - GENERATED CALL = (ulongProgression).contains(enumValueOf<Enum<T>>("yakkm"))
2021-03-11 12:03:03,087 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@d2cfdc2], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@56320892]]
2021-03-11 12:03:03,087 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@56320892]
2021-03-11 12:03:03,168 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:03,169 [main:105] - GENERATED CALL = (ulongProgression).step.equals("dyvze")
2021-03-11 12:03:03,169 [main:101] - Case = [public open fun iterator(): kotlin.collections.ULongIterator defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@22d15ea0], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.ULongIterator[DeserializedSimpleFunctionDescriptor@5dec3406]]
2021-03-11 12:03:03,169 [main:137] - GENERATING call of type public open fun iterator(): kotlin.collections.ULongIterator defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@22d15ea0]
2021-03-11 12:03:03,169 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.ULongIterator[DeserializedSimpleFunctionDescriptor@5dec3406]
2021-03-11 12:03:03,250 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:03,251 [main:105] - GENERATED CALL = (ulongProgression).iterator().equals("tjuuk")
2021-03-11 12:03:03,251 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@3e486c24], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5b14131]]
2021-03-11 12:03:03,251 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongProgression[DeserializedSimpleFunctionDescriptor@3e486c24]
2021-03-11 12:03:03,330 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:03,330 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5b14131]
2021-03-11 12:03:03,331 [main:105] - GENERATED CALL = (ulongProgression).equals("yhhwb").not()
2021-03-11 12:03:03,331 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@157303d9]]
2021-03-11 12:03:03,331 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@157303d9]
2021-03-11 12:03:03,331 [main:105] - GENERATED CALL = (ulongProgression).any()
2021-03-11 12:03:03,331 [main:110] - replacement of null is Ty0 of type Boolean is (ulongProgression).step.equals("dyvze")
2021-03-11 12:03:03,409 [main:33] - Trying to replace Element(IS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:03,410 [main:66] - Compilation checking started
2021-03-11 12:03:03,595 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    (ulongProgression).step.equals("dyvze")
    run({ null})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}


2021-03-11 12:03:03,677 [main:137] - TRYING TO REPLACE CONSTANT null
2021-03-11 12:03:03,756 [main:33] - Trying to replace Element(NULL) on Element(CALL_EXPRESSION)
2021-03-11 12:03:03,756 [main:66] - Compilation checking started
2021-03-11 12:03:04,069 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}


2021-03-11 12:03:04,069 [main:46] - AFTER TRY 1 res = import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}


2021-03-11 12:03:04,400 [main:43] - GENERATING CALL OF inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:03:04,864 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Pair<ULong, List<UShort?>>?) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:03:05,037 [main:302] - generating value of type = Function0<Pair<ULong, List<UShort?>>?> false depth = 1
2021-03-11 12:03:05,037 [main:302] - generating value of type = Pair<ULong, List<UShort?>> false depth = 2
2021-03-11 12:03:05,125 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: ULong, second: List<UShort?>): Pair<ULong, List<UShort?>> = TODO()
2021-03-11 12:03:05,126 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: ULong, second: List<UShort?>): Pair<ULong, List<UShort?>> = TODO()
2021-03-11 12:03:05,207 [main:302] - generating value of type = ULong true depth = 5
2021-03-11 12:03:05,208 [main:302] - generating value of type = List<UShort?> false depth = 5
2021-03-11 12:03:05,294 [main:43] - GENERATING CALL OF fun <E> ArrayList(elements: kotlin.collections.Collection<UShort?>): List<UShort?> = TODO()
2021-03-11 12:03:05,295 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(elements: kotlin.collections.Collection<UShort?>): List<UShort?> = TODO()
2021-03-11 12:03:05,459 [main:302] - generating value of type = Collection<UShort?> false depth = 8
2021-03-11 12:03:05,543 [main:43] - GENERATING CALL OF fun <T> emptyList(): Collection<UShort?> = TODO()
2021-03-11 12:03:05,544 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyList(): Collection<UShort?> = TODO()
2021-03-11 12:03:05,625 [main:95] - GENERATED = emptyList<UShort?>()
2021-03-11 12:03:05,625 [main:95] - GENERATED = ArrayList<UShort?>(emptyList<UShort?>())
2021-03-11 12:03:05,625 [main:95] - GENERATED = Pair<ULong, List<UShort?>>(3095908632710246729.toULong(), ArrayList<UShort?>(emptyList<UShort?>()))
2021-03-11 12:03:05,626 [main:95] - GENERATED = fu0<Long, Pair<ULong, List<UShort?>>?>({ Pair<ULong, List<UShort?>>(3095908632710246729.toULong(), ArrayList<UShort?>(emptyList<UShort?>()))})
2021-03-11 12:03:05,705 [main:43] - GENERATING CALL OF public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()
2021-03-11 12:03:05,707 [main:61] - WITHOUT TYPE PARAMS = public inline fun <Ty1> fu1(f: () -> Boolean): Boolean = f()
2021-03-11 12:03:05,871 [main:302] - generating value of type = Function0<Boolean> false depth = 1
2021-03-11 12:03:05,871 [main:302] - generating value of type = Boolean true depth = 2
2021-03-11 12:03:05,872 [main:95] - GENERATED = fu1<Boolean>({ false})
2021-03-11 12:03:05,951 [main:43] - GENERATING CALL OF inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:03:06,155 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:03:06,244 [main:95] - GENERATED = fu2<Triple<Boolean, Char, Int>>()
2021-03-11 12:03:06,360 [main:48] - Try №1
2021-03-11 12:03:07,133 [main:71] - Trying to insert fun fu3(arg:Int, f :  () -> Int) : Int {
    return arg + f()
}
2021-03-11 12:03:07,223 [main:66] - Compilation checking started
2021-03-11 12:03:07,758 [main:99] - Trying to change 20 nodes
2021-03-11 12:03:07,758 [main:103] - replacing ("OK", String)
2021-03-11 12:03:07,760 [main:38] - replacing "OK" String
2021-03-11 12:03:07,760 [main:42] - Getting value of type String
2021-03-11 12:03:07,850 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:03:07,851 [main:46] - GENERATED VALUE OF TYPE String = "dggbo"
2021-03-11 12:03:07,851 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:07,854 [main:55] - randomType = Int
2021-03-11 12:03:07,975 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:08,005 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd]
2021-03-11 12:03:08,005 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]
2021-03-11 12:03:08,097 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:08,099 [main:66] - Generated call from random type = (-232719054).toByte().toString(-1421884419)
2021-03-11 12:03:08,100 [main:94] - GETTING String from Function0<String>
2021-03-11 12:03:08,111 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]]
2021-03-11 12:03:08,111 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:08,112 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke()
2021-03-11 12:03:08,112 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@17ce9bbc]]
2021-03-11 12:03:08,112 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:08,112 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@17ce9bbc]
2021-03-11 12:03:08,112 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().trim()
2021-03-11 12:03:08,112 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]]
2021-03-11 12:03:08,112 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:08,113 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]
2021-03-11 12:03:08,113 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().trimEnd()
2021-03-11 12:03:08,113 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e1e5232]]
2021-03-11 12:03:08,113 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:08,113 [main:137] - GENERATING call of type public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e1e5232]
2021-03-11 12:03:08,201 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 12:03:08,202 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:03:08,203 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false})
2021-03-11 12:03:08,203 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@553802ac]]
2021-03-11 12:03:08,203 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:08,203 [main:137] - GENERATING call of type public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@553802ac]
2021-03-11 12:03:08,290 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:03:08,378 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:03:08,379 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().replaceIndentByMargin("pwgws", "sesae")
2021-03-11 12:03:08,379 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2ce534ab]]
2021-03-11 12:03:08,379 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:08,379 [main:137] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2ce534ab]
2021-03-11 12:03:08,467 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:03:08,556 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:03:08,643 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:08,644 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().replace('䣭', '渥', false)
2021-03-11 12:03:08,644 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b8f48dd]]
2021-03-11 12:03:08,644 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:08,645 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b8f48dd]
2021-03-11 12:03:08,730 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-11 12:03:08,829 [main:43] - GENERATING CALL OF fun <T> listOfNotNull(element: Int): Iterable<Int> = TODO()
2021-03-11 12:03:08,831 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOfNotNull(element: Int): Iterable<Int> = TODO()
2021-03-11 12:03:08,920 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:03:08,921 [main:95] - GENERATED = listOfNotNull<Int>(-708868424)
2021-03-11 12:03:08,921 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().slice(listOfNotNull<Int>(-708868424))
2021-03-11 12:03:08,921 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6722b236]]
2021-03-11 12:03:08,921 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:08,921 [main:137] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6722b236]
2021-03-11 12:03:09,007 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:03:09,008 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().trimMargin("hkitw")
2021-03-11 12:03:09,008 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d8ba384]]
2021-03-11 12:03:09,008 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:09,008 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d8ba384]
2021-03-11 12:03:09,008 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().reversed()
2021-03-11 12:03:09,008 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2aca670]]
2021-03-11 12:03:09,008 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:09,008 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2aca670]
2021-03-11 12:03:09,094 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:09,179 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:09,180 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().removeRange(523039817, 2108004068)
2021-03-11 12:03:09,180 [main:110] - replacement of "OK" of type String is (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false})
2021-03-11 12:03:09,266 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:09,266 [main:66] - Compilation checking started
2021-03-11 12:03:09,673 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 39
    return if (fu3(200, { val prope1 = { val prope2 = { prope0 };  prope2() }; prope1() }) == 239) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL"
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    return arg + f()
}


2021-03-11 12:03:09,673 [main:103] - replacing (39, Int)
2021-03-11 12:03:09,673 [main:38] - replacing 39 Int
2021-03-11 12:03:09,673 [main:42] - Getting value of type Int
2021-03-11 12:03:09,818 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:09,819 [main:46] - GENERATED VALUE OF TYPE Int = -1677292022
2021-03-11 12:03:09,819 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:10,138 [main:55] - randomType = HashMap<ULong, UByte>
2021-03-11 12:03:10,227 [main:302] - generating value of type = HashMap<ULong, UByte> false depth = 0
2021-03-11 12:03:10,320 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): HashMap<ULong, UByte> = TODO()
2021-03-11 12:03:10,321 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): HashMap<ULong, UByte> = TODO()
2021-03-11 12:03:10,415 [main:95] - GENERATED = linkedMapOf<ULong, UByte>()
2021-03-11 12:03:10,534 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6f525793]
2021-03-11 12:03:10,622 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:03:10,623 [main:66] - Generated call from random type = (linkedMapOf<ULong, UByte>()).size.rem(-59)
2021-03-11 12:03:10,624 [main:94] - GETTING Int from Function0<Nothing?>
2021-03-11 12:03:10,640 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]]
2021-03-11 12:03:10,640 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]
2021-03-11 12:03:10,728 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:10,728 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]
2021-03-11 12:03:10,824 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:10,825 [main:105] - GENERATED CALL = (fu0<Long, Pair<ULong, List<UShort?>>?>({ Pair<ULong, List<UShort?>>(3095908632710246729.toULong(), ArrayList<UShort?>(emptyList<UShort?>()))})).equals("yyosq").compareTo(true)
2021-03-11 12:03:10,825 [main:110] - replacement of 39 of type Int is -1677292022
2021-03-11 12:03:10,915 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 12:03:10,915 [main:66] - Compilation checking started
2021-03-11 12:03:11,259 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = -1677292022
    return if (fu3(200, { val prope1 = { val prope2 = { prope0 };  prope2() }; prope1() }) == 239) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL"
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    return arg + f()
}


2021-03-11 12:03:11,260 [main:103] - replacing (prope0, Int)
2021-03-11 12:03:11,260 [main:38] - replacing prope0 Int
2021-03-11 12:03:11,260 [main:42] - Getting value of type Int
2021-03-11 12:03:11,351 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:11,351 [main:46] - GENERATED VALUE OF TYPE Int = 807485155
2021-03-11 12:03:11,351 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:11,353 [main:55] - randomType = Char
2021-03-11 12:03:11,441 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:03:11,470 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@56b7fcf6]
2021-03-11 12:03:11,569 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:03:11,570 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@13767944]
2021-03-11 12:03:11,667 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:03:11,668 [main:66] - Generated call from random type = ('푥').compareTo('潟').div(75)
2021-03-11 12:03:11,669 [main:94] - GETTING Int from UIntProgression
2021-03-11 12:03:11,693 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@19294edd], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2867e79]]
2021-03-11 12:03:11,693 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2867e79]
2021-03-11 12:03:11,823 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:11,824 [main:105] - GENERATED CALL = (uintProgression).step.shl(1665452424)
2021-03-11 12:03:11,824 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@19294edd], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5197d8bd]]
2021-03-11 12:03:11,824 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5197d8bd]
2021-03-11 12:03:11,914 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:11,915 [main:105] - GENERATED CALL = (uintProgression).step.xor(1405587344)
2021-03-11 12:03:11,915 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@77c9cc6b], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6c748330]]
2021-03-11 12:03:11,915 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6c748330]
2021-03-11 12:03:11,915 [main:105] - GENERATED CALL = (uintProgression).first.countTrailingZeroBits()
2021-03-11 12:03:11,915 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@19294edd], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@784ec44d]]
2021-03-11 12:03:11,916 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@784ec44d]
2021-03-11 12:03:11,916 [main:105] - GENERATED CALL = (uintProgression).step.inv()
2021-03-11 12:03:11,916 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@19294edd], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2402f553]]
2021-03-11 12:03:11,916 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2402f553]
2021-03-11 12:03:12,010 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:03:12,011 [main:105] - GENERATED CALL = (uintProgression).step.plus(-112)
2021-03-11 12:03:12,011 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e60caa4]]
2021-03-11 12:03:12,011 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e60caa4]
2021-03-11 12:03:12,011 [main:105] - GENERATED CALL = (uintProgression).sum()
2021-03-11 12:03:12,012 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@19294edd], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@194c02c3]]
2021-03-11 12:03:12,012 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@194c02c3]
2021-03-11 12:03:12,012 [main:105] - GENERATED CALL = (uintProgression).step.toInt()
2021-03-11 12:03:12,012 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@16c6eee1], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]]
2021-03-11 12:03:12,012 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.UIntProgression[DeserializedSimpleFunctionDescriptor@16c6eee1]
2021-03-11 12:03:12,100 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:12,101 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]
2021-03-11 12:03:12,188 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:12,189 [main:105] - GENERATED CALL = (uintProgression).equals("mlumo").compareTo(false)
2021-03-11 12:03:12,189 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@19294edd], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@136468c]]
2021-03-11 12:03:12,190 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@136468c]
2021-03-11 12:03:12,276 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:12,277 [main:105] - GENERATED CALL = (uintProgression).step.or(-121096237)
2021-03-11 12:03:12,277 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@19294edd], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1c8f1c73]]
2021-03-11 12:03:12,277 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1c8f1c73]
2021-03-11 12:03:12,278 [main:105] - GENERATED CALL = (uintProgression).step.takeLowestOneBit()
2021-03-11 12:03:12,278 [main:110] - replacement of prope0 of type Int is ('푥').compareTo('潟').div(75)
2021-03-11 12:03:12,374 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:12,375 [main:66] - Compilation checking started
2021-03-11 12:03:12,718 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = -1677292022
    return if (fu3(200, { val prope1 = { val prope2 = { ('푥').compareTo('潟').div(75) };  prope2() }; prope1() }) == 239) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL"
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    return arg + f()
}


2021-03-11 12:03:12,719 [main:103] - replacing (prope1, Function0<Int>)
2021-03-11 12:03:12,719 [main:38] - replacing prope1 Function0<Int>
2021-03-11 12:03:12,719 [main:42] - Getting value of type Function0<Int>
2021-03-11 12:03:12,814 [main:302] - generating value of type = Function0<Int> false depth = 0
2021-03-11 12:03:12,815 [main:302] - generating value of type = Int true depth = 1
2021-03-11 12:03:12,816 [main:46] - GENERATED VALUE OF TYPE Function0<Int> = { -1192608861}
2021-03-11 12:03:12,816 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:12,818 [main:55] - randomType = String
2021-03-11 12:03:12,906 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:03:12,936 [main:94] - GETTING Function0<Int> from Function0<String>
2021-03-11 12:03:12,950 [main:94] - GETTING Function0<Int> from Function0<Nothing?>
2021-03-11 12:03:12,966 [main:94] - GETTING Function0<Int> from UIntProgression
2021-03-11 12:03:12,984 [main:94] - GETTING Function0<Int> from Function0<String>
2021-03-11 12:03:12,985 [main:94] - GETTING Function0<Int> from ULongProgression
2021-03-11 12:03:13,002 [main:94] - GETTING Function0<Int> from Boolean
2021-03-11 12:03:13,010 [main:110] - replacement of prope1 of type Function0<Int> is { -1192608861}
2021-03-11 12:03:13,100 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 12:03:13,100 [main:66] - Compilation checking started
2021-03-11 12:03:13,475 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = -1677292022
    return if (fu3(200, { val prope1 = { val prope2 = { ('푥').compareTo('潟').div(75) };  prope2() }; { -1192608861}() }) == 239) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL"
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    return arg + f()
}


2021-03-11 12:03:13,476 [main:103] - replacing (prope2(), Int)
2021-03-11 12:03:13,476 [main:38] - replacing prope2() Int
2021-03-11 12:03:13,476 [main:42] - Getting value of type Int
2021-03-11 12:03:13,565 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:13,565 [main:46] - GENERATED VALUE OF TYPE Int = -1764939793
2021-03-11 12:03:13,566 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:13,761 [main:55] - randomType = HashMap<UShort, Boolean>
2021-03-11 12:03:13,892 [main:302] - generating value of type = HashMap<UShort, Boolean> false depth = 0
2021-03-11 12:03:13,986 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(pairs: Pair<UShort, Boolean>): HashMap<UShort, Boolean> = TODO()
2021-03-11 12:03:13,988 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(pairs: Pair<UShort, Boolean>): HashMap<UShort, Boolean> = TODO()
2021-03-11 12:03:14,079 [main:302] - generating value of type = Pair<UShort, Boolean> false depth = 3
2021-03-11 12:03:14,173 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: UShort, second: Boolean): Pair<UShort, Boolean> = TODO()
2021-03-11 12:03:14,174 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: UShort, second: Boolean): Pair<UShort, Boolean> = TODO()
2021-03-11 12:03:14,264 [main:302] - generating value of type = UShort true depth = 6
2021-03-11 12:03:14,265 [main:302] - generating value of type = Boolean true depth = 6
2021-03-11 12:03:14,266 [main:95] - GENERATED = Pair<UShort, Boolean>(27829.toUShort(), true)
2021-03-11 12:03:14,266 [main:95] - GENERATED = hashMapOf<UShort, Boolean>(Pair<UShort, Boolean>(27829.toUShort(), true))
2021-03-11 12:03:14,355 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ac731b5]
2021-03-11 12:03:14,443 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:14,444 [main:66] - Generated call from random type = (hashMapOf<UShort, Boolean>(Pair<UShort, Boolean>(27829.toUShort(), true))).size.ushr(772005279)
2021-03-11 12:03:14,445 [main:94] - GETTING Int from Function0<Nothing?>
2021-03-11 12:03:14,461 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]]
2021-03-11 12:03:14,461 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]
2021-03-11 12:03:14,547 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:14,547 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]
2021-03-11 12:03:14,633 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:14,634 [main:105] - GENERATED CALL = (fu0<Long, Pair<ULong, List<UShort?>>?>({ Pair<ULong, List<UShort?>>(3095908632710246729.toULong(), ArrayList<UShort?>(emptyList<UShort?>()))})).equals("hqtsf").compareTo(false)
2021-03-11 12:03:14,634 [main:110] - replacement of prope2() of type Int is (hashMapOf<UShort, Boolean>(Pair<UShort, Boolean>(27829.toUShort(), true))).size.ushr(772005279)
2021-03-11 12:03:14,721 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:14,721 [main:66] - Compilation checking started
2021-03-11 12:03:15,181 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = -1677292022
    return if (fu3(200, { val prope1 = { val prope2 = { ('푥').compareTo('潟').div(75) };  (hashMapOf<UShort, Boolean>(Pair<UShort, Boolean>(27829.toUShort(), true))).size.ushr(772005279) }; { -1192608861}() }) == 239) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL"
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    return arg + f()
}


2021-03-11 12:03:15,182 [main:103] - replacing (fu3(200, { val prope1 = { val prope2 = { ('푥').compareTo('潟').div(75) };  (hashMapOf<UShort, Boolean>(Pair<UShort, Boolean>(27829.toUShort(), true))).size.ushr(772005279) }; { -1192608861}() }) == 239, Boolean)
2021-03-11 12:03:15,182 [main:38] - replacing fu3(200, { val prope1 = { val prope2 = { ('푥').compareTo('潟').div(75) };  (hashMapOf<UShort, Boolean>(Pair<UShort, Boolean>(27829.toUShort(), true))).size.ushr(772005279) }; { -1192608861}() }) == 239 Boolean
2021-03-11 12:03:15,183 [main:42] - Getting value of type Boolean
2021-03-11 12:03:15,290 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:15,291 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 12:03:15,292 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:15,407 [main:55] - randomType = UByte
2021-03-11 12:03:15,513 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:03:15,550 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3896f928]
2021-03-11 12:03:15,642 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:15,642 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@76378274]
2021-03-11 12:03:15,741 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:15,742 [main:66] - Generated call from random type = (100.toUByte()).equals("zyhyc").equals("pzjyz")
2021-03-11 12:03:15,743 [main:94] - GETTING Boolean from Function0<String>
2021-03-11 12:03:15,756 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@74162b09]]
2021-03-11 12:03:15,756 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:15,757 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@74162b09]
2021-03-11 12:03:15,848 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:15,848 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().equals("yiver")
2021-03-11 12:03:15,848 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a08d7]]
2021-03-11 12:03:15,848 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:15,848 [main:137] - GENERATING call of type public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a08d7]
2021-03-11 12:03:15,939 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:03:16,070 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:16,072 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().endsWith("dhjee", true)
2021-03-11 12:03:16,072 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@65edb1b0]]
2021-03-11 12:03:16,072 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]
2021-03-11 12:03:16,164 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@65edb1b0]
2021-03-11 12:03:16,256 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:16,257 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).equals(null).xor(true)
2021-03-11 12:03:16,258 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5b14131]]
2021-03-11 12:03:16,258 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]
2021-03-11 12:03:16,348 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:16,348 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5b14131]
2021-03-11 12:03:16,348 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).equals("totpg").not()
2021-03-11 12:03:16,348 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@76378274]]
2021-03-11 12:03:16,348 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]
2021-03-11 12:03:16,437 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:16,438 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@76378274]
2021-03-11 12:03:16,526 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:16,526 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).equals("fjcdd").equals("bfawo")
2021-03-11 12:03:16,527 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4b6be6fc]]
2021-03-11 12:03:16,527 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]
2021-03-11 12:03:16,615 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:16,615 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4b6be6fc]
2021-03-11 12:03:16,709 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:16,710 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).equals("euprg").or(false)
2021-03-11 12:03:16,711 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e7b7d54]]
2021-03-11 12:03:16,711 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:16,711 [main:137] - GENERATING call of type public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e7b7d54]
2021-03-11 12:03:16,802 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:03:16,803 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().matches("omrmc")
2021-03-11 12:03:16,803 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1a4323ac]]
2021-03-11 12:03:16,803 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]
2021-03-11 12:03:16,896 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1a4323ac]
2021-03-11 12:03:16,990 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:16,991 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).equals(null).and(true)
2021-03-11 12:03:16,991 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]]
2021-03-11 12:03:16,991 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]
2021-03-11 12:03:17,080 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:17,080 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).equals("xmwxu")
2021-03-11 12:03:17,084 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9], @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@41e70f20]]
2021-03-11 12:03:17,084 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@35bcb0f9]
2021-03-11 12:03:17,084 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@41e70f20]
2021-03-11 12:03:17,084 [main:105] - GENERATED CALL = (fu2<Triple<Boolean, Char, Int>>()).invoke().toBoolean()
2021-03-11 12:03:17,084 [main:110] - replacement of fu3(200, { val prope1 = { val prope2 = { ('푥').compareTo('潟').div(75) };  (hashMapOf<UShort, Boolean>(Pair<UShort, Boolean>(27829.toUShort(), true))).size.ushr(772005279) }; { -1192608861}() }) == 239 of type Boolean is (fu2<Triple<Boolean, Char, Int>>()).invoke().toBoolean()
2021-03-11 12:03:17,173 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:17,173 [main:66] - Compilation checking started
2021-03-11 12:03:17,533 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = -1677292022
    return if ((fu2<Triple<Boolean, Char, Int>>()).invoke().toBoolean()) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL"
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    return arg + f()
}


2021-03-11 12:03:17,533 [main:103] - replacing (arg + f(), Int)
2021-03-11 12:03:17,535 [main:38] - replacing arg + f() Int
2021-03-11 12:03:17,536 [main:42] - Getting value of type Int
2021-03-11 12:03:17,647 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:17,648 [main:46] - GENERATED VALUE OF TYPE Int = 978986206
2021-03-11 12:03:17,648 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:18,098 [main:55] - randomType = Function1<Array<Boolean>, Float?>
2021-03-11 12:03:18,098 [main:94] - GETTING Int from Function0<String>
2021-03-11 12:03:18,107 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@23b9e5ee], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@66f2d3fa]]
2021-03-11 12:03:18,107 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@23b9e5ee]
2021-03-11 12:03:18,108 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().length
2021-03-11 12:03:18,108 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@23b9e5ee], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@71559ebe]]
2021-03-11 12:03:18,108 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@23b9e5ee]
2021-03-11 12:03:18,108 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@71559ebe]
2021-03-11 12:03:18,108 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().toInt()
2021-03-11 12:03:18,108 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]]
2021-03-11 12:03:18,108 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@343e86e9]
2021-03-11 12:03:18,233 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:03:18,233 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]
2021-03-11 12:03:18,319 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:18,320 [main:105] - GENERATED CALL = ({ "ebdjj"}).equals("dbxpz").compareTo(false)
2021-03-11 12:03:18,320 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@23b9e5ee], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2c7e9c26]]
2021-03-11 12:03:18,320 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@23b9e5ee]
2021-03-11 12:03:18,320 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2c7e9c26]
2021-03-11 12:03:18,410 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:03:18,506 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:03:18,507 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().compareTo("swjvg", false)
2021-03-11 12:03:18,507 [main:110] - replacement of arg + f() of type Int is ({ "ebdjj"}).invoke().toInt()
2021-03-11 12:03:18,601 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:18,602 [main:66] - Compilation checking started
2021-03-11 12:03:18,962 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = -1677292022
    return if ((fu2<Triple<Boolean, Char, Int>>()).invoke().toBoolean()) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL"
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:18,962 [main:103] - replacing (if ((fu2<Triple<Boolean, Char, Int>>()).invoke().toBoolean()) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL", String)
2021-03-11 12:03:18,963 [main:38] - replacing if ((fu2<Triple<Boolean, Char, Int>>()).invoke().toBoolean()) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL" String
2021-03-11 12:03:18,963 [main:42] - Getting value of type String
2021-03-11 12:03:19,050 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:03:19,051 [main:46] - GENERATED VALUE OF TYPE String = "ozbot"
2021-03-11 12:03:19,051 [main:49] - GENERATED IS CALL =false
2021-03-11 12:03:19,052 [main:55] - randomType = Int
2021-03-11 12:03:19,141 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:19,171 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:03:19,171 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]
2021-03-11 12:03:19,171 [main:66] - Generated call from random type = (-1779040768).toChar().uppercase()
2021-03-11 12:03:19,172 [main:94] - GETTING String from ULongProgression
2021-03-11 12:03:19,185 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@73774aa2], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:03:19,185 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:03:19,270 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:19,271 [main:105] - GENERATED CALL = (ulongProgression).step.toString(336916236)
2021-03-11 12:03:19,271 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:03:19,271 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:03:19,356 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:03:19,446 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:03:19,447 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:03:19,627 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:03:19,628 [main:95] - GENERATED = StringBuilder("ckodr")
2021-03-11 12:03:19,715 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:03:19,804 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:03:19,894 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:19,980 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:03:20,068 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:03:20,070 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:03:20,249 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 12:03:20,253 [main:95] - GENERATED = StringBuilder("lsqkt")
2021-03-11 12:03:20,381 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:03:20,381 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:03:20,385 [main:105] - GENERATED CALL = (ulongProgression).joinToString(StringBuilder("ckodr"), StringBuilder(), "kkbuw", -1647480609, StringBuilder("lsqkt"), {a: T -> "rnbid"})
2021-03-11 12:03:20,385 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@427029bb], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:03:20,385 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:03:20,471 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:03:20,472 [main:105] - GENERATED CALL = (ulongProgression).first.toString(-593531369)
2021-03-11 12:03:20,472 [main:110] - replacement of if ((fu2<Triple<Boolean, Char, Int>>()).invoke().toBoolean()) (fu2<Triple<Boolean, Char, Int>>()).invoke().filterNot({a: Char -> false}) else "FAIL" of type String is (ulongProgression).first.toString(-593531369)
2021-03-11 12:03:20,560 [main:33] - Trying to replace Element(IF) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:20,560 [main:66] - Compilation checking started
2021-03-11 12:03:20,877 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = -1677292022
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:20,961 [main:137] - TRYING TO REPLACE CONSTANT 1677292022
2021-03-11 12:03:21,044 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 12:03:21,044 [main:66] - Compilation checking started
2021-03-11 12:03:21,355 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:21,355 [main:137] - TRYING TO REPLACE CONSTANT 593531369
2021-03-11 12:03:21,445 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:03:21,446 [main:66] - Compilation checking started
2021-03-11 12:03:21,677 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(toInt())
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:21,677 [main:46] - AFTER TRY 2 res = import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:22,018 [main:43] - GENERATING CALL OF inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:03:22,290 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Long) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:03:22,470 [main:302] - generating value of type = Function0<Long> false depth = 1
2021-03-11 12:03:22,471 [main:302] - generating value of type = Long true depth = 2
2021-03-11 12:03:22,472 [main:95] - GENERATED = fu0<MutableMap<UShort, Char>, Long>({ -3169051573887046624})
2021-03-11 12:03:22,556 [main:43] - GENERATING CALL OF public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()
2021-03-11 12:03:22,676 [main:61] - WITHOUT TYPE PARAMS = public inline fun <Ty1> fu1(f: () -> UShort): UShort = f()
2021-03-11 12:03:22,850 [main:302] - generating value of type = Function0<UShort> false depth = 1
2021-03-11 12:03:22,851 [main:302] - generating value of type = UShort true depth = 2
2021-03-11 12:03:22,851 [main:95] - GENERATED = fu1<UShort>({ 16982.toUShort()})
2021-03-11 12:03:22,935 [main:43] - GENERATING CALL OF inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:03:23,664 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:03:23,750 [main:95] - GENERATED = fu2<Triple<Int, Function1<Char?, Function1<Int, Boolean?>>, HashSet<Boolean>>?>()
2021-03-11 12:03:23,834 [main:43] - GENERATING CALL OF fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}
2021-03-11 12:03:23,834 [main:61] - WITHOUT TYPE PARAMS = fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}
2021-03-11 12:03:24,010 [main:302] - generating value of type = Int true depth = 1
2021-03-11 12:03:24,010 [main:302] - generating value of type = Function0<Int> false depth = 1
2021-03-11 12:03:24,011 [main:302] - generating value of type = Int true depth = 2
2021-03-11 12:03:24,012 [main:95] - GENERATED = fu3(-1541603341, { -1321679980})
2021-03-11 12:03:24,106 [main:48] - Try №2
2021-03-11 12:03:24,401 [main:86] - Final res = import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:24,416 [main:26] - Trying to change some nodes to nodes from other programs 797 times
2021-03-11 12:03:24,416 [main:28] - Try №0 of 797
2021-03-11 12:03:24,426 [main:33] - Trying to replace Element(IMPORT_LIST) on Element(IMPORT_LIST)
2021-03-11 12:03:24,426 [main:66] - Compilation checking started
2021-03-11 12:03:24,659 [main:49] - Result = false
Text:


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:24,660 [main:28] - Try №1 of 797
2021-03-11 12:03:24,670 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:03:24,670 [main:66] - Compilation checking started
2021-03-11 12:03:24,895 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

private fun id(f: FunInterface): Any = f

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:24,895 [main:28] - Try №2 of 797
2021-03-11 12:03:24,920 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:03:24,921 [main:66] - Compilation checking started
2021-03-11 12:03:25,336 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:25,336 [main:28] - Try №3 of 797
2021-03-11 12:03:25,354 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(PARENTHESIZED)
2021-03-11 12:03:25,354 [main:66] - Compilation checking started
2021-03-11 12:03:25,570 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (D() as A<String>).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:25,570 [main:28] - Try №4 of 797
2021-03-11 12:03:25,584 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:03:25,585 [main:28] - Try №5 of 797
2021-03-11 12:03:25,602 [main:33] - Trying to replace Element(FOR) on Element(FOR)
2021-03-11 12:03:25,603 [main:66] - Compilation checking started
2021-03-11 12:03:25,839 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in ((charProgression step 2).reversed() step 3).reversed()) {
        charList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:25,839 [main:28] - Try №6 of 797
2021-03-11 12:03:25,843 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:25,843 [main:28] - Try №7 of 797
2021-03-11 12:03:25,851 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:25,851 [main:66] - Compilation checking started
2021-03-11 12:03:26,077 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return J().foo
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:26,077 [main:28] - Try №8 of 797
2021-03-11 12:03:26,089 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:03:26,089 [main:66] - Compilation checking started
2021-03-11 12:03:26,315 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : KTrait {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:26,315 [main:28] - Try №9 of 797
2021-03-11 12:03:26,321 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:03:26,321 [main:66] - Compilation checking started
2021-03-11 12:03:26,526 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(operator tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:26,527 [main:28] - Try №10 of 797
2021-03-11 12:03:26,532 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:26,533 [main:66] - Compilation checking started
2021-03-11 12:03:26,731 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val result = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:26,731 [main:28] - Try №11 of 797
2021-03-11 12:03:26,751 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:26,752 [main:66] - Compilation checking started
2021-03-11 12:03:27,031 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = String<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:27,031 [main:28] - Try №12 of 797
2021-03-11 12:03:27,041 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:27,042 [main:66] - Compilation checking started
2021-03-11 12:03:27,407 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:03:27,407 [main:28] - Try №13 of 797
2021-03-11 12:03:27,421 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:03:27,421 [main:66] - Compilation checking started
2021-03-11 12:03:27,844 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:27,844 [main:28] - Try №14 of 797
2021-03-11 12:03:27,865 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:03:27,866 [main:28] - Try №15 of 797
2021-03-11 12:03:27,881 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:27,881 [main:66] - Compilation checking started
2021-03-11 12:03:28,093 [main:49] - Result = false
Text:
import kotlin.Arr.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:28,093 [main:28] - Try №16 of 797
2021-03-11 12:03:28,110 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:28,110 [main:66] - Compilation checking started
2021-03-11 12:03:28,335 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val box = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:28,335 [main:28] - Try №17 of 797
2021-03-11 12:03:28,345 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:03:28,345 [main:66] - Compilation checking started
2021-03-11 12:03:28,568 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

fun box(): String{
    f()
    return "OK"
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:28,568 [main:28] - Try №18 of 797
2021-03-11 12:03:28,587 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:28,588 [main:66] - Compilation checking started
2021-03-11 12:03:28,939 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:28,939 [main:28] - Try №19 of 797
2021-03-11 12:03:28,967 [main:28] - Try №20 of 797
2021-03-11 12:03:28,986 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:28,986 [main:66] - Compilation checking started
2021-03-11 12:03:28,991 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:03:28,991 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    // DONT_TARGET_EXACT_BACKEND: WASM
// WASM_MUTE_REASON: PROPERTY_REFERENCES
val Array<String>.firstElement: String get() = get(0)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:28,992 [main:28] - Try №21 of 797
2021-03-11 12:03:29,018 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:29,018 [main:66] - Compilation checking started
2021-03-11 12:03:29,273 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = Int<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:29,273 [main:28] - Try №22 of 797
2021-03-11 12:03:29,293 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:29,293 [main:66] - Compilation checking started
2021-03-11 12:03:29,519 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<l>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:29,519 [main:28] - Try №23 of 797
2021-03-11 12:03:29,528 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:03:29,528 [main:28] - Try №24 of 797
2021-03-11 12:03:29,532 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:29,533 [main:66] - Compilation checking started
2021-03-11 12:03:29,760 [main:49] - Result = false
Text:
import kotlin.functions.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:29,761 [main:28] - Try №25 of 797
2021-03-11 12:03:29,769 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:29,769 [main:28] - Try №26 of 797
2021-03-11 12:03:29,777 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:03:29,778 [main:66] - Compilation checking started
2021-03-11 12:03:29,983 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, T> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:29,983 [main:28] - Try №27 of 797
2021-03-11 12:03:29,992 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:29,992 [main:66] - Compilation checking started
2021-03-11 12:03:30,225 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    String({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:30,225 [main:28] - Try №28 of 797
2021-03-11 12:03:30,234 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:03:30,235 [main:66] - Compilation checking started
2021-03-11 12:03:30,566 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:30,566 [main:28] - Try №29 of 797
2021-03-11 12:03:30,579 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:30,579 [main:66] - Compilation checking started
2021-03-11 12:03:30,939 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:30,939 [main:28] - Try №30 of 797
2021-03-11 12:03:30,965 [main:28] - Try №31 of 797
2021-03-11 12:03:30,971 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:30,971 [main:66] - Compilation checking started
2021-03-11 12:03:31,300 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:31,300 [main:28] - Try №32 of 797
2021-03-11 12:03:31,315 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:31,315 [main:66] - Compilation checking started
2021-03-11 12:03:31,549 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1 until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:31,550 [main:28] - Try №33 of 797
2021-03-11 12:03:31,555 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:03:31,556 [main:66] - Compilation checking started
2021-03-11 12:03:31,760 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <@Nullable Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:31,760 [main:28] - Try №34 of 797
2021-03-11 12:03:31,770 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:03:31,771 [main:28] - Try №35 of 797
2021-03-11 12:03:31,781 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:31,781 [main:66] - Compilation checking started
2021-03-11 12:03:32,006 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = toString<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:32,006 [main:28] - Try №36 of 797
2021-03-11 12:03:32,018 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:32,018 [main:66] - Compilation checking started
2021-03-11 12:03:32,228 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val obj = A::class.companionObject
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:32,228 [main:28] - Try №37 of 797
2021-03-11 12:03:32,243 [main:28] - Try №38 of 797
2021-03-11 12:03:32,248 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:32,248 [main:66] - Compilation checking started
2021-03-11 12:03:32,446 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<R>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:32,446 [main:28] - Try №39 of 797
2021-03-11 12:03:32,451 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:03:32,452 [main:28] - Try №40 of 797
2021-03-11 12:03:32,466 [main:28] - Try №41 of 797
2021-03-11 12:03:32,470 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:32,470 [main:66] - Compilation checking started
2021-03-11 12:03:32,813 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:32,813 [main:28] - Try №42 of 797
2021-03-11 12:03:32,822 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:32,822 [main:66] - Compilation checking started
2021-03-11 12:03:32,823 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:03:32,824 [main:49] - Result = false
Text:
import BSamePackage().test().*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:32,824 [main:28] - Try №43 of 797
2021-03-11 12:03:32,833 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:32,834 [main:66] - Compilation checking started
2021-03-11 12:03:33,040 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(checkNot(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:33,040 [main:28] - Try №44 of 797
2021-03-11 12:03:33,045 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:33,045 [main:66] - Compilation checking started
2021-03-11 12:03:33,354 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified C> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:33,354 [main:28] - Try №45 of 797
2021-03-11 12:03:33,366 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:03:33,366 [main:66] - Compilation checking started
2021-03-11 12:03:33,708 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:33,708 [main:28] - Try №46 of 797
2021-03-11 12:03:33,725 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:33,726 [main:28] - Try №47 of 797
2021-03-11 12:03:33,731 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:33,731 [main:66] - Compilation checking started
2021-03-11 12:03:33,947 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.main(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:33,947 [main:28] - Try №48 of 797
2021-03-11 12:03:33,964 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:33,964 [main:66] - Compilation checking started
2021-03-11 12:03:34,174 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:34,175 [main:28] - Try №49 of 797
2021-03-11 12:03:34,189 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:03:34,190 [main:28] - Try №50 of 797
2021-03-11 12:03:34,199 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:03:34,200 [main:66] - Compilation checking started
2021-03-11 12:03:34,442 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u != 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:34,442 [main:28] - Try №51 of 797
2021-03-11 12:03:34,446 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:34,446 [main:66] - Compilation checking started
2021-03-11 12:03:34,653 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(previousIndex: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:34,653 [main:28] - Try №52 of 797
2021-03-11 12:03:34,658 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:34,658 [main:66] - Compilation checking started
2021-03-11 12:03:34,991 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:34,991 [main:28] - Try №53 of 797
2021-03-11 12:03:34,995 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:34,995 [main:66] - Compilation checking started
2021-03-11 12:03:35,240 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val B = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:35,240 [main:28] - Try №54 of 797
2021-03-11 12:03:35,251 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:35,251 [main:66] - Compilation checking started
2021-03-11 12:03:35,461 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val b = B(0)
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:35,461 [main:28] - Try №55 of 797
2021-03-11 12:03:35,468 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:03:35,468 [main:66] - Compilation checking started
2021-03-11 12:03:35,668 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(b(), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:35,668 [main:28] - Try №56 of 797
2021-03-11 12:03:35,678 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:35,678 [main:66] - Compilation checking started
2021-03-11 12:03:35,913 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(b(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:35,913 [main:28] - Try №57 of 797
2021-03-11 12:03:35,923 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:03:35,924 [main:66] - Compilation checking started
2021-03-11 12:03:36,165 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return AssertionError("null expected")
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:36,165 [main:28] - Try №58 of 797
2021-03-11 12:03:36,182 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:36,183 [main:28] - Try №59 of 797
2021-03-11 12:03:36,188 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:36,188 [main:66] - Compilation checking started
2021-03-11 12:03:36,401 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): ulongProgression {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:36,401 [main:28] - Try №60 of 797
2021-03-11 12:03:36,410 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:36,410 [main:66] - Compilation checking started
2021-03-11 12:03:36,614 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = Int<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:36,615 [main:28] - Try №61 of 797
2021-03-11 12:03:36,629 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:36,630 [main:66] - Compilation checking started
2021-03-11 12:03:36,832 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<one>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:36,832 [main:28] - Try №62 of 797
2021-03-11 12:03:36,843 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:36,843 [main:66] - Compilation checking started
2021-03-11 12:03:37,066 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    a(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:37,066 [main:28] - Try №63 of 797
2021-03-11 12:03:37,073 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:37,073 [main:28] - Try №64 of 797
2021-03-11 12:03:37,084 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:37,085 [main:66] - Compilation checking started
2021-03-11 12:03:37,463 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:37,463 [main:28] - Try №65 of 797
2021-03-11 12:03:37,466 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:37,467 [main:66] - Compilation checking started
2021-03-11 12:03:37,826 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:37,826 [main:28] - Try №66 of 797
2021-03-11 12:03:37,830 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:37,830 [main:28] - Try №67 of 797
2021-03-11 12:03:37,836 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:37,836 [main:66] - Compilation checking started
2021-03-11 12:03:38,073 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<Unit?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:38,073 [main:28] - Try №68 of 797
2021-03-11 12:03:38,088 [main:28] - Try №69 of 797
2021-03-11 12:03:38,102 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:03:38,102 [main:28] - Try №70 of 797
2021-03-11 12:03:38,109 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:38,109 [main:66] - Compilation checking started
2021-03-11 12:03:38,443 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:38,443 [main:28] - Try №71 of 797
2021-03-11 12:03:38,447 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:38,447 [main:66] - Compilation checking started
2021-03-11 12:03:38,778 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:38,778 [main:28] - Try №72 of 797
2021-03-11 12:03:38,788 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:38,788 [main:66] - Compilation checking started
2021-03-11 12:03:39,000 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : UInt {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:39,000 [main:28] - Try №73 of 797
2021-03-11 12:03:39,010 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:39,011 [main:66] - Compilation checking started
2021-03-11 12:03:39,224 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in res step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:39,225 [main:28] - Try №74 of 797
2021-03-11 12:03:39,230 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:39,231 [main:28] - Try №75 of 797
2021-03-11 12:03:39,238 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:03:39,238 [main:66] - Compilation checking started
2021-03-11 12:03:39,456 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ {
    if (x !is String) return

    if (x == null) println("dead code")
}})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:39,457 [main:28] - Try №76 of 797
2021-03-11 12:03:39,470 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:03:39,470 [main:66] - Compilation checking started
2021-03-11 12:03:39,670 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = changeLong()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:39,671 [main:28] - Try №77 of 797
2021-03-11 12:03:39,684 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:03:39,685 [main:66] - Compilation checking started
2021-03-11 12:03:39,935 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (b: Double in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:39,936 [main:28] - Try №78 of 797
2021-03-11 12:03:39,946 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:03:39,947 [main:66] - Compilation checking started
2021-03-11 12:03:40,165 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = t == u.toLong()
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:40,165 [main:28] - Try №79 of 797
2021-03-11 12:03:40,169 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:40,169 [main:66] - Compilation checking started
2021-03-11 12:03:40,385 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression Int 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:40,385 [main:28] - Try №80 of 797
2021-03-11 12:03:40,389 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:40,389 [main:28] - Try №81 of 797
2021-03-11 12:03:40,404 [main:28] - Try №82 of 797
2021-03-11 12:03:40,411 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:40,411 [main:66] - Compilation checking started
2021-03-11 12:03:40,610 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return a.add(try { foo() } catch (e: Throwable) { "OK" }).toInt()
}


2021-03-11 12:03:40,611 [main:28] - Try №83 of 797
2021-03-11 12:03:40,624 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:03:40,624 [main:66] - Compilation checking started
2021-03-11 12:03:40,925 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:40,926 [main:28] - Try №84 of 797
2021-03-11 12:03:40,940 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:03:40,940 [main:28] - Try №85 of 797
2021-03-11 12:03:40,953 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:03:40,953 [main:28] - Try №86 of 797
2021-03-11 12:03:40,970 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:40,970 [main:66] - Compilation checking started
2021-03-11 12:03:41,174 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 0
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:41,174 [main:28] - Try №87 of 797
2021-03-11 12:03:41,178 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:41,178 [main:66] - Compilation checking started
2021-03-11 12:03:41,392 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val ULong = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:41,392 [main:28] - Try №88 of 797
2021-03-11 12:03:41,396 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:41,396 [main:66] - Compilation checking started
2021-03-11 12:03:41,590 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL fqName 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:41,591 [main:28] - Try №89 of 797
2021-03-11 12:03:41,604 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:03:41,604 [main:66] - Compilation checking started
2021-03-11 12:03:41,913 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "kotlin"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:41,913 [main:28] - Try №90 of 797
2021-03-11 12:03:41,928 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:41,929 [main:66] - Compilation checking started
2021-03-11 12:03:42,148 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "kotlin"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 42
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:42,148 [main:28] - Try №91 of 797
2021-03-11 12:03:42,154 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:42,155 [main:66] - Compilation checking started
2021-03-11 12:03:42,464 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "kotlin"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:42,464 [main:28] - Try №92 of 797
2021-03-11 12:03:42,475 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:42,475 [main:28] - Try №93 of 797
2021-03-11 12:03:42,484 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:03:42,484 [main:66] - Compilation checking started
2021-03-11 12:03:42,682 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "kotlin"
}

inline fun <reified Ty0, Ty1> fu0(val status: String = "OK") = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:42,682 [main:28] - Try №94 of 797
2021-03-11 12:03:42,692 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:42,693 [main:28] - Try №95 of 797
2021-03-11 12:03:42,704 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:42,704 [main:66] - Compilation checking started
2021-03-11 12:03:43,016 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "kotlin"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:43,016 [main:28] - Try №96 of 797
2021-03-11 12:03:43,034 [main:33] - Trying to replace Element(IS_EXPRESSION) on Element(IS_EXPRESSION)
2021-03-11 12:03:43,034 [main:66] - Compilation checking started
2021-03-11 12:03:43,362 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "kotlin"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:43,362 [main:28] - Try №97 of 797
2021-03-11 12:03:43,368 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:03:43,369 [main:28] - Try №98 of 797
2021-03-11 12:03:43,372 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:43,373 [main:28] - Try №99 of 797
2021-03-11 12:03:43,383 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:03:43,383 [main:66] - Compilation checking started
2021-03-11 12:03:43,608 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList = i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "kotlin"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:43,608 [main:28] - Try №100 of 797
2021-03-11 12:03:43,616 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:43,616 [main:28] - Try №101 of 797
2021-03-11 12:03:43,628 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:03:43,628 [main:66] - Compilation checking started
2021-03-11 12:03:43,961 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:43,961 [main:28] - Try №102 of 797
2021-03-11 12:03:43,970 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:43,970 [main:66] - Compilation checking started
2021-03-11 12:03:44,164 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<C>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:44,164 [main:28] - Try №103 of 797
2021-03-11 12:03:44,168 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:03:44,169 [main:28] - Try №104 of 797
2021-03-11 12:03:44,174 [main:33] - Trying to replace Element(TYPE_PARAMETER_LIST) on Element(TYPE_PARAMETER_LIST)
2021-03-11 12:03:44,174 [main:66] - Compilation checking started
2021-03-11 12:03:44,528 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:44,528 [main:28] - Try №105 of 797
2021-03-11 12:03:44,542 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:03:44,542 [main:28] - Try №106 of 797
2021-03-11 12:03:44,557 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:03:44,557 [main:28] - Try №107 of 797
2021-03-11 12:03:44,573 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:44,573 [main:66] - Compilation checking started
2021-03-11 12:03:44,785 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ok: String
        get() { myRun { return "OK" } }
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:44,786 [main:28] - Try №108 of 797
2021-03-11 12:03:44,792 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:44,793 [main:28] - Try №109 of 797
2021-03-11 12:03:44,796 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:44,796 [main:66] - Compilation checking started
2021-03-11 12:03:44,992 [main:49] - Result = false
Text:
import kotlin.single.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:44,992 [main:28] - Try №110 of 797
2021-03-11 12:03:45,008 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:45,008 [main:66] - Compilation checking started
2021-03-11 12:03:45,233 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 42 downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:45,233 [main:28] - Try №111 of 797
2021-03-11 12:03:45,251 [main:33] - Trying to replace Element(IS_EXPRESSION) on Element(IS_EXPRESSION)
2021-03-11 12:03:45,251 [main:28] - Try №112 of 797
2021-03-11 12:03:45,266 [main:28] - Try №113 of 797
2021-03-11 12:03:45,270 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:45,270 [main:28] - Try №114 of 797
2021-03-11 12:03:45,283 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:03:45,283 [main:28] - Try №115 of 797
2021-03-11 12:03:45,294 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:45,294 [main:66] - Compilation checking started
2021-03-11 12:03:45,517 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    const val u = UInt(14)
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:45,517 [main:28] - Try №116 of 797
2021-03-11 12:03:45,525 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:03:45,525 [main:66] - Compilation checking started
2021-03-11 12:03:45,527 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:03:45,527 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0((a, b)) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:45,527 [main:28] - Try №117 of 797
2021-03-11 12:03:45,537 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:45,538 [main:28] - Try №118 of 797
2021-03-11 12:03:45,549 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:45,549 [main:66] - Compilation checking started
2021-03-11 12:03:45,807 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val o = object : SuspendRunnable {
        override suspend fun run() {
            StateMachineChecker.suspendHere()
            StateMachineChecker.suspendHere()
            StateMachineChecker.suspendHere()
            StateMachineChecker.suspendHere()
            StateMachineChecker.suspendHere()
        }
    }
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:45,807 [main:28] - Try №119 of 797
2021-03-11 12:03:45,819 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:03:45,819 [main:66] - Compilation checking started
2021-03-11 12:03:46,027 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val ulongList = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
        charList += i
    }


2021-03-11 12:03:46,028 [main:28] - Try №120 of 797
2021-03-11 12:03:46,031 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:46,032 [main:66] - Compilation checking started
2021-03-11 12:03:46,354 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:46,354 [main:28] - Try №121 of 797
2021-03-11 12:03:46,380 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:46,380 [main:28] - Try №122 of 797
2021-03-11 12:03:46,404 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:03:46,404 [main:66] - Compilation checking started
2021-03-11 12:03:46,714 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:46,714 [main:28] - Try №123 of 797
2021-03-11 12:03:46,754 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:46,755 [main:66] - Compilation checking started
2021-03-11 12:03:46,954 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(1), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 1 downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:46,954 [main:28] - Try №124 of 797
2021-03-11 12:03:46,964 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:46,964 [main:66] - Compilation checking started
2021-03-11 12:03:47,294 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:47,294 [main:28] - Try №125 of 797
2021-03-11 12:03:47,301 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:47,301 [main:66] - Compilation checking started
2021-03-11 12:03:47,506 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <SMAP> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:47,507 [main:28] - Try №126 of 797
2021-03-11 12:03:47,513 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:03:47,513 [main:66] - Compilation checking started
2021-03-11 12:03:47,734 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).cond().toInt()
}


2021-03-11 12:03:47,734 [main:28] - Try №127 of 797
2021-03-11 12:03:47,738 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:47,738 [main:66] - Compilation checking started
2021-03-11 12:03:47,959 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression InlineMutableIterable 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:47,960 [main:28] - Try №128 of 797
2021-03-11 12:03:47,969 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:47,970 [main:66] - Compilation checking started
2021-03-11 12:03:48,182 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> A<*>): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<UInt>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:48,182 [main:28] - Try №129 of 797
2021-03-11 12:03:48,206 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:03:48,206 [main:66] - Compilation checking started
2021-03-11 12:03:48,505 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  Int) : Int {
    val test = mutableListOf<Char>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:48,505 [main:28] - Try №130 of 797
2021-03-11 12:03:48,509 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:48,510 [main:28] - Try №131 of 797
2021-03-11 12:03:48,518 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:03:48,518 [main:28] - Try №132 of 797
2021-03-11 12:03:48,531 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:03:48,532 [main:28] - Try №133 of 797
2021-03-11 12:03:48,542 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:03:48,542 [main:66] - Compilation checking started
2021-03-11 12:03:48,836 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:JvmStatic, f :  Int) : Int {
    val test = mutableListOf<Char>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:48,836 [main:28] - Try №134 of 797
2021-03-11 12:03:48,845 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:48,845 [main:28] - Try №135 of 797
2021-03-11 12:03:48,849 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:48,849 [main:66] - Compilation checking started
2021-03-11 12:03:49,045 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : ULong {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:JvmStatic, f :  Int) : Int {
    val test = mutableListOf<Char>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:49,045 [main:28] - Try №136 of 797
2021-03-11 12:03:49,074 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:49,074 [main:66] - Compilation checking started
2021-03-11 12:03:49,275 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val String.property: String
    get() = this
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:JvmStatic, f :  Int) : Int {
    val test = mutableListOf<Char>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:49,275 [main:28] - Try №137 of 797
2021-03-11 12:03:49,281 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:03:49,282 [main:66] - Compilation checking started
2021-03-11 12:03:49,489 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { {
    prop
}}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:JvmStatic, f :  Int) : Int {
    val test = mutableListOf<Char>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:49,489 [main:28] - Try №138 of 797
2021-03-11 12:03:49,500 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:49,500 [main:66] - Compilation checking started
2021-03-11 12:03:49,695 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:JvmStatic, f :  Int) : Int {
    val test = mutableListOf<Char>()
var s = 0
val String = mutableListOf<ULong>()
inline val <reified Z> Z.extProp: String
    get() = "123"
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:49,696 [main:28] - Try №139 of 797
2021-03-11 12:03:49,701 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:03:49,701 [main:66] - Compilation checking started
2021-03-11 12:03:49,924 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = test == "OK10"
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:JvmStatic, f :  Int) : Int {
    val test = mutableListOf<Char>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:49,924 [main:28] - Try №140 of 797
2021-03-11 12:03:49,934 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:49,935 [main:66] - Compilation checking started
2021-03-11 12:03:50,139 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val b = a.clone()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:JvmStatic, f :  Int) : Int {
    val test = mutableListOf<Char>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:50,140 [main:28] - Try №141 of 797
2021-03-11 12:03:50,143 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:50,143 [main:66] - Compilation checking started
2021-03-11 12:03:50,348 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        mutableListOf += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:JvmStatic, f :  Int) : Int {
    val test = mutableListOf<Char>()
var s = 0
val String = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "suspendLambdaAssertionsDisabled"}).invoke().toInt()
}


2021-03-11 12:03:50,348 [main:28] - Try №142 of 797
2021-03-11 12:03:50,352 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:03:50,353 [main:28] - Try №143 of 797
2021-03-11 12:03:50,355 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:03:50,356 [main:66] - Compilation checking started
2021-03-11 12:03:50,739 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:50,739 [main:28] - Try №144 of 797
2021-03-11 12:03:50,753 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:03:50,753 [main:28] - Try №145 of 797
2021-03-11 12:03:50,767 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:03:50,767 [main:28] - Try №146 of 797
2021-03-11 12:03:50,768 [main:33] - Trying to replace Element(PACKAGE_DIRECTIVE) on Element(PACKAGE_DIRECTIVE)
2021-03-11 12:03:50,768 [main:66] - Compilation checking started
2021-03-11 12:03:50,769 [main:68] - Already checked
2021-03-11 12:03:50,769 [main:28] - Try №147 of 797
2021-03-11 12:03:50,779 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:50,780 [main:66] - Compilation checking started
2021-03-11 12:03:51,031 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run()
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:51,031 [main:28] - Try №148 of 797
2021-03-11 12:03:51,039 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:03:51,039 [main:66] - Compilation checking started
2021-03-11 12:03:51,277 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(), ulongList)

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return result.param
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:51,277 [main:28] - Try №149 of 797
2021-03-11 12:03:51,287 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:51,287 [main:66] - Compilation checking started
2021-03-11 12:03:51,639 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:51,639 [main:28] - Try №150 of 797
2021-03-11 12:03:51,650 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:51,650 [main:28] - Try №151 of 797
2021-03-11 12:03:51,660 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:03:51,660 [main:28] - Try №152 of 797
2021-03-11 12:03:51,668 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:03:51,668 [main:28] - Try №153 of 797
2021-03-11 12:03:51,679 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:03:51,680 [main:66] - Compilation checking started
2021-03-11 12:03:51,894 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return Foo("K").obj.result()
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:51,895 [main:28] - Try №154 of 797
2021-03-11 12:03:51,901 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:51,901 [main:28] - Try №155 of 797
2021-03-11 12:03:51,916 [main:28] - Try №156 of 797
2021-03-11 12:03:51,924 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:51,925 [main:28] - Try №157 of 797
2021-03-11 12:03:51,933 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:51,934 [main:28] - Try №158 of 797
2021-03-11 12:03:51,937 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:51,938 [main:66] - Compilation checking started
2021-03-11 12:03:52,179 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += box
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:52,179 [main:28] - Try №159 of 797
2021-03-11 12:03:52,190 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:52,190 [main:28] - Try №160 of 797
2021-03-11 12:03:52,201 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:52,201 [main:28] - Try №161 of 797
2021-03-11 12:03:52,217 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:52,217 [main:66] - Compilation checking started
2021-03-11 12:03:52,444 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 3
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:52,444 [main:28] - Try №162 of 797
2021-03-11 12:03:52,447 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:52,447 [main:66] - Compilation checking started
2021-03-11 12:03:52,654 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).foo.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:52,655 [main:28] - Try №163 of 797
2021-03-11 12:03:52,662 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:52,663 [main:28] - Try №164 of 797
2021-03-11 12:03:52,670 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:03:52,670 [main:28] - Try №165 of 797
2021-03-11 12:03:52,680 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:52,680 [main:66] - Compilation checking started
2021-03-11 12:03:52,888 [main:49] - Result = false
Text:
import kotlin.a1.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:52,888 [main:28] - Try №166 of 797
2021-03-11 12:03:52,903 [main:33] - Trying to replace Element(FUNCTION_TYPE) on Element(FUNCTION_TYPE)
2021-03-11 12:03:52,904 [main:66] - Compilation checking started
2021-03-11 12:03:53,108 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> String): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:53,108 [main:28] - Try №167 of 797
2021-03-11 12:03:53,123 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:53,124 [main:66] - Compilation checking started
2021-03-11 12:03:53,331 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7u downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:53,332 [main:28] - Try №168 of 797
2021-03-11 12:03:53,340 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:03:53,340 [main:28] - Try №169 of 797
2021-03-11 12:03:53,358 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:03:53,358 [main:66] - Compilation checking started
2021-03-11 12:03:53,586 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({
            return foo(qux(quz()))
        })})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:53,586 [main:28] - Try №170 of 797
2021-03-11 12:03:53,596 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:03:53,596 [main:28] - Try №171 of 797
2021-03-11 12:03:53,603 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:03:53,603 [main:28] - Try №172 of 797
2021-03-11 12:03:53,607 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:53,607 [main:28] - Try №173 of 797
2021-03-11 12:03:53,613 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:03:53,613 [main:28] - Try №174 of 797
2021-03-11 12:03:53,620 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:53,620 [main:28] - Try №175 of 797
2021-03-11 12:03:53,627 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:03:53,627 [main:28] - Try №176 of 797
2021-03-11 12:03:53,630 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:53,631 [main:28] - Try №177 of 797
2021-03-11 12:03:53,635 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:03:53,635 [main:28] - Try №178 of 797
2021-03-11 12:03:53,648 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:03:53,648 [main:28] - Try №179 of 797
2021-03-11 12:03:53,652 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:53,652 [main:66] - Compilation checking started
2021-03-11 12:03:53,860 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), inlineFun)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val uintList = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:53,860 [main:28] - Try №180 of 797
2021-03-11 12:03:53,866 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:03:53,866 [main:28] - Try №181 of 797
2021-03-11 12:03:53,869 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:53,870 [main:66] - Compilation checking started
2021-03-11 12:03:54,191 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:54,191 [main:28] - Try №182 of 797
2021-03-11 12:03:54,202 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:54,203 [main:66] - Compilation checking started
2021-03-11 12:03:54,414 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val a = A()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:54,414 [main:28] - Try №183 of 797
2021-03-11 12:03:54,422 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:54,423 [main:28] - Try №184 of 797
2021-03-11 12:03:54,430 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:03:54,430 [main:66] - Compilation checking started
2021-03-11 12:03:54,647 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = c()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:54,647 [main:28] - Try №185 of 797
2021-03-11 12:03:54,663 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:54,663 [main:66] - Compilation checking started
2021-03-11 12:03:54,979 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:54,979 [main:28] - Try №186 of 797
2021-03-11 12:03:54,991 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:03:54,992 [main:28] - Try №187 of 797
2021-03-11 12:03:55,003 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:03:55,004 [main:28] - Try №188 of 797
2021-03-11 12:03:55,020 [main:28] - Try №189 of 797
2021-03-11 12:03:55,030 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:55,031 [main:28] - Try №190 of 797
2021-03-11 12:03:55,039 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:55,039 [main:28] - Try №191 of 797
2021-03-11 12:03:55,050 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:03:55,050 [main:28] - Try №192 of 797
2021-03-11 12:03:55,060 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:55,060 [main:66] - Compilation checking started
2021-03-11 12:03:55,273 [main:49] - Result = false
Text:
import kotlin.checkNoMethod.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:55,273 [main:28] - Try №193 of 797
2021-03-11 12:03:55,279 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:03:55,279 [main:66] - Compilation checking started
2021-03-11 12:03:55,499 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in Rec("O").fn().ll + Rec("K").p.ll) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:55,499 [main:28] - Try №194 of 797
2021-03-11 12:03:55,516 [main:33] - Trying to replace Element(LOOP_RANGE) on Element(LOOP_RANGE)
2021-03-11 12:03:55,516 [main:66] - Compilation checking started
2021-03-11 12:03:55,758 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in map.entries) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:55,758 [main:28] - Try №195 of 797
2021-03-11 12:03:55,768 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:55,768 [main:66] - Compilation checking started
2021-03-11 12:03:55,971 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(mh(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:55,972 [main:28] - Try №196 of 797
2021-03-11 12:03:55,983 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:03:55,983 [main:66] - Compilation checking started
2021-03-11 12:03:56,190 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run(this@unaryPlus)})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:56,190 [main:28] - Try №197 of 797
2021-03-11 12:03:56,194 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:56,194 [main:28] - Try №198 of 797
2021-03-11 12:03:56,202 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:56,203 [main:28] - Try №199 of 797
2021-03-11 12:03:56,220 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:56,221 [main:66] - Compilation checking started
2021-03-11 12:03:56,544 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:56,544 [main:28] - Try №200 of 797
2021-03-11 12:03:56,549 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:56,549 [main:66] - Compilation checking started
2021-03-11 12:03:56,757 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <helpers> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:56,758 [main:28] - Try №201 of 797
2021-03-11 12:03:56,761 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:56,762 [main:66] - Compilation checking started
2021-03-11 12:03:56,998 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).String.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:56,998 [main:28] - Try №202 of 797
2021-03-11 12:03:57,015 [main:28] - Try №203 of 797
2021-03-11 12:03:57,031 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:03:57,031 [main:66] - Compilation checking started
2021-03-11 12:03:57,248 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ J().foo!! })
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:57,248 [main:28] - Try №204 of 797
2021-03-11 12:03:57,261 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:03:57,261 [main:28] - Try №205 of 797
2021-03-11 12:03:57,274 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:03:57,274 [main:28] - Try №206 of 797
2021-03-11 12:03:57,285 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:03:57,285 [main:66] - Compilation checking started
2021-03-11 12:03:57,502 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    private val foo = Foo()
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:57,503 [main:28] - Try №207 of 797
2021-03-11 12:03:57,517 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:03:57,518 [main:28] - Try №208 of 797
2021-03-11 12:03:57,524 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:03:57,524 [main:66] - Compilation checking started
2021-03-11 12:03:57,722 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<T>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:57,722 [main:28] - Try №209 of 797
2021-03-11 12:03:57,735 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:03:57,735 [main:28] - Try №210 of 797
2021-03-11 12:03:57,752 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:03:57,753 [main:66] - Compilation checking started
2021-03-11 12:03:57,972 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it.name == "getX" }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "OK"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:57,972 [main:28] - Try №211 of 797
2021-03-11 12:03:57,981 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:03:57,982 [main:28] - Try №212 of 797
2021-03-11 12:03:57,986 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:03:57,987 [main:28] - Try №213 of 797
2021-03-11 12:03:57,996 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:03:57,996 [main:28] - Try №214 of 797
2021-03-11 12:03:58,009 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:03:58,009 [main:66] - Compilation checking started
2021-03-11 12:03:58,316 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:58,316 [main:28] - Try №215 of 797
2021-03-11 12:03:58,320 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:03:58,320 [main:28] - Try №216 of 797
2021-03-11 12:03:58,353 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:58,353 [main:28] - Try №217 of 797
2021-03-11 12:03:58,357 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:03:58,357 [main:66] - Compilation checking started
2021-03-11 12:03:58,671 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:58,671 [main:28] - Try №218 of 797
2021-03-11 12:03:58,681 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:03:58,681 [main:28] - Try №219 of 797
2021-03-11 12:03:58,696 [main:28] - Try №220 of 797
2021-03-11 12:03:58,709 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:03:58,710 [main:66] - Compilation checking started
2021-03-11 12:03:58,935 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<Int>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:58,935 [main:28] - Try №221 of 797
2021-03-11 12:03:58,942 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:03:58,942 [main:66] - Compilation checking started
2021-03-11 12:03:59,142 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.Local("K")
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:59,142 [main:28] - Try №222 of 797
2021-03-11 12:03:59,147 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:03:59,147 [main:66] - Compilation checking started
2021-03-11 12:03:59,365 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = C().x.reflect()?.parameters?.singleOrNull()?.name ?: "null"
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:59,365 [main:28] - Try №223 of 797
2021-03-11 12:03:59,375 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:03:59,375 [main:28] - Try №224 of 797
2021-03-11 12:03:59,387 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:03:59,388 [main:28] - Try №225 of 797
2021-03-11 12:03:59,398 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:03:59,399 [main:66] - Compilation checking started
2021-03-11 12:03:59,612 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return if (m != BigInteger.valueOf(1)) "Fail: BigInteger(-2) mod BigInteger(3) == $m" else "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:59,612 [main:28] - Try №226 of 797
2021-03-11 12:03:59,618 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:03:59,619 [main:66] - Compilation checking started
2021-03-11 12:03:59,824 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(testAccessors(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:03:59,825 [main:28] - Try №227 of 797
2021-03-11 12:03:59,840 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:03:59,840 [main:28] - Try №228 of 797
2021-03-11 12:03:59,845 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:03:59,845 [main:66] - Compilation checking started
2021-03-11 12:04:00,050 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

protected fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:00,050 [main:28] - Try №229 of 797
2021-03-11 12:04:00,053 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:00,054 [main:28] - Try №230 of 797
2021-03-11 12:04:00,068 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:00,069 [main:28] - Try №231 of 797
2021-03-11 12:04:00,085 [main:28] - Try №232 of 797
2021-03-11 12:04:00,094 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:00,094 [main:66] - Compilation checking started
2021-03-11 12:04:00,294 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Int): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:00,294 [main:28] - Try №233 of 797
2021-03-11 12:04:00,298 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:00,298 [main:28] - Try №234 of 797
2021-03-11 12:04:00,301 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:00,302 [main:28] - Try №235 of 797
2021-03-11 12:04:00,312 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:00,312 [main:66] - Compilation checking started
2021-03-11 12:04:00,525 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<Char>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:00,525 [main:28] - Try №236 of 797
2021-03-11 12:04:00,529 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:00,529 [main:28] - Try №237 of 797
2021-03-11 12:04:00,544 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:04:00,544 [main:28] - Try №238 of 797
2021-03-11 12:04:00,557 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:04:00,557 [main:28] - Try №239 of 797
2021-03-11 12:04:00,565 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:04:00,565 [main:66] - Compilation checking started
2021-03-11 12:04:00,566 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:04:00,567 [main:49] - Result = false
Text:
import n.let {
        if (b) return@let

        myRun {
            result = "O"
            foo()
        }
    }.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:00,567 [main:28] - Try №240 of 797
2021-03-11 12:04:00,584 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(PARENTHESIZED)
2021-03-11 12:04:00,585 [main:66] - Compilation checking started
2021-03-11 12:04:00,812 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun box786() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (minusZero as Double).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:00,812 [main:28] - Try №241 of 797
2021-03-11 12:04:00,816 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:00,816 [main:28] - Try №242 of 797
2021-03-11 12:04:00,820 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:00,820 [main:66] - Compilation checking started
2021-03-11 12:04:01,128 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:01,128 [main:28] - Try №243 of 797
2021-03-11 12:04:01,138 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:01,138 [main:66] - Compilation checking started
2021-03-11 12:04:01,395 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression in 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:01,395 [main:28] - Try №244 of 797
2021-03-11 12:04:01,400 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:01,400 [main:66] - Compilation checking started
2021-03-11 12:04:01,632 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in result != 2) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:01,632 [main:28] - Try №245 of 797
2021-03-11 12:04:01,642 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:01,643 [main:66] - Compilation checking started
2021-03-11 12:04:01,854 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> expected): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:01,854 [main:28] - Try №246 of 797
2021-03-11 12:04:01,868 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:04:01,868 [main:28] - Try №247 of 797
2021-03-11 12:04:01,871 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:01,872 [main:28] - Try №248 of 797
2021-03-11 12:04:01,886 [main:28] - Try №249 of 797
2021-03-11 12:04:01,894 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:01,894 [main:28] - Try №250 of 797
2021-03-11 12:04:01,902 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:01,902 [main:66] - Compilation checking started
2021-03-11 12:04:02,147 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ {
  val a1 = A()
  val a2 = A(1)
  val a3 = A(b = "b")
  val a4 = A(2, "c")
  if (a1.a != 0 && a1.b != "a") return "fail"
  if (a2.a != 1 && a2.b != "a") return "fail"
  if (a3.a != 0 && a3.b != "b") return "fail"
  if (a4.a != 2 && a4.b != "c") return "fail"
  return "OK"
}})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:02,148 [main:28] - Try №251 of 797
2021-03-11 12:04:02,158 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:02,158 [main:28] - Try №252 of 797
2021-03-11 12:04:02,162 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:02,162 [main:28] - Try №253 of 797
2021-03-11 12:04:02,167 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:04:02,168 [main:66] - Compilation checking started
2021-03-11 12:04:02,393 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString(key: K, value: V) : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:02,394 [main:28] - Try №254 of 797
2021-03-11 12:04:02,403 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:02,403 [main:66] - Compilation checking started
2021-03-11 12:04:02,627 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = Int<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:02,628 [main:28] - Try №255 of 797
2021-03-11 12:04:02,638 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:02,638 [main:28] - Try №256 of 797
2021-03-11 12:04:02,648 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:02,649 [main:66] - Compilation checking started
2021-03-11 12:04:02,873 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val sb = StringBuilder("OK")
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:02,874 [main:28] - Try №257 of 797
2021-03-11 12:04:02,882 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:04:02,882 [main:28] - Try №258 of 797
2021-03-11 12:04:02,890 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:02,890 [main:28] - Try №259 of 797
2021-03-11 12:04:02,902 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:02,902 [main:28] - Try №260 of 797
2021-03-11 12:04:02,912 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:02,912 [main:66] - Compilation checking started
2021-03-11 12:04:03,140 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression = 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:03,140 [main:28] - Try №261 of 797
2021-03-11 12:04:03,164 [main:28] - Try №262 of 797
2021-03-11 12:04:03,170 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:03,170 [main:28] - Try №263 of 797
2021-03-11 12:04:03,175 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:03,176 [main:28] - Try №264 of 797
2021-03-11 12:04:03,185 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:03,185 [main:66] - Compilation checking started
2021-03-11 12:04:03,385 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    testDefault1(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:03,385 [main:28] - Try №265 of 797
2021-03-11 12:04:03,396 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:03,396 [main:66] - Compilation checking started
2021-03-11 12:04:03,600 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): String = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:03,600 [main:28] - Try №266 of 797
2021-03-11 12:04:03,609 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:03,609 [main:66] - Compilation checking started
2021-03-11 12:04:03,825 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    String(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:03,825 [main:28] - Try №267 of 797
2021-03-11 12:04:03,832 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:04:03,832 [main:28] - Try №268 of 797
2021-03-11 12:04:03,843 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:03,844 [main:28] - Try №269 of 797
2021-03-11 12:04:03,850 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:03,850 [main:28] - Try №270 of 797
2021-03-11 12:04:03,860 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:03,861 [main:28] - Try №271 of 797
2021-03-11 12:04:03,866 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:03,866 [main:28] - Try №272 of 797
2021-03-11 12:04:03,870 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:03,870 [main:66] - Compilation checking started
2021-03-11 12:04:04,085 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = x<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:04,085 [main:28] - Try №273 of 797
2021-03-11 12:04:04,089 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:04,089 [main:66] - Compilation checking started
2021-03-11 12:04:04,314 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val s = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:04,315 [main:28] - Try №274 of 797
2021-03-11 12:04:04,328 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:04,329 [main:28] - Try №275 of 797
2021-03-11 12:04:04,335 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:04,336 [main:28] - Try №276 of 797
2021-03-11 12:04:04,350 [main:28] - Try №277 of 797
2021-03-11 12:04:04,354 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:04,354 [main:28] - Try №278 of 797
2021-03-11 12:04:04,361 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:04:04,361 [main:28] - Try №279 of 797
2021-03-11 12:04:04,371 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:04,371 [main:28] - Try №280 of 797
2021-03-11 12:04:04,386 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:04,387 [main:28] - Try №281 of 797
2021-03-11 12:04:04,400 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:04,400 [main:28] - Try №282 of 797
2021-03-11 12:04:04,409 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:04,409 [main:28] - Try №283 of 797
2021-03-11 12:04:04,419 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:04:04,419 [main:66] - Compilation checking started
2021-03-11 12:04:04,629 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (p14: A in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

public inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:04,630 [main:28] - Try №284 of 797
2021-03-11 12:04:04,641 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:04:04,642 [main:66] - Compilation checking started
2021-03-11 12:04:04,958 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:04,958 [main:28] - Try №285 of 797
2021-03-11 12:04:04,968 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:04,968 [main:66] - Compilation checking started
2021-03-11 12:04:05,174 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>("")
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:05,174 [main:28] - Try №286 of 797
2021-03-11 12:04:05,178 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:05,178 [main:28] - Try №287 of 797
2021-03-11 12:04:05,181 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:05,182 [main:28] - Try №288 of 797
2021-03-11 12:04:05,198 [main:33] - Trying to replace Element(FOR) on Element(FOR)
2021-03-11 12:04:05,198 [main:66] - Compilation checking started
2021-03-11 12:04:05,408 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for ((index: Any, x) in xs.withIndex()) {
        useAny(index)
        s.append("$index:$x;")
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<ULong>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:05,408 [main:28] - Try №289 of 797
2021-03-11 12:04:05,415 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:05,415 [main:66] - Compilation checking started
2021-03-11 12:04:05,416 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:04:05,416 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String create<OneDefault>()

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:05,416 [main:28] - Try №290 of 797
2021-03-11 12:04:05,426 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:05,426 [main:28] - Try №291 of 797
2021-03-11 12:04:05,439 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:05,439 [main:66] - Compilation checking started
2021-03-11 12:04:05,754 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:05,754 [main:28] - Try №292 of 797
2021-03-11 12:04:05,762 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:04:05,762 [main:28] - Try №293 of 797
2021-03-11 12:04:05,765 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:05,765 [main:66] - Compilation checking started
2021-03-11 12:04:05,976 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = A()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:05,976 [main:28] - Try №294 of 797
2021-03-11 12:04:05,991 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:05,991 [main:28] - Try №295 of 797
2021-03-11 12:04:06,002 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:06,003 [main:66] - Compilation checking started
2021-03-11 12:04:06,204 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run(field)
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:06,204 [main:28] - Try №296 of 797
2021-03-11 12:04:06,219 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:06,219 [main:28] - Try №297 of 797
2021-03-11 12:04:06,228 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:06,229 [main:28] - Try №298 of 797
2021-03-11 12:04:06,238 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:06,238 [main:66] - Compilation checking started
2021-03-11 12:04:06,450 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in String step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:06,450 [main:28] - Try №299 of 797
2021-03-11 12:04:06,456 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:06,456 [main:28] - Try №300 of 797
2021-03-11 12:04:06,470 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:06,470 [main:28] - Try №301 of 797
2021-03-11 12:04:06,486 [main:28] - Try №302 of 797
2021-03-11 12:04:06,497 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:06,497 [main:66] - Compilation checking started
2021-03-11 12:04:06,710 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), JvmMultifileClass)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList += i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:06,711 [main:28] - Try №303 of 797
2021-03-11 12:04:06,724 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:06,724 [main:28] - Try №304 of 797
2021-03-11 12:04:06,731 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:06,731 [main:28] - Try №305 of 797
2021-03-11 12:04:06,741 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:06,741 [main:66] - Compilation checking started
2021-03-11 12:04:07,093 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "Fail"}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:07,093 [main:28] - Try №306 of 797
2021-03-11 12:04:07,095 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:04:07,096 [main:66] - Compilation checking started
2021-03-11 12:04:07,426 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:07,426 [main:28] - Try №307 of 797
2021-03-11 12:04:07,437 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:07,437 [main:66] - Compilation checking started
2021-03-11 12:04:07,646 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>(b = "b")
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:07,646 [main:28] - Try №308 of 797
2021-03-11 12:04:07,650 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:07,650 [main:66] - Compilation checking started
2021-03-11 12:04:07,856 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = enclosingClass<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:07,856 [main:28] - Try №309 of 797
2021-03-11 12:04:07,873 [main:33] - Trying to replace Element(FUNCTION_TYPE) on Element(FUNCTION_TYPE)
2021-03-11 12:04:07,873 [main:66] - Compilation checking started
2021-03-11 12:04:08,088 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: (T)-> R): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:08,088 [main:28] - Try №310 of 797
2021-03-11 12:04:08,092 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:08,092 [main:66] - Compilation checking started
2021-03-11 12:04:08,300 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL e 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:08,300 [main:28] - Try №311 of 797
2021-03-11 12:04:08,315 [main:28] - Try №312 of 797
2021-03-11 12:04:08,319 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:08,319 [main:66] - Compilation checking started
2021-03-11 12:04:08,531 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        en2 += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:08,531 [main:28] - Try №313 of 797
2021-03-11 12:04:08,542 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:04:08,543 [main:66] - Compilation checking started
2021-03-11 12:04:08,753 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "fail 1: $result"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:08,754 [main:28] - Try №314 of 797
2021-03-11 12:04:08,762 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:08,762 [main:28] - Try №315 of 797
2021-03-11 12:04:08,770 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:08,770 [main:28] - Try №316 of 797
2021-03-11 12:04:08,784 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:08,785 [main:66] - Compilation checking started
2021-03-11 12:04:08,998 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals()

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:08,998 [main:28] - Try №317 of 797
2021-03-11 12:04:09,014 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:04:09,014 [main:28] - Try №318 of 797
2021-03-11 12:04:09,018 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:09,018 [main:28] - Try №319 of 797
2021-03-11 12:04:09,024 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:09,024 [main:66] - Compilation checking started
2021-03-11 12:04:09,230 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = aByte = null
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:09,230 [main:28] - Try №320 of 797
2021-03-11 12:04:09,240 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:09,240 [main:28] - Try №321 of 797
2021-03-11 12:04:09,255 [main:28] - Try №322 of 797
2021-03-11 12:04:09,259 [main:33] - Trying to replace Element(TYPE_PARAMETER_LIST) on Element(TYPE_PARAMETER_LIST)
2021-03-11 12:04:09,259 [main:66] - Compilation checking started
2021-03-11 12:04:09,476 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <reified T> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:09,476 [main:28] - Try №323 of 797
2021-03-11 12:04:09,479 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:09,480 [main:28] - Try №324 of 797
2021-03-11 12:04:09,491 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:04:09,492 [main:28] - Try №325 of 797
2021-03-11 12:04:09,497 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:09,497 [main:66] - Compilation checking started
2021-03-11 12:04:09,705 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = y == 0L
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:09,705 [main:28] - Try №326 of 797
2021-03-11 12:04:09,706 [main:33] - Trying to replace Element(PACKAGE_DIRECTIVE) on Element(PACKAGE_DIRECTIVE)
2021-03-11 12:04:09,707 [main:66] - Compilation checking started
2021-03-11 12:04:09,707 [main:68] - Already checked
2021-03-11 12:04:09,707 [main:28] - Try №327 of 797
2021-03-11 12:04:09,718 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:09,719 [main:28] - Try №328 of 797
2021-03-11 12:04:09,722 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:09,722 [main:28] - Try №329 of 797
2021-03-11 12:04:09,725 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:09,726 [main:28] - Try №330 of 797
2021-03-11 12:04:09,734 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:09,734 [main:28] - Try №331 of 797
2021-03-11 12:04:09,741 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:09,741 [main:28] - Try №332 of 797
2021-03-11 12:04:09,754 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:09,754 [main:28] - Try №333 of 797
2021-03-11 12:04:09,765 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:09,765 [main:66] - Compilation checking started
2021-03-11 12:04:09,969 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>('e', 'd', 'c', 'b', 'a')
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:09,970 [main:28] - Try №334 of 797
2021-03-11 12:04:09,986 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(PARENTHESIZED)
2021-03-11 12:04:09,987 [main:66] - Compilation checking started
2021-03-11 12:04:10,197 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (x < y).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:10,198 [main:28] - Try №335 of 797
2021-03-11 12:04:10,208 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:10,208 [main:66] - Compilation checking started
2021-03-11 12:04:10,425 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>("OK", null)
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:10,425 [main:28] - Try №336 of 797
2021-03-11 12:04:10,431 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:10,431 [main:28] - Try №337 of 797
2021-03-11 12:04:10,435 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:10,435 [main:66] - Compilation checking started
2021-03-11 12:04:10,794 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:10,794 [main:28] - Try №338 of 797
2021-03-11 12:04:10,811 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:04:10,811 [main:66] - Compilation checking started
2021-03-11 12:04:11,024 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
            test = test * 10 + (i + 1)
        }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:11,024 [main:28] - Try №339 of 797
2021-03-11 12:04:11,038 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:11,039 [main:28] - Try №340 of 797
2021-03-11 12:04:11,054 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:11,054 [main:66] - Compilation checking started
2021-03-11 12:04:11,278 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1 downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:11,278 [main:28] - Try №341 of 797
2021-03-11 12:04:11,282 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:11,282 [main:66] - Compilation checking started
2021-03-11 12:04:11,499 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), st)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:11,500 [main:28] - Try №342 of 797
2021-03-11 12:04:11,509 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:11,509 [main:28] - Try №343 of 797
2021-03-11 12:04:11,522 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:11,522 [main:28] - Try №344 of 797
2021-03-11 12:04:11,525 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:11,526 [main:66] - Compilation checking started
2021-03-11 12:04:11,743 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + s
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:11,743 [main:28] - Try №345 of 797
2021-03-11 12:04:11,756 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:11,756 [main:66] - Compilation checking started
2021-03-11 12:04:11,962 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<T>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:11,962 [main:28] - Try №346 of 797
2021-03-11 12:04:11,976 [main:28] - Try №347 of 797
2021-03-11 12:04:11,984 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:11,984 [main:28] - Try №348 of 797
2021-03-11 12:04:11,988 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:11,988 [main:28] - Try №349 of 797
2021-03-11 12:04:12,003 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:12,003 [main:66] - Compilation checking started
2021-03-11 12:04:12,210 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val sr = inlineMe2({ c1(); c1() }) { c2(); c2() }
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:12,210 [main:28] - Try №350 of 797
2021-03-11 12:04:12,225 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:12,225 [main:28] - Try №351 of 797
2021-03-11 12:04:12,234 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:12,234 [main:28] - Try №352 of 797
2021-03-11 12:04:12,241 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:12,241 [main:28] - Try №353 of 797
2021-03-11 12:04:12,252 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:12,252 [main:28] - Try №354 of 797
2021-03-11 12:04:12,263 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:12,264 [main:28] - Try №355 of 797
2021-03-11 12:04:12,275 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:12,276 [main:66] - Compilation checking started
2021-03-11 12:04:12,480 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run(5u)})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:12,480 [main:28] - Try №356 of 797
2021-03-11 12:04:12,487 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:12,487 [main:28] - Try №357 of 797
2021-03-11 12:04:12,490 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:12,490 [main:66] - Compilation checking started
2021-03-11 12:04:12,694 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = r<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:12,694 [main:28] - Try №358 of 797
2021-03-11 12:04:12,704 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:12,704 [main:28] - Try №359 of 797
2021-03-11 12:04:12,708 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:12,709 [main:28] - Try №360 of 797
2021-03-11 12:04:12,724 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:12,725 [main:66] - Compilation checking started
2021-03-11 12:04:12,946 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7 downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = {
    (intArrayOf() as Any) is Array<*>
    run({ run({ null})})
}

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:12,946 [main:28] - Try №361 of 797
2021-03-11 12:04:12,949 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:12,950 [main:28] - Try №362 of 797
2021-03-11 12:04:12,966 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:04:12,966 [main:66] - Compilation checking started
2021-03-11 12:04:13,282 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:13,282 [main:28] - Try №363 of 797
2021-03-11 12:04:13,298 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:13,298 [main:28] - Try №364 of 797
2021-03-11 12:04:13,303 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:13,303 [main:66] - Compilation checking started
2021-03-11 12:04:13,529 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += sumC
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:13,529 [main:28] - Try №365 of 797
2021-03-11 12:04:13,540 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:13,540 [main:66] - Compilation checking started
2021-03-11 12:04:13,541 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:04:13,542 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL !! 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:13,542 [main:28] - Try №366 of 797
2021-03-11 12:04:13,551 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:13,551 [main:66] - Compilation checking started
2021-03-11 12:04:13,759 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in super step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:13,759 [main:28] - Try №367 of 797
2021-03-11 12:04:13,769 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:13,770 [main:28] - Try №368 of 797
2021-03-11 12:04:13,782 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:04:13,782 [main:28] - Try №369 of 797
2021-03-11 12:04:13,814 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:13,814 [main:28] - Try №370 of 797
2021-03-11 12:04:13,824 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:13,824 [main:28] - Try №371 of 797
2021-03-11 12:04:13,839 [main:28] - Try №372 of 797
2021-03-11 12:04:13,849 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:13,849 [main:66] - Compilation checking started
2021-03-11 12:04:14,068 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL != 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:14,068 [main:28] - Try №373 of 797
2021-03-11 12:04:14,074 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:14,074 [main:66] - Compilation checking started
2021-03-11 12:04:14,272 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.initStage { }
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:14,272 [main:28] - Try №374 of 797
2021-03-11 12:04:14,275 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:14,275 [main:28] - Try №375 of 797
2021-03-11 12:04:14,286 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:14,286 [main:28] - Try №376 of 797
2021-03-11 12:04:14,289 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:14,290 [main:28] - Try №377 of 797
2021-03-11 12:04:14,293 [main:33] - Trying to replace Element(TYPE_PARAMETER_LIST) on Element(TYPE_PARAMETER_LIST)
2021-03-11 12:04:14,293 [main:66] - Compilation checking started
2021-03-11 12:04:14,500 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <T> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:14,500 [main:28] - Try №378 of 797
2021-03-11 12:04:14,510 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:14,510 [main:28] - Try №379 of 797
2021-03-11 12:04:14,521 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:14,521 [main:28] - Try №380 of 797
2021-03-11 12:04:14,531 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:14,532 [main:28] - Try №381 of 797
2021-03-11 12:04:14,544 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:14,544 [main:28] - Try №382 of 797
2021-03-11 12:04:14,561 [main:28] - Try №383 of 797
2021-03-11 12:04:14,564 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:14,565 [main:66] - Compilation checking started
2021-03-11 12:04:14,773 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Int> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:14,773 [main:28] - Try №384 of 797
2021-03-11 12:04:14,786 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:04:14,786 [main:28] - Try №385 of 797
2021-03-11 12:04:14,791 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:14,791 [main:66] - Compilation checking started
2021-03-11 12:04:14,997 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = Int<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:14,998 [main:28] - Try №386 of 797
2021-03-11 12:04:15,001 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:15,001 [main:66] - Compilation checking started
2021-03-11 12:04:15,206 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression listOf 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:15,207 [main:28] - Try №387 of 797
2021-03-11 12:04:15,222 [main:28] - Try №388 of 797
2021-03-11 12:04:15,226 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:15,227 [main:66] - Compilation checking started
2021-03-11 12:04:15,429 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = ax != x
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:15,429 [main:28] - Try №389 of 797
2021-03-11 12:04:15,436 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:15,436 [main:66] - Compilation checking started
2021-03-11 12:04:15,642 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { {
    return OK().value ?: "fail"
}}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:15,643 [main:28] - Try №390 of 797
2021-03-11 12:04:15,656 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:15,656 [main:66] - Compilation checking started
2021-03-11 12:04:15,859 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<*>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:15,859 [main:28] - Try №391 of 797
2021-03-11 12:04:15,877 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:04:15,878 [main:66] - Compilation checking started
2021-03-11 12:04:16,084 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(listOf(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        sum = sum * 10 + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:16,085 [main:28] - Try №392 of 797
2021-03-11 12:04:16,094 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:16,094 [main:66] - Compilation checking started
2021-03-11 12:04:16,406 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:16,406 [main:28] - Try №393 of 797
2021-03-11 12:04:16,412 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:16,412 [main:28] - Try №394 of 797
2021-03-11 12:04:16,419 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:16,419 [main:66] - Compilation checking started
2021-03-11 12:04:16,623 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = newInstance("OK")
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:16,623 [main:28] - Try №395 of 797
2021-03-11 12:04:16,644 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:04:16,645 [main:28] - Try №396 of 797
2021-03-11 12:04:16,650 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:16,651 [main:66] - Compilation checking started
2021-03-11 12:04:16,858 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> d): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:16,858 [main:28] - Try №397 of 797
2021-03-11 12:04:16,867 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:16,868 [main:66] - Compilation checking started
2021-03-11 12:04:17,065 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = Base<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return (ulongProgression).first.toString(-593531369)
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:17,066 [main:28] - Try №398 of 797
2021-03-11 12:04:17,069 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:17,069 [main:28] - Try №399 of 797
2021-03-11 12:04:17,083 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:17,083 [main:28] - Try №400 of 797
2021-03-11 12:04:17,094 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:04:17,094 [main:66] - Compilation checking started
2021-03-11 12:04:17,410 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:17,410 [main:28] - Try №401 of 797
2021-03-11 12:04:17,414 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:17,414 [main:66] - Compilation checking started
2021-03-11 12:04:17,652 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = String<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:17,652 [main:28] - Try №402 of 797
2021-03-11 12:04:17,664 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:17,665 [main:28] - Try №403 of 797
2021-03-11 12:04:17,682 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:17,682 [main:66] - Compilation checking started
2021-03-11 12:04:17,921 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val x3 = foo<Array<String>>(null)
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:17,922 [main:28] - Try №404 of 797
2021-03-11 12:04:17,927 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:17,927 [main:66] - Compilation checking started
2021-03-11 12:04:18,184 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        String += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<String>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:18,184 [main:28] - Try №405 of 797
2021-03-11 12:04:18,194 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:18,195 [main:28] - Try №406 of 797
2021-03-11 12:04:18,209 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:18,209 [main:66] - Compilation checking started
2021-03-11 12:04:18,517 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:18,518 [main:28] - Try №407 of 797
2021-03-11 12:04:18,525 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:18,525 [main:66] - Compilation checking started
2021-03-11 12:04:18,701 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val annotation = MyClass::class.java.getAnnotation(Ann::class.java)!!
    if (annotation.p1 != prop1) return "fail 1, expected = ${prop1}, actual = ${annotation.p1}"
    if (annotation.p2 != prop2) return "fail 2, expected = ${prop2}, actual = ${annotation.p2}"
    if (annotation.p3 != prop3) return "fail 3, expected = ${prop3}, actual = ${annotation.p3}"
    if (annotation.p4 != prop4) return "fail 4, expected = ${prop4}, actual = ${annotation.p4}"
    if (annotation.p5 != prop5) return "fail 5, expected = ${prop5}, actual = ${annotation.p5}"
    if (annotation.p6 != prop6) return "fail 6, expected = ${prop6}, actual = ${annotation.p6}"
    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:18,701 [main:28] - Try №408 of 797
2021-03-11 12:04:18,710 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:18,711 [main:28] - Try №409 of 797
2021-03-11 12:04:18,722 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:18,722 [main:28] - Try №410 of 797
2021-03-11 12:04:18,735 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:18,735 [main:66] - Compilation checking started
2021-03-11 12:04:18,932 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = doCall<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
        ulongList + i
    }
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:18,933 [main:28] - Try №411 of 797
2021-03-11 12:04:18,947 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:18,948 [main:28] - Try №412 of 797
2021-03-11 12:04:18,954 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:18,954 [main:66] - Compilation checking started
2021-03-11 12:04:19,254 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:19,254 [main:28] - Try №413 of 797
2021-03-11 12:04:19,269 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:19,269 [main:66] - Compilation checking started
2021-03-11 12:04:19,463 [main:49] - Result = false
Text:
import kotlin.i.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:19,464 [main:28] - Try №414 of 797
2021-03-11 12:04:19,465 [main:33] - Trying to replace Element(IMPORT_LIST) on Element(IMPORT_LIST)
2021-03-11 12:04:19,466 [main:66] - Compilation checking started
2021-03-11 12:04:19,663 [main:49] - Result = false
Text:


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:19,663 [main:28] - Try №415 of 797
2021-03-11 12:04:19,674 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:19,674 [main:66] - Compilation checking started
2021-03-11 12:04:19,865 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals()

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:19,865 [main:28] - Try №416 of 797
2021-03-11 12:04:19,883 [main:33] - Trying to replace Element(IS_EXPRESSION) on Element(IS_EXPRESSION)
2021-03-11 12:04:19,883 [main:28] - Try №417 of 797
2021-03-11 12:04:19,887 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:19,887 [main:28] - Try №418 of 797
2021-03-11 12:04:19,891 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:19,891 [main:66] - Compilation checking started
2021-03-11 12:04:20,099 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (bar in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:20,099 [main:28] - Try №419 of 797
2021-03-11 12:04:20,127 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:04:20,127 [main:66] - Compilation checking started
2021-03-11 12:04:20,325 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return {
        val base: Base<*> = Derived()
        (base.generic() as IC).s.toResultString()
    }()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:20,325 [main:28] - Try №420 of 797
2021-03-11 12:04:20,335 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:20,335 [main:66] - Compilation checking started
2021-03-11 12:04:20,535 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val p = 1
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:20,535 [main:28] - Try №421 of 797
2021-03-11 12:04:20,539 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:20,539 [main:66] - Compilation checking started
2021-03-11 12:04:20,738 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = b<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:20,738 [main:28] - Try №422 of 797
2021-03-11 12:04:20,743 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:20,744 [main:28] - Try №423 of 797
2021-03-11 12:04:20,768 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:20,768 [main:28] - Try №424 of 797
2021-03-11 12:04:20,779 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:20,779 [main:28] - Try №425 of 797
2021-03-11 12:04:20,785 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:20,786 [main:28] - Try №426 of 797
2021-03-11 12:04:20,795 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:20,796 [main:28] - Try №427 of 797
2021-03-11 12:04:20,809 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:20,809 [main:66] - Compilation checking started
2021-03-11 12:04:21,003 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Unit): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:21,004 [main:28] - Try №428 of 797
2021-03-11 12:04:21,015 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:04:21,016 [main:28] - Try №429 of 797
2021-03-11 12:04:21,025 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:21,025 [main:66] - Compilation checking started
2021-03-11 12:04:21,219 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = value<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:21,220 [main:28] - Try №430 of 797
2021-03-11 12:04:21,236 [main:33] - Trying to replace Element(LOOP_RANGE) on Element(LOOP_RANGE)
2021-03-11 12:04:21,236 [main:66] - Compilation checking started
2021-03-11 12:04:21,455 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in 1..10) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:21,455 [main:28] - Try №431 of 797
2021-03-11 12:04:21,465 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:21,466 [main:66] - Compilation checking started
2021-03-11 12:04:21,466 [main:68] - Already checked
2021-03-11 12:04:21,466 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals()

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:21,466 [main:28] - Try №432 of 797
2021-03-11 12:04:21,474 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:04:21,475 [main:66] - Compilation checking started
2021-03-11 12:04:21,672 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(i): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:21,672 [main:28] - Try №433 of 797
2021-03-11 12:04:21,678 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:21,678 [main:66] - Compilation checking started
2021-03-11 12:04:21,870 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "kotlin"
}

inline fun <T> fu0(crossinline tasksFactory: String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:21,870 [main:28] - Try №434 of 797
2021-03-11 12:04:21,879 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:21,879 [main:28] - Try №435 of 797
2021-03-11 12:04:21,887 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:21,887 [main:28] - Try №436 of 797
2021-03-11 12:04:21,899 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:04:21,899 [main:66] - Compilation checking started
2021-03-11 12:04:22,206 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        uintList += i
    }
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:22,206 [main:28] - Try №437 of 797
2021-03-11 12:04:22,222 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:22,222 [main:28] - Try №438 of 797
2021-03-11 12:04:22,234 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:22,235 [main:28] - Try №439 of 797
2021-03-11 12:04:22,244 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:22,245 [main:28] - Try №440 of 797
2021-03-11 12:04:22,256 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:22,256 [main:28] - Try №441 of 797
2021-03-11 12:04:22,259 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:22,259 [main:28] - Try №442 of 797
2021-03-11 12:04:22,269 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:22,269 [main:28] - Try №443 of 797
2021-03-11 12:04:22,280 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:22,281 [main:28] - Try №444 of 797
2021-03-11 12:04:22,291 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:22,291 [main:28] - Try №445 of 797
2021-03-11 12:04:22,297 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:22,298 [main:66] - Compilation checking started
2021-03-11 12:04:22,714 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:22,714 [main:28] - Try №446 of 797
2021-03-11 12:04:22,718 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:22,718 [main:28] - Try №447 of 797
2021-03-11 12:04:22,731 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:04:22,731 [main:28] - Try №448 of 797
2021-03-11 12:04:22,735 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:22,735 [main:28] - Try №449 of 797
2021-03-11 12:04:22,742 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:22,742 [main:28] - Try №450 of 797
2021-03-11 12:04:22,747 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:04:22,747 [main:28] - Try №451 of 797
2021-03-11 12:04:22,751 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:22,751 [main:28] - Try №452 of 797
2021-03-11 12:04:22,758 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:22,758 [main:28] - Try №453 of 797
2021-03-11 12:04:22,768 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:22,768 [main:66] - Compilation checking started
2021-03-11 12:04:23,147 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression step 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:23,147 [main:28] - Try №454 of 797
2021-03-11 12:04:23,158 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:23,159 [main:28] - Try №455 of 797
2021-03-11 12:04:23,163 [main:33] - Trying to replace Element(IMPORT_DIRECTIVE) on Element(IMPORT_DIRECTIVE)
2021-03-11 12:04:23,164 [main:28] - Try №456 of 797
2021-03-11 12:04:23,179 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:23,180 [main:66] - Compilation checking started
2021-03-11 12:04:23,612 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:23,613 [main:28] - Try №457 of 797
2021-03-11 12:04:23,634 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:23,634 [main:28] - Try №458 of 797
2021-03-11 12:04:23,641 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:23,641 [main:28] - Try №459 of 797
2021-03-11 12:04:23,666 [main:28] - Try №460 of 797
2021-03-11 12:04:23,677 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:23,677 [main:28] - Try №461 of 797
2021-03-11 12:04:23,684 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:23,685 [main:28] - Try №462 of 797
2021-03-11 12:04:23,696 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:23,696 [main:66] - Compilation checking started
2021-03-11 12:04:23,965 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(StringBuilder(), ::test)

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:23,965 [main:28] - Try №463 of 797
2021-03-11 12:04:23,976 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:23,976 [main:28] - Try №464 of 797
2021-03-11 12:04:23,988 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:04:23,989 [main:28] - Try №465 of 797
2021-03-11 12:04:23,997 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:23,997 [main:28] - Try №466 of 797
2021-03-11 12:04:24,013 [main:28] - Try №467 of 797
2021-03-11 12:04:24,016 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:24,017 [main:66] - Compilation checking started
2021-03-11 12:04:24,279 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    x(StringBuilder(), uintList)

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:24,279 [main:28] - Try №468 of 797
2021-03-11 12:04:24,282 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:04:24,283 [main:66] - Compilation checking started
2021-03-11 12:04:24,546 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(StringBuilder(), uintList)

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

fun foo(s: String) {
        state = s
    }

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:24,546 [main:28] - Try №469 of 797
2021-03-11 12:04:24,552 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:24,552 [main:28] - Try №470 of 797
2021-03-11 12:04:24,563 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:24,563 [main:66] - Compilation checking started
2021-03-11 12:04:24,906 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(StringBuilder(), "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:24,906 [main:28] - Try №471 of 797
2021-03-11 12:04:24,920 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:04:24,921 [main:28] - Try №472 of 797
2021-03-11 12:04:24,938 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:24,939 [main:28] - Try №473 of 797
2021-03-11 12:04:24,950 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:24,950 [main:66] - Compilation checking started
2021-03-11 12:04:25,301 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:25,302 [main:28] - Try №474 of 797
2021-03-11 12:04:25,328 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:04:25,328 [main:28] - Try №475 of 797
2021-03-11 12:04:25,343 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:25,343 [main:66] - Compilation checking started
2021-03-11 12:04:25,556 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 42
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:25,556 [main:28] - Try №476 of 797
2021-03-11 12:04:25,566 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:25,566 [main:28] - Try №477 of 797
2021-03-11 12:04:25,570 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:25,570 [main:66] - Compilation checking started
2021-03-11 12:04:25,786 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = s<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:25,787 [main:28] - Try №478 of 797
2021-03-11 12:04:25,801 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:04:25,801 [main:28] - Try №479 of 797
2021-03-11 12:04:25,804 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:25,804 [main:28] - Try №480 of 797
2021-03-11 12:04:25,812 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:25,812 [main:28] - Try №481 of 797
2021-03-11 12:04:25,824 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:25,824 [main:28] - Try №482 of 797
2021-03-11 12:04:25,830 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:25,830 [main:28] - Try №483 of 797
2021-03-11 12:04:25,838 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:04:25,839 [main:66] - Compilation checking started
2021-03-11 12:04:26,055 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (crossinline fn: () -> String in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:26,056 [main:28] - Try №484 of 797
2021-03-11 12:04:26,062 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:26,063 [main:66] - Compilation checking started
2021-03-11 12:04:26,273 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> fu0(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:26,274 [main:28] - Try №485 of 797
2021-03-11 12:04:26,277 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:26,277 [main:66] - Compilation checking started
2021-03-11 12:04:26,602 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return { "Fail !in Long.MAX_VALUE"}()
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:26,602 [main:28] - Try №486 of 797
2021-03-11 12:04:26,612 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:26,612 [main:28] - Try №487 of 797
2021-03-11 12:04:26,629 [main:33] - Trying to replace PsiElement(ARROW) on PsiElement(ARROW)
2021-03-11 12:04:26,629 [main:28] - Try №488 of 797
2021-03-11 12:04:26,643 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:04:26,644 [main:66] - Compilation checking started
2021-03-11 12:04:26,962 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:26,962 [main:28] - Try №489 of 797
2021-03-11 12:04:26,965 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:26,965 [main:28] - Try №490 of 797
2021-03-11 12:04:26,973 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:04:26,974 [main:66] - Compilation checking started
2021-03-11 12:04:27,183 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i: I in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:27,183 [main:28] - Try №491 of 797
2021-03-11 12:04:27,188 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:04:27,189 [main:66] - Compilation checking started
2021-03-11 12:04:27,394 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(
        val i: Int,
        val s: Short,
        val f: Float,
        val d: Double,
        val l: Long,
        val b: Byte,
        val bool: Boolean,
        val c: Char,
        val str: String,
        val i2: Int,
        val c2: Char
): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val String = 7
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:27,394 [main:28] - Try №492 of 797
2021-03-11 12:04:27,401 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:27,402 [main:28] - Try №493 of 797
2021-03-11 12:04:27,411 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:27,411 [main:28] - Try №494 of 797
2021-03-11 12:04:27,425 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:27,426 [main:28] - Try №495 of 797
2021-03-11 12:04:27,431 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:27,431 [main:28] - Try №496 of 797
2021-03-11 12:04:27,448 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:27,448 [main:66] - Compilation checking started
2021-03-11 12:04:27,771 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:27,771 [main:28] - Try №497 of 797
2021-03-11 12:04:27,786 [main:28] - Try №498 of 797
2021-03-11 12:04:27,790 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:27,790 [main:28] - Try №499 of 797
2021-03-11 12:04:27,793 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:27,793 [main:28] - Try №500 of 797
2021-03-11 12:04:27,804 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:27,804 [main:28] - Try №501 of 797
2021-03-11 12:04:27,813 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:27,814 [main:28] - Try №502 of 797
2021-03-11 12:04:27,827 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:04:27,828 [main:28] - Try №503 of 797
2021-03-11 12:04:27,837 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:27,837 [main:28] - Try №504 of 797
2021-03-11 12:04:27,846 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:27,846 [main:28] - Try №505 of 797
2021-03-11 12:04:27,864 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:04:27,864 [main:28] - Try №506 of 797
2021-03-11 12:04:27,872 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:27,872 [main:28] - Try №507 of 797
2021-03-11 12:04:27,875 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:04:27,876 [main:66] - Compilation checking started
2021-03-11 12:04:28,101 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun box(): String {
    if (Z(42)::test.invoke() != 42) throw AssertionError()
    if (L(1234L)::test.invoke() != 1234L) throw AssertionError()
    if (S("abcdef")::test.invoke() != "abcdef") throw AssertionError()

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:28,101 [main:28] - Try №508 of 797
2021-03-11 12:04:28,112 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:28,112 [main:66] - Compilation checking started
2021-03-11 12:04:28,328 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline tasksFactory: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
@JvmDefault
    private val foo: String
        get() = "O"
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:28,328 [main:28] - Try №509 of 797
2021-03-11 12:04:28,331 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:28,331 [main:66] - Compilation checking started
2021-03-11 12:04:28,646 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Double>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:28,646 [main:28] - Try №510 of 797
2021-03-11 12:04:28,650 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:28,650 [main:28] - Try №511 of 797
2021-03-11 12:04:28,664 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:28,665 [main:66] - Compilation checking started
2021-03-11 12:04:28,997 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:28,997 [main:28] - Try №512 of 797
2021-03-11 12:04:29,012 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:29,012 [main:66] - Compilation checking started
2021-03-11 12:04:29,220 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 42 downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:29,220 [main:28] - Try №513 of 797
2021-03-11 12:04:29,228 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:29,228 [main:28] - Try №514 of 797
2021-03-11 12:04:29,241 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:04:29,242 [main:28] - Try №515 of 797
2021-03-11 12:04:29,257 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:29,258 [main:28] - Try №516 of 797
2021-03-11 12:04:29,272 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:29,273 [main:66] - Compilation checking started
2021-03-11 12:04:29,493 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:29,493 [main:28] - Try №517 of 797
2021-03-11 12:04:29,510 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:04:29,511 [main:66] - Compilation checking started
2021-03-11 12:04:29,715 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
        list2.add(i)
        if (list2.size > 23) break
    }
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL downTo 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:29,715 [main:28] - Try №518 of 797
2021-03-11 12:04:29,725 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:29,725 [main:66] - Compilation checking started
2021-03-11 12:04:30,026 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL != 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:30,026 [main:28] - Try №519 of 797
2021-03-11 12:04:30,035 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:04:30,035 [main:28] - Try №520 of 797
2021-03-11 12:04:30,041 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:30,042 [main:28] - Try №521 of 797
2021-03-11 12:04:30,042 [main:28] - Try №522 of 797
2021-03-11 12:04:30,055 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:30,055 [main:66] - Compilation checking started
2021-03-11 12:04:30,263 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<in String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL != 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:30,264 [main:28] - Try №523 of 797
2021-03-11 12:04:30,289 [main:33] - Trying to replace Element(FOR) on Element(FOR)
2021-03-11 12:04:30,289 [main:66] - Compilation checking started
2021-03-11 12:04:30,496 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in (MaxUI - 2u)..MaxUI) {
        list1.add(i)
        if (list1.size > 23) break
    }
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL != 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:30,497 [main:28] - Try №524 of 797
2021-03-11 12:04:30,508 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:30,508 [main:28] - Try №525 of 797
2021-03-11 12:04:30,523 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:30,523 [main:28] - Try №526 of 797
2021-03-11 12:04:30,533 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:30,533 [main:28] - Try №527 of 797
2021-03-11 12:04:30,542 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:30,542 [main:28] - Try №528 of 797
2021-03-11 12:04:30,547 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:04:30,547 [main:28] - Try №529 of 797
2021-03-11 12:04:30,551 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:30,551 [main:28] - Try №530 of 797
2021-03-11 12:04:30,561 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:30,561 [main:66] - Compilation checking started
2021-03-11 12:04:30,777 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL != 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = Float<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:30,777 [main:28] - Try №531 of 797
2021-03-11 12:04:30,781 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:30,781 [main:28] - Try №532 of 797
2021-03-11 12:04:30,796 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:04:30,796 [main:28] - Try №533 of 797
2021-03-11 12:04:30,802 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:30,802 [main:28] - Try №534 of 797
2021-03-11 12:04:30,806 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:30,806 [main:28] - Try №535 of 797
2021-03-11 12:04:30,822 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:30,822 [main:28] - Try №536 of 797
2021-03-11 12:04:30,838 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:30,838 [main:28] - Try №537 of 797
2021-03-11 12:04:30,847 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:30,847 [main:66] - Compilation checking started
2021-03-11 12:04:31,064 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = Any<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL != 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:31,064 [main:28] - Try №538 of 797
2021-03-11 12:04:31,073 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:31,073 [main:28] - Try №539 of 797
2021-03-11 12:04:31,079 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:04:31,079 [main:28] - Try №540 of 797
2021-03-11 12:04:31,085 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:31,086 [main:28] - Try №541 of 797
2021-03-11 12:04:31,103 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:04:31,103 [main:28] - Try №542 of 797
2021-03-11 12:04:31,110 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:04:31,111 [main:28] - Try №543 of 797
2021-03-11 12:04:31,117 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:31,117 [main:28] - Try №544 of 797
2021-03-11 12:04:31,131 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:04:31,131 [main:28] - Try №545 of 797
2021-03-11 12:04:31,140 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:31,140 [main:28] - Try №546 of 797
2021-03-11 12:04:31,155 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:31,155 [main:28] - Try №547 of 797
2021-03-11 12:04:31,164 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:31,164 [main:28] - Try №548 of 797
2021-03-11 12:04:31,168 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:31,168 [main:28] - Try №549 of 797
2021-03-11 12:04:31,182 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:31,183 [main:28] - Try №550 of 797
2021-03-11 12:04:31,192 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:31,192 [main:66] - Compilation checking started
2021-03-11 12:04:31,396 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = J()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL != 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:31,397 [main:28] - Try №551 of 797
2021-03-11 12:04:31,404 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:31,405 [main:28] - Try №552 of 797
2021-03-11 12:04:31,414 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:31,415 [main:66] - Compilation checking started
2021-03-11 12:04:31,712 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL != 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:31,712 [main:28] - Try №553 of 797
2021-03-11 12:04:31,722 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:31,722 [main:66] - Compilation checking started
2021-03-11 12:04:31,927 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> String): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val Z = 7uL != 1uL
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:31,927 [main:28] - Try №554 of 797
2021-03-11 12:04:31,936 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:31,936 [main:28] - Try №555 of 797
2021-03-11 12:04:31,947 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:31,948 [main:66] - Compilation checking started
2021-03-11 12:04:32,257 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b(crossinline test: () -> String) = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:32,257 [main:28] - Try №556 of 797
2021-03-11 12:04:32,263 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:04:32,263 [main:66] - Compilation checking started
2021-03-11 12:04:32,570 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:32,570 [main:28] - Try №557 of 797
2021-03-11 12:04:32,574 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:32,574 [main:28] - Try №558 of 797
2021-03-11 12:04:32,578 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:32,578 [main:28] - Try №559 of 797
2021-03-11 12:04:32,593 [main:28] - Try №560 of 797
2021-03-11 12:04:32,609 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:32,609 [main:28] - Try №561 of 797
2021-03-11 12:04:32,618 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:32,618 [main:28] - Try №562 of 797
2021-03-11 12:04:32,629 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:32,629 [main:66] - Compilation checking started
2021-03-11 12:04:32,831 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    var d = 0.0
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:32,831 [main:28] - Try №563 of 797
2021-03-11 12:04:32,841 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:32,841 [main:28] - Try №564 of 797
2021-03-11 12:04:32,848 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:32,848 [main:28] - Try №565 of 797
2021-03-11 12:04:32,865 [main:33] - Trying to replace PsiElement(ARROW) on PsiElement(ARROW)
2021-03-11 12:04:32,866 [main:28] - Try №566 of 797
2021-03-11 12:04:32,873 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:32,874 [main:66] - Compilation checking started
2021-03-11 12:04:33,074 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    fun local() {
        result += "1"
    }
    local()
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:33,075 [main:28] - Try №567 of 797
2021-03-11 12:04:33,078 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:33,079 [main:28] - Try №568 of 797
2021-03-11 12:04:33,091 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:33,092 [main:28] - Try №569 of 797
2021-03-11 12:04:33,107 [main:28] - Try №570 of 797
2021-03-11 12:04:33,121 [main:28] - Try №571 of 797
2021-03-11 12:04:33,130 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:33,130 [main:28] - Try №572 of 797
2021-03-11 12:04:33,134 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:33,134 [main:28] - Try №573 of 797
2021-03-11 12:04:33,139 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:33,140 [main:66] - Compilation checking started
2021-03-11 12:04:33,351 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = longList += i
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:33,352 [main:28] - Try №574 of 797
2021-03-11 12:04:33,366 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:04:33,366 [main:28] - Try №575 of 797
2021-03-11 12:04:33,376 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:33,377 [main:28] - Try №576 of 797
2021-03-11 12:04:33,392 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:33,392 [main:66] - Compilation checking started
2021-03-11 12:04:33,597 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 1 downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:33,597 [main:28] - Try №577 of 797
2021-03-11 12:04:33,604 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:33,604 [main:28] - Try №578 of 797
2021-03-11 12:04:33,612 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:04:33,612 [main:28] - Try №579 of 797
2021-03-11 12:04:33,616 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:33,616 [main:28] - Try №580 of 797
2021-03-11 12:04:33,626 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:33,626 [main:28] - Try №581 of 797
2021-03-11 12:04:33,635 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:04:33,635 [main:28] - Try №582 of 797
2021-03-11 12:04:33,646 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:33,646 [main:28] - Try №583 of 797
2021-03-11 12:04:33,662 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:33,662 [main:66] - Compilation checking started
2021-03-11 12:04:33,864 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 1 until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:33,864 [main:28] - Try №584 of 797
2021-03-11 12:04:33,869 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:33,869 [main:28] - Try №585 of 797
2021-03-11 12:04:33,878 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:33,878 [main:28] - Try №586 of 797
2021-03-11 12:04:33,885 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:33,885 [main:28] - Try №587 of 797
2021-03-11 12:04:33,888 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:33,888 [main:66] - Compilation checking started
2021-03-11 12:04:34,090 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <x> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:34,090 [main:28] - Try №588 of 797
2021-03-11 12:04:34,096 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:34,097 [main:28] - Try №589 of 797
2021-03-11 12:04:34,107 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:04:34,107 [main:66] - Compilation checking started
2021-03-11 12:04:34,311 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (finallyBlock: ()-> String in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:34,312 [main:28] - Try №590 of 797
2021-03-11 12:04:34,322 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:34,323 [main:66] - Compilation checking started
2021-03-11 12:04:34,521 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    var c: Continuation<Any>? = null
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:34,521 [main:28] - Try №591 of 797
2021-03-11 12:04:34,524 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:34,524 [main:28] - Try №592 of 797
2021-03-11 12:04:34,530 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:34,531 [main:28] - Try №593 of 797
2021-03-11 12:04:34,545 [main:28] - Try №594 of 797
2021-03-11 12:04:34,549 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:34,549 [main:66] - Compilation checking started
2021-03-11 12:04:34,757 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = T<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:34,757 [main:28] - Try №595 of 797
2021-03-11 12:04:34,760 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:34,760 [main:28] - Try №596 of 797
2021-03-11 12:04:34,765 [main:33] - Trying to replace Element(IMPORT_LIST) on Element(IMPORT_LIST)
2021-03-11 12:04:34,765 [main:66] - Compilation checking started
2021-03-11 12:04:34,972 [main:49] - Result = false
Text:
import test.*
import Kind.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:34,973 [main:28] - Try №597 of 797
2021-03-11 12:04:34,976 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:34,976 [main:28] - Try №598 of 797
2021-03-11 12:04:34,991 [main:28] - Try №599 of 797
2021-03-11 12:04:34,994 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:34,994 [main:28] - Try №600 of 797
2021-03-11 12:04:35,010 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:35,010 [main:28] - Try №601 of 797
2021-03-11 12:04:35,025 [main:28] - Try №602 of 797
2021-03-11 12:04:35,041 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:04:35,041 [main:28] - Try №603 of 797
2021-03-11 12:04:35,050 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:35,051 [main:28] - Try №604 of 797
2021-03-11 12:04:35,060 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:35,060 [main:28] - Try №605 of 797
2021-03-11 12:04:35,077 [main:33] - Trying to replace Element(IS_EXPRESSION) on Element(IS_EXPRESSION)
2021-03-11 12:04:35,077 [main:28] - Try №606 of 797
2021-03-11 12:04:35,087 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:35,087 [main:28] - Try №607 of 797
2021-03-11 12:04:35,091 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:04:35,091 [main:28] - Try №608 of 797
2021-03-11 12:04:35,106 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:35,106 [main:28] - Try №609 of 797
2021-03-11 12:04:35,111 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:04:35,111 [main:28] - Try №610 of 797
2021-03-11 12:04:35,117 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:35,117 [main:28] - Try №611 of 797
2021-03-11 12:04:35,130 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:35,130 [main:28] - Try №612 of 797
2021-03-11 12:04:35,142 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:35,142 [main:28] - Try №613 of 797
2021-03-11 12:04:35,153 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:35,153 [main:28] - Try №614 of 797
2021-03-11 12:04:35,166 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:04:35,166 [main:28] - Try №615 of 797
2021-03-11 12:04:35,172 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:35,172 [main:66] - Compilation checking started
2021-03-11 12:04:35,376 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    p()

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:35,376 [main:28] - Try №616 of 797
2021-03-11 12:04:35,382 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:35,382 [main:28] - Try №617 of 797
2021-03-11 12:04:35,393 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:35,394 [main:66] - Compilation checking started
2021-03-11 12:04:35,395 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:04:35,395 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
var 981llj): Int = 42
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:35,395 [main:28] - Try №618 of 797
2021-03-11 12:04:35,399 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:35,399 [main:28] - Try №619 of 797
2021-03-11 12:04:35,407 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:35,407 [main:28] - Try №620 of 797
2021-03-11 12:04:35,419 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:35,419 [main:66] - Compilation checking started
2021-03-11 12:04:35,633 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): String = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:35,633 [main:28] - Try №621 of 797
2021-03-11 12:04:35,636 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:35,637 [main:28] - Try №622 of 797
2021-03-11 12:04:35,645 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:35,645 [main:28] - Try №623 of 797
2021-03-11 12:04:35,661 [main:28] - Try №624 of 797
2021-03-11 12:04:35,677 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:35,677 [main:28] - Try №625 of 797
2021-03-11 12:04:35,692 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:04:35,692 [main:28] - Try №626 of 797
2021-03-11 12:04:35,707 [main:28] - Try №627 of 797
2021-03-11 12:04:35,716 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:35,716 [main:28] - Try №628 of 797
2021-03-11 12:04:35,726 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:35,727 [main:28] - Try №629 of 797
2021-03-11 12:04:35,738 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:35,738 [main:28] - Try №630 of 797
2021-03-11 12:04:35,751 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:35,751 [main:28] - Try №631 of 797
2021-03-11 12:04:35,762 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:35,762 [main:28] - Try №632 of 797
2021-03-11 12:04:35,779 [main:33] - Trying to replace Element(LOOP_RANGE) on Element(LOOP_RANGE)
2021-03-11 12:04:35,779 [main:66] - Compilation checking started
2021-03-11 12:04:35,977 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in s) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:35,977 [main:28] - Try №633 of 797
2021-03-11 12:04:35,991 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:04:35,991 [main:28] - Try №634 of 797
2021-03-11 12:04:36,006 [main:28] - Try №635 of 797
2021-03-11 12:04:36,024 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:04:36,024 [main:28] - Try №636 of 797
2021-03-11 12:04:36,040 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:36,040 [main:66] - Compilation checking started
2021-03-11 12:04:36,243 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 123 downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:36,244 [main:28] - Try №637 of 797
2021-03-11 12:04:36,250 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:36,250 [main:66] - Compilation checking started
2021-03-11 12:04:36,549 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val A = mutableListOf<Any>()
val anno = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val uintList = mutableListOf<UInt>()
    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:36,549 [main:28] - Try №638 of 797
2021-03-11 12:04:36,557 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:36,558 [main:66] - Compilation checking started
2021-03-11 12:04:36,920 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = mutableListOf<String>()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:36,920 [main:28] - Try №639 of 797
2021-03-11 12:04:36,927 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:36,927 [main:28] - Try №640 of 797
2021-03-11 12:04:36,936 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:36,936 [main:28] - Try №641 of 797
2021-03-11 12:04:36,940 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:36,940 [main:28] - Try №642 of 797
2021-03-11 12:04:36,947 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:36,947 [main:66] - Compilation checking started
2021-03-11 12:04:37,316 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:37,316 [main:28] - Try №643 of 797
2021-03-11 12:04:37,327 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:37,327 [main:28] - Try №644 of 797
2021-03-11 12:04:37,341 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:04:37,341 [main:28] - Try №645 of 797
2021-03-11 12:04:37,349 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:37,349 [main:28] - Try №646 of 797
2021-03-11 12:04:37,353 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:37,354 [main:28] - Try №647 of 797
2021-03-11 12:04:37,360 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:37,361 [main:28] - Try №648 of 797
2021-03-11 12:04:37,365 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:04:37,365 [main:28] - Try №649 of 797
2021-03-11 12:04:37,365 [main:28] - Try №650 of 797
2021-03-11 12:04:37,370 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:37,370 [main:28] - Try №651 of 797
2021-03-11 12:04:37,381 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:04:37,381 [main:28] - Try №652 of 797
2021-03-11 12:04:37,390 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:37,390 [main:28] - Try №653 of 797
2021-03-11 12:04:37,400 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:37,401 [main:66] - Compilation checking started
2021-03-11 12:04:37,632 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals()

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun <T> b() = { it: String -> }

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:37,632 [main:28] - Try №654 of 797
2021-03-11 12:04:37,636 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:04:37,636 [main:66] - Compilation checking started
2021-03-11 12:04:37,993 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:37,993 [main:28] - Try №655 of 797
2021-03-11 12:04:37,999 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:37,999 [main:28] - Try №656 of 797
2021-03-11 12:04:38,004 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:04:38,004 [main:28] - Try №657 of 797
2021-03-11 12:04:38,020 [main:33] - Trying to replace Element(FUNCTION_TYPE) on Element(FUNCTION_TYPE)
2021-03-11 12:04:38,020 [main:28] - Try №658 of 797
2021-03-11 12:04:38,026 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:04:38,026 [main:28] - Try №659 of 797
2021-03-11 12:04:38,030 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:38,031 [main:28] - Try №660 of 797
2021-03-11 12:04:38,038 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:38,039 [main:28] - Try №661 of 797
2021-03-11 12:04:38,042 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:38,042 [main:28] - Try №662 of 797
2021-03-11 12:04:38,049 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:38,049 [main:66] - Compilation checking started
2021-03-11 12:04:38,050 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:04:38,051 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String x!!.toDouble()

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:38,051 [main:28] - Try №663 of 797
2021-03-11 12:04:38,065 [main:28] - Try №664 of 797
2021-03-11 12:04:38,071 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:38,071 [main:28] - Try №665 of 797
2021-03-11 12:04:38,087 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:38,087 [main:28] - Try №666 of 797
2021-03-11 12:04:38,092 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:38,092 [main:28] - Try №667 of 797
2021-03-11 12:04:38,101 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:04:38,101 [main:28] - Try №668 of 797
2021-03-11 12:04:38,116 [main:28] - Try №669 of 797
2021-03-11 12:04:38,127 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:38,127 [main:28] - Try №670 of 797
2021-03-11 12:04:38,137 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:38,137 [main:28] - Try №671 of 797
2021-03-11 12:04:38,149 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:38,149 [main:28] - Try №672 of 797
2021-03-11 12:04:38,153 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:38,153 [main:66] - Compilation checking started
2021-03-11 12:04:38,505 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:38,505 [main:28] - Try №673 of 797
2021-03-11 12:04:38,517 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:38,518 [main:28] - Try №674 of 797
2021-03-11 12:04:38,532 [main:28] - Try №675 of 797
2021-03-11 12:04:38,544 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:04:38,544 [main:28] - Try №676 of 797
2021-03-11 12:04:38,554 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:04:38,554 [main:28] - Try №677 of 797
2021-03-11 12:04:38,564 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:38,565 [main:28] - Try №678 of 797
2021-03-11 12:04:38,572 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:38,572 [main:28] - Try №679 of 797
2021-03-11 12:04:38,587 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:38,587 [main:28] - Try №680 of 797
2021-03-11 12:04:38,596 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:38,596 [main:66] - Compilation checking started
2021-03-11 12:04:38,834 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in ulongProgression + 42) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = LOCAL_PRIVATE<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:38,835 [main:28] - Try №681 of 797
2021-03-11 12:04:38,839 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:04:38,840 [main:28] - Try №682 of 797
2021-03-11 12:04:38,854 [main:28] - Try №683 of 797
2021-03-11 12:04:38,858 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:38,858 [main:28] - Try №684 of 797
2021-03-11 12:04:38,872 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:04:38,872 [main:28] - Try №685 of 797
2021-03-11 12:04:38,877 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:04:38,877 [main:28] - Try №686 of 797
2021-03-11 12:04:38,881 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:38,881 [main:28] - Try №687 of 797
2021-03-11 12:04:38,890 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:38,890 [main:28] - Try №688 of 797
2021-03-11 12:04:38,904 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:38,904 [main:28] - Try №689 of 797
2021-03-11 12:04:38,914 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:38,914 [main:28] - Try №690 of 797
2021-03-11 12:04:38,929 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:38,929 [main:28] - Try №691 of 797
2021-03-11 12:04:38,938 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:38,939 [main:28] - Try №692 of 797
2021-03-11 12:04:38,948 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:38,948 [main:28] - Try №693 of 797
2021-03-11 12:04:38,956 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:38,956 [main:28] - Try №694 of 797
2021-03-11 12:04:38,962 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:38,962 [main:28] - Try №695 of 797
2021-03-11 12:04:38,975 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:04:38,975 [main:28] - Try №696 of 797
2021-03-11 12:04:38,988 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:38,988 [main:28] - Try №697 of 797
2021-03-11 12:04:38,992 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:38,992 [main:28] - Try №698 of 797
2021-03-11 12:04:39,006 [main:28] - Try №699 of 797
2021-03-11 12:04:39,016 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:39,016 [main:28] - Try №700 of 797
2021-03-11 12:04:39,032 [main:33] - Trying to replace Element(LOOP_RANGE) on Element(LOOP_RANGE)
2021-03-11 12:04:39,033 [main:66] - Compilation checking started
2021-03-11 12:04:39,380 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val ulongProgression = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:39,380 [main:28] - Try №701 of 797
2021-03-11 12:04:39,397 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:39,397 [main:28] - Try №702 of 797
2021-03-11 12:04:39,402 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:39,403 [main:66] - Compilation checking started
2021-03-11 12:04:39,757 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:39,757 [main:28] - Try №703 of 797
2021-03-11 12:04:39,760 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:39,760 [main:66] - Compilation checking started
2021-03-11 12:04:39,985 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = fld<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:39,985 [main:28] - Try №704 of 797
2021-03-11 12:04:40,002 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(PARENTHESIZED)
2021-03-11 12:04:40,002 [main:28] - Try №705 of 797
2021-03-11 12:04:40,005 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:40,006 [main:28] - Try №706 of 797
2021-03-11 12:04:40,021 [main:28] - Try №707 of 797
2021-03-11 12:04:40,035 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:40,036 [main:28] - Try №708 of 797
2021-03-11 12:04:40,046 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:40,046 [main:28] - Try №709 of 797
2021-03-11 12:04:40,051 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:40,051 [main:28] - Try №710 of 797
2021-03-11 12:04:40,055 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:40,055 [main:28] - Try №711 of 797
2021-03-11 12:04:40,065 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:40,065 [main:28] - Try №712 of 797
2021-03-11 12:04:40,066 [main:33] - Trying to replace Element(PACKAGE_DIRECTIVE) on Element(PACKAGE_DIRECTIVE)
2021-03-11 12:04:40,066 [main:66] - Compilation checking started
2021-03-11 12:04:40,066 [main:68] - Already checked
2021-03-11 12:04:40,066 [main:28] - Try №713 of 797
2021-03-11 12:04:40,070 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:40,070 [main:28] - Try №714 of 797
2021-03-11 12:04:40,083 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:04:40,083 [main:28] - Try №715 of 797
2021-03-11 12:04:40,094 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:40,094 [main:28] - Try №716 of 797
2021-03-11 12:04:40,105 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:40,105 [main:28] - Try №717 of 797
2021-03-11 12:04:40,112 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:04:40,112 [main:66] - Compilation checking started
2021-03-11 12:04:40,336 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <T> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:40,336 [main:28] - Try №718 of 797
2021-03-11 12:04:40,342 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:04:40,342 [main:28] - Try №719 of 797
2021-03-11 12:04:40,348 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:40,348 [main:28] - Try №720 of 797
2021-03-11 12:04:40,355 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:40,355 [main:66] - Compilation checking started
2021-03-11 12:04:40,580 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): T {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val ulongList = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:40,580 [main:28] - Try №721 of 797
2021-03-11 12:04:40,585 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:40,585 [main:28] - Try №722 of 797
2021-03-11 12:04:40,591 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:40,591 [main:28] - Try №723 of 797
2021-03-11 12:04:40,600 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:40,600 [main:28] - Try №724 of 797
2021-03-11 12:04:40,604 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:40,604 [main:28] - Try №725 of 797
2021-03-11 12:04:40,612 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:04:40,612 [main:28] - Try №726 of 797
2021-03-11 12:04:40,618 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:40,619 [main:28] - Try №727 of 797
2021-03-11 12:04:40,624 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:40,625 [main:28] - Try №728 of 797
2021-03-11 12:04:40,634 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:40,634 [main:28] - Try №729 of 797
2021-03-11 12:04:40,637 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:40,638 [main:66] - Compilation checking started
2021-03-11 12:04:40,970 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:40,970 [main:28] - Try №730 of 797
2021-03-11 12:04:40,977 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:40,977 [main:28] - Try №731 of 797
2021-03-11 12:04:40,983 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:40,983 [main:28] - Try №732 of 797
2021-03-11 12:04:41,001 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:04:41,002 [main:66] - Compilation checking started
2021-03-11 12:04:41,003 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:04:41,003 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression as 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:41,003 [main:28] - Try №733 of 797
2021-03-11 12:04:41,013 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:41,013 [main:28] - Try №734 of 797
2021-03-11 12:04:41,020 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:41,020 [main:28] - Try №735 of 797
2021-03-11 12:04:41,025 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:04:41,025 [main:28] - Try №736 of 797
2021-03-11 12:04:41,029 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:41,029 [main:28] - Try №737 of 797
2021-03-11 12:04:41,044 [main:28] - Try №738 of 797
2021-03-11 12:04:41,053 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:41,053 [main:28] - Try №739 of 797
2021-03-11 12:04:41,059 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:41,059 [main:28] - Try №740 of 797
2021-03-11 12:04:41,065 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:41,066 [main:28] - Try №741 of 797
2021-03-11 12:04:41,077 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:41,078 [main:28] - Try №742 of 797
2021-03-11 12:04:41,081 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:41,081 [main:28] - Try №743 of 797
2021-03-11 12:04:41,090 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:41,090 [main:28] - Try №744 of 797
2021-03-11 12:04:41,094 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:41,094 [main:28] - Try №745 of 797
2021-03-11 12:04:41,105 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:41,105 [main:28] - Try №746 of 797
2021-03-11 12:04:41,116 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:04:41,116 [main:28] - Try №747 of 797
2021-03-11 12:04:41,120 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:41,120 [main:28] - Try №748 of 797
2021-03-11 12:04:41,123 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:41,123 [main:28] - Try №749 of 797
2021-03-11 12:04:41,127 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:41,127 [main:28] - Try №750 of 797
2021-03-11 12:04:41,142 [main:28] - Try №751 of 797
2021-03-11 12:04:41,145 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:41,145 [main:66] - Compilation checking started
2021-03-11 12:04:41,379 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): ArrayList = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = mutableListOf<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:41,379 [main:28] - Try №752 of 797
2021-03-11 12:04:41,386 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:04:41,386 [main:28] - Try №753 of 797
2021-03-11 12:04:41,402 [main:33] - Trying to replace Element(FUNCTION_TYPE) on Element(FUNCTION_TYPE)
2021-03-11 12:04:41,402 [main:28] - Try №754 of 797
2021-03-11 12:04:41,413 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:41,413 [main:28] - Try №755 of 797
2021-03-11 12:04:41,429 [main:33] - Trying to replace PsiElement(ARROW) on PsiElement(ARROW)
2021-03-11 12:04:41,430 [main:28] - Try №756 of 797
2021-03-11 12:04:41,439 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:41,439 [main:28] - Try №757 of 797
2021-03-11 12:04:41,451 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:04:41,452 [main:28] - Try №758 of 797
2021-03-11 12:04:41,467 [main:28] - Try №759 of 797
2021-03-11 12:04:41,477 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:41,477 [main:28] - Try №760 of 797
2021-03-11 12:04:41,481 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:41,481 [main:28] - Try №761 of 797
2021-03-11 12:04:41,488 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:04:41,488 [main:28] - Try №762 of 797
2021-03-11 12:04:41,492 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:41,492 [main:66] - Compilation checking started
2021-03-11 12:04:41,827 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:41,827 [main:28] - Try №763 of 797
2021-03-11 12:04:41,833 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:41,833 [main:66] - Compilation checking started
2021-03-11 12:04:42,064 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Int = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:42,064 [main:28] - Try №764 of 797
2021-03-11 12:04:42,071 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:42,071 [main:66] - Compilation checking started
2021-03-11 12:04:42,300 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    s({ state += "K" }, ::unit)

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:42,300 [main:28] - Try №765 of 797
2021-03-11 12:04:42,316 [main:28] - Try №766 of 797
2021-03-11 12:04:42,322 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:42,323 [main:66] - Compilation checking started
2021-03-11 12:04:42,548 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = single()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:42,548 [main:28] - Try №767 of 797
2021-03-11 12:04:42,563 [main:28] - Try №768 of 797
2021-03-11 12:04:42,574 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:42,574 [main:66] - Compilation checking started
2021-03-11 12:04:42,804 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    var sum = 0
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:42,804 [main:28] - Try №769 of 797
2021-03-11 12:04:42,821 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:04:42,822 [main:66] - Compilation checking started
2021-03-11 12:04:43,040 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
        sumL = sumL * 10 + i
    }
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:43,040 [main:28] - Try №770 of 797
2021-03-11 12:04:43,055 [main:28] - Try №771 of 797
2021-03-11 12:04:43,070 [main:28] - Try №772 of 797
2021-03-11 12:04:43,078 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:43,078 [main:28] - Try №773 of 797
2021-03-11 12:04:43,084 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:04:43,084 [main:28] - Try №774 of 797
2021-03-11 12:04:43,096 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:04:43,096 [main:28] - Try №775 of 797
2021-03-11 12:04:43,103 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:43,104 [main:28] - Try №776 of 797
2021-03-11 12:04:43,114 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:43,114 [main:28] - Try №777 of 797
2021-03-11 12:04:43,124 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:43,125 [main:28] - Try №778 of 797
2021-03-11 12:04:43,133 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:43,133 [main:28] - Try №779 of 797
2021-03-11 12:04:43,149 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:04:43,149 [main:28] - Try №780 of 797
2021-03-11 12:04:43,156 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:43,156 [main:28] - Try №781 of 797
2021-03-11 12:04:43,167 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:43,167 [main:28] - Try №782 of 797
2021-03-11 12:04:43,177 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:43,177 [main:28] - Try №783 of 797
2021-03-11 12:04:43,180 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:43,180 [main:28] - Try №784 of 797
2021-03-11 12:04:43,185 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:04:43,186 [main:28] - Try №785 of 797
2021-03-11 12:04:43,189 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:04:43,189 [main:28] - Try №786 of 797
2021-03-11 12:04:43,197 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:04:43,198 [main:28] - Try №787 of 797
2021-03-11 12:04:43,204 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:43,204 [main:28] - Try №788 of 797
2021-03-11 12:04:43,218 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:04:43,218 [main:28] - Try №789 of 797
2021-03-11 12:04:43,227 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:43,227 [main:28] - Try №790 of 797
2021-03-11 12:04:43,237 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:04:43,237 [main:28] - Try №791 of 797
2021-03-11 12:04:43,252 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:04:43,252 [main:28] - Try №792 of 797
2021-03-11 12:04:43,258 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:43,259 [main:66] - Compilation checking started
2021-03-11 12:04:43,485 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): Float {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:43,485 [main:28] - Try №793 of 797
2021-03-11 12:04:43,491 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:43,491 [main:28] - Try №794 of 797
2021-03-11 12:04:43,503 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:04:43,504 [main:28] - Try №795 of 797
2021-03-11 12:04:43,510 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:04:43,511 [main:66] - Compilation checking started
2021-03-11 12:04:43,745 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
                result1 = x
            }

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:43,746 [main:28] - Try №796 of 797
2021-03-11 12:04:43,752 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:04:43,753 [main:28] - Try №797 of 797
2021-03-11 12:04:43,770 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:04:43,882 [main:66] - Compilation checking started
2021-03-11 12:04:44,221 [main:66] - Compilation checking started
2021-03-11 12:04:44,585 [main:66] - Compilation checking started
2021-03-11 12:04:44,916 [main:66] - Compilation checking started
2021-03-11 12:04:45,255 [main:66] - Compilation checking started
2021-03-11 12:04:45,579 [main:66] - Compilation checking started
2021-03-11 12:04:45,893 [main:66] - Compilation checking started
2021-03-11 12:04:45,893 [main:68] - Already checked
2021-03-11 12:04:45,985 [main:66] - Compilation checking started
2021-03-11 12:04:46,317 [main:66] - Compilation checking started
2021-03-11 12:04:46,318 [main:68] - Already checked
2021-03-11 12:04:46,408 [main:66] - Compilation checking started
2021-03-11 12:04:46,408 [main:68] - Already checked
2021-03-11 12:04:46,499 [main:66] - Compilation checking started
2021-03-11 12:04:46,499 [main:68] - Already checked
2021-03-11 12:04:46,591 [main:66] - Compilation checking started
2021-03-11 12:04:46,591 [main:68] - Already checked
2021-03-11 12:04:46,684 [main:66] - Compilation checking started
2021-03-11 12:04:46,684 [main:68] - Already checked
2021-03-11 12:04:46,776 [main:66] - Compilation checking started
2021-03-11 12:04:46,776 [main:68] - Already checked
2021-03-11 12:04:46,867 [main:66] - Compilation checking started
2021-03-11 12:04:46,867 [main:68] - Already checked
2021-03-11 12:04:46,961 [main:66] - Compilation checking started
2021-03-11 12:04:47,285 [main:66] - Compilation checking started
2021-03-11 12:04:47,285 [main:68] - Already checked
2021-03-11 12:04:47,377 [main:66] - Compilation checking started
2021-03-11 12:04:47,694 [main:66] - Compilation checking started
2021-03-11 12:04:47,694 [main:68] - Already checked
2021-03-11 12:04:47,785 [main:66] - Compilation checking started
2021-03-11 12:04:47,786 [main:68] - Already checked
2021-03-11 12:04:47,877 [main:66] - Compilation checking started
2021-03-11 12:04:47,877 [main:68] - Already checked
2021-03-11 12:04:47,969 [main:66] - Compilation checking started
2021-03-11 12:04:47,969 [main:68] - Already checked
2021-03-11 12:04:48,061 [main:66] - Compilation checking started
2021-03-11 12:04:48,061 [main:68] - Already checked
2021-03-11 12:04:48,152 [main:66] - Compilation checking started
2021-03-11 12:04:48,152 [main:68] - Already checked
2021-03-11 12:04:48,244 [main:66] - Compilation checking started
2021-03-11 12:04:48,244 [main:68] - Already checked
2021-03-11 12:04:48,340 [main:66] - Compilation checking started
2021-03-11 12:04:48,341 [main:68] - Already checked
2021-03-11 12:04:48,348 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:48,348 [main:66] - Compilation checking started
2021-03-11 12:04:48,568 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: Long) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:48,569 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:48,569 [main:66] - Compilation checking started
2021-03-11 12:04:48,569 [main:68] - Already checked
2021-03-11 12:04:48,569 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:48,569 [main:66] - Compilation checking started
2021-03-11 12:04:48,809 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<LinkedHashMap<Pair<Double, Float>, Boolean>>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:48,809 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:48,810 [main:66] - Compilation checking started
2021-03-11 12:04:49,031 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: Int): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:49,031 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:49,031 [main:66] - Compilation checking started
2021-03-11 12:04:49,259 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Int): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:49,259 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:49,259 [main:66] - Compilation checking started
2021-03-11 12:04:49,497 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Collection<HashMap<LinkedHashMap<Pair<Short, HashSet<Char>>, ULong>, Float>>) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:49,498 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:49,498 [main:66] - Compilation checking started
2021-03-11 12:04:49,739 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Any) = a < b

inline fun <Ty1> T(f: () -> Object): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:49,740 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:49,740 [main:66] - Compilation checking started
2021-03-11 12:04:50,091 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:50,091 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:50,091 [main:66] - Compilation checking started
2021-03-11 12:04:50,329 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: Object) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<Long>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:50,329 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:50,329 [main:66] - Compilation checking started
2021-03-11 12:04:50,670 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<String>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:50,670 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:50,670 [main:66] - Compilation checking started
2021-03-11 12:04:51,004 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Long>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:51,005 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:51,005 [main:66] - Compilation checking started
2021-03-11 12:04:51,336 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<Int>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:51,336 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:51,336 [main:66] - Compilation checking started
2021-03-11 12:04:51,679 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:51,679 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:51,679 [main:66] - Compilation checking started
2021-03-11 12:04:51,912 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Object>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:51,912 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:51,913 [main:66] - Compilation checking started
2021-03-11 12:04:52,140 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : Object {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:52,140 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:52,140 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:52,140 [main:66] - Compilation checking started
2021-03-11 12:04:52,371 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Char = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:52,371 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:52,371 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:52,371 [main:66] - Compilation checking started
2021-03-11 12:04:52,601 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : LinkedHashSet<Byte> {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:52,602 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:52,602 [main:66] - Compilation checking started
2021-03-11 12:04:52,832 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<HashMap<UShort, Array<Double>>>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:52,832 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:52,833 [main:66] - Compilation checking started
2021-03-11 12:04:53,073 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<Comparable<Any>>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:53,073 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:53,073 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:53,073 [main:66] - Compilation checking started
2021-03-11 12:04:53,324 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: Map<Long, Double>) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:53,324 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:53,324 [main:66] - Compilation checking started
2021-03-11 12:04:53,566 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: Long): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:53,567 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:53,567 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:53,567 [main:66] - Compilation checking started
2021-03-11 12:04:53,804 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<HashMap<UInt, ArrayDeque<HashSet<Float>>>>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:53,804 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:53,804 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:53,804 [main:66] - Compilation checking started
2021-03-11 12:04:54,052 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Object): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:54,052 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:54,052 [main:66] - Compilation checking started
2021-03-11 12:04:54,283 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Int>(files.map { it })
}


2021-03-11 12:04:54,283 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:54,283 [main:66] - Compilation checking started
2021-03-11 12:04:54,515 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): Int {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:54,515 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:54,516 [main:66] - Compilation checking started
2021-03-11 12:04:54,745 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Any = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:54,746 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:54,746 [main:66] - Compilation checking started
2021-03-11 12:04:54,974 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Map<Boolean, Short>>(files.map { it })
}


2021-03-11 12:04:54,975 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:54,975 [main:66] - Compilation checking started
2021-03-11 12:04:55,216 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: Set<LinkedHashSet<Byte>>): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:55,217 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,217 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,217 [main:66] - Compilation checking started
2021-03-11 12:04:55,451 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): LinkedHashSet<Float> = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:55,452 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,452 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,452 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,452 [main:66] - Compilation checking started
2021-03-11 12:04:55,692 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): () -> Ty1 {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:55,693 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,693 [main:66] - Compilation checking started
2021-03-11 12:04:55,921 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: Long) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:55,921 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,921 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,921 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,921 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:55,922 [main:66] - Compilation checking started
2021-03-11 12:04:56,149 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Double>(files.map { it })
}


2021-03-11 12:04:56,149 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:56,150 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:56,150 [main:66] - Compilation checking started
2021-03-11 12:04:56,390 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<Int>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:56,390 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:56,390 [main:66] - Compilation checking started
2021-03-11 12:04:56,621 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : String) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:56,621 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:56,621 [main:66] - Compilation checking started
2021-03-11 12:04:56,621 [main:68] - Already checked
2021-03-11 12:04:56,621 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : String) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:56,621 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:56,622 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:56,622 [main:66] - Compilation checking started
2021-03-11 12:04:56,855 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Map<String, Char>): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:56,855 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:56,855 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:56,855 [main:66] - Compilation checking started
2021-03-11 12:04:56,855 [main:68] - Already checked
2021-03-11 12:04:56,855 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<Int>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:56,856 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:56,856 [main:66] - Compilation checking started
2021-03-11 12:04:57,091 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<ArrayDeque<String>>(files.map { it })
}


2021-03-11 12:04:57,091 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:57,091 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:57,091 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:57,091 [main:66] - Compilation checking started
2021-03-11 12:04:57,318 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Long>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:57,318 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:57,318 [main:66] - Compilation checking started
2021-03-11 12:04:57,565 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Map<ULong, Boolean>>(files.map { it })
}


2021-03-11 12:04:57,565 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:57,566 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:57,566 [main:66] - Compilation checking started
2021-03-11 12:04:57,799 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: UInt, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:57,800 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:57,800 [main:66] - Compilation checking started
2021-03-11 12:04:58,039 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: Float) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:58,039 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,039 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,039 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,040 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,040 [main:66] - Compilation checking started
2021-03-11 12:04:58,276 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): ArrayList<ULong> {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:58,276 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,276 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,277 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,277 [main:66] - Compilation checking started
2021-03-11 12:04:58,516 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<Short>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:58,516 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,516 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,517 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,517 [main:66] - Compilation checking started
2021-03-11 12:04:58,753 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<Float>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:58,753 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,753 [main:66] - Compilation checking started
2021-03-11 12:04:58,753 [main:68] - Already checked
2021-03-11 12:04:58,753 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Object): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:58,753 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,754 [main:66] - Compilation checking started
2021-03-11 12:04:58,980 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : ULong) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:58,980 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,980 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:58,980 [main:66] - Compilation checking started
2021-03-11 12:04:59,248 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<UInt>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:59,249 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,249 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,249 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,250 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,250 [main:66] - Compilation checking started
2021-03-11 12:04:59,480 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Short>(files.map { it })
}


2021-03-11 12:04:59,481 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,481 [main:66] - Compilation checking started
2021-03-11 12:04:59,715 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<HashSet<Pair<MutableMap<Short, Triple<Byte, Byte, Map<UInt, Long>>>, LinkedHashSet<ArrayDeque<Int>>>>>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:59,715 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,716 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,716 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,716 [main:66] - Compilation checking started
2021-03-11 12:04:59,946 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: ULong) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:04:59,946 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,946 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:04:59,946 [main:66] - Compilation checking started
2021-03-11 12:05:00,184 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): UShort = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:05:00,184 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:00,184 [main:66] - Compilation checking started
2021-03-11 12:05:00,415 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: String): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Object>(files.map { it })
}


2021-03-11 12:05:00,415 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:00,415 [main:66] - Compilation checking started
2021-03-11 12:05:00,415 [main:68] - Already checked
2021-03-11 12:05:00,415 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:00,416 [main:66] - Compilation checking started
2021-03-11 12:05:00,753 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:00,753 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:00,753 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:00,753 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:00,754 [main:66] - Compilation checking started
2021-03-11 12:05:00,982 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): UInt = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Object) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:00,982 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:00,982 [main:66] - Compilation checking started
2021-03-11 12:05:01,318 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Comparable<Any>, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:01,319 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,319 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,319 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,320 [main:66] - Compilation checking started
2021-03-11 12:05:01,658 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:01,658 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,658 [main:66] - Compilation checking started
2021-03-11 12:05:01,895 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Byte = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:01,895 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,896 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,896 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,896 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,896 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,896 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:01,896 [main:66] - Compilation checking started
2021-03-11 12:05:02,123 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: Int) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:02,126 [main:66] - Compilation checking started
2021-03-11 12:05:02,127 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:02,128 [main:66] - Compilation checking started
2021-03-11 12:05:02,129 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:02,130 [main:66] - Compilation checking started
2021-03-11 12:05:02,131 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:02,132 [main:66] - Compilation checking started
2021-03-11 12:05:02,133 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:02,134 [main:66] - Compilation checking started
2021-03-11 12:05:02,135 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:02,136 [main:66] - Compilation checking started
2021-03-11 12:05:02,137 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:02,153 [main:26] - Trying to change some nodes to nodes from other programs 534 times
2021-03-11 12:05:02,153 [main:28] - Try №0 of 534
2021-03-11 12:05:02,163 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:02,164 [main:28] - Try №1 of 534
2021-03-11 12:05:02,183 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:02,183 [main:66] - Compilation checking started
2021-03-11 12:05:02,423 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals()

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val test = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:02,424 [main:28] - Try №2 of 534
2021-03-11 12:05:02,427 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:02,427 [main:66] - Compilation checking started
2021-03-11 12:05:02,778 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:02,778 [main:28] - Try №3 of 534
2021-03-11 12:05:02,787 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:02,787 [main:66] - Compilation checking started
2021-03-11 12:05:03,030 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), CharSequence)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:03,030 [main:28] - Try №4 of 534
2021-03-11 12:05:03,042 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:03,042 [main:66] - Compilation checking started
2021-03-11 12:05:03,280 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals(42)

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:03,280 [main:28] - Try №5 of 534
2021-03-11 12:05:03,291 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:03,292 [main:66] - Compilation checking started
2021-03-11 12:05:03,532 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, z), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:03,532 [main:28] - Try №6 of 534
2021-03-11 12:05:03,536 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:03,536 [main:66] - Compilation checking started
2021-03-11 12:05:03,767 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <name> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:03,767 [main:28] - Try №7 of 534
2021-03-11 12:05:03,780 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:03,780 [main:66] - Compilation checking started
2021-03-11 12:05:04,018 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    var global = S("")
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "bar")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:04,019 [main:28] - Try №8 of 534
2021-03-11 12:05:04,030 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:05:04,031 [main:66] - Compilation checking started
2021-03-11 12:05:04,364 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:04,364 [main:28] - Try №9 of 534
2021-03-11 12:05:04,379 [main:28] - Try №10 of 534
2021-03-11 12:05:04,391 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:05:04,391 [main:28] - Try №11 of 534
2021-03-11 12:05:04,407 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:04,407 [main:28] - Try №12 of 534
2021-03-11 12:05:04,410 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:05:04,410 [main:66] - Compilation checking started
2021-03-11 12:05:04,655 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

fun test() {
            if (::public.isInitialized) throw AssertionError("Fail 1")
            public = "OK"
            if (public != "OK") throw AssertionError("Fail 2")

            if (::private.isInitialized) throw AssertionError("Fail 3")
            private = "OK"
            if (private != "OK") throw AssertionError("Fail 4")
        }

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:04,655 [main:28] - Try №13 of 534
2021-03-11 12:05:04,669 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:04,669 [main:66] - Compilation checking started
2021-03-11 12:05:04,923 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<String>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:04,923 [main:28] - Try №14 of 534
2021-03-11 12:05:04,930 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:05:04,930 [main:66] - Compilation checking started
2021-03-11 12:05:05,159 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    var count = 0
    for (i in (M .. M).reversed()) {
        ++count
        if (count > 1) {
            throw AssertionError("Loop should be executed once")
        }
    }
    if (count != 1) throw AssertionError("Should be executed once")
    return "OK"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:05,159 [main:28] - Try №15 of 534
2021-03-11 12:05:05,174 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:05,175 [main:66] - Compilation checking started
2021-03-11 12:05:05,403 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val map = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 1, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:05,404 [main:28] - Try №16 of 534
2021-03-11 12:05:05,409 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:05,409 [main:66] - Compilation checking started
2021-03-11 12:05:05,759 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:05,759 [main:28] - Try №17 of 534
2021-03-11 12:05:05,777 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:05:05,777 [main:66] - Compilation checking started
2021-03-11 12:05:06,007 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
                        try {
                            result += suspendWithResult(y)
                            if (y == "G") {
                                break
                            }
                        }
                        finally {
                            result += "?"
                        }
                        result += "H"
                    }
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val String = HashSet<Char>()
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:06,007 [main:28] - Try №18 of 534
2021-03-11 12:05:06,018 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:06,018 [main:66] - Compilation checking started
2021-03-11 12:05:06,362 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:06,362 [main:28] - Try №19 of 534
2021-03-11 12:05:06,366 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:06,366 [main:28] - Try №20 of 534
2021-03-11 12:05:06,369 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:06,369 [main:66] - Compilation checking started
2021-03-11 12:05:06,604 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in Outer step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:06,604 [main:28] - Try №21 of 534
2021-03-11 12:05:06,610 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:06,610 [main:66] - Compilation checking started
2021-03-11 12:05:06,856 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<Foo, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:06,856 [main:28] - Try №22 of 534
2021-03-11 12:05:06,873 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:05:06,873 [main:66] - Compilation checking started
2021-03-11 12:05:07,105 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map {inlineX.value})
}


2021-03-11 12:05:07,105 [main:28] - Try №23 of 534
2021-03-11 12:05:07,117 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:07,117 [main:66] - Compilation checking started
2021-03-11 12:05:07,347 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val testClass = TestClass(Delegate())
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:07,347 [main:28] - Try №24 of 534
2021-03-11 12:05:07,364 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:07,364 [main:66] - Compilation checking started
2021-03-11 12:05:07,591 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 42L, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:07,592 [main:28] - Try №25 of 534
2021-03-11 12:05:07,600 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:07,600 [main:28] - Try №26 of 534
2021-03-11 12:05:07,613 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:05:07,613 [main:66] - Compilation checking started
2021-03-11 12:05:07,841 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "Wrong elements for (MinUB + 5u).toUByte() downTo MinUB step 3: $list2")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:07,842 [main:28] - Try №27 of 534
2021-03-11 12:05:07,857 [main:28] - Try №28 of 534
2021-03-11 12:05:07,867 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:07,867 [main:66] - Compilation checking started
2021-03-11 12:05:08,085 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<C>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:08,086 [main:28] - Try №29 of 534
2021-03-11 12:05:08,096 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:08,096 [main:66] - Compilation checking started
2021-03-11 12:05:08,323 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    var s = Str("")
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, LinkedHashSet<Set<UByte>>>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:08,323 [main:28] - Try №30 of 534
2021-03-11 12:05:08,337 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:08,337 [main:66] - Compilation checking started
2021-03-11 12:05:08,674 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:08,674 [main:28] - Try №31 of 534
2021-03-11 12:05:08,687 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:08,687 [main:66] - Compilation checking started
2021-03-11 12:05:08,915 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(value: T) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:08,915 [main:28] - Try №32 of 534
2021-03-11 12:05:08,919 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:08,919 [main:28] - Try №33 of 534
2021-03-11 12:05:08,936 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:05:08,936 [main:66] - Compilation checking started
2021-03-11 12:05:09,170 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.type.javaType })
}


2021-03-11 12:05:09,170 [main:28] - Try №34 of 534
2021-03-11 12:05:09,179 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:09,180 [main:66] - Compilation checking started
2021-03-11 12:05:09,407 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Season) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:09,407 [main:28] - Try №35 of 534
2021-03-11 12:05:09,424 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:09,424 [main:28] - Try №36 of 534
2021-03-11 12:05:09,440 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:09,440 [main:28] - Try №37 of 534
2021-03-11 12:05:09,443 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:09,444 [main:66] - Compilation checking started
2021-03-11 12:05:09,677 [main:49] - Result = false
Text:
import assert.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:09,678 [main:28] - Try №38 of 534
2021-03-11 12:05:09,690 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:05:09,691 [main:28] - Try №39 of 534
2021-03-11 12:05:09,704 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:05:09,704 [main:28] - Try №40 of 534
2021-03-11 12:05:09,714 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:09,714 [main:66] - Compilation checking started
2021-03-11 12:05:09,948 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<B<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:09,948 [main:28] - Try №41 of 534
2021-03-11 12:05:09,958 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:09,958 [main:66] - Compilation checking started
2021-03-11 12:05:10,182 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(c)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:10,182 [main:28] - Try №42 of 534
2021-03-11 12:05:10,191 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:10,192 [main:66] - Compilation checking started
2021-03-11 12:05:10,421 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, eq4>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:10,421 [main:28] - Try №43 of 534
2021-03-11 12:05:10,438 [main:33] - Trying to replace Element(FOR) on Element(FOR)
2021-03-11 12:05:10,438 [main:66] - Compilation checking started
2021-03-11 12:05:10,673 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in intArrayOf(0, 0, 0, 0).indices) {
        sum += i
    }
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:10,673 [main:28] - Try №44 of 534
2021-03-11 12:05:10,684 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:10,684 [main:66] - Compilation checking started
2021-03-11 12:05:10,911 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 0.0f)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:10,911 [main:28] - Try №45 of 534
2021-03-11 12:05:10,919 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:10,919 [main:28] - Try №46 of 534
2021-03-11 12:05:10,922 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:10,923 [main:66] - Compilation checking started
2021-03-11 12:05:11,149 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<SPRING>(files.map { it })
}


2021-03-11 12:05:11,149 [main:28] - Try №47 of 534
2021-03-11 12:05:11,161 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:11,161 [main:66] - Compilation checking started
2021-03-11 12:05:11,396 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(37, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:11,396 [main:28] - Try №48 of 534
2021-03-11 12:05:11,402 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:11,403 [main:66] - Compilation checking started
2021-03-11 12:05:11,626 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<()-> R>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:11,627 [main:28] - Try №49 of 534
2021-03-11 12:05:11,637 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:11,637 [main:66] - Compilation checking started
2021-03-11 12:05:11,865 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 void 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:11,865 [main:28] - Try №50 of 534
2021-03-11 12:05:11,878 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:11,879 [main:66] - Compilation checking started
2021-03-11 12:05:12,106 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, out T>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:12,106 [main:28] - Try №51 of 534
2021-03-11 12:05:12,110 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:12,110 [main:66] - Compilation checking started
2021-03-11 12:05:12,346 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<String>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val setter = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:12,346 [main:28] - Try №52 of 534
2021-03-11 12:05:12,361 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:12,361 [main:66] - Compilation checking started
2021-03-11 12:05:12,693 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(10, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:12,693 [main:28] - Try №53 of 534
2021-03-11 12:05:12,701 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:12,701 [main:28] - Try №54 of 534
2021-03-11 12:05:12,717 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:12,717 [main:66] - Compilation checking started
2021-03-11 12:05:13,056 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:13,056 [main:28] - Try №55 of 534
2021-03-11 12:05:13,060 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:13,060 [main:66] - Compilation checking started
2021-03-11 12:05:13,289 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), foo)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:13,289 [main:28] - Try №56 of 534
2021-03-11 12:05:13,293 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:13,293 [main:66] - Compilation checking started
2021-03-11 12:05:13,547 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL reversed 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:13,547 [main:28] - Try №57 of 534
2021-03-11 12:05:13,554 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:05:13,555 [main:66] - Compilation checking started
2021-03-11 12:05:13,780 [main:49] - Result = false
Text:
import d.size.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:13,780 [main:28] - Try №58 of 534
2021-03-11 12:05:13,786 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:13,786 [main:66] - Compilation checking started
2021-03-11 12:05:14,013 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = A<A<Int>>(ai)
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:14,013 [main:28] - Try №59 of 534
2021-03-11 12:05:14,023 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:14,023 [main:66] - Compilation checking started
2021-03-11 12:05:14,025 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:14,025 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> ): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:14,025 [main:28] - Try №60 of 534
2021-03-11 12:05:14,034 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:14,034 [main:66] - Compilation checking started
2021-03-11 12:05:14,280 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (c: suspend () -> Unit in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:14,280 [main:28] - Try №61 of 534
2021-03-11 12:05:14,289 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:14,289 [main:28] - Try №62 of 534
2021-03-11 12:05:14,299 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:14,299 [main:66] - Compilation checking started
2021-03-11 12:05:14,537 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<String>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:14,537 [main:28] - Try №63 of 534
2021-03-11 12:05:14,540 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:14,540 [main:66] - Compilation checking started
2021-03-11 12:05:14,780 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "OK"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val listOf = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:14,780 [main:28] - Try №64 of 534
2021-03-11 12:05:14,792 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:05:14,792 [main:66] - Compilation checking started
2021-03-11 12:05:15,146 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:15,146 [main:28] - Try №65 of 534
2021-03-11 12:05:15,149 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:15,149 [main:66] - Compilation checking started
2021-03-11 12:05:15,375 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(I(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:15,375 [main:28] - Try №66 of 534
2021-03-11 12:05:15,389 [main:28] - Try №67 of 534
2021-03-11 12:05:15,395 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:05:15,395 [main:66] - Compilation checking started
2021-03-11 12:05:15,627 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(override files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:15,628 [main:28] - Try №68 of 534
2021-03-11 12:05:15,641 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:15,641 [main:28] - Try №69 of 534
2021-03-11 12:05:15,647 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:15,647 [main:66] - Compilation checking started
2021-03-11 12:05:15,882 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.y(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:15,882 [main:28] - Try №70 of 534
2021-03-11 12:05:15,888 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:15,888 [main:66] - Compilation checking started
2021-03-11 12:05:16,119 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = test()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:16,119 [main:28] - Try №71 of 534
2021-03-11 12:05:16,129 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:16,129 [main:28] - Try №72 of 534
2021-03-11 12:05:16,144 [main:28] - Try №73 of 534
2021-03-11 12:05:16,148 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:16,148 [main:66] - Compilation checking started
2021-03-11 12:05:16,407 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (test in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:16,408 [main:28] - Try №74 of 534
2021-03-11 12:05:16,412 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:16,412 [main:28] - Try №75 of 534
2021-03-11 12:05:16,423 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:16,424 [main:66] - Compilation checking started
2021-03-11 12:05:16,645 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
var i : MyClass?
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:16,646 [main:28] - Try №76 of 534
2021-03-11 12:05:16,657 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:16,658 [main:66] - Compilation checking started
2021-03-11 12:05:16,891 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(js.get(a) == "abc")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:16,891 [main:28] - Try №77 of 534
2021-03-11 12:05:16,903 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:16,904 [main:66] - Compilation checking started
2021-03-11 12:05:17,256 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:17,256 [main:28] - Try №78 of 534
2021-03-11 12:05:17,264 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:17,265 [main:66] - Compilation checking started
2021-03-11 12:05:17,494 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(b: String = "O"): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:17,494 [main:28] - Try №79 of 534
2021-03-11 12:05:17,507 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:05:17,508 [main:28] - Try №80 of 534
2021-03-11 12:05:17,518 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:17,519 [main:28] - Try №81 of 534
2021-03-11 12:05:17,528 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:17,528 [main:28] - Try №82 of 534
2021-03-11 12:05:17,531 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:17,531 [main:66] - Compilation checking started
2021-03-11 12:05:17,775 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = test(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:17,775 [main:28] - Try №83 of 534
2021-03-11 12:05:17,782 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:05:17,783 [main:66] - Compilation checking started
2021-03-11 12:05:18,022 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(x: T, y: T) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:18,022 [main:28] - Try №84 of 534
2021-03-11 12:05:18,032 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:18,033 [main:28] - Try №85 of 534
2021-03-11 12:05:18,036 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:18,037 [main:66] - Compilation checking started
2021-03-11 12:05:18,273 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun KInterface2(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:18,273 [main:28] - Try №86 of 534
2021-03-11 12:05:18,283 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:18,283 [main:66] - Compilation checking started
2021-03-11 12:05:18,515 [main:49] - Result = false
Text:
import BINARY.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    val Inner = mutableListOf<Long>()
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:18,515 [main:28] - Try №87 of 534
2021-03-11 12:05:18,525 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:18,526 [main:66] - Compilation checking started
2021-03-11 12:05:18,865 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:18,865 [main:28] - Try №88 of 534
2021-03-11 12:05:18,883 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:05:18,883 [main:66] - Compilation checking started
2021-03-11 12:05:19,110 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
        sumL = sumL * 10 + i
    }
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:19,110 [main:28] - Try №89 of 534
2021-03-11 12:05:19,113 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:19,113 [main:28] - Try №90 of 534
2021-03-11 12:05:19,122 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:19,122 [main:66] - Compilation checking started
2021-03-11 12:05:19,347 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    uintList("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:19,347 [main:28] - Try №91 of 534
2021-03-11 12:05:19,351 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:19,351 [main:66] - Compilation checking started
2021-03-11 12:05:19,577 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    assertEquals("foo", "anonymous object has a declaring class")

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : B2 {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:19,577 [main:28] - Try №92 of 534
2021-03-11 12:05:19,583 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:19,583 [main:66] - Compilation checking started
2021-03-11 12:05:19,928 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:19,928 [main:28] - Try №93 of 534
2021-03-11 12:05:19,944 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:19,945 [main:66] - Compilation checking started
2021-03-11 12:05:20,180 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : Int {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:20,180 [main:28] - Try №94 of 534
2021-03-11 12:05:20,187 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:05:20,187 [main:66] - Compilation checking started
2021-03-11 12:05:20,427 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

suspend fun controllerMultipleArgs(a: Any, b: Any, c: Any) =
        if (coroutineContext != EmptyCoroutineContext)
            "${coroutineContext} != $EmptyCoroutineContext"
        else
            "OK"


2021-03-11 12:05:20,427 [main:28] - Try №95 of 534
2021-03-11 12:05:20,442 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:20,442 [main:66] - Compilation checking started
2021-03-11 12:05:20,673 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:20,673 [main:28] - Try №96 of 534
2021-03-11 12:05:20,677 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:20,677 [main:66] - Compilation checking started
2021-03-11 12:05:21,041 [main:53] - Result = true
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:21,041 [main:28] - Try №97 of 534
2021-03-11 12:05:21,044 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:21,044 [main:66] - Compilation checking started
2021-03-11 12:05:21,284 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = A<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:21,284 [main:28] - Try №98 of 534
2021-03-11 12:05:21,302 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:05:21,302 [main:66] - Compilation checking started
2021-03-11 12:05:21,537 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
        list2.add(i)
        if (list2.size > 23) break
    }
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val intList = mutableListOf<LinkedHashMap<HashMap<Array<UInt>, *>, Char>>()
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:21,537 [main:28] - Try №99 of 534
2021-03-11 12:05:21,550 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:05:21,550 [main:28] - Try №100 of 534
2021-03-11 12:05:21,561 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:21,562 [main:66] - Compilation checking started
2021-03-11 12:05:21,887 [main:53] - Result = true
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:21,887 [main:28] - Try №101 of 534
2021-03-11 12:05:21,891 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:21,891 [main:66] - Compilation checking started
2021-03-11 12:05:22,116 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: a) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:22,116 [main:28] - Try №102 of 534
2021-03-11 12:05:22,121 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:22,121 [main:28] - Try №103 of 534
2021-03-11 12:05:22,133 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:22,133 [main:66] - Compilation checking started
2021-03-11 12:05:22,353 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, "[2] object:C.foo($x)", 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (i in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:22,353 [main:28] - Try №104 of 534
2021-03-11 12:05:22,361 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:22,362 [main:66] - Compilation checking started
2021-03-11 12:05:22,691 [main:53] - Result = true
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "OK"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:22,691 [main:28] - Try №105 of 534
2021-03-11 12:05:22,704 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:05:22,705 [main:66] - Compilation checking started
2021-03-11 12:05:23,045 [main:53] - Result = true
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:23,045 [main:28] - Try №106 of 534
2021-03-11 12:05:23,069 [main:28] - Try №107 of 534
2021-03-11 12:05:23,076 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:23,076 [main:66] - Compilation checking started
2021-03-11 12:05:23,307 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in intArray[index] = value.asInt()) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:23,307 [main:28] - Try №108 of 534
2021-03-11 12:05:23,321 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:05:23,321 [main:28] - Try №109 of 534
2021-03-11 12:05:23,324 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:23,324 [main:66] - Compilation checking started
2021-03-11 12:05:23,595 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<Outer>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:23,595 [main:28] - Try №110 of 534
2021-03-11 12:05:23,601 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:05:23,601 [main:66] - Compilation checking started
2021-03-11 12:05:23,826 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh() {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:23,827 [main:28] - Try №111 of 534
2021-03-11 12:05:23,836 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:23,836 [main:66] - Compilation checking started
2021-03-11 12:05:24,057 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a != b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it })
}


2021-03-11 12:05:24,058 [main:28] - Try №112 of 534
2021-03-11 12:05:24,073 [main:28] - Try №113 of 534
2021-03-11 12:05:24,090 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:05:24,091 [main:66] - Compilation checking started
2021-03-11 12:05:24,455 [main:53] - Result = true
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:24,455 [main:28] - Try №114 of 534
2021-03-11 12:05:24,458 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:24,458 [main:66] - Compilation checking started
2021-03-11 12:05:24,677 [main:49] - Result = false
Text:
import kotlin.getAnnotation.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 6uL, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:24,677 [main:28] - Try №115 of 534
2021-03-11 12:05:24,692 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:24,693 [main:66] - Compilation checking started
2021-03-11 12:05:25,041 [main:53] - Result = true
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:25,042 [main:28] - Try №116 of 534
2021-03-11 12:05:25,052 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:25,052 [main:28] - Try №117 of 534
2021-03-11 12:05:25,056 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:25,056 [main:66] - Compilation checking started
2021-03-11 12:05:25,297 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (box in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:25,297 [main:28] - Try №118 of 534
2021-03-11 12:05:25,309 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:25,309 [main:66] - Compilation checking started
2021-03-11 12:05:25,533 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val b = A().B().test()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:25,533 [main:28] - Try №119 of 534
2021-03-11 12:05:25,542 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:25,542 [main:28] - Try №120 of 534
2021-03-11 12:05:25,548 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:25,549 [main:66] - Compilation checking started
2021-03-11 12:05:25,776 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = {
        prop + test()
    }()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:25,776 [main:28] - Try №121 of 534
2021-03-11 12:05:25,791 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:25,791 [main:66] - Compilation checking started
2021-03-11 12:05:26,013 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 1), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:26,013 [main:28] - Try №122 of 534
2021-03-11 12:05:26,019 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:05:26,020 [main:66] - Compilation checking started
2021-03-11 12:05:26,021 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:26,021 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in 1..3) {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) createWildcard("OK")


2021-03-11 12:05:26,021 [main:28] - Try №123 of 534
2021-03-11 12:05:26,036 [main:28] - Try №124 of 534
2021-03-11 12:05:26,053 [main:33] - Trying to replace Element(LOOP_RANGE) on Element(LOOP_RANGE)
2021-03-11 12:05:26,053 [main:66] - Compilation checking started
2021-03-11 12:05:26,423 [main:53] - Result = true
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in "239") {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:26,423 [main:28] - Try №125 of 534
2021-03-11 12:05:26,435 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:26,435 [main:66] - Compilation checking started
2021-03-11 12:05:26,437 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:26,437 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, args={O.class, K.class})

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in "239") {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:26,437 [main:28] - Try №126 of 534
2021-03-11 12:05:26,446 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:26,446 [main:66] - Compilation checking started
2021-03-11 12:05:26,681 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in "239") {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), toString)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:26,681 [main:28] - Try №127 of 534
2021-03-11 12:05:26,698 [main:33] - Trying to replace Element(FOR) on Element(FOR)
2021-03-11 12:05:26,699 [main:66] - Compilation checking started
2021-03-11 12:05:26,939 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in "239") {
    for (i in 1..3) {
        x = null
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar() {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:26,939 [main:28] - Try №128 of 534
2021-03-11 12:05:26,941 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:05:26,942 [main:66] - Compilation checking started
2021-03-11 12:05:27,169 [main:49] - Result = false
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in "239") {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun box(): String {
    return if (C().box() != 1) "fail" else "OK"
}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:27,169 [main:28] - Try №129 of 534
2021-03-11 12:05:27,174 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:05:27,174 [main:66] - Compilation checking started
2021-03-11 12:05:27,567 [main:53] - Result = true
Text:
import kotlin.test.*

fun startCoroutine(): String {
    val Char = intArrayOf(1, 2, 3, 4)
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 0) {
    class Local {
        fun result(s: String) = s
    }

    return Local::result.call(Local(), "OK")
}
    assertEquals(1, "OK")

    var result = ""
    val suspendWithValue = 7uL until 1uL
    for (Int in "239") {
    for (i in 1..4 step 1 step 1) {
    }

    return "Fail"
}
    AssertionError()

    return "K"
}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:27,567 [main:28] - Try №130 of 534
2021-03-11 12:05:27,572 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:05:27,572 [main:66] - Compilation checking started
2021-03-11 12:05:27,871 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:27,871 [main:28] - Try №131 of 534
2021-03-11 12:05:27,877 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:27,877 [main:28] - Try №132 of 534
2021-03-11 12:05:27,880 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:27,880 [main:28] - Try №133 of 534
2021-03-11 12:05:27,888 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:27,888 [main:28] - Try №134 of 534
2021-03-11 12:05:27,891 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:27,891 [main:66] - Compilation checking started
2021-03-11 12:05:28,093 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(box(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:28,093 [main:28] - Try №135 of 534
2021-03-11 12:05:28,100 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:28,100 [main:66] - Compilation checking started
2021-03-11 12:05:28,304 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.result() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:28,305 [main:28] - Try №136 of 534
2021-03-11 12:05:28,320 [main:28] - Try №137 of 534
2021-03-11 12:05:28,336 [main:33] - Trying to replace Element(FOR) on Element(FOR)
2021-03-11 12:05:28,337 [main:66] - Compilation checking started
2021-03-11 12:05:28,526 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for ((index, x) in xs.withIndex()) {
        return "Loop over empty list should not be executed"
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:28,527 [main:28] - Try №138 of 534
2021-03-11 12:05:28,541 [main:28] - Try №139 of 534
2021-03-11 12:05:28,549 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:28,550 [main:66] - Compilation checking started
2021-03-11 12:05:28,751 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(capturedParam: String, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:28,751 [main:28] - Try №140 of 534
2021-03-11 12:05:28,774 [main:28] - Try №141 of 534
2021-03-11 12:05:28,787 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:28,787 [main:28] - Try №142 of 534
2021-03-11 12:05:28,792 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:28,793 [main:66] - Compilation checking started
2021-03-11 12:05:28,995 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u rgb 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:28,995 [main:28] - Try №143 of 534
2021-03-11 12:05:29,009 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:29,009 [main:28] - Try №144 of 534
2021-03-11 12:05:29,020 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:29,020 [main:28] - Try №145 of 534
2021-03-11 12:05:29,029 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:29,029 [main:66] - Compilation checking started
2021-03-11 12:05:29,223 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(Int(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:29,223 [main:28] - Try №146 of 534
2021-03-11 12:05:29,227 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:29,227 [main:28] - Try №147 of 534
2021-03-11 12:05:29,239 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:05:29,240 [main:28] - Try №148 of 534
2021-03-11 12:05:29,255 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:05:29,255 [main:28] - Try №149 of 534
2021-03-11 12:05:29,260 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:29,260 [main:66] - Compilation checking started
2021-03-11 12:05:29,467 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<String>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:29,467 [main:28] - Try №150 of 534
2021-03-11 12:05:29,482 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:29,482 [main:28] - Try №151 of 534
2021-03-11 12:05:29,498 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:29,498 [main:28] - Try №152 of 534
2021-03-11 12:05:29,508 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:29,508 [main:28] - Try №153 of 534
2021-03-11 12:05:29,530 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:05:29,530 [main:28] - Try №154 of 534
2021-03-11 12:05:29,543 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:05:29,543 [main:28] - Try №155 of 534
2021-03-11 12:05:29,560 [main:33] - Trying to replace Element(LOOP_RANGE) on Element(LOOP_RANGE)
2021-03-11 12:05:29,560 [main:66] - Compilation checking started
2021-03-11 12:05:29,774 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in intRange) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:29,774 [main:28] - Try №156 of 534
2021-03-11 12:05:29,783 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:29,783 [main:28] - Try №157 of 534
2021-03-11 12:05:29,799 [main:33] - Trying to replace Element(FOR) on Element(FOR)
2021-03-11 12:05:29,799 [main:28] - Try №158 of 534
2021-03-11 12:05:29,810 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:29,810 [main:66] - Compilation checking started
2021-03-11 12:05:30,010 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: String) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:30,010 [main:28] - Try №159 of 534
2021-03-11 12:05:30,013 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:30,013 [main:28] - Try №160 of 534
2021-03-11 12:05:30,024 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:30,024 [main:66] - Compilation checking started
2021-03-11 12:05:30,226 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<A>(files.map { it.toString() })
}


2021-03-11 12:05:30,226 [main:28] - Try №161 of 534
2021-03-11 12:05:30,235 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:30,235 [main:28] - Try №162 of 534
2021-03-11 12:05:30,239 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:30,239 [main:28] - Try №163 of 534
2021-03-11 12:05:30,242 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:30,243 [main:66] - Compilation checking started
2021-03-11 12:05:30,438 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Int): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:30,438 [main:28] - Try №164 of 534
2021-03-11 12:05:30,442 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:30,442 [main:28] - Try №165 of 534
2021-03-11 12:05:30,446 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:30,446 [main:28] - Try №166 of 534
2021-03-11 12:05:30,462 [main:33] - Trying to replace Element(LOOP_RANGE) on Element(LOOP_RANGE)
2021-03-11 12:05:30,463 [main:66] - Compilation checking started
2021-03-11 12:05:30,673 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ((logged("start;", 8) downTo logged("end;", 1)).reversed() step logged("step;", 2)).reversed()) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:30,673 [main:28] - Try №167 of 534
2021-03-11 12:05:30,677 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:30,677 [main:66] - Compilation checking started
2021-03-11 12:05:30,869 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    o(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:30,869 [main:28] - Try №168 of 534
2021-03-11 12:05:30,881 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:30,881 [main:28] - Try №169 of 534
2021-03-11 12:05:30,896 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:30,897 [main:28] - Try №170 of 534
2021-03-11 12:05:30,914 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:05:30,914 [main:66] - Compilation checking started
2021-03-11 12:05:31,112 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        s.append("$index:$x;")
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:31,112 [main:28] - Try №171 of 534
2021-03-11 12:05:31,126 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:05:31,126 [main:28] - Try №172 of 534
2021-03-11 12:05:31,135 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:31,136 [main:28] - Try №173 of 534
2021-03-11 12:05:31,142 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:31,142 [main:28] - Try №174 of 534
2021-03-11 12:05:31,151 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:31,151 [main:28] - Try №175 of 534
2021-03-11 12:05:31,172 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:05:31,173 [main:28] - Try №176 of 534
2021-03-11 12:05:31,183 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:31,183 [main:28] - Try №177 of 534
2021-03-11 12:05:31,187 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:31,187 [main:66] - Compilation checking started
2021-03-11 12:05:31,381 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = i()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:31,381 [main:28] - Try №178 of 534
2021-03-11 12:05:31,392 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:31,392 [main:28] - Try №179 of 534
2021-03-11 12:05:31,402 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:31,402 [main:66] - Compilation checking started
2021-03-11 12:05:31,596 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): Boolean {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:31,596 [main:28] - Try №180 of 534
2021-03-11 12:05:31,604 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:31,605 [main:66] - Compilation checking started
2021-03-11 12:05:31,804 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, block: suspend () -> String) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:31,804 [main:28] - Try №181 of 534
2021-03-11 12:05:31,810 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:31,811 [main:66] - Compilation checking started
2021-03-11 12:05:32,010 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = ImplicitReturn()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:32,010 [main:28] - Try №182 of 534
2021-03-11 12:05:32,025 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:32,025 [main:66] - Compilation checking started
2021-03-11 12:05:32,247 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 0 until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:32,247 [main:28] - Try №183 of 534
2021-03-11 12:05:32,256 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:32,256 [main:66] - Compilation checking started
2021-03-11 12:05:32,452 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): x {
    val annotations = AssertionError()
val longList = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:32,452 [main:28] - Try №184 of 534
2021-03-11 12:05:32,455 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:32,455 [main:66] - Compilation checking started
2021-03-11 12:05:32,746 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val T = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:32,746 [main:28] - Try №185 of 534
2021-03-11 12:05:32,759 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:32,759 [main:66] - Compilation checking started
2021-03-11 12:05:32,960 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
val T = mutableListOf<Any>()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(x ?: continue, ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:32,961 [main:28] - Try №186 of 534
2021-03-11 12:05:32,976 [main:28] - Try №187 of 534
2021-03-11 12:05:32,987 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:32,987 [main:66] - Compilation checking started
2021-03-11 12:05:33,311 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:33,311 [main:28] - Try №188 of 534
2021-03-11 12:05:33,321 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:33,321 [main:28] - Try №189 of 534
2021-03-11 12:05:33,325 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:33,325 [main:28] - Try №190 of 534
2021-03-11 12:05:33,328 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:33,328 [main:28] - Try №191 of 534
2021-03-11 12:05:33,343 [main:28] - Try №192 of 534
2021-03-11 12:05:33,352 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:33,352 [main:66] - Compilation checking started
2021-03-11 12:05:33,542 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.test())
}


2021-03-11 12:05:33,543 [main:28] - Try №193 of 534
2021-03-11 12:05:33,556 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:05:33,557 [main:28] - Try №194 of 534
2021-03-11 12:05:33,559 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:05:33,560 [main:66] - Compilation checking started
2021-03-11 12:05:33,753 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun arrayOfNotNull(): Array<Int>

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:33,753 [main:28] - Try №195 of 534
2021-03-11 12:05:33,759 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:33,759 [main:28] - Try №196 of 534
2021-03-11 12:05:33,767 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:33,768 [main:28] - Try №197 of 534
2021-03-11 12:05:33,772 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:33,772 [main:28] - Try №198 of 534
2021-03-11 12:05:33,781 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:33,781 [main:28] - Try №199 of 534
2021-03-11 12:05:33,785 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:33,785 [main:28] - Try №200 of 534
2021-03-11 12:05:33,796 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:33,796 [main:28] - Try №201 of 534
2021-03-11 12:05:33,814 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:05:33,814 [main:28] - Try №202 of 534
2021-03-11 12:05:33,829 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:33,829 [main:28] - Try №203 of 534
2021-03-11 12:05:33,838 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:33,839 [main:28] - Try №204 of 534
2021-03-11 12:05:33,844 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:33,844 [main:66] - Compilation checking started
2021-03-11 12:05:34,042 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: String) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:34,042 [main:28] - Try №205 of 534
2021-03-11 12:05:34,053 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:34,053 [main:66] - Compilation checking started
2021-03-11 12:05:34,271 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val base: Base<*> = Derived()
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:34,271 [main:28] - Try №206 of 534
2021-03-11 12:05:34,280 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:34,280 [main:28] - Try №207 of 534
2021-03-11 12:05:34,285 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:05:34,286 [main:66] - Compilation checking started
2021-03-11 12:05:34,489 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun ltx(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh() {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:34,489 [main:28] - Try №208 of 534
2021-03-11 12:05:34,492 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:34,493 [main:28] - Try №209 of 534
2021-03-11 12:05:34,502 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:34,502 [main:28] - Try №210 of 534
2021-03-11 12:05:34,511 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:34,511 [main:28] - Try №211 of 534
2021-03-11 12:05:34,514 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:34,514 [main:66] - Compilation checking started
2021-03-11 12:05:34,804 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:34,804 [main:28] - Try №212 of 534
2021-03-11 12:05:34,813 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:34,813 [main:66] - Compilation checking started
2021-03-11 12:05:35,007 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Boolean = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(8uL, 110, 4uL, 2uL), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:35,008 [main:28] - Try №213 of 534
2021-03-11 12:05:35,020 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:05:35,021 [main:28] - Try №214 of 534
2021-03-11 12:05:35,038 [main:33] - Trying to replace Element(CALLABLE_REFERENCE_EXPRESSION) on Element(CALLABLE_REFERENCE_EXPRESSION)
2021-03-11 12:05:35,038 [main:28] - Try №215 of 534
2021-03-11 12:05:35,048 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:35,048 [main:66] - Compilation checking started
2021-03-11 12:05:35,336 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:35,337 [main:28] - Try №216 of 534
2021-03-11 12:05:35,340 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:35,340 [main:66] - Compilation checking started
2021-03-11 12:05:35,556 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() box 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:35,557 [main:28] - Try №217 of 534
2021-03-11 12:05:35,562 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:35,562 [main:66] - Compilation checking started
2021-03-11 12:05:35,758 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = items.size == 1

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:35,758 [main:28] - Try №218 of 534
2021-03-11 12:05:35,782 [main:28] - Try №219 of 534
2021-03-11 12:05:35,799 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:05:35,799 [main:28] - Try №220 of 534
2021-03-11 12:05:35,810 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:35,810 [main:28] - Try №221 of 534
2021-03-11 12:05:35,814 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:35,814 [main:66] - Compilation checking started
2021-03-11 12:05:36,019 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : get {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:36,019 [main:28] - Try №222 of 534
2021-03-11 12:05:36,033 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:36,034 [main:28] - Try №223 of 534
2021-03-11 12:05:36,043 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:36,043 [main:28] - Try №224 of 534
2021-03-11 12:05:36,052 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:36,053 [main:28] - Try №225 of 534
2021-03-11 12:05:36,069 [main:33] - Trying to replace Element(FUNCTION_TYPE) on Element(FUNCTION_TYPE)
2021-03-11 12:05:36,069 [main:66] - Compilation checking started
2021-03-11 12:05:36,273 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Unit): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:36,274 [main:28] - Try №226 of 534
2021-03-11 12:05:36,282 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:36,283 [main:66] - Compilation checking started
2021-03-11 12:05:36,484 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = Int()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:36,484 [main:28] - Try №227 of 534
2021-03-11 12:05:36,492 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:36,493 [main:28] - Try №228 of 534
2021-03-11 12:05:36,508 [main:28] - Try №229 of 534
2021-03-11 12:05:36,516 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:36,516 [main:28] - Try №230 of 534
2021-03-11 12:05:36,521 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:05:36,521 [main:28] - Try №231 of 534
2021-03-11 12:05:36,525 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:36,525 [main:66] - Compilation checking started
2021-03-11 12:05:36,734 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL T 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:36,735 [main:28] - Try №232 of 534
2021-03-11 12:05:36,738 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:36,738 [main:28] - Try №233 of 534
2021-03-11 12:05:36,742 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:36,742 [main:28] - Try №234 of 534
2021-03-11 12:05:36,753 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:36,753 [main:28] - Try №235 of 534
2021-03-11 12:05:36,757 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:36,757 [main:28] - Try №236 of 534
2021-03-11 12:05:36,768 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:36,768 [main:28] - Try №237 of 534
2021-03-11 12:05:36,781 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:05:36,781 [main:28] - Try №238 of 534
2021-03-11 12:05:36,784 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:36,785 [main:28] - Try №239 of 534
2021-03-11 12:05:36,798 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:05:36,798 [main:66] - Compilation checking started
2021-03-11 12:05:37,005 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<UInt>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:37,005 [main:28] - Try №240 of 534
2021-03-11 12:05:37,021 [main:28] - Try №241 of 534
2021-03-11 12:05:37,027 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:37,028 [main:28] - Try №242 of 534
2021-03-11 12:05:37,037 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:37,037 [main:66] - Compilation checking started
2021-03-11 12:05:37,038 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:37,038 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, (i, _)) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:37,038 [main:28] - Try №243 of 534
2021-03-11 12:05:37,052 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:05:37,052 [main:28] - Try №244 of 534
2021-03-11 12:05:37,064 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:37,064 [main:66] - Compilation checking started
2021-03-11 12:05:37,264 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, action = {
        get()
    }, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>(files.map { it.toString() })
}


2021-03-11 12:05:37,264 [main:28] - Try №245 of 534
2021-03-11 12:05:37,270 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:37,270 [main:66] - Compilation checking started
2021-03-11 12:05:37,271 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:05:37,271 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<>(files.map { it.toString() })
}


2021-03-11 12:05:37,271 [main:28] - Try №246 of 534
2021-03-11 12:05:37,281 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:37,281 [main:28] - Try №247 of 534
2021-03-11 12:05:37,291 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:37,291 [main:28] - Try №248 of 534
2021-03-11 12:05:37,302 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:37,302 [main:66] - Compilation checking started
2021-03-11 12:05:37,580 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:37,580 [main:28] - Try №249 of 534
2021-03-11 12:05:37,591 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:37,591 [main:28] - Try №250 of 534
2021-03-11 12:05:37,600 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:37,601 [main:66] - Compilation checking started
2021-03-11 12:05:37,809 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() + 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun scheduleRefresh(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:37,809 [main:28] - Try №251 of 534
2021-03-11 12:05:37,813 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:37,813 [main:28] - Try №252 of 534
2021-03-11 12:05:37,822 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:37,822 [main:28] - Try №253 of 534
2021-03-11 12:05:37,834 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:37,834 [main:28] - Try №254 of 534
2021-03-11 12:05:37,840 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:37,840 [main:66] - Compilation checking started
2021-03-11 12:05:38,134 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:38,134 [main:28] - Try №255 of 534
2021-03-11 12:05:38,136 [main:33] - Trying to replace Element(CLASS) on Element(CLASS)
2021-03-11 12:05:38,136 [main:28] - Try №256 of 534
2021-03-11 12:05:38,144 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:05:38,144 [main:66] - Compilation checking started
2021-03-11 12:05:38,352 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <E> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:38,352 [main:28] - Try №257 of 534
2021-03-11 12:05:38,357 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:38,357 [main:66] - Compilation checking started
2021-03-11 12:05:38,554 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    MaxI(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:38,554 [main:28] - Try №258 of 534
2021-03-11 12:05:38,561 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:38,561 [main:28] - Try №259 of 534
2021-03-11 12:05:38,571 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:38,571 [main:28] - Try №260 of 534
2021-03-11 12:05:38,586 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:38,586 [main:28] - Try №261 of 534
2021-03-11 12:05:38,590 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:38,590 [main:66] - Compilation checking started
2021-03-11 12:05:38,780 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): T = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:38,780 [main:28] - Try №262 of 534
2021-03-11 12:05:38,784 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:38,785 [main:28] - Try №263 of 534
2021-03-11 12:05:38,793 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:38,793 [main:28] - Try №264 of 534
2021-03-11 12:05:38,797 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:38,798 [main:66] - Compilation checking started
2021-03-11 12:05:39,014 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.String() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:39,014 [main:28] - Try №265 of 534
2021-03-11 12:05:39,017 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:39,018 [main:28] - Try №266 of 534
2021-03-11 12:05:39,021 [main:33] - Trying to replace Element(TYPE_PARAMETER_LIST) on Element(TYPE_PARAMETER_LIST)
2021-03-11 12:05:39,021 [main:66] - Compilation checking started
2021-03-11 12:05:39,212 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <R> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:39,212 [main:28] - Try №267 of 534
2021-03-11 12:05:39,220 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:39,220 [main:28] - Try №268 of 534
2021-03-11 12:05:39,231 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:39,231 [main:66] - Compilation checking started
2021-03-11 12:05:39,440 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (e in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:39,440 [main:28] - Try №269 of 534
2021-03-11 12:05:39,444 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:39,444 [main:28] - Try №270 of 534
2021-03-11 12:05:39,452 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:39,453 [main:66] - Compilation checking started
2021-03-11 12:05:39,643 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(crossinline c: suspend () -> Unit, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:39,643 [main:28] - Try №271 of 534
2021-03-11 12:05:39,655 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:05:39,656 [main:28] - Try №272 of 534
2021-03-11 12:05:39,665 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:39,665 [main:28] - Try №273 of 534
2021-03-11 12:05:39,670 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:39,670 [main:66] - Compilation checking started
2021-03-11 12:05:39,866 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in result = "OK") {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:39,866 [main:28] - Try №274 of 534
2021-03-11 12:05:39,875 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:39,875 [main:66] - Compilation checking started
2021-03-11 12:05:40,063 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Boolean): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:40,063 [main:28] - Try №275 of 534
2021-03-11 12:05:40,069 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:40,069 [main:66] - Compilation checking started
2021-03-11 12:05:40,266 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Int): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:40,267 [main:28] - Try №276 of 534
2021-03-11 12:05:40,276 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:40,277 [main:28] - Try №277 of 534
2021-03-11 12:05:40,281 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:40,281 [main:28] - Try №278 of 534
2021-03-11 12:05:40,284 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:40,284 [main:28] - Try №279 of 534
2021-03-11 12:05:40,295 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:40,295 [main:28] - Try №280 of 534
2021-03-11 12:05:40,295 [main:28] - Try №281 of 534
2021-03-11 12:05:40,310 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:05:40,310 [main:28] - Try №282 of 534
2021-03-11 12:05:40,325 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:40,325 [main:66] - Compilation checking started
2021-03-11 12:05:40,522 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 5u until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:40,522 [main:28] - Try №283 of 534
2021-03-11 12:05:40,527 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:05:40,528 [main:66] - Compilation checking started
2021-03-11 12:05:40,719 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(inline files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:40,719 [main:28] - Try №284 of 534
2021-03-11 12:05:40,724 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:05:40,725 [main:28] - Try №285 of 534
2021-03-11 12:05:40,733 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:40,733 [main:28] - Try №286 of 534
2021-03-11 12:05:40,736 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:40,736 [main:28] - Try №287 of 534
2021-03-11 12:05:40,739 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:05:40,739 [main:66] - Compilation checking started
2021-03-11 12:05:40,939 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun box(): String {
    val javaClass = property.javaClass

    val enclosingMethod = javaClass.getEnclosingMethod()
    if (enclosingMethod != null) return "method: $enclosingMethod"

    val enclosingClass = javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "FunctionExpressionInPropertyKt") return "enclosing class: $enclosingClass"

    val declaringClass = javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:40,939 [main:28] - Try №288 of 534
2021-03-11 12:05:40,947 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:40,948 [main:28] - Try №289 of 534
2021-03-11 12:05:40,959 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:40,960 [main:28] - Try №290 of 534
2021-03-11 12:05:40,969 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:40,970 [main:66] - Compilation checking started
2021-03-11 12:05:41,173 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<get>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:41,173 [main:28] - Try №291 of 534
2021-03-11 12:05:41,180 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:05:41,180 [main:28] - Try №292 of 534
2021-03-11 12:05:41,188 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:41,189 [main:28] - Try №293 of 534
2021-03-11 12:05:41,195 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:05:41,195 [main:66] - Compilation checking started
2021-03-11 12:05:41,382 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        this.r = r;
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:41,382 [main:28] - Try №294 of 534
2021-03-11 12:05:41,386 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:41,386 [main:66] - Compilation checking started
2021-03-11 12:05:41,592 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += p
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:41,592 [main:28] - Try №295 of 534
2021-03-11 12:05:41,600 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:41,600 [main:28] - Try №296 of 534
2021-03-11 12:05:41,609 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:41,610 [main:28] - Try №297 of 534
2021-03-11 12:05:41,613 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:41,613 [main:28] - Try №298 of 534
2021-03-11 12:05:41,621 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:41,621 [main:28] - Try №299 of 534
2021-03-11 12:05:41,626 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:41,626 [main:28] - Try №300 of 534
2021-03-11 12:05:41,630 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:41,630 [main:66] - Compilation checking started
2021-03-11 12:05:41,823 [main:49] - Result = false
Text:
import value.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:41,823 [main:28] - Try №301 of 534
2021-03-11 12:05:41,833 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:41,834 [main:28] - Try №302 of 534
2021-03-11 12:05:41,848 [main:28] - Try №303 of 534
2021-03-11 12:05:41,858 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:41,859 [main:28] - Try №304 of 534
2021-03-11 12:05:41,874 [main:28] - Try №305 of 534
2021-03-11 12:05:41,877 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:41,877 [main:28] - Try №306 of 534
2021-03-11 12:05:41,881 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:41,881 [main:28] - Try №307 of 534
2021-03-11 12:05:41,890 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:41,890 [main:28] - Try №308 of 534
2021-03-11 12:05:41,903 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:05:41,903 [main:28] - Try №309 of 534
2021-03-11 12:05:41,907 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:41,907 [main:28] - Try №310 of 534
2021-03-11 12:05:41,918 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:41,918 [main:28] - Try №311 of 534
2021-03-11 12:05:41,928 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:41,928 [main:28] - Try №312 of 534
2021-03-11 12:05:41,940 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:05:41,940 [main:28] - Try №313 of 534
2021-03-11 12:05:41,943 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:41,943 [main:66] - Compilation checking started
2021-03-11 12:05:42,131 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : it) {
    ArrayList<Any>()
}


2021-03-11 12:05:42,132 [main:28] - Try №314 of 534
2021-03-11 12:05:42,137 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:42,138 [main:66] - Compilation checking started
2021-03-11 12:05:42,335 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): Result {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:42,335 [main:28] - Try №315 of 534
2021-03-11 12:05:42,342 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:42,342 [main:28] - Try №316 of 534
2021-03-11 12:05:42,353 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:42,353 [main:28] - Try №317 of 534
2021-03-11 12:05:42,365 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:42,365 [main:28] - Try №318 of 534
2021-03-11 12:05:42,369 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:42,369 [main:66] - Compilation checking started
2021-03-11 12:05:42,563 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <f> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:42,563 [main:28] - Try №319 of 534
2021-03-11 12:05:42,571 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:42,571 [main:28] - Try №320 of 534
2021-03-11 12:05:42,589 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:05:42,590 [main:28] - Try №321 of 534
2021-03-11 12:05:42,593 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:42,594 [main:28] - Try №322 of 534
2021-03-11 12:05:42,611 [main:28] - Try №323 of 534
2021-03-11 12:05:42,623 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:05:42,623 [main:28] - Try №324 of 534
2021-03-11 12:05:42,633 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:42,633 [main:66] - Compilation checking started
2021-03-11 12:05:42,824 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        B += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:42,824 [main:28] - Try №325 of 534
2021-03-11 12:05:42,834 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:42,834 [main:28] - Try №326 of 534
2021-03-11 12:05:42,850 [main:33] - Trying to replace Element(FOR) on Element(FOR)
2021-03-11 12:05:42,851 [main:66] - Compilation checking started
2021-03-11 12:05:43,041 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression step two().toLong()) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:43,041 [main:28] - Try №327 of 534
2021-03-11 12:05:43,047 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:05:43,048 [main:28] - Try №328 of 534
2021-03-11 12:05:43,057 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:43,058 [main:66] - Compilation checking started
2021-03-11 12:05:43,243 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): String = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:43,243 [main:28] - Try №329 of 534
2021-03-11 12:05:43,253 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:43,253 [main:28] - Try №330 of 534
2021-03-11 12:05:43,269 [main:33] - Trying to replace Element(CALLABLE_REFERENCE_EXPRESSION) on Element(CALLABLE_REFERENCE_EXPRESSION)
2021-03-11 12:05:43,269 [main:28] - Try №331 of 534
2021-03-11 12:05:43,275 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:43,276 [main:66] - Compilation checking started
2021-03-11 12:05:43,461 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = crash()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:43,461 [main:28] - Try №332 of 534
2021-03-11 12:05:43,470 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:43,470 [main:66] - Compilation checking started
2021-03-11 12:05:43,666 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(relativePath(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:43,666 [main:28] - Try №333 of 534
2021-03-11 12:05:43,679 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:05:43,679 [main:66] - Compilation checking started
2021-03-11 12:05:43,963 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:43,963 [main:28] - Try №334 of 534
2021-03-11 12:05:43,967 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:43,967 [main:28] - Try №335 of 534
2021-03-11 12:05:43,979 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:05:43,979 [main:28] - Try №336 of 534
2021-03-11 12:05:43,986 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:05:43,987 [main:66] - Compilation checking started
2021-03-11 12:05:44,187 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in J.listOfNotNull().toTypedArray() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:44,187 [main:28] - Try №337 of 534
2021-03-11 12:05:44,194 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:44,194 [main:66] - Compilation checking started
2021-03-11 12:05:44,382 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = S("O")
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:44,382 [main:28] - Try №338 of 534
2021-03-11 12:05:44,385 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:05:44,385 [main:66] - Compilation checking started
2021-03-11 12:05:44,577 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun foo1(c: CharToAny): Any = c.invoke('1')

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:44,577 [main:28] - Try №339 of 534
2021-03-11 12:05:44,589 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:05:44,589 [main:28] - Try №340 of 534
2021-03-11 12:05:44,606 [main:33] - Trying to replace Element(LOOP_RANGE) on Element(LOOP_RANGE)
2021-03-11 12:05:44,607 [main:66] - Compilation checking started
2021-03-11 12:05:44,800 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in longProgression step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:44,800 [main:28] - Try №341 of 534
2021-03-11 12:05:44,803 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:44,803 [main:66] - Compilation checking started
2021-03-11 12:05:45,009 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val Number = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:45,009 [main:28] - Try №342 of 534
2021-03-11 12:05:45,018 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:45,018 [main:66] - Compilation checking started
2021-03-11 12:05:45,211 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.mutableListOf() step 2) {
        uintList += i
    }
    assertEquals(listOf(8u, 6u, 4u, 2u), AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:45,211 [main:28] - Try №343 of 534
2021-03-11 12:05:45,220 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:45,220 [main:28] - Try №344 of 534
2021-03-11 12:05:45,234 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:45,234 [main:28] - Try №345 of 534
2021-03-11 12:05:45,245 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:45,245 [main:66] - Compilation checking started
2021-03-11 12:05:45,521 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Float) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:45,521 [main:28] - Try №346 of 534
2021-03-11 12:05:45,525 [main:33] - Trying to replace Element(CLASS_BODY) on Element(CLASS_BODY)
2021-03-11 12:05:45,525 [main:28] - Try №347 of 534
2021-03-11 12:05:45,531 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:45,531 [main:66] - Compilation checking started
2021-03-11 12:05:45,798 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:45,798 [main:28] - Try №348 of 534
2021-03-11 12:05:45,803 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:45,804 [main:66] - Compilation checking started
2021-03-11 12:05:46,007 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in v1 == v2) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:46,007 [main:28] - Try №349 of 534
2021-03-11 12:05:46,021 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:46,021 [main:28] - Try №350 of 534
2021-03-11 12:05:46,024 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:46,025 [main:28] - Try №351 of 534
2021-03-11 12:05:46,037 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:05:46,037 [main:28] - Try №352 of 534
2021-03-11 12:05:46,040 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:46,041 [main:66] - Compilation checking started
2021-03-11 12:05:46,232 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<a>()
}


2021-03-11 12:05:46,232 [main:28] - Try №353 of 534
2021-03-11 12:05:46,241 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:46,241 [main:28] - Try №354 of 534
2021-03-11 12:05:46,259 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:46,259 [main:28] - Try №355 of 534
2021-03-11 12:05:46,266 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:05:46,267 [main:28] - Try №356 of 534
2021-03-11 12:05:46,277 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:46,277 [main:28] - Try №357 of 534
2021-03-11 12:05:46,288 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:05:46,288 [main:28] - Try №358 of 534
2021-03-11 12:05:46,298 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:46,298 [main:28] - Try №359 of 534
2021-03-11 12:05:46,302 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:46,302 [main:66] - Compilation checking started
2021-03-11 12:05:46,505 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() bound 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:46,505 [main:28] - Try №360 of 534
2021-03-11 12:05:46,517 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:05:46,518 [main:28] - Try №361 of 534
2021-03-11 12:05:46,526 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:05:46,526 [main:28] - Try №362 of 534
2021-03-11 12:05:46,535 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:46,535 [main:28] - Try №363 of 534
2021-03-11 12:05:46,545 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:46,545 [main:28] - Try №364 of 534
2021-03-11 12:05:46,551 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:46,551 [main:28] - Try №365 of 534
2021-03-11 12:05:46,566 [main:28] - Try №366 of 534
2021-03-11 12:05:46,581 [main:28] - Try №367 of 534
2021-03-11 12:05:46,591 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:46,591 [main:28] - Try №368 of 534
2021-03-11 12:05:46,595 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:46,595 [main:66] - Compilation checking started
2021-03-11 12:05:46,782 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    toString(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:46,782 [main:28] - Try №369 of 534
2021-03-11 12:05:46,791 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:46,791 [main:28] - Try №370 of 534
2021-03-11 12:05:46,801 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:46,801 [main:28] - Try №371 of 534
2021-03-11 12:05:46,810 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:46,810 [main:28] - Try №372 of 534
2021-03-11 12:05:46,825 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:46,825 [main:28] - Try №373 of 534
2021-03-11 12:05:46,828 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:46,828 [main:66] - Compilation checking started
2021-03-11 12:05:47,012 [main:49] - Result = false
Text:
import kotlin.log.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:47,012 [main:28] - Try №374 of 534
2021-03-11 12:05:47,021 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:47,021 [main:28] - Try №375 of 534
2021-03-11 12:05:47,025 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:47,026 [main:66] - Compilation checking started
2021-03-11 12:05:47,209 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <p> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:47,209 [main:28] - Try №376 of 534
2021-03-11 12:05:47,218 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:47,219 [main:28] - Try №377 of 534
2021-03-11 12:05:47,229 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:47,229 [main:66] - Compilation checking started
2021-03-11 12:05:47,411 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals()

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:47,411 [main:28] - Try №378 of 534
2021-03-11 12:05:47,416 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:05:47,417 [main:66] - Compilation checking started
2021-03-11 12:05:47,600 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

open fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:47,600 [main:28] - Try №379 of 534
2021-03-11 12:05:47,615 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:47,615 [main:28] - Try №380 of 534
2021-03-11 12:05:47,625 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:47,625 [main:28] - Try №381 of 534
2021-03-11 12:05:47,637 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:47,638 [main:28] - Try №382 of 534
2021-03-11 12:05:47,642 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:47,642 [main:28] - Try №383 of 534
2021-03-11 12:05:47,651 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:47,651 [main:66] - Compilation checking started
2021-03-11 12:05:47,863 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in Int.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:47,863 [main:28] - Try №384 of 534
2021-03-11 12:05:47,867 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:47,867 [main:66] - Compilation checking started
2021-03-11 12:05:48,058 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), box)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:48,058 [main:28] - Try №385 of 534
2021-03-11 12:05:48,067 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:48,067 [main:28] - Try №386 of 534
2021-03-11 12:05:48,082 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:48,082 [main:28] - Try №387 of 534
2021-03-11 12:05:48,094 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:48,094 [main:28] - Try №388 of 534
2021-03-11 12:05:48,103 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:48,104 [main:28] - Try №389 of 534
2021-03-11 12:05:48,116 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:05:48,116 [main:28] - Try №390 of 534
2021-03-11 12:05:48,119 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:48,119 [main:28] - Try №391 of 534
2021-03-11 12:05:48,137 [main:28] - Try №392 of 534
2021-03-11 12:05:48,141 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:05:48,142 [main:66] - Compilation checking started
2021-03-11 12:05:48,338 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs() = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:48,338 [main:28] - Try №393 of 534
2021-03-11 12:05:48,342 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:48,342 [main:66] - Compilation checking started
2021-03-11 12:05:48,536 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in foo.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : Char) {
    ArrayList<Any>()
}


2021-03-11 12:05:48,536 [main:28] - Try №394 of 534
2021-03-11 12:05:48,551 [main:28] - Try №395 of 534
2021-03-11 12:05:48,557 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:48,557 [main:66] - Compilation checking started
2021-03-11 12:05:48,822 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:48,822 [main:28] - Try №396 of 534
2021-03-11 12:05:48,825 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:48,825 [main:66] - Compilation checking started
2021-03-11 12:05:49,008 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(box(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:49,008 [main:28] - Try №397 of 534
2021-03-11 12:05:49,012 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:49,012 [main:66] - Compilation checking started
2021-03-11 12:05:49,200 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(Long(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:49,200 [main:28] - Try №398 of 534
2021-03-11 12:05:49,215 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:49,216 [main:28] - Try №399 of 534
2021-03-11 12:05:49,227 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:49,227 [main:28] - Try №400 of 534
2021-03-11 12:05:49,230 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:49,230 [main:28] - Try №401 of 534
2021-03-11 12:05:49,240 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:49,240 [main:28] - Try №402 of 534
2021-03-11 12:05:49,250 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:49,250 [main:28] - Try №403 of 534
2021-03-11 12:05:49,259 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:49,260 [main:28] - Try №404 of 534
2021-03-11 12:05:49,270 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:49,270 [main:28] - Try №405 of 534
2021-03-11 12:05:49,273 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:49,273 [main:28] - Try №406 of 534
2021-03-11 12:05:49,281 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:49,281 [main:28] - Try №407 of 534
2021-03-11 12:05:49,290 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:49,291 [main:28] - Try №408 of 534
2021-03-11 12:05:49,305 [main:28] - Try №409 of 534
2021-03-11 12:05:49,314 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:49,315 [main:28] - Try №410 of 534
2021-03-11 12:05:49,318 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:49,318 [main:66] - Compilation checking started
2021-03-11 12:05:49,500 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    T<Any>()
}


2021-03-11 12:05:49,500 [main:28] - Try №411 of 534
2021-03-11 12:05:49,509 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:49,510 [main:28] - Try №412 of 534
2021-03-11 12:05:49,515 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:49,515 [main:66] - Compilation checking started
2021-03-11 12:05:49,699 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = result != "4, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4"

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:49,699 [main:28] - Try №413 of 534
2021-03-11 12:05:49,703 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:49,703 [main:66] - Compilation checking started
2021-03-11 12:05:49,887 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        x += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:49,887 [main:28] - Try №414 of 534
2021-03-11 12:05:49,894 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:49,895 [main:28] - Try №415 of 534
2021-03-11 12:05:49,898 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:49,898 [main:66] - Compilation checking started
2021-03-11 12:05:50,104 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.foo() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:50,105 [main:28] - Try №416 of 534
2021-03-11 12:05:50,107 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:05:50,107 [main:28] - Try №417 of 534
2021-03-11 12:05:50,113 [main:33] - Trying to replace Element(MODIFIER_LIST) on Element(MODIFIER_LIST)
2021-03-11 12:05:50,113 [main:66] - Compilation checking started
2021-03-11 12:05:50,297 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(override files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:50,297 [main:28] - Try №418 of 534
2021-03-11 12:05:50,304 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:50,305 [main:28] - Try №419 of 534
2021-03-11 12:05:50,309 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:50,309 [main:28] - Try №420 of 534
2021-03-11 12:05:50,313 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:50,313 [main:66] - Compilation checking started
2021-03-11 12:05:50,495 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(toString: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:50,495 [main:28] - Try №421 of 534
2021-03-11 12:05:50,499 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:50,499 [main:28] - Try №422 of 534
2021-03-11 12:05:50,504 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:50,504 [main:66] - Compilation checking started
2021-03-11 12:05:50,689 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): v {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:50,689 [main:28] - Try №423 of 534
2021-03-11 12:05:50,701 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:05:50,701 [main:28] - Try №424 of 534
2021-03-11 12:05:50,704 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:50,704 [main:66] - Compilation checking started
2021-03-11 12:05:50,889 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val AssertionError = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:50,889 [main:28] - Try №425 of 534
2021-03-11 12:05:50,900 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:05:50,900 [main:28] - Try №426 of 534
2021-03-11 12:05:50,914 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:50,914 [main:28] - Try №427 of 534
2021-03-11 12:05:50,923 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:50,923 [main:28] - Try №428 of 534
2021-03-11 12:05:50,927 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:50,927 [main:66] - Compilation checking started
2021-03-11 12:05:51,114 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(coroutines: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:51,114 [main:28] - Try №429 of 534
2021-03-11 12:05:51,129 [main:28] - Try №430 of 534
2021-03-11 12:05:51,134 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:51,134 [main:28] - Try №431 of 534
2021-03-11 12:05:51,137 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:51,138 [main:66] - Compilation checking started
2021-03-11 12:05:51,326 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = A<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in ulongProgression.reversed() step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:51,326 [main:28] - Try №432 of 534
2021-03-11 12:05:51,328 [main:33] - Trying to replace Element(PACKAGE_DIRECTIVE) on Element(PACKAGE_DIRECTIVE)
2021-03-11 12:05:51,328 [main:66] - Compilation checking started
2021-03-11 12:05:51,328 [main:68] - Already checked
2021-03-11 12:05:51,328 [main:28] - Try №433 of 534
2021-03-11 12:05:51,334 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:51,334 [main:28] - Try №434 of 534
2021-03-11 12:05:51,351 [main:33] - Trying to replace Element(LOOP_RANGE) on Element(LOOP_RANGE)
2021-03-11 12:05:51,352 [main:66] - Compilation checking started
2021-03-11 12:05:51,614 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:51,614 [main:28] - Try №435 of 534
2021-03-11 12:05:51,625 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:51,625 [main:28] - Try №436 of 534
2021-03-11 12:05:51,631 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:51,632 [main:66] - Compilation checking started
2021-03-11 12:05:51,819 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = foo()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:51,819 [main:28] - Try №437 of 534
2021-03-11 12:05:51,822 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:51,822 [main:66] - Compilation checking started
2021-03-11 12:05:52,020 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = Int()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:52,021 [main:28] - Try №438 of 534
2021-03-11 12:05:52,032 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:52,032 [main:28] - Try №439 of 534
2021-03-11 12:05:52,035 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:52,036 [main:66] - Compilation checking started
2021-03-11 12:05:52,229 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < C

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:52,229 [main:28] - Try №440 of 534
2021-03-11 12:05:52,244 [main:28] - Try №441 of 534
2021-03-11 12:05:52,260 [main:28] - Try №442 of 534
2021-03-11 12:05:52,270 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:52,270 [main:28] - Try №443 of 534
2021-03-11 12:05:52,282 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:52,282 [main:28] - Try №444 of 534
2021-03-11 12:05:52,289 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:52,289 [main:28] - Try №445 of 534
2021-03-11 12:05:52,293 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:52,293 [main:66] - Compilation checking started
2021-03-11 12:05:52,493 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += hasNext
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:52,493 [main:28] - Try №446 of 534
2021-03-11 12:05:52,500 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:52,500 [main:28] - Try №447 of 534
2021-03-11 12:05:52,505 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:52,505 [main:28] - Try №448 of 534
2021-03-11 12:05:52,508 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:52,509 [main:28] - Try №449 of 534
2021-03-11 12:05:52,516 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:05:52,517 [main:66] - Compilation checking started
2021-03-11 12:05:52,728 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
    consume(object : Sink<E> {
        override suspend fun send(item: E) = action(item)
        override fun close(cause: Throwable?) { cause?.let { throw it } }
    })
}
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:52,729 [main:28] - Try №450 of 534
2021-03-11 12:05:52,737 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:52,737 [main:66] - Compilation checking started
2021-03-11 12:05:52,940 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (@Ann s: String in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(vararg files : (() -> Unit )?) {
    ArrayList<Any>()
}


2021-03-11 12:05:52,941 [main:28] - Try №451 of 534
2021-03-11 12:05:52,954 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:05:52,954 [main:28] - Try №452 of 534
2021-03-11 12:05:52,963 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:05:52,963 [main:66] - Compilation checking started
2021-03-11 12:05:53,245 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:53,245 [main:28] - Try №453 of 534
2021-03-11 12:05:53,248 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:53,249 [main:66] - Compilation checking started
2021-03-11 12:05:53,440 [main:49] - Result = false
Text:
import a.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:53,440 [main:28] - Try №454 of 534
2021-03-11 12:05:53,449 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:53,449 [main:28] - Try №455 of 534
2021-03-11 12:05:53,453 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:53,453 [main:66] - Compilation checking started
2021-03-11 12:05:53,638 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: test, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:53,638 [main:28] - Try №456 of 534
2021-03-11 12:05:53,644 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:53,644 [main:28] - Try №457 of 534
2021-03-11 12:05:53,648 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:53,648 [main:28] - Try №458 of 534
2021-03-11 12:05:53,658 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:53,658 [main:28] - Try №459 of 534
2021-03-11 12:05:53,667 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:53,668 [main:28] - Try №460 of 534
2021-03-11 12:05:53,684 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:05:53,684 [main:28] - Try №461 of 534
2021-03-11 12:05:53,693 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:53,694 [main:28] - Try №462 of 534
2021-03-11 12:05:53,702 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:53,702 [main:28] - Try №463 of 534
2021-03-11 12:05:53,706 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:53,706 [main:66] - Compilation checking started
2021-03-11 12:05:53,893 [main:49] - Result = false
Text:
import kotlin.s.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:53,894 [main:28] - Try №464 of 534
2021-03-11 12:05:53,909 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:53,909 [main:28] - Try №465 of 534
2021-03-11 12:05:53,917 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:05:53,917 [main:28] - Try №466 of 534
2021-03-11 12:05:53,925 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:53,925 [main:28] - Try №467 of 534
2021-03-11 12:05:53,942 [main:28] - Try №468 of 534
2021-03-11 12:05:53,956 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:05:53,957 [main:28] - Try №469 of 534
2021-03-11 12:05:53,965 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:53,965 [main:28] - Try №470 of 534
2021-03-11 12:05:53,981 [main:28] - Try №471 of 534
2021-03-11 12:05:53,996 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:53,997 [main:28] - Try №472 of 534
2021-03-11 12:05:54,006 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:54,007 [main:28] - Try №473 of 534
2021-03-11 12:05:54,011 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:54,011 [main:28] - Try №474 of 534
2021-03-11 12:05:54,015 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:54,015 [main:66] - Compilation checking started
2021-03-11 12:05:54,207 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <A> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:54,208 [main:28] - Try №475 of 534
2021-03-11 12:05:54,217 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:54,217 [main:28] - Try №476 of 534
2021-03-11 12:05:54,228 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:54,228 [main:28] - Try №477 of 534
2021-03-11 12:05:54,231 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:54,231 [main:28] - Try №478 of 534
2021-03-11 12:05:54,240 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:54,240 [main:28] - Try №479 of 534
2021-03-11 12:05:54,249 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:54,249 [main:28] - Try №480 of 534
2021-03-11 12:05:54,259 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:05:54,259 [main:28] - Try №481 of 534
2021-03-11 12:05:54,265 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:54,265 [main:28] - Try №482 of 534
2021-03-11 12:05:54,278 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:05:54,279 [main:28] - Try №483 of 534
2021-03-11 12:05:54,282 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:54,283 [main:66] - Compilation checking started
2021-03-11 12:05:54,473 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <util> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:54,473 [main:28] - Try №484 of 534
2021-03-11 12:05:54,484 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:05:54,484 [main:28] - Try №485 of 534
2021-03-11 12:05:54,493 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:54,493 [main:28] - Try №486 of 534
2021-03-11 12:05:54,497 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:54,497 [main:66] - Compilation checking started
2021-03-11 12:05:54,692 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.notInlinedRun() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:54,692 [main:28] - Try №487 of 534
2021-03-11 12:05:54,697 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:54,697 [main:66] - Compilation checking started
2021-03-11 12:05:54,905 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = ss == "0;1;2;3;"
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:54,905 [main:28] - Try №488 of 534
2021-03-11 12:05:54,908 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:54,908 [main:28] - Try №489 of 534
2021-03-11 12:05:54,912 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:54,912 [main:66] - Compilation checking started
2021-03-11 12:05:55,118 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AnnotationRetention()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:55,118 [main:28] - Try №490 of 534
2021-03-11 12:05:55,122 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:55,122 [main:66] - Compilation checking started
2021-03-11 12:05:55,328 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : f {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:55,329 [main:28] - Try №491 of 534
2021-03-11 12:05:55,334 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:05:55,334 [main:28] - Try №492 of 534
2021-03-11 12:05:55,337 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:55,338 [main:28] - Try №493 of 534
2021-03-11 12:05:55,344 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:55,344 [main:28] - Try №494 of 534
2021-03-11 12:05:55,355 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:05:55,355 [main:28] - Try №495 of 534
2021-03-11 12:05:55,364 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:55,364 [main:28] - Try №496 of 534
2021-03-11 12:05:55,375 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:55,375 [main:66] - Compilation checking started
2021-03-11 12:05:55,561 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val kMutableProperty: KMutableProperty1<A, String> = A::publicField
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:55,561 [main:28] - Try №497 of 534
2021-03-11 12:05:55,573 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:55,573 [main:66] - Compilation checking started
2021-03-11 12:05:55,769 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    var res = extension<Int>(IC(FooHolder(40))) + 3
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:55,769 [main:28] - Try №498 of 534
2021-03-11 12:05:55,778 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:55,778 [main:28] - Try №499 of 534
2021-03-11 12:05:55,785 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:05:55,785 [main:28] - Try №500 of 534
2021-03-11 12:05:55,791 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:55,791 [main:28] - Try №501 of 534
2021-03-11 12:05:55,803 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:05:55,803 [main:28] - Try №502 of 534
2021-03-11 12:05:55,813 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:55,813 [main:28] - Try №503 of 534
2021-03-11 12:05:55,831 [main:33] - Trying to replace Element(BODY) on Element(BODY)
2021-03-11 12:05:55,831 [main:28] - Try №504 of 534
2021-03-11 12:05:55,842 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:55,842 [main:28] - Try №505 of 534
2021-03-11 12:05:55,851 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:55,851 [main:28] - Try №506 of 534
2021-03-11 12:05:55,860 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:55,860 [main:28] - Try №507 of 534
2021-03-11 12:05:55,863 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:55,863 [main:28] - Try №508 of 534
2021-03-11 12:05:55,874 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:05:55,874 [main:66] - Compilation checking started
2021-03-11 12:05:56,072 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    var d = 0.0
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:56,072 [main:28] - Try №509 of 534
2021-03-11 12:05:56,078 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:56,078 [main:28] - Try №510 of 534
2021-03-11 12:05:56,087 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:05:56,087 [main:28] - Try №511 of 534
2021-03-11 12:05:56,096 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:56,096 [main:28] - Try №512 of 534
2021-03-11 12:05:56,099 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:56,099 [main:28] - Try №513 of 534
2021-03-11 12:05:56,110 [main:33] - Trying to replace Element(RETURN) on Element(RETURN)
2021-03-11 12:05:56,110 [main:28] - Try №514 of 534
2021-03-11 12:05:56,122 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:56,122 [main:28] - Try №515 of 534
2021-03-11 12:05:56,128 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:56,128 [main:28] - Try №516 of 534
2021-03-11 12:05:56,134 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:56,135 [main:28] - Try №517 of 534
2021-03-11 12:05:56,142 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:05:56,142 [main:28] - Try №518 of 534
2021-03-11 12:05:56,145 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:56,145 [main:28] - Try №519 of 534
2021-03-11 12:05:56,149 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:56,149 [main:66] - Compilation checking started
2021-03-11 12:05:56,344 [main:49] - Result = false
Text:
import kotlin.String.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:56,344 [main:28] - Try №520 of 534
2021-03-11 12:05:56,348 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:56,348 [main:66] - Compilation checking started
2021-03-11 12:05:56,542 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: JvmName, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:56,542 [main:28] - Try №521 of 534
2021-03-11 12:05:56,556 [main:28] - Try №522 of 534
2021-03-11 12:05:56,571 [main:28] - Try №523 of 534
2021-03-11 12:05:56,574 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:56,575 [main:28] - Try №524 of 534
2021-03-11 12:05:56,578 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:56,578 [main:28] - Try №525 of 534
2021-03-11 12:05:56,588 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:56,589 [main:28] - Try №526 of 534
2021-03-11 12:05:56,592 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:56,592 [main:28] - Try №527 of 534
2021-03-11 12:05:56,608 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:05:56,608 [main:28] - Try №528 of 534
2021-03-11 12:05:56,617 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:05:56,617 [main:28] - Try №529 of 534
2021-03-11 12:05:56,620 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:56,620 [main:66] - Compilation checking started
2021-03-11 12:05:56,803 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = i<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:56,803 [main:28] - Try №530 of 534
2021-03-11 12:05:56,809 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:05:56,809 [main:28] - Try №531 of 534
2021-03-11 12:05:56,818 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:05:56,818 [main:28] - Try №532 of 534
2021-03-11 12:05:56,822 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:05:56,822 [main:28] - Try №533 of 534
2021-03-11 12:05:56,826 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:05:56,826 [main:66] - Compilation checking started
2021-03-11 12:05:57,012 [main:49] - Result = false
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(s: Byte, b: Int) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:57,013 [main:28] - Try №534 of 534
2021-03-11 12:05:57,024 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:05:57,112 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:05:57,112 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:05:57,113 [main:66] - Compilation checking started
2021-03-11 12:05:57,387 [main:53] - Result = true
Text:
import kotlin.test.*

inline fun nothing() {}

inline fun xs(a: Byte, b: Int = 931133678) = a < b

inline fun <Ty1> T(f: () -> Ty1): Ty1 = f()

fun bar(state: Int) {}

fun box142(): String {
    val annotations = AssertionError()
var b = 42.toByte()
val s = Array<String>(1, { "" })
val p = 1
return "Fail: no Constructor for reference"
}

fun toString() : String {
    val uintList = mutableListOf<Any>()
    val uintProgression = 1u until 9u
    for (i in uintProgression.reversed() step 2) {
        uintList += i
    }
    assertEquals(1000, AnnotationTarget.PROPERTY_SETTER)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL until 9uL
    for (i in 7uL downTo 1uL step 0L step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1, { "" }), ulongList)

    return "OK"
}

public fun Unit(e: Throwable) {
    ArrayList<Any>()
}


2021-03-11 12:05:57,725 [main:52] - Trying to change 242 nodes
2021-03-11 12:05:57,725 [main:56] - replacing (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}), MutableList<UInt>)
2021-03-11 12:05:57,725 [main:38] - replacing MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) MutableList<UInt>
2021-03-11 12:05:57,725 [main:42] - Getting value of type MutableList<UInt>
2021-03-11 12:05:57,809 [main:302] - generating value of type = MutableList<UInt> false depth = 0
2021-03-11 12:05:57,895 [main:43] - GENERATING CALL OF fun <T> mutableListOf(): MutableList<UInt> = TODO()
2021-03-11 12:05:57,896 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(): MutableList<UInt> = TODO()
2021-03-11 12:05:57,979 [main:95] - GENERATED = mutableListOf<UInt>()
2021-03-11 12:05:57,979 [main:46] - GENERATED VALUE OF TYPE MutableList<UInt> = mutableListOf<UInt>()
2021-03-11 12:05:57,979 [main:49] - GENERATED IS CALL =true
2021-03-11 12:05:57,980 [main:55] - randomType = ULong
2021-03-11 12:05:58,071 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:05:58,162 [main:94] - GETTING MutableList<UInt> from UIntRange
2021-03-11 12:05:58,194 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:05:58,194 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:05:58,195 [main:105] - GENERATED CALL = ((uintProgression)).toMutableList()
2021-03-11 12:05:58,195 [main:63] - replacement of MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()}) of type MutableList<UInt> is mutableListOf<UInt>()
2021-03-11 12:05:58,277 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:05:58,277 [main:66] - Compilation checking started
2021-03-11 12:05:58,549 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>(1079481874.toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step(90362397)) {
        mutableListOf<UInt>() += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:05:58,551 [main:56] - replacing (1079481874.toUInt(), UInt)
2021-03-11 12:05:58,551 [main:38] - replacing 1079481874.toUInt() UInt
2021-03-11 12:05:58,551 [main:42] - Getting value of type UInt
2021-03-11 12:05:58,633 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:05:58,633 [main:46] - GENERATED VALUE OF TYPE UInt = 344729357.toUInt()
2021-03-11 12:05:58,633 [main:49] - GENERATED IS CALL =false
2021-03-11 12:05:58,717 [main:55] - randomType = Float
2021-03-11 12:05:58,797 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:05:58,830 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@27446428]
2021-03-11 12:05:58,911 [main:302] - generating value of type = Double true depth = 0
2021-03-11 12:05:58,911 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@56232a19]
2021-03-11 12:05:58,911 [main:66] - Generated call from random type = (0.69279724f).div(0.2659891297789724).toUInt()
2021-03-11 12:05:58,916 [main:94] - GETTING UInt from ULongRange
2021-03-11 12:05:58,941 [main:101] - Case = [public open val endInclusive: kotlin.ULong defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@21c31c8f], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]]
2021-03-11 12:05:58,941 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]
2021-03-11 12:05:58,942 [main:105] - GENERATED CALL = ((ulongProgression)).endInclusive.toUInt()
2021-03-11 12:05:58,942 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@5f731cda], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]]
2021-03-11 12:05:58,942 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]
2021-03-11 12:05:58,942 [main:105] - GENERATED CALL = ((ulongProgression)).step.toUInt()
2021-03-11 12:05:58,942 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]]
2021-03-11 12:05:58,942 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]
2021-03-11 12:05:58,942 [main:105] - GENERATED CALL = ((ulongProgression)).first.toUInt()
2021-03-11 12:05:58,942 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-11 12:05:58,942 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-11 12:05:59,024 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-11 12:05:59,024 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:05:59,025 [main:105] - GENERATED CALL = ((ulongProgression)).sumOf({a: T -> 1751209258.toUInt()})
2021-03-11 12:05:59,025 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]]
2021-03-11 12:05:59,025 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]
2021-03-11 12:05:59,025 [main:105] - GENERATED CALL = ((ulongProgression)).sum()
2021-03-11 12:05:59,025 [main:63] - replacement of 1079481874.toUInt() of type UInt is (0.69279724f).div(0.2659891297789724).toUInt()
2021-03-11 12:05:59,107 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:05:59,107 [main:66] - Compilation checking started
2021-03-11 12:05:59,379 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step(90362397)) {
        mutableListOf<UInt>() += (22203.toUShort()).plus(22203.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:05:59,381 [main:56] - replacing (22203.toUByte(), UByte)
2021-03-11 12:05:59,381 [main:38] - replacing 22203.toUByte() UByte
2021-03-11 12:05:59,381 [main:42] - Getting value of type UByte
2021-03-11 12:05:59,466 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:05:59,467 [main:46] - GENERATED VALUE OF TYPE UByte = 84.toUByte()
2021-03-11 12:05:59,467 [main:49] - GENERATED IS CALL =false
2021-03-11 12:05:59,633 [main:55] - randomType = List<Boolean>
2021-03-11 12:05:59,634 [main:94] - GETTING UByte from UInt
2021-03-11 12:05:59,659 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@56b937e7]]
2021-03-11 12:05:59,659 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:05:59,659 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@56b937e7]
2021-03-11 12:05:59,659 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().toUByte()
2021-03-11 12:05:59,659 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline infix fun xor(other: kotlin.UByte): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c3c38da]]
2021-03-11 12:05:59,659 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:05:59,659 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun xor(other: kotlin.UByte): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c3c38da]
2021-03-11 12:05:59,741 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:05:59,742 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().xor(78.toUByte())
2021-03-11 12:05:59,742 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UByte): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@31ea3a3c]]
2021-03-11 12:05:59,742 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:05:59,742 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UByte): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@31ea3a3c]
2021-03-11 12:05:59,825 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:05:59,825 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().or(24.toUByte())
2021-03-11 12:05:59,825 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4f2a40f2]]
2021-03-11 12:05:59,825 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:05:59,826 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4f2a40f2]
2021-03-11 12:05:59,826 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().inc()
2021-03-11 12:05:59,826 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline operator fun dec(): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@6612d5e0]]
2021-03-11 12:05:59,826 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:05:59,826 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun dec(): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@6612d5e0]
2021-03-11 12:05:59,826 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().dec()
2021-03-11 12:05:59,826 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline infix fun and(other: kotlin.UByte): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1979133f]]
2021-03-11 12:05:59,826 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:05:59,826 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun and(other: kotlin.UByte): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1979133f]
2021-03-11 12:05:59,908 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:05:59,908 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().and(53.toUByte())
2021-03-11 12:05:59,909 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.coerceAtLeast(minimumValue: kotlin.UByte): kotlin.UByte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@54878611]]
2021-03-11 12:05:59,909 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:05:59,909 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.coerceAtLeast(minimumValue: kotlin.UByte): kotlin.UByte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@54878611]
2021-03-11 12:05:59,991 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:05:59,991 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().coerceAtLeast(7.toUByte())
2021-03-11 12:05:59,991 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.rotateLeft(bitCount: kotlin.Int): kotlin.UByte defined in kotlin[DeserializedSimpleFunctionDescriptor@46822ffd]]
2021-03-11 12:05:59,991 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:05:59,991 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.rotateLeft(bitCount: kotlin.Int): kotlin.UByte defined in kotlin[DeserializedSimpleFunctionDescriptor@46822ffd]
2021-03-11 12:06:00,073 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:00,074 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().rotateLeft(-186137271)
2021-03-11 12:06:00,074 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@5003d89e]]
2021-03-11 12:06:00,074 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:00,074 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.UByte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@5003d89e]
2021-03-11 12:06:00,074 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().inv()
2021-03-11 12:06:00,074 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9], @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@29988e4a]]
2021-03-11 12:06:00,075 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]
2021-03-11 12:06:00,156 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:00,157 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@29988e4a]
2021-03-11 12:06:00,157 [main:105] - GENERATED CALL = ((uintProgression).first).div(3063526859079560905.toULong()).toUByte()
2021-03-11 12:06:00,157 [main:63] - replacement of 22203.toUByte() of type UByte is ((uintProgression).first).toUByte().xor(78.toUByte())
2021-03-11 12:06:00,256 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:00,256 [main:66] - Compilation checking started
2021-03-11 12:06:00,542 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step(90362397)) {
        mutableListOf<UInt>() += (22203.toUShort()).plus(((uintProgression).first).toUByte().xor(78.toUByte()))
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        (ulongProgression).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:00,544 [main:56] - replacing (ulongProgression, ULongRange)
2021-03-11 12:06:00,544 [main:38] - replacing ulongProgression ULongRange
2021-03-11 12:06:00,544 [main:42] - Getting value of type ULongRange
2021-03-11 12:06:00,631 [main:302] - generating value of type = ULongRange false depth = 0
2021-03-11 12:06:00,718 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:00,719 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:00,983 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:00,983 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:00,984 [main:95] - GENERATED = ULongRange(7404100870687651175.toULong(), 7821340781813719833.toULong())
2021-03-11 12:06:00,984 [main:46] - GENERATED VALUE OF TYPE ULongRange = ULongRange(7404100870687651175.toULong(), 7821340781813719833.toULong())
2021-03-11 12:06:00,984 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:00,985 [main:55] - randomType = String
2021-03-11 12:06:01,081 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:06:01,106 [main:94] - GETTING ULongRange from UIntRange
2021-03-11 12:06:01,131 [main:94] - GETTING ULongRange from MutableList<UInt>
2021-03-11 12:06:01,196 [main:94] - GETTING ULongRange from ULongRange
2021-03-11 12:06:01,236 [main:101] - Case = [public open val endInclusive: kotlin.ULong defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@21c31c8f], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]]
2021-03-11 12:06:01,236 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]
2021-03-11 12:06:01,321 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:01,322 [main:105] - GENERATED CALL = ((ulongProgression)).endInclusive.until(2830320611652819387.toULong())
2021-03-11 12:06:01,322 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]]
2021-03-11 12:06:01,322 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]
2021-03-11 12:06:01,411 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:01,411 [main:105] - GENERATED CALL = ((ulongProgression)).first.rangeTo(7108697243511744787.toULong())
2021-03-11 12:06:01,412 [main:101] - Case = [public open val endInclusive: kotlin.ULong defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@21c31c8f], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]]
2021-03-11 12:06:01,412 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]
2021-03-11 12:06:01,496 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:01,496 [main:105] - GENERATED CALL = ((ulongProgression)).endInclusive.rangeTo(3916002161884530245.toULong())
2021-03-11 12:06:01,496 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]]
2021-03-11 12:06:01,497 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]
2021-03-11 12:06:01,580 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:01,580 [main:105] - GENERATED CALL = ((ulongProgression)).first.until(1780727488433872471.toULong())
2021-03-11 12:06:01,580 [main:63] - replacement of ulongProgression of type ULongRange is (ulongProgression)
2021-03-11 12:06:01,663 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(PARENTHESIZED)
2021-03-11 12:06:01,664 [main:66] - Compilation checking started
2021-03-11 12:06:01,968 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step(90362397)) {
        mutableListOf<UInt>() += (22203.toUShort()).plus(((uintProgression).first).toUByte().xor(78.toUByte()))
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:01,970 [main:56] - replacing ((22203.toUShort()).plus(((uintProgression).first).toUByte().xor(78.toUByte())), UInt)
2021-03-11 12:06:01,970 [main:38] - replacing (22203.toUShort()).plus(((uintProgression).first).toUByte().xor(78.toUByte())) UInt
2021-03-11 12:06:01,970 [main:42] - Getting value of type UInt
2021-03-11 12:06:02,053 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:02,054 [main:46] - GENERATED VALUE OF TYPE UInt = 804856211.toUInt()
2021-03-11 12:06:02,054 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:02,138 [main:55] - randomType = Short
2021-03-11 12:06:02,221 [main:302] - generating value of type = Short true depth = 0
2021-03-11 12:06:02,265 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360]
2021-03-11 12:06:02,265 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]
2021-03-11 12:06:02,265 [main:66] - Generated call from random type = (-18253).toLong().toUInt()
2021-03-11 12:06:02,267 [main:94] - GETTING UInt from MutableList<UInt>
2021-03-11 12:06:02,319 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@ec0917b]]
2021-03-11 12:06:02,320 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:02,403 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:02,403 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@ec0917b]
2021-03-11 12:06:02,486 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:02,487 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1979632312).rotateLeft(-441079114)
2021-03-11 12:06:02,487 [main:101] - Case = [public abstract fun removeAt(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4fdda7db]]
2021-03-11 12:06:02,487 [main:137] - GENERATING call of type public abstract fun removeAt(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@4fdda7db]
2021-03-11 12:06:02,570 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:02,570 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).removeAt(-1098484139)
2021-03-11 12:06:02,570 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5bd78ae]]
2021-03-11 12:06:02,570 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:02,674 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:02,674 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5bd78ae]
2021-03-11 12:06:02,674 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(218537470).inc()
2021-03-11 12:06:02,674 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateRight(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@76fa054d]]
2021-03-11 12:06:02,674 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:02,757 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:02,757 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateRight(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@76fa054d]
2021-03-11 12:06:02,841 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:02,842 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-506974088).rotateRight(71495798)
2021-03-11 12:06:02,842 [main:101] - Case = [public fun <T> kotlin.collections.List<T>.getOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2d7c6b98]]
2021-03-11 12:06:02,842 [main:137] - GENERATING call of type public fun <T> kotlin.collections.List<T>.getOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2d7c6b98]
2021-03-11 12:06:02,925 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:02,926 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).getOrNull(51235746)
2021-03-11 12:06:02,926 [main:101] - Case = [@kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.minOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14137240]]
2021-03-11 12:06:02,926 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.minOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14137240]
2021-03-11 12:06:02,926 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).minOrNull()
2021-03-11 12:06:02,927 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f2a595c]]
2021-03-11 12:06:02,927 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f2a595c]
2021-03-11 12:06:03,010 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-11 12:06:03,011 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:06:03,098 [main:43] - GENERATING CALL OF fun <R> run(block: ()->Long): R = TODO()
2021-03-11 12:06:03,099 [main:61] - WITHOUT TYPE PARAMS = fun <R> run(block: ()->Long): R = TODO()
2021-03-11 12:06:03,267 [main:302] - generating value of type = Function0<Long> false depth = 4
2021-03-11 12:06:03,267 [main:302] - generating value of type = Long true depth = 5
2021-03-11 12:06:03,268 [main:95] - GENERATED = run<Long>({ 3680414184629695668})
2021-03-11 12:06:03,268 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).maxBy({a: T -> run<Long>({ 3680414184629695668})})
2021-03-11 12:06:03,268 [main:101] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7249d9ce]]
2021-03-11 12:06:03,268 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 12:06:03,352 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-11 12:06:03,439 [main:43] - GENERATING CALL OF fun <T> nullsLast(comparator: kotlin.Comparator<T>): Comparator<T> = TODO()
2021-03-11 12:06:03,439 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(comparator: kotlin.Comparator<T>): Comparator<T> = TODO()
2021-03-11 12:06:03,608 [main:385] - Cant generate call of fun <T> nullsLast(comparator: kotlin.Comparator<T>): Comparator<T> = TODO()
2021-03-11 12:06:03,608 [main:144] - CANT GENERATE PARAMS FOR @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 12:06:03,608 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d1b2e3f]]
2021-03-11 12:06:03,608 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component1(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d1b2e3f]
2021-03-11 12:06:03,608 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component1()
2021-03-11 12:06:03,608 [main:101] - Case = [public abstract fun listIterator(): kotlin.collections.MutableListIterator<kotlin.UInt> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@66d9d2fa], public abstract fun previous(): kotlin.UInt defined in kotlin.collections.MutableListIterator[DeserializedSimpleFunctionDescriptor@5446bf35]]
2021-03-11 12:06:03,608 [main:137] - GENERATING call of type public abstract fun listIterator(): kotlin.collections.MutableListIterator<kotlin.UInt> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@66d9d2fa]
2021-03-11 12:06:03,609 [main:137] - GENERATING call of type public abstract fun previous(): kotlin.UInt defined in kotlin.collections.MutableListIterator[DeserializedSimpleFunctionDescriptor@5446bf35]
2021-03-11 12:06:03,609 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).listIterator().previous()
2021-03-11 12:06:03,609 [main:63] - replacement of (22203.toUShort()).plus(((uintProgression).first).toUByte().xor(78.toUByte())) of type UInt is (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).getOrNull(51235746)
2021-03-11 12:06:03,691 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:03,691 [main:66] - Compilation checking started
2021-03-11 12:06:03,889 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step(90362397)) {
        mutableListOf<UInt>() += (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).getOrNull(51235746)
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:03,892 [main:56] - replacing ((22203.toUShort()).plus(((uintProgression).first).toUByte().xor(78.toUByte())), UInt)
2021-03-11 12:06:03,893 [main:38] - replacing (22203.toUShort()).plus(((uintProgression).first).toUByte().xor(78.toUByte())) UInt
2021-03-11 12:06:03,893 [main:42] - Getting value of type UInt
2021-03-11 12:06:03,989 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:03,989 [main:46] - GENERATED VALUE OF TYPE UInt = 733588662.toUInt()
2021-03-11 12:06:03,989 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:04,158 [main:55] - randomType = LinkedHashSet<ULong?>
2021-03-11 12:06:04,241 [main:302] - generating value of type = LinkedHashSet<ULong?> false depth = 0
2021-03-11 12:06:04,326 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): LkedHashSet<ULong?> = TODO()
2021-03-11 12:06:04,327 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): LkedHashSet<ULong?> = TODO()
2021-03-11 12:06:04,409 [main:95] - GENERATED = linkedSetOf<ULong?>()
2021-03-11 12:06:04,528 [main:137] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.LinkedHashSet[DeserializedSimpleFunctionDescriptor@499aeaeb]
2021-03-11 12:06:04,529 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.Array<out kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c92c66f]
2021-03-11 12:06:04,529 [main:66] - Generated call from random type = (linkedSetOf<ULong?>()).toArray().sum()
2021-03-11 12:06:04,529 [main:94] - GETTING UInt from UInt
2021-03-11 12:06:04,553 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@f742fbf]]
2021-03-11 12:06:04,553 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@f742fbf]
2021-03-11 12:06:04,637 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:04,637 [main:105] - GENERATED CALL = ((uintProgression).first).times(29.toUByte())
2021-03-11 12:06:04,637 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@37ed95a2]]
2021-03-11 12:06:04,637 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@37ed95a2]
2021-03-11 12:06:04,720 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:04,721 [main:105] - GENERATED CALL = ((uintProgression).first).plus(13.toUByte())
2021-03-11 12:06:04,721 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@597ec5e0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Short.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@773ebb6d]]
2021-03-11 12:06:04,721 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@597ec5e0]
2021-03-11 12:06:04,721 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Short.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@773ebb6d]
2021-03-11 12:06:04,721 [main:105] - GENERATED CALL = ((uintProgression).first).toShort().toUInt()
2021-03-11 12:06:04,721 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@25d08b09], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Float.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@2b25277b]]
2021-03-11 12:06:04,721 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@25d08b09]
2021-03-11 12:06:04,721 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Float.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@2b25277b]
2021-03-11 12:06:04,721 [main:105] - GENERATED CALL = ((uintProgression).first).toFloat().toUInt()
2021-03-11 12:06:04,721 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]]
2021-03-11 12:06:04,721 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]
2021-03-11 12:06:04,722 [main:105] - GENERATED CALL = ((uintProgression).first).takeLowestOneBit()
2021-03-11 12:06:04,722 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975], public open val start: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@63c49f69]]
2021-03-11 12:06:04,722 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:04,833 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:04,834 [main:105] - GENERATED CALL = ((uintProgression).first).rangeTo(1509942999.toUInt()).start
2021-03-11 12:06:04,834 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@649c9b80]]
2021-03-11 12:06:04,834 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:04,834 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@649c9b80]
2021-03-11 12:06:04,916 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:04,917 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().plus(17.toUByte())
2021-03-11 12:06:04,917 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateRight(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@76fa054d]]
2021-03-11 12:06:04,917 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateRight(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@76fa054d]
2021-03-11 12:06:04,998 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:04,999 [main:105] - GENERATED CALL = ((uintProgression).first).rotateRight(-1209530994)
2021-03-11 12:06:04,999 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975], public final val last: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@39b503c3]]
2021-03-11 12:06:04,999 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:05,082 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:05,082 [main:105] - GENERATED CALL = ((uintProgression).first).rangeTo(207936542.toUInt()).last
2021-03-11 12:06:05,082 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline infix fun xor(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2b6344d1]]
2021-03-11 12:06:05,082 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun xor(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2b6344d1]
2021-03-11 12:06:05,165 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:05,166 [main:105] - GENERATED CALL = ((uintProgression).first).xor(1256595498.toUInt())
2021-03-11 12:06:05,166 [main:63] - replacement of (22203.toUShort()).plus(((uintProgression).first).toUByte().xor(78.toUByte())) of type UInt is ((uintProgression).first).toUShort().plus(17.toUByte())
2021-03-11 12:06:05,248 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:05,249 [main:66] - Compilation checking started
2021-03-11 12:06:05,523 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step(90362397)) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:05,526 [main:56] - replacing (((ulongProgression)).toMutableList(), MutableList<ULong>)
2021-03-11 12:06:05,527 [main:38] - replacing ((ulongProgression)).toMutableList() MutableList<ULong>
2021-03-11 12:06:05,527 [main:42] - Getting value of type MutableList<ULong>
2021-03-11 12:06:05,614 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-11 12:06:05,698 [main:43] - GENERATING CALL OF fun <T> mutableListOf(elements: ULong): MutableList<ULong> = TODO()
2021-03-11 12:06:05,699 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(elements: ULong): MutableList<ULong> = TODO()
2021-03-11 12:06:05,780 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:05,780 [main:95] - GENERATED = mutableListOf<ULong>(1252617644729596135.toULong())
2021-03-11 12:06:05,780 [main:46] - GENERATED VALUE OF TYPE MutableList<ULong> = mutableListOf<ULong>(1252617644729596135.toULong())
2021-03-11 12:06:05,780 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:05,781 [main:55] - randomType = UShort
2021-03-11 12:06:05,862 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:05,890 [main:94] - GETTING MutableList<ULong> from UIntRange
2021-03-11 12:06:05,916 [main:94] - GETTING MutableList<ULong> from UShort
2021-03-11 12:06:05,942 [main:94] - GETTING MutableList<ULong> from UInt
2021-03-11 12:06:05,966 [main:94] - GETTING MutableList<ULong> from UIntRange
2021-03-11 12:06:05,969 [main:94] - GETTING MutableList<ULong> from ULongRange
2021-03-11 12:06:05,993 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:06:05,993 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:06:05,993 [main:105] - GENERATED CALL = ((ulongProgression)).toMutableList()
2021-03-11 12:06:05,993 [main:63] - replacement of ((ulongProgression)).toMutableList() of type MutableList<ULong> is ((ulongProgression)).toMutableList()
2021-03-11 12:06:06,075 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:06,076 [main:56] - replacing (90362397, Int)
2021-03-11 12:06:06,077 [main:38] - replacing 90362397 Int
2021-03-11 12:06:06,077 [main:42] - Getting value of type Int
2021-03-11 12:06:06,158 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:06,159 [main:46] - GENERATED VALUE OF TYPE Int = 1335156562
2021-03-11 12:06:06,159 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:06,159 [main:55] - randomType = UInt
2021-03-11 12:06:06,240 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:06,262 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@c69c3da]
2021-03-11 12:06:06,262 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6d7a772e]
2021-03-11 12:06:06,263 [main:66] - Generated call from random type = (83350929.toUInt()).toUShort().countOneBits()
2021-03-11 12:06:06,263 [main:63] - replacement of 90362397 of type Int is (83350929.toUInt()).toUShort().countOneBits()
2021-03-11 12:06:06,343 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:06,344 [main:66] - Compilation checking started
2021-03-11 12:06:06,677 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>(1854871123.toUShort())), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:06,679 [main:56] - replacing (1854871123.toUShort(), UShort)
2021-03-11 12:06:06,679 [main:38] - replacing 1854871123.toUShort() UShort
2021-03-11 12:06:06,679 [main:42] - Getting value of type UShort
2021-03-11 12:06:06,769 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:06,769 [main:46] - GENERATED VALUE OF TYPE UShort = 27582.toUShort()
2021-03-11 12:06:06,769 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:06,770 [main:55] - randomType = UByte
2021-03-11 12:06:06,861 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:06,896 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@51b7b151]
2021-03-11 12:06:06,896 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun and(other: kotlin.UShort): kotlin.UShort defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@16772764]
2021-03-11 12:06:06,983 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:06,984 [main:66] - Generated call from random type = (4.toUByte()).toUShort().and(23649.toUShort())
2021-03-11 12:06:06,984 [main:63] - replacement of 1854871123.toUShort() of type UShort is (4.toUByte()).toUShort().and(23649.toUShort())
2021-03-11 12:06:07,071 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:07,071 [main:66] - Compilation checking started
2021-03-11 12:06:07,396 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(requireNotNull<UShort>((4.toUByte()).toUShort().and(23649.toUShort()))), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:07,398 [main:56] - replacing (requireNotNull<UShort>((4.toUByte()).toUShort().and(23649.toUShort())), UShort)
2021-03-11 12:06:07,399 [main:38] - replacing requireNotNull<UShort>((4.toUByte()).toUShort().and(23649.toUShort())) UShort
2021-03-11 12:06:07,399 [main:42] - Getting value of type UShort
2021-03-11 12:06:07,487 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:07,488 [main:46] - GENERATED VALUE OF TYPE UShort = 13314.toUShort()
2021-03-11 12:06:07,488 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:07,489 [main:55] - randomType = UByte
2021-03-11 12:06:07,576 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:07,611 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@51b7b151]
2021-03-11 12:06:07,611 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.rotateLeft(bitCount: kotlin.Int): kotlin.UShort defined in kotlin[DeserializedSimpleFunctionDescriptor@12cad0bf]
2021-03-11 12:06:07,695 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:07,695 [main:66] - Generated call from random type = (68.toUByte()).toUShort().rotateLeft(-766013369)
2021-03-11 12:06:07,696 [main:94] - GETTING UShort from UInt
2021-03-11 12:06:07,718 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline operator fun dec(): kotlin.UShort defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@66f4de12]]
2021-03-11 12:06:07,718 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:07,718 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun dec(): kotlin.UShort defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@66f4de12]
2021-03-11 12:06:07,719 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().dec()
2021-03-11 12:06:07,719 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]]
2021-03-11 12:06:07,719 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:07,719 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort()
2021-03-11 12:06:07,719 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@23a53546]]
2021-03-11 12:06:07,719 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:07,719 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@23a53546]
2021-03-11 12:06:07,719 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().toUShort()
2021-03-11 12:06:07,719 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline infix fun and(other: kotlin.UShort): kotlin.UShort defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@5514df3]]
2021-03-11 12:06:07,719 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:07,719 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun and(other: kotlin.UShort): kotlin.UShort defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@5514df3]
2021-03-11 12:06:07,805 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:07,806 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().and(31815.toUShort())
2021-03-11 12:06:07,806 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.coerceAtMost(maximumValue: kotlin.UShort): kotlin.UShort defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6ce3e92d]]
2021-03-11 12:06:07,806 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:07,806 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.coerceAtMost(maximumValue: kotlin.UShort): kotlin.UShort defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6ce3e92d]
2021-03-11 12:06:07,892 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:07,893 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().coerceAtMost(2731.toUShort())
2021-03-11 12:06:07,893 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.takeLowestOneBit(): kotlin.UShort defined in kotlin[DeserializedSimpleFunctionDescriptor@3576a4e2]]
2021-03-11 12:06:07,893 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:07,893 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.takeLowestOneBit(): kotlin.UShort defined in kotlin[DeserializedSimpleFunctionDescriptor@3576a4e2]
2021-03-11 12:06:07,893 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().takeLowestOneBit()
2021-03-11 12:06:07,893 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.coerceAtLeast(minimumValue: kotlin.UShort): kotlin.UShort defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3fea0a52]]
2021-03-11 12:06:07,893 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:07,893 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.coerceAtLeast(minimumValue: kotlin.UShort): kotlin.UShort defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3fea0a52]
2021-03-11 12:06:07,977 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:07,978 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().coerceAtLeast(29290.toUShort())
2021-03-11 12:06:07,978 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@6f2334cb], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toUShort(): kotlin.UShort defined in kotlin[DeserializedSimpleFunctionDescriptor@babafb5]]
2021-03-11 12:06:07,978 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@6f2334cb]
2021-03-11 12:06:07,978 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toUShort(): kotlin.UShort defined in kotlin[DeserializedSimpleFunctionDescriptor@babafb5]
2021-03-11 12:06:07,978 [main:105] - GENERATED CALL = ((uintProgression).first).toByte().toUShort()
2021-03-11 12:06:07,978 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.UShort defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@3eebc1da]]
2021-03-11 12:06:07,979 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:07,979 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.UShort defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@3eebc1da]
2021-03-11 12:06:07,979 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().inv()
2021-03-11 12:06:07,979 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@597ec5e0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Short.toUShort(): kotlin.UShort defined in kotlin[DeserializedSimpleFunctionDescriptor@5f9d3999]]
2021-03-11 12:06:07,979 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@597ec5e0]
2021-03-11 12:06:07,979 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Short.toUShort(): kotlin.UShort defined in kotlin[DeserializedSimpleFunctionDescriptor@5f9d3999]
2021-03-11 12:06:07,979 [main:105] - GENERATED CALL = ((uintProgression).first).toShort().toUShort()
2021-03-11 12:06:07,979 [main:63] - replacement of requireNotNull<UShort>((4.toUByte()).toUShort().and(23649.toUShort())) of type UShort is ((uintProgression).first).toUShort()
2021-03-11 12:06:08,063 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:08,063 [main:66] - Compilation checking started
2021-03-11 12:06:08,341 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:08,343 [main:56] - replacing (4478790838590408090.toULong(), ULong)
2021-03-11 12:06:08,343 [main:38] - replacing 4478790838590408090.toULong() ULong
2021-03-11 12:06:08,343 [main:42] - Getting value of type ULong
2021-03-11 12:06:08,426 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:08,426 [main:46] - GENERATED VALUE OF TYPE ULong = 9182853242860064738.toULong()
2021-03-11 12:06:08,426 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:08,427 [main:55] - randomType = Int
2021-03-11 12:06:08,510 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:08,540 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:06:08,541 [main:66] - Generated call from random type = (-132748752).toULong()
2021-03-11 12:06:08,542 [main:94] - GETTING ULong from ULongRange
2021-03-11 12:06:08,565 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@287087a2]]
2021-03-11 12:06:08,565 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@287087a2]
2021-03-11 12:06:08,565 [main:105] - GENERATED CALL = ((ulongProgression)).first.inv()
2021-03-11 12:06:08,565 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.coerceAtMost(maximumValue: kotlin.ULong): kotlin.ULong defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@30127693]]
2021-03-11 12:06:08,565 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.coerceAtMost(maximumValue: kotlin.ULong): kotlin.ULong defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@30127693]
2021-03-11 12:06:08,647 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:08,648 [main:105] - GENERATED CALL = ((ulongProgression)).first.coerceAtMost(1381700636993236505.toULong())
2021-03-11 12:06:08,648 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@519c0918]]
2021-03-11 12:06:08,648 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@519c0918]
2021-03-11 12:06:08,731 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:06:08,731 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:06:08,731 [main:105] - GENERATED CALL = ((ulongProgression)).find({a: T -> true})
2021-03-11 12:06:08,732 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@14335702]]
2021-03-11 12:06:08,732 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@14335702]
2021-03-11 12:06:08,732 [main:105] - GENERATED CALL = ((ulongProgression)).first.inc()
2021-03-11 12:06:08,732 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.rotateRight(bitCount: kotlin.Int): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7603119f]]
2021-03-11 12:06:08,732 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.rotateRight(bitCount: kotlin.Int): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7603119f]
2021-03-11 12:06:08,815 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:08,815 [main:105] - GENERATED CALL = ((ulongProgression)).first.rotateRight(1386233318)
2021-03-11 12:06:08,816 [main:101] - Case = [public open val endInclusive: kotlin.ULong defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@21c31c8f], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@1777488c]]
2021-03-11 12:06:08,816 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@1777488c]
2021-03-11 12:06:08,897 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:08,898 [main:105] - GENERATED CALL = ((ulongProgression)).endInclusive.plus(84.toUByte())
2021-03-11 12:06:08,898 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.coerceIn(minimumValue: kotlin.ULong, maximumValue: kotlin.ULong): kotlin.ULong defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6a54bf3]]
2021-03-11 12:06:08,898 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.coerceIn(minimumValue: kotlin.ULong, maximumValue: kotlin.ULong): kotlin.ULong defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6a54bf3]
2021-03-11 12:06:08,980 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:09,062 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:09,063 [main:105] - GENERATED CALL = ((ulongProgression)).first.coerceIn(7770824021105395435.toULong(), 8518002270256922352.toULong())
2021-03-11 12:06:09,063 [main:101] - Case = [public open val endInclusive: kotlin.ULong defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@21c31c8f], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.rotateLeft(bitCount: kotlin.Int): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@1f3c0098]]
2021-03-11 12:06:09,063 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.rotateLeft(bitCount: kotlin.Int): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@1f3c0098]
2021-03-11 12:06:09,145 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:09,145 [main:105] - GENERATED CALL = ((ulongProgression)).endInclusive.rotateLeft(247092563)
2021-03-11 12:06:09,145 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.internal.InlineOnly public final inline infix fun shl(bitCount: kotlin.Int): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@79f61c89]]
2021-03-11 12:06:09,145 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun shl(bitCount: kotlin.Int): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@79f61c89]
2021-03-11 12:06:09,228 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:09,228 [main:105] - GENERATED CALL = ((ulongProgression)).first.shl(-1165164855)
2021-03-11 12:06:09,228 [main:101] - Case = [public final val last: kotlin.ULong defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@77ca2bf4]]
2021-03-11 12:06:09,229 [main:105] - GENERATED CALL = ((ulongProgression)).last
2021-03-11 12:06:09,229 [main:63] - replacement of 4478790838590408090.toULong() of type ULong is ((ulongProgression)).first.rotateRight(1386233318)
2021-03-11 12:06:09,311 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:09,311 [main:66] - Compilation checking started
2021-03-11 12:06:09,505 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(((ulongProgression)).first.rotateRight(1386233318))
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(4478790838590408090.toULong())
    }
    assertEquals((ulongProgression).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:09,507 [main:56] - replacing (4478790838590408090.toULong(), ULong)
2021-03-11 12:06:09,507 [main:38] - replacing 4478790838590408090.toULong() ULong
2021-03-11 12:06:09,507 [main:42] - Getting value of type ULong
2021-03-11 12:06:09,616 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:09,616 [main:46] - GENERATED VALUE OF TYPE ULong = 978511741976980857.toULong()
2021-03-11 12:06:09,617 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:09,703 [main:55] - randomType = Byte
2021-03-11 12:06:09,785 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:06:09,816 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a0af7cb]
2021-03-11 12:06:09,817 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@55f2111b]
2021-03-11 12:06:09,817 [main:66] - Generated call from random type = (38).toDouble().toULong()
2021-03-11 12:06:09,818 [main:94] - GETTING ULong from UInt
2021-03-11 12:06:09,838 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9], @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@36bd91c6]]
2021-03-11 12:06:09,838 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]
2021-03-11 12:06:09,921 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:09,921 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@36bd91c6]
2021-03-11 12:06:09,921 [main:105] - GENERATED CALL = ((uintProgression).first).div(2199597865190259799.toULong()).toULong()
2021-03-11 12:06:09,921 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.rotateRight(bitCount: kotlin.Int): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7603119f]]
2021-03-11 12:06:09,921 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]
2021-03-11 12:06:10,004 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:10,004 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.rotateRight(bitCount: kotlin.Int): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7603119f]
2021-03-11 12:06:10,086 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:10,087 [main:105] - GENERATED CALL = ((uintProgression).first).div(4415394950043308616.toULong()).rotateRight(-61832755)
2021-03-11 12:06:10,087 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@652b83de]]
2021-03-11 12:06:10,087 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:10,087 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@652b83de]
2021-03-11 12:06:10,087 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().toULong()
2021-03-11 12:06:10,087 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9], @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.ULong): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@38dcbbe2]]
2021-03-11 12:06:10,087 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]
2021-03-11 12:06:10,170 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:10,171 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.ULong): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@38dcbbe2]
2021-03-11 12:06:10,252 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:10,253 [main:105] - GENERATED CALL = ((uintProgression).first).div(1494147757447662381.toULong()).or(5376241556462298346.toULong())
2021-03-11 12:06:10,253 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4c410233]]
2021-03-11 12:06:10,253 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4c410233]
2021-03-11 12:06:10,336 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:10,337 [main:105] - GENERATED CALL = ((uintProgression).first).plus(6915326564373794854.toULong())
2021-03-11 12:06:10,337 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]]
2021-03-11 12:06:10,337 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]
2021-03-11 12:06:10,419 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:10,419 [main:105] - GENERATED CALL = ((uintProgression).first).div(369067729234930357.toULong())
2021-03-11 12:06:10,419 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9], @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@287087a2]]
2021-03-11 12:06:10,419 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]
2021-03-11 12:06:10,501 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:10,502 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@287087a2]
2021-03-11 12:06:10,502 [main:105] - GENERATED CALL = ((uintProgression).first).div(6428768584113928045.toULong()).inv()
2021-03-11 12:06:10,502 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@248853fa]]
2021-03-11 12:06:10,502 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:10,502 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@248853fa]
2021-03-11 12:06:10,586 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:10,586 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().rem(4557160163387573402.toULong())
2021-03-11 12:06:10,586 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@157774ff], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]]
2021-03-11 12:06:10,586 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@157774ff]
2021-03-11 12:06:10,669 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:10,669 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:06:10,670 [main:105] - GENERATED CALL = ((uintProgression).first).compareTo(27.toUByte()).toULong()
2021-03-11 12:06:10,670 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@35463933]]
2021-03-11 12:06:10,670 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:10,670 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@35463933]
2021-03-11 12:06:10,753 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:10,753 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().div(3347651758439101349.toULong())
2021-03-11 12:06:10,753 [main:63] - replacement of 4478790838590408090.toULong() of type ULong is ((uintProgression).first).toUShort().rem(4557160163387573402.toULong())
2021-03-11 12:06:10,836 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:10,836 [main:66] - Compilation checking started
2021-03-11 12:06:11,132 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (uintProgression).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((ulongProgression).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:11,135 [main:56] - replacing (uintProgression, UIntRange)
2021-03-11 12:06:11,135 [main:38] - replacing uintProgression UIntRange
2021-03-11 12:06:11,135 [main:42] - Getting value of type UIntRange
2021-03-11 12:06:11,223 [main:302] - generating value of type = UIntRange false depth = 0
2021-03-11 12:06:11,310 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:11,311 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:11,563 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:11,563 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:11,563 [main:95] - GENERATED = UIntRange(508150672.toUInt(), 270802377.toUInt())
2021-03-11 12:06:11,563 [main:46] - GENERATED VALUE OF TYPE UIntRange = UIntRange(508150672.toUInt(), 270802377.toUInt())
2021-03-11 12:06:11,563 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:11,648 [main:55] - randomType = UInt?
2021-03-11 12:06:11,732 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:11,764 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@40e480d1]
2021-03-11 12:06:11,764 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2dc89343]
2021-03-11 12:06:11,877 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:11,878 [main:66] - Generated call from random type = (1072852660.toUInt())?.toUByte().rangeTo(16.toUByte())
2021-03-11 12:06:11,878 [main:94] - GETTING UIntRange from UIntRange
2021-03-11 12:06:11,902 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:11,902 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:11,986 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:11,987 [main:105] - GENERATED CALL = (uintProgression).endInclusive.until(652352572.toUInt())
2021-03-11 12:06:11,987 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:11,987 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:12,070 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:12,071 [main:105] - GENERATED CALL = (uintProgression).endInclusive.rangeTo(77091556.toUInt())
2021-03-11 12:06:12,071 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:12,071 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:12,154 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:12,154 [main:105] - GENERATED CALL = (uintProgression).first.rangeTo(1314436070.toUInt())
2021-03-11 12:06:12,154 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:12,154 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:12,237 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:12,237 [main:105] - GENERATED CALL = (uintProgression).first.until(902065189.toUInt())
2021-03-11 12:06:12,237 [main:63] - replacement of uintProgression of type UIntRange is UIntRange(508150672.toUInt(), 270802377.toUInt())
2021-03-11 12:06:12,320 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:12,320 [main:66] - Compilation checking started
2021-03-11 12:06:12,602 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt())
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (UIntRange(508150672.toUInt(), 270802377.toUInt())).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((ulongProgression).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:12,604 [main:56] - replacing (arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt()), ArrayList<UInt>)
2021-03-11 12:06:12,604 [main:38] - replacing arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt()) ArrayList<UInt>
2021-03-11 12:06:12,605 [main:42] - Getting value of type ArrayList<UInt>
2021-03-11 12:06:12,689 [main:302] - generating value of type = ArrayList<UInt> false depth = 0
2021-03-11 12:06:12,778 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): ArrayList<UInt> = TODO()
2021-03-11 12:06:12,779 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): ArrayList<UInt> = TODO()
2021-03-11 12:06:12,863 [main:95] - GENERATED = arrayListOf<UInt>()
2021-03-11 12:06:12,863 [main:46] - GENERATED VALUE OF TYPE ArrayList<UInt> = arrayListOf<UInt>()
2021-03-11 12:06:12,863 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:13,034 [main:55] - randomType = LinkedHashSet<Boolean>
2021-03-11 12:06:13,120 [main:302] - generating value of type = LinkedHashSet<Boolean> false depth = 0
2021-03-11 12:06:13,208 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Boolean): LkedHashSet<Boolean> = TODO()
2021-03-11 12:06:13,209 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Boolean): LkedHashSet<Boolean> = TODO()
2021-03-11 12:06:13,293 [main:302] - generating value of type = Boolean true depth = 3
2021-03-11 12:06:13,294 [main:95] - GENERATED = linkedSetOf<Boolean>(false)
2021-03-11 12:06:13,406 [main:94] - GETTING ArrayList<UInt> from UInt
2021-03-11 12:06:13,429 [main:94] - GETTING ArrayList<UInt> from UShort
2021-03-11 12:06:13,454 [main:94] - GETTING ArrayList<UInt> from UShort
2021-03-11 12:06:13,457 [main:94] - GETTING ArrayList<UInt> from UIntRange
2021-03-11 12:06:13,483 [main:94] - GETTING ArrayList<UInt> from UIntRange
2021-03-11 12:06:13,486 [main:94] - GETTING ArrayList<UInt> from ULongRange
2021-03-11 12:06:13,513 [main:94] - GETTING ArrayList<UInt> from MutableList<UInt>
2021-03-11 12:06:13,558 [main:63] - replacement of arrayListOf<UInt>((0.69279724f).div(0.2659891297789724).toUInt()) of type ArrayList<UInt> is arrayListOf<UInt>()
2021-03-11 12:06:13,641 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:13,642 [main:66] - Compilation checking started
2021-03-11 12:06:13,938 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (UIntRange(508150672.toUInt(), 270802377.toUInt())).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((ulongProgression).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:13,940 [main:56] - replacing (80807937.toUInt(), UInt)
2021-03-11 12:06:13,940 [main:38] - replacing 80807937.toUInt() UInt
2021-03-11 12:06:13,940 [main:42] - Getting value of type UInt
2021-03-11 12:06:14,026 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:14,027 [main:46] - GENERATED VALUE OF TYPE UInt = 229844659.toUInt()
2021-03-11 12:06:14,027 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:14,112 [main:55] - randomType = List<UShort>
2021-03-11 12:06:14,114 [main:94] - GETTING UInt from UIntRange
2021-03-11 12:06:14,143 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a161942]]
2021-03-11 12:06:14,143 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a161942]
2021-03-11 12:06:14,143 [main:105] - GENERATED CALL = ((uintProgression)).singleOrNull()
2021-03-11 12:06:14,143 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@ec0917b]]
2021-03-11 12:06:14,143 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@ec0917b]
2021-03-11 12:06:14,229 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:14,230 [main:105] - GENERATED CALL = ((uintProgression)).endInclusive.rotateLeft(-1229616443)
2021-03-11 12:06:14,230 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6]]
2021-03-11 12:06:14,230 [main:105] - GENERATED CALL = ((uintProgression)).endInclusive
2021-03-11 12:06:14,230 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.internal.InlineOnly public final inline infix fun xor(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2b6344d1]]
2021-03-11 12:06:14,230 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun xor(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2b6344d1]
2021-03-11 12:06:14,321 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:14,322 [main:105] - GENERATED CALL = ((uintProgression)).first.xor(1209559192.toUInt())
2021-03-11 12:06:14,322 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]]
2021-03-11 12:06:14,322 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]
2021-03-11 12:06:14,322 [main:105] - GENERATED CALL = ((uintProgression)).endInclusive.takeLowestOneBit()
2021-03-11 12:06:14,322 [main:101] - Case = [@kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e4e53f4]]
2021-03-11 12:06:14,322 [main:137] - GENERATING call of type @kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e4e53f4]
2021-03-11 12:06:14,434 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-11 12:06:14,434 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:06:14,691 [main:43] - GENERATING CALL OF fun <T, R> with(receiver: Function1<ULong?, ULong>, block: T.()->UByte): R = TODO()
2021-03-11 12:06:14,692 [main:61] - WITHOUT TYPE PARAMS = fun <T, R> with(receiver: Function1<ULong?, ULong>, block: T.()->UByte): R = TODO()
2021-03-11 12:06:14,859 [main:302] - generating value of type = Function1<ULong?, ULong> false depth = 4
2021-03-11 12:06:14,859 [main:302] - generating value of type = ULong true depth = 5
2021-03-11 12:06:14,860 [main:385] - Cant generate call of fun <T, R> with(receiver: Function1<ULong?, ULong>, block: T.()->UByte): R = TODO()
2021-03-11 12:06:14,860 [main:105] - GENERATED CALL = ((uintProgression)).minByOrNull({a: T -> })
2021-03-11 12:06:14,860 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5bd78ae]]
2021-03-11 12:06:14,860 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5bd78ae]
2021-03-11 12:06:14,860 [main:105] - GENERATED CALL = ((uintProgression)).endInclusive.inc()
2021-03-11 12:06:14,860 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a7f08c0]]
2021-03-11 12:06:14,860 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3a7f08c0]
2021-03-11 12:06:14,943 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:14,944 [main:105] - GENERATED CALL = ((uintProgression)).elementAtOrNull(-1291718316)
2021-03-11 12:06:14,944 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-11 12:06:14,944 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-11 12:06:15,027 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-11 12:06:15,027 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:06:15,028 [main:105] - GENERATED CALL = ((uintProgression)).sumOf({a: T -> 399149913.toUInt()})
2021-03-11 12:06:15,028 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1f731c3a]]
2021-03-11 12:06:15,028 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1f731c3a]
2021-03-11 12:06:15,112 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-11 12:06:15,112 [main:302] - generating value of type = R false depth = 1
2021-03-11 12:06:15,284 [main:43] - GENERATING CALL OF fun <R> run(block: ()->Byte): R = TODO()
2021-03-11 12:06:15,285 [main:61] - WITHOUT TYPE PARAMS = fun <R> run(block: ()->Byte): R = TODO()
2021-03-11 12:06:15,454 [main:302] - generating value of type = Function0<Byte> false depth = 4
2021-03-11 12:06:15,455 [main:302] - generating value of type = Byte true depth = 5
2021-03-11 12:06:15,455 [main:95] - GENERATED = run<Byte>({ -22})
2021-03-11 12:06:15,455 [main:105] - GENERATED CALL = ((uintProgression)).minBy({a: T -> run<Byte>({ -22})})
2021-03-11 12:06:15,456 [main:63] - replacement of 80807937.toUInt() of type UInt is ((uintProgression)).endInclusive
2021-03-11 12:06:15,539 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:15,539 [main:66] - Compilation checking started
2021-03-11 12:06:15,733 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), ((uintProgression)).endInclusive)
    for (i in (UIntRange(508150672.toUInt(), 270802377.toUInt())).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>(24991.toUInt()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((ulongProgression).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:15,736 [main:56] - replacing (24991.toUInt(), UInt)
2021-03-11 12:06:15,736 [main:38] - replacing 24991.toUInt() UInt
2021-03-11 12:06:15,736 [main:42] - Getting value of type UInt
2021-03-11 12:06:15,822 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:15,822 [main:46] - GENERATED VALUE OF TYPE UInt = 1200553990.toUInt()
2021-03-11 12:06:15,822 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:16,162 [main:55] - randomType = HashSet<Function2<Boolean, String, Byte>>
2021-03-11 12:06:16,246 [main:302] - generating value of type = HashSet<Function2<Boolean, String, Byte>> false depth = 0
2021-03-11 12:06:16,333 [main:43] - GENERATING CALL OF fun <T> hashSetOf(elements: Function2<Boolean, String, Byte>): HashSet<Function2<Boolean, Strg, Byte>> = TODO()
2021-03-11 12:06:16,334 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(elements: Function2<Boolean, String, Byte>): HashSet<Function2<Boolean, Strg, Byte>> = TODO()
2021-03-11 12:06:16,418 [main:302] - generating value of type = Function2<Boolean, String, Byte> false depth = 3
2021-03-11 12:06:16,418 [main:302] - generating value of type = Byte true depth = 4
2021-03-11 12:06:16,418 [main:95] - GENERATED = hashSetOf<Function2<Boolean, String, Byte>>({a: Boolean, b: String -> -44})
2021-03-11 12:06:16,562 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-11 12:06:16,644 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-11 12:06:16,645 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:06:16,645 [main:66] - Generated call from random type = (hashSetOf<Function2<Boolean, String, Byte>>({a: Boolean, b: String -> -44})).sumOf({a: T -> 1433833754.toUInt()})
2021-03-11 12:06:16,646 [main:94] - GETTING UInt from MutableList<UInt>
2021-03-11 12:06:16,692 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5bd78ae]]
2021-03-11 12:06:16,693 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:16,811 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:16,811 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5bd78ae]
2021-03-11 12:06:16,812 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(2143511220).inc()
2021-03-11 12:06:16,812 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@f742fbf]]
2021-03-11 12:06:16,812 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:16,894 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:16,895 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@f742fbf]
2021-03-11 12:06:16,977 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:16,978 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(792329967).times(16.toUByte())
2021-03-11 12:06:16,978 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeHighestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@5c8292df]]
2021-03-11 12:06:16,978 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:17,061 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:17,061 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeHighestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@5c8292df]
2021-03-11 12:06:17,061 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(771456431).takeHighestOneBit()
2021-03-11 12:06:17,062 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-11 12:06:17,062 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-11 12:06:17,144 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-11 12:06:17,144 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:06:17,145 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).sumOf({a: T -> 1055612068.toUInt()})
2021-03-11 12:06:17,145 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@ec0917b]]
2021-03-11 12:06:17,145 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:17,227 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:17,228 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateLeft(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@ec0917b]
2021-03-11 12:06:17,311 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:17,312 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-950625793).rotateLeft(-1461624524)
2021-03-11 12:06:17,312 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@37ed95a2]]
2021-03-11 12:06:17,312 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:17,395 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:17,395 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@37ed95a2]
2021-03-11 12:06:17,479 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:17,479 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(539093916).plus(35.toUByte())
2021-03-11 12:06:17,479 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@519c0918]]
2021-03-11 12:06:17,480 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@519c0918]
2021-03-11 12:06:17,563 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:06:17,563 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:06:17,564 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).find({a: T -> false})
2021-03-11 12:06:17,564 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5edd0a7e]]
2021-03-11 12:06:17,564 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5edd0a7e]
2021-03-11 12:06:17,564 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()
2021-03-11 12:06:17,564 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@cbcd473]]
2021-03-11 12:06:17,564 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:17,647 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:17,647 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@cbcd473]
2021-03-11 12:06:17,730 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:17,730 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(2007253624).or(2008548575.toUInt())
2021-03-11 12:06:17,730 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component5(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fd01951]]
2021-03-11 12:06:17,730 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component5(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fd01951]
2021-03-11 12:06:17,731 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component5()
2021-03-11 12:06:17,731 [main:63] - replacement of 24991.toUInt() of type UInt is (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()
2021-03-11 12:06:17,813 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:17,813 [main:66] - Compilation checking started
2021-03-11 12:06:18,128 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (UIntRange(508150672.toUInt(), 270802377.toUInt())).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((ulongProgression).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:18,130 [main:56] - replacing (ulongProgression, ULongRange)
2021-03-11 12:06:18,130 [main:38] - replacing ulongProgression ULongRange
2021-03-11 12:06:18,130 [main:42] - Getting value of type ULongRange
2021-03-11 12:06:18,216 [main:302] - generating value of type = ULongRange false depth = 0
2021-03-11 12:06:18,304 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:18,305 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:18,563 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:18,564 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:18,564 [main:95] - GENERATED = ULongRange(2110831248831089478.toULong(), 843305716778321672.toULong())
2021-03-11 12:06:18,564 [main:46] - GENERATED VALUE OF TYPE ULongRange = ULongRange(2110831248831089478.toULong(), 843305716778321672.toULong())
2021-03-11 12:06:18,565 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:18,565 [main:55] - randomType = Int
2021-03-11 12:06:18,651 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:18,685 [main:94] - GETTING ULongRange from UIntRange
2021-03-11 12:06:18,708 [main:94] - GETTING ULongRange from UIntRange
2021-03-11 12:06:18,708 [main:94] - GETTING ULongRange from ULongRange
2021-03-11 12:06:18,732 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]]
2021-03-11 12:06:18,732 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]
2021-03-11 12:06:18,817 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:18,818 [main:105] - GENERATED CALL = ((ulongProgression)).first.until(912190922026563962.toULong())
2021-03-11 12:06:18,818 [main:101] - Case = [public open val endInclusive: kotlin.ULong defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@21c31c8f], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]]
2021-03-11 12:06:18,818 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]
2021-03-11 12:06:18,903 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:18,904 [main:105] - GENERATED CALL = ((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())
2021-03-11 12:06:18,904 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]]
2021-03-11 12:06:18,904 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]
2021-03-11 12:06:18,988 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:18,989 [main:105] - GENERATED CALL = ((ulongProgression)).first.rangeTo(4871798806595160824.toULong())
2021-03-11 12:06:18,989 [main:101] - Case = [public open val endInclusive: kotlin.ULong defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@21c31c8f], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]]
2021-03-11 12:06:18,989 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]
2021-03-11 12:06:19,074 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:19,074 [main:105] - GENERATED CALL = ((ulongProgression)).endInclusive.until(3528872342277966650.toULong())
2021-03-11 12:06:19,074 [main:63] - replacement of ulongProgression of type ULongRange is ((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())
2021-03-11 12:06:19,159 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:19,159 [main:66] - Compilation checking started
2021-03-11 12:06:19,503 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), 80807937.toUInt())
    for (i in (UIntRange(508150672.toUInt(), 270802377.toUInt())).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:19,506 [main:56] - replacing (1079481874, Int)
2021-03-11 12:06:19,506 [main:38] - replacing 1079481874 Int
2021-03-11 12:06:19,506 [main:42] - Getting value of type Int
2021-03-11 12:06:19,592 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:19,593 [main:46] - GENERATED VALUE OF TYPE Int = -464857321
2021-03-11 12:06:19,593 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:19,684 [main:55] - randomType = Double
2021-03-11 12:06:19,775 [main:302] - generating value of type = Double true depth = 0
2021-03-11 12:06:19,825 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2cda4a53]
2021-03-11 12:06:19,912 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:06:19,913 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1c8aad70]
2021-03-11 12:06:20,000 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:20,088 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:20,089 [main:66] - Generated call from random type = (0.9570751891018532).compareTo(52).coerceIn(-1655011735, -1425526242)
2021-03-11 12:06:20,089 [main:94] - GETTING Int from MutableList<UInt>
2021-03-11 12:06:20,139 [main:101] - Case = [public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6573489c]]
2021-03-11 12:06:20,139 [main:137] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6573489c]
2021-03-11 12:06:20,225 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 12:06:20,225 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:06:20,226 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false})
2021-03-11 12:06:20,226 [main:101] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@702283c8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@276decea]]
2021-03-11 12:06:20,226 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@276decea]
2021-03-11 12:06:20,311 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:20,312 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).size.rotateLeft(1743012277)
2021-03-11 12:06:20,312 [main:101] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@702283c8], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ac731b5]]
2021-03-11 12:06:20,312 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ac731b5]
2021-03-11 12:06:20,398 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:20,398 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).size.ushr(-1413625851)
2021-03-11 12:06:20,398 [main:101] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@702283c8], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1c8f1c73]]
2021-03-11 12:06:20,398 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1c8f1c73]
2021-03-11 12:06:20,398 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).size.takeLowestOneBit()
2021-03-11 12:06:20,399 [main:101] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@702283c8], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@13767944]]
2021-03-11 12:06:20,399 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@13767944]
2021-03-11 12:06:20,485 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:06:20,485 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).size.div(-104)
2021-03-11 12:06:20,486 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@157774ff]]
2021-03-11 12:06:20,486 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:20,572 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:20,573 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@157774ff]
2021-03-11 12:06:20,658 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:20,659 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(1885803946).compareTo(105.toUByte())
2021-03-11 12:06:20,659 [main:101] - Case = [public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@1969034e]]
2021-03-11 12:06:20,659 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).lastIndex
2021-03-11 12:06:20,659 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e60caa4]]
2021-03-11 12:06:20,659 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e60caa4]
2021-03-11 12:06:20,659 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).sum()
2021-03-11 12:06:20,659 [main:101] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@702283c8], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c4963e]]
2021-03-11 12:06:20,659 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c4963e]
2021-03-11 12:06:20,659 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).size.unaryPlus()
2021-03-11 12:06:20,659 [main:101] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@702283c8], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@df0a356]]
2021-03-11 12:06:20,659 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@df0a356]
2021-03-11 12:06:20,659 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).size.unaryMinus()
2021-03-11 12:06:20,660 [main:63] - replacement of 1079481874 of type Int is (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false})
2021-03-11 12:06:20,745 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:20,748 [main:56] - replacing (80807937.toUInt(), UInt)
2021-03-11 12:06:20,748 [main:38] - replacing 80807937.toUInt() UInt
2021-03-11 12:06:20,748 [main:42] - Getting value of type UInt
2021-03-11 12:06:20,834 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:20,834 [main:46] - GENERATED VALUE OF TYPE UInt = 1819912119.toUInt()
2021-03-11 12:06:20,834 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:20,921 [main:55] - randomType = Short
2021-03-11 12:06:21,007 [main:302] - generating value of type = Short true depth = 0
2021-03-11 12:06:21,038 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@79c61956]
2021-03-11 12:06:21,038 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Float.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@2b25277b]
2021-03-11 12:06:21,038 [main:66] - Generated call from random type = (-18854).toFloat().toUInt()
2021-03-11 12:06:21,038 [main:94] - GETTING UInt from UInt
2021-03-11 12:06:21,060 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@632081c]]
2021-03-11 12:06:21,060 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:21,060 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@632081c]
2021-03-11 12:06:21,060 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().toUInt()
2021-03-11 12:06:21,060 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@597ec5e0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Short.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@773ebb6d]]
2021-03-11 12:06:21,060 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@597ec5e0]
2021-03-11 12:06:21,060 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Short.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@773ebb6d]
2021-03-11 12:06:21,060 [main:105] - GENERATED CALL = ((uintProgression).first).toShort().toUInt()
2021-03-11 12:06:21,060 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]]
2021-03-11 12:06:21,060 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]
2021-03-11 12:06:21,146 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:21,147 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]
2021-03-11 12:06:21,147 [main:105] - GENERATED CALL = ((uintProgression).first).div(5339030237944476244.toULong()).toUInt()
2021-03-11 12:06:21,147 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun inv(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@27865530]]
2021-03-11 12:06:21,147 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun inv(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@27865530]
2021-03-11 12:06:21,147 [main:105] - GENERATED CALL = ((uintProgression).first).inv()
2021-03-11 12:06:21,147 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@40858843], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@56232a19]]
2021-03-11 12:06:21,147 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@40858843]
2021-03-11 12:06:21,147 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@56232a19]
2021-03-11 12:06:21,147 [main:105] - GENERATED CALL = ((uintProgression).first).toDouble().toUInt()
2021-03-11 12:06:21,147 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@2ed69958]]
2021-03-11 12:06:21,148 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:21,148 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@2ed69958]
2021-03-11 12:06:21,234 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:21,235 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().times(92.toUByte())
2021-03-11 12:06:21,239 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@35558499], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]]
2021-03-11 12:06:21,239 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@35558499]
2021-03-11 12:06:21,239 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]
2021-03-11 12:06:21,239 [main:105] - GENERATED CALL = ((uintProgression).first).toLong().toUInt()
2021-03-11 12:06:21,239 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline infix fun shr(bitCount: kotlin.Int): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5810bcd3]]
2021-03-11 12:06:21,239 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun shr(bitCount: kotlin.Int): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5810bcd3]
2021-03-11 12:06:21,325 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:21,326 [main:105] - GENERATED CALL = ((uintProgression).first).shr(-26271150)
2021-03-11 12:06:21,326 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@1f3bbe03]]
2021-03-11 12:06:21,326 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@1f3bbe03]
2021-03-11 12:06:21,411 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:21,412 [main:105] - GENERATED CALL = ((uintProgression).first).div(109.toUByte())
2021-03-11 12:06:21,412 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline infix fun shl(bitCount: kotlin.Int): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2f589ae6]]
2021-03-11 12:06:21,412 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun shl(bitCount: kotlin.Int): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2f589ae6]
2021-03-11 12:06:21,497 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:21,498 [main:105] - GENERATED CALL = ((uintProgression).first).shl(1956462269)
2021-03-11 12:06:21,498 [main:63] - replacement of 80807937.toUInt() of type UInt is 1819912119.toUInt()
2021-03-11 12:06:21,585 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:21,585 [main:66] - Compilation checking started
2021-03-11 12:06:21,955 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), 1819912119.toUInt())
    for (i in (UIntRange(508150672.toUInt(), 270802377.toUInt())).step((83350929.toUInt()).toUShort().countOneBits())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:21,958 [main:56] - replacing ((UIntRange(508150672.toUInt(), 270802377.toUInt())).step((83350929.toUInt()).toUShort().countOneBits()), UIntProgression)
2021-03-11 12:06:21,958 [main:38] - replacing (UIntRange(508150672.toUInt(), 270802377.toUInt())).step((83350929.toUInt()).toUShort().countOneBits()) UIntProgression
2021-03-11 12:06:21,958 [main:42] - Getting value of type UIntProgression
2021-03-11 12:06:22,046 [main:302] - generating value of type = UIntProgression false depth = 0
2021-03-11 12:06:22,137 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:06:22,138 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntProgression = TODO()
2021-03-11 12:06:22,399 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:22,399 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:22,400 [main:95] - GENERATED = UIntRange(1310223365.toUInt(), 62738975.toUInt())
2021-03-11 12:06:22,400 [main:46] - GENERATED VALUE OF TYPE UIntProgression = UIntRange(1310223365.toUInt(), 62738975.toUInt())
2021-03-11 12:06:22,400 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:22,401 [main:55] - randomType = Int
2021-03-11 12:06:22,488 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:22,527 [main:94] - GETTING UIntProgression from UShort
2021-03-11 12:06:22,549 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.downTo(to: kotlin.UByte): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2d1e49b3]]
2021-03-11 12:06:22,549 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15]
2021-03-11 12:06:22,549 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.downTo(to: kotlin.UByte): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2d1e49b3]
2021-03-11 12:06:22,637 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:22,637 [main:105] - GENERATED CALL = ((22203.toUShort())).toUByte().downTo(37.toUByte())
2021-03-11 12:06:22,637 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.downTo(to: kotlin.UShort): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@102cb8a2]]
2021-03-11 12:06:22,637 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.downTo(to: kotlin.UShort): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@102cb8a2]
2021-03-11 12:06:22,723 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:22,724 [main:105] - GENERATED CALL = ((22203.toUShort())).downTo(4163.toUShort())
2021-03-11 12:06:22,724 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]]
2021-03-11 12:06:22,724 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:22,813 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:22,814 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.downTo(to: kotlin.UInt): kotlin.ranges.UIntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5f07212c]
2021-03-11 12:06:22,901 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:22,902 [main:105] - GENERATED CALL = ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())
2021-03-11 12:06:22,902 [main:63] - replacement of (UIntRange(508150672.toUInt(), 270802377.toUInt())).step((83350929.toUInt()).toUShort().countOneBits()) of type UIntProgression is ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())
2021-03-11 12:06:22,989 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:22,989 [main:66] - Compilation checking started
2021-03-11 12:06:23,290 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:23,293 [main:56] - replacing ({a: Int -> 80807937.toUInt()}, Function1<Int, UInt>)
2021-03-11 12:06:23,293 [main:38] - replacing {a: Int -> 80807937.toUInt()} Function1<Int, UInt>
2021-03-11 12:06:23,293 [main:42] - Getting value of type Function1<Int, UInt>
2021-03-11 12:06:23,379 [main:302] - generating value of type = Function1<Int, UInt> false depth = 0
2021-03-11 12:06:23,380 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:06:23,380 [main:46] - GENERATED VALUE OF TYPE Function1<Int, UInt> = {a: Int -> 1682604828.toUInt()}
2021-03-11 12:06:23,380 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:23,563 [main:55] - randomType = Function1<HashMap<ULong, ULong>, String>
2021-03-11 12:06:23,564 [main:94] - GETTING Function1<Int, UInt> from ULongRange
2021-03-11 12:06:23,602 [main:94] - GETTING Function1<Int, UInt> from MutableList<UInt>
2021-03-11 12:06:23,671 [main:94] - GETTING Function1<Int, UInt> from UInt
2021-03-11 12:06:23,703 [main:94] - GETTING Function1<Int, UInt> from UShort
2021-03-11 12:06:23,728 [main:94] - GETTING Function1<Int, UInt> from UIntRange
2021-03-11 12:06:23,752 [main:94] - GETTING Function1<Int, UInt> from UShort
2021-03-11 12:06:23,754 [main:94] - GETTING Function1<Int, UInt> from UIntRange
2021-03-11 12:06:23,754 [main:63] - replacement of {a: Int -> 80807937.toUInt()} of type Function1<Int, UInt> is {a: Int -> 1682604828.toUInt()}
2021-03-11 12:06:23,838 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:06:23,840 [main:56] - replacing ((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), List<Comparable<*>>)
2021-03-11 12:06:23,841 [main:38] - replacing (((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()) List<Comparable<*>>
2021-03-11 12:06:23,841 [main:42] - Getting value of type List<Comparable<*>>
2021-03-11 12:06:23,925 [main:302] - generating value of type = List<Comparable<*>> false depth = 0
2021-03-11 12:06:24,016 [main:43] - GENERATING CALL OF fun <E> buildList(builderAction: kotlin.collections.MutableList<Comparable<*>>.()->kotlin.Unit): List<Comparable<*>> = TODO()
2021-03-11 12:06:24,017 [main:61] - WITHOUT TYPE PARAMS = fun <E> buildList(builderAction: kotlin.collections.MutableList<Comparable<*>>.()->kotlin.Unit): List<Comparable<*>> = TODO()
2021-03-11 12:06:24,190 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<MutableList<Comparable<*>>, Unit> false depth = 3
2021-03-11 12:06:24,191 [main:302] - generating value of type = Unit false depth = 4
2021-03-11 12:06:24,279 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 12:06:24,279 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 12:06:24,452 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 7
2021-03-11 12:06:24,452 [main:302] - generating value of type = Unit false depth = 8
2021-03-11 12:06:24,543 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:06:24,544 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:06:24,864 [main:302] - generating value of type = Boolean true depth = 11
2021-03-11 12:06:24,865 [main:302] - generating value of type = Function0<Any> false depth = 11
2021-03-11 12:06:24,865 [main:302] - generating value of type = Any false depth = 12
2021-03-11 12:06:24,865 [main:95] - GENERATED = require(false, { "vjwqi"})
2021-03-11 12:06:24,866 [main:95] - GENERATED = contract({ require(false, { "vjwqi"})})
2021-03-11 12:06:24,866 [main:95] - GENERATED = buildList<Comparable<*>>({ contract({ require(false, { "vjwqi"})})})
2021-03-11 12:06:24,866 [main:46] - GENERATED VALUE OF TYPE List<Comparable<*>> = buildList<Comparable<*>>({ contract({ require(false, { "vjwqi"})})})
2021-03-11 12:06:24,866 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:24,867 [main:55] - randomType = Int
2021-03-11 12:06:24,953 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:24,988 [main:94] - GETTING List<Comparable<*>> from ULongRange
2021-03-11 12:06:25,014 [main:94] - GETTING List<Comparable<*>> from UIntRange
2021-03-11 12:06:25,041 [main:94] - GETTING List<Comparable<*>> from UShort
2021-03-11 12:06:25,066 [main:94] - GETTING List<Comparable<*>> from MutableList<UInt>
2021-03-11 12:06:25,111 [main:63] - replacement of (((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()) of type List<Comparable<*>> is MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()})
2021-03-11 12:06:25,197 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:25,197 [main:66] - Compilation checking started
2021-03-11 12:06:25,411 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals(MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()}), (ulongProgression).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:25,414 [main:56] - replacing (ulongProgression, ULongRange)
2021-03-11 12:06:25,414 [main:38] - replacing ulongProgression ULongRange
2021-03-11 12:06:25,414 [main:42] - Getting value of type ULongRange
2021-03-11 12:06:25,499 [main:302] - generating value of type = ULongRange false depth = 0
2021-03-11 12:06:25,588 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:25,589 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:25,848 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:25,848 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:25,849 [main:95] - GENERATED = ULongRange(5272909506295228748.toULong(), 6386770393141515697.toULong())
2021-03-11 12:06:25,849 [main:46] - GENERATED VALUE OF TYPE ULongRange = ULongRange(5272909506295228748.toULong(), 6386770393141515697.toULong())
2021-03-11 12:06:25,849 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:25,936 [main:55] - randomType = Boolean
2021-03-11 12:06:26,021 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:06:26,031 [main:94] - GETTING ULongRange from UShort
2021-03-11 12:06:26,054 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]]
2021-03-11 12:06:26,054 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1]
2021-03-11 12:06:26,140 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:26,141 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]
2021-03-11 12:06:26,228 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:26,228 [main:105] - GENERATED CALL = ((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())
2021-03-11 12:06:26,228 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]]
2021-03-11 12:06:26,228 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1]
2021-03-11 12:06:26,315 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:26,315 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]
2021-03-11 12:06:26,401 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:26,402 [main:105] - GENERATED CALL = ((22203.toUShort())).div(8531889663777270256.toULong()).rangeTo(8471207356027282886.toULong())
2021-03-11 12:06:26,402 [main:63] - replacement of ulongProgression of type ULongRange is ((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())
2021-03-11 12:06:26,488 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:26,488 [main:66] - Compilation checking started
2021-03-11 12:06:26,792 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return "hgalg"
}


2021-03-11 12:06:26,795 [main:56] - replacing ("hgalg", String)
2021-03-11 12:06:26,795 [main:38] - replacing "hgalg" String
2021-03-11 12:06:26,795 [main:42] - Getting value of type String
2021-03-11 12:06:26,883 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:06:26,884 [main:46] - GENERATED VALUE OF TYPE String = "edynv"
2021-03-11 12:06:26,884 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:26,885 [main:55] - randomType = ULong
2021-03-11 12:06:26,973 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:26,999 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@345caed3]
2021-03-11 12:06:26,999 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:06:27,088 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:27,088 [main:66] - Generated call from random type = (3389023086783008851.toULong()).toLong().toString(-1552729021)
2021-03-11 12:06:27,088 [main:63] - replacement of "hgalg" of type String is (3389023086783008851.toULong()).toLong().toString(-1552729021)
2021-03-11 12:06:27,176 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:27,176 [main:66] - Compilation checking started
2021-03-11 12:06:27,524 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong()))
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:27,527 [main:56] - replacing ((uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong())), ULong)
2021-03-11 12:06:27,527 [main:38] - replacing (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong())) ULong
2021-03-11 12:06:27,527 [main:42] - Getting value of type ULong
2021-03-11 12:06:27,615 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:27,616 [main:46] - GENERATED VALUE OF TYPE ULong = 5032919582193360604.toULong()
2021-03-11 12:06:27,616 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:27,705 [main:55] - randomType = Float
2021-03-11 12:06:27,793 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:06:27,822 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437]
2021-03-11 12:06:27,822 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:06:27,822 [main:66] - Generated call from random type = (0.17654723f).toInt().toULong()
2021-03-11 12:06:27,823 [main:94] - GETTING ULong from UShort
2021-03-11 12:06:27,844 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@2f5704e2], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@55f2111b]]
2021-03-11 12:06:27,844 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@2f5704e2]
2021-03-11 12:06:27,844 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@55f2111b]
2021-03-11 12:06:27,844 [main:105] - GENERATED CALL = (22203.toUShort()).toDouble().toULong()
2021-03-11 12:06:27,844 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15], @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@35463933]]
2021-03-11 12:06:27,844 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15]
2021-03-11 12:06:27,844 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@35463933]
2021-03-11 12:06:27,932 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:27,933 [main:105] - GENERATED CALL = (22203.toUShort()).toUByte().div(703401903611873182.toULong())
2021-03-11 12:06:27,933 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@6a64dce], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7522540e]]
2021-03-11 12:06:27,933 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@6a64dce]
2021-03-11 12:06:27,933 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7522540e]
2021-03-11 12:06:27,933 [main:105] - GENERATED CALL = (22203.toUShort()).toByte().toULong()
2021-03-11 12:06:27,934 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15], @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@36fcb0d3]]
2021-03-11 12:06:27,934 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15]
2021-03-11 12:06:27,934 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@36fcb0d3]
2021-03-11 12:06:28,022 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:28,023 [main:105] - GENERATED CALL = (22203.toUShort()).toUByte().rem(551947357180558600.toULong())
2021-03-11 12:06:28,023 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3e2de297]]
2021-03-11 12:06:28,023 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15]
2021-03-11 12:06:28,023 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3e2de297]
2021-03-11 12:06:28,111 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:28,112 [main:105] - GENERATED CALL = (22203.toUShort()).toUByte().minus(2746990195183122232.toULong())
2021-03-11 12:06:28,112 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@725ad428]]
2021-03-11 12:06:28,112 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:28,201 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:28,202 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@725ad428]
2021-03-11 12:06:28,292 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:28,292 [main:105] - GENERATED CALL = (22203.toUShort()).div(123.toUByte()).minus(4544168266087060293.toULong())
2021-03-11 12:06:28,293 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@58f64f6b], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]]
2021-03-11 12:06:28,293 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@58f64f6b]
2021-03-11 12:06:28,382 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:28,383 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:06:28,383 [main:105] - GENERATED CALL = (22203.toUShort()).compareTo(28.toUByte()).toULong()
2021-03-11 12:06:28,383 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.takeHighestOneBit(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@2387b2a]]
2021-03-11 12:06:28,383 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1]
2021-03-11 12:06:28,472 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:28,472 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.takeHighestOneBit(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@2387b2a]
2021-03-11 12:06:28,472 [main:105] - GENERATED CALL = (22203.toUShort()).div(9076356862116201656.toULong()).takeHighestOneBit()
2021-03-11 12:06:28,473 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@248853fa]]
2021-03-11 12:06:28,473 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@248853fa]
2021-03-11 12:06:28,561 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:28,562 [main:105] - GENERATED CALL = (22203.toUShort()).rem(7623485478234917291.toULong())
2021-03-11 12:06:28,562 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@1caf23f1]]
2021-03-11 12:06:28,562 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:28,650 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:28,651 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@1caf23f1]
2021-03-11 12:06:28,739 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:28,740 [main:105] - GENERATED CALL = (22203.toUShort()).div(82.toUByte()).times(4778825521081068694.toULong())
2021-03-11 12:06:28,740 [main:63] - replacement of (uintProgression).first.minus(((uintProgression).first).toUShort().rem(4557160163387573402.toULong())) of type ULong is (22203.toUShort()).toUByte().div(703401903611873182.toULong())
2021-03-11 12:06:28,829 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:28,830 [main:66] - Compilation checking started
2021-03-11 12:06:29,139 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(24991.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:29,142 [main:56] - replacing (24991.toUInt(), UInt)
2021-03-11 12:06:29,142 [main:38] - replacing 24991.toUInt() UInt
2021-03-11 12:06:29,142 [main:42] - Getting value of type UInt
2021-03-11 12:06:29,232 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:29,232 [main:46] - GENERATED VALUE OF TYPE UInt = 743974176.toUInt()
2021-03-11 12:06:29,232 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:29,680 [main:55] - randomType = Map<Collection<Float>, Boolean?>
2021-03-11 12:06:29,681 [main:94] - GETTING UInt from UShort
2021-03-11 12:06:29,703 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeHighestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@5c8292df]]
2021-03-11 12:06:29,703 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:29,792 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:29,792 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeHighestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@5c8292df]
2021-03-11 12:06:29,792 [main:105] - GENERATED CALL = (22203.toUShort()).div(21.toUByte()).takeHighestOneBit()
2021-03-11 12:06:29,792 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]]
2021-03-11 12:06:29,793 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:29,880 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:29,881 [main:105] - GENERATED CALL = (22203.toUShort()).div(67.toUByte())
2021-03-11 12:06:29,881 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@cbcd473]]
2021-03-11 12:06:29,881 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:29,970 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:29,970 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun or(other: kotlin.UInt): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@cbcd473]
2021-03-11 12:06:30,059 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:30,060 [main:105] - GENERATED CALL = (22203.toUShort()).div(32.toUByte()).or(235533569.toUInt())
2021-03-11 12:06:30,060 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb], public final val first: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@563d1628]]
2021-03-11 12:06:30,060 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb]
2021-03-11 12:06:30,191 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:30,192 [main:105] - GENERATED CALL = (22203.toUShort()).rangeTo(14307.toUShort()).first
2021-03-11 12:06:30,192 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5bd78ae]]
2021-03-11 12:06:30,192 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:30,280 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:30,281 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5bd78ae]
2021-03-11 12:06:30,281 [main:105] - GENERATED CALL = (22203.toUShort()).div(10.toUByte()).inc()
2021-03-11 12:06:30,281 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@63c4497d]]
2021-03-11 12:06:30,281 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15]
2021-03-11 12:06:30,281 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@63c4497d]
2021-03-11 12:06:30,369 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:30,369 [main:105] - GENERATED CALL = (22203.toUShort()).toUByte().minus(72.toUByte())
2021-03-11 12:06:30,369 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@31d77726]]
2021-03-11 12:06:30,369 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15]
2021-03-11 12:06:30,370 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@31d77726]
2021-03-11 12:06:30,370 [main:105] - GENERATED CALL = (22203.toUShort()).toUByte().toUInt()
2021-03-11 12:06:30,370 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]]
2021-03-11 12:06:30,370 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:30,458 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:30,458 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.takeLowestOneBit(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@101d2cea]
2021-03-11 12:06:30,459 [main:105] - GENERATED CALL = (22203.toUShort()).div(54.toUByte()).takeLowestOneBit()
2021-03-11 12:06:30,459 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@f742fbf]]
2021-03-11 12:06:30,459 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:30,547 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:30,547 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun times(other: kotlin.UByte): kotlin.UInt defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@f742fbf]
2021-03-11 12:06:30,635 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:30,636 [main:105] - GENERATED CALL = (22203.toUShort()).div(77.toUByte()).times(124.toUByte())
2021-03-11 12:06:30,636 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateRight(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@76fa054d]]
2021-03-11 12:06:30,636 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:30,725 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:30,725 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.rotateRight(bitCount: kotlin.Int): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@76fa054d]
2021-03-11 12:06:30,814 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:30,815 [main:105] - GENERATED CALL = (22203.toUShort()).div(116.toUByte()).rotateRight(1391814155)
2021-03-11 12:06:30,815 [main:63] - replacement of 24991.toUInt() of type UInt is 743974176.toUInt()
2021-03-11 12:06:30,903 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:30,903 [main:66] - Compilation checking started
2021-03-11 12:06:31,220 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(5493256787928450474.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:31,223 [main:56] - replacing (5493256787928450474.toULong(), ULong)
2021-03-11 12:06:31,223 [main:38] - replacing 5493256787928450474.toULong() ULong
2021-03-11 12:06:31,223 [main:42] - Getting value of type ULong
2021-03-11 12:06:31,310 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:31,311 [main:46] - GENERATED VALUE OF TYPE ULong = 2349834669138027642.toULong()
2021-03-11 12:06:31,311 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:31,312 [main:55] - randomType = String
2021-03-11 12:06:31,399 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:06:31,417 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:06:31,417 [main:66] - Generated call from random type = ("mxmka").length.toULong()
2021-03-11 12:06:31,417 [main:63] - replacement of 5493256787928450474.toULong() of type ULong is ("mxmka").length.toULong()
2021-03-11 12:06:31,505 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:31,506 [main:66] - Compilation checking started
2021-03-11 12:06:31,820 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((uintProgression).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:31,823 [main:56] - replacing (uintProgression, UIntRange)
2021-03-11 12:06:31,824 [main:38] - replacing uintProgression UIntRange
2021-03-11 12:06:31,824 [main:42] - Getting value of type UIntRange
2021-03-11 12:06:31,913 [main:302] - generating value of type = UIntRange false depth = 0
2021-03-11 12:06:32,011 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:32,012 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:32,285 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:32,286 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:32,286 [main:95] - GENERATED = UIntRange(1168063556.toUInt(), 707608570.toUInt())
2021-03-11 12:06:32,286 [main:46] - GENERATED VALUE OF TYPE UIntRange = UIntRange(1168063556.toUInt(), 707608570.toUInt())
2021-03-11 12:06:32,286 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:32,376 [main:55] - randomType = Boolean
2021-03-11 12:06:32,463 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:06:32,475 [main:94] - GETTING UIntRange from UShort
2021-03-11 12:06:32,498 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@735bec77]]
2021-03-11 12:06:32,499 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15]
2021-03-11 12:06:32,499 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@735bec77]
2021-03-11 12:06:32,588 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:32,589 [main:105] - GENERATED CALL = (22203.toUShort()).toUByte().rangeTo(1.toUByte())
2021-03-11 12:06:32,589 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.until(to: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@53f6a24]]
2021-03-11 12:06:32,589 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7a9b5a15]
2021-03-11 12:06:32,589 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.until(to: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@53f6a24]
2021-03-11 12:06:32,677 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:32,677 [main:105] - GENERATED CALL = (22203.toUShort()).toUByte().until(93.toUByte())
2021-03-11 12:06:32,678 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:32,678 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:32,767 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:32,767 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:32,855 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:32,856 [main:105] - GENERATED CALL = (22203.toUShort()).div(89.toUByte()).until(1471012639.toUInt())
2021-03-11 12:06:32,856 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:32,856 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62055c0]
2021-03-11 12:06:32,943 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:32,944 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:33,032 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:33,033 [main:105] - GENERATED CALL = (22203.toUShort()).div(125.toUByte()).rangeTo(1794555232.toUInt())
2021-03-11 12:06:33,033 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.until(to: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7923fb86]]
2021-03-11 12:06:33,033 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.until(to: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7923fb86]
2021-03-11 12:06:33,164 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:33,165 [main:105] - GENERATED CALL = (22203.toUShort()).until(5296.toUShort())
2021-03-11 12:06:33,165 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb]]
2021-03-11 12:06:33,165 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb]
2021-03-11 12:06:33,254 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:33,254 [main:105] - GENERATED CALL = (22203.toUShort()).rangeTo(24716.toUShort())
2021-03-11 12:06:33,254 [main:63] - replacement of uintProgression of type UIntRange is UIntRange(1168063556.toUInt(), 707608570.toUInt())
2021-03-11 12:06:33,342 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:33,343 [main:66] - Compilation checking started
2021-03-11 12:06:33,671 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:33,674 [main:56] - replacing ((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), List<UInt?>)
2021-03-11 12:06:33,674 [main:38] - replacing (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) List<UInt?>
2021-03-11 12:06:33,674 [main:42] - Getting value of type List<UInt?>
2021-03-11 12:06:33,763 [main:302] - generating value of type = List<UInt?> false depth = 0
2021-03-11 12:06:33,870 [main:43] - GENERATING CALL OF fun <E> buildList(capacity: kotlin.Int, builderAction: kotlin.collections.MutableList<UInt?>.()->kotlin.Unit): List<UInt?> = TODO()
2021-03-11 12:06:33,871 [main:61] - WITHOUT TYPE PARAMS = fun <E> buildList(capacity: kotlin.Int, builderAction: kotlin.collections.MutableList<UInt?>.()->kotlin.Unit): List<UInt?> = TODO()
2021-03-11 12:06:34,152 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:06:34,153 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<MutableList<UInt?>, Unit> false depth = 3
2021-03-11 12:06:34,153 [main:302] - generating value of type = Unit false depth = 4
2021-03-11 12:06:34,245 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 12:06:34,246 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 12:06:34,425 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 7
2021-03-11 12:06:34,426 [main:302] - generating value of type = Unit false depth = 8
2021-03-11 12:06:34,517 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 12:06:34,518 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 12:06:34,698 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 11
2021-03-11 12:06:34,698 [main:302] - generating value of type = Unit false depth = 12
2021-03-11 12:06:34,702 [main:95] - GENERATED = contract({ println()})
2021-03-11 12:06:34,702 [main:95] - GENERATED = contract({ contract({ println()})})
2021-03-11 12:06:34,702 [main:95] - GENERATED = buildList<UInt?>(-1814833336, { contract({ contract({ println()})})})
2021-03-11 12:06:34,702 [main:46] - GENERATED VALUE OF TYPE List<UInt?> = buildList<UInt?>(-1814833336, { contract({ contract({ println()})})})
2021-03-11 12:06:34,703 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:34,704 [main:55] - randomType = UInt
2021-03-11 12:06:34,793 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:34,822 [main:94] - GETTING List<UInt?> from UIntRange
2021-03-11 12:06:34,848 [main:94] - GETTING List<UInt?> from MutableList<UInt>
2021-03-11 12:06:34,894 [main:63] - replacement of (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) of type List<UInt?> is MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()})
2021-03-11 12:06:34,983 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:34,983 [main:66] - Compilation checking started
2021-03-11 12:06:35,211 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals(MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()}), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:35,214 [main:56] - replacing ((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), List<Comparable<*>>)
2021-03-11 12:06:35,215 [main:38] - replacing (((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()) List<Comparable<*>>
2021-03-11 12:06:35,215 [main:42] - Getting value of type List<Comparable<*>>
2021-03-11 12:06:35,308 [main:302] - generating value of type = List<Comparable<*>> false depth = 0
2021-03-11 12:06:35,409 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: Comparable<*>): List<Comparable<*>> = TODO()
2021-03-11 12:06:35,410 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: Comparable<*>): List<Comparable<*>> = TODO()
2021-03-11 12:06:35,498 [main:302] - generating value of type = Comparable<*> false depth = 3
2021-03-11 12:06:35,502 [main:95] - GENERATED = arrayListOf<Comparable<*>>(0.5326106f)
2021-03-11 12:06:35,502 [main:46] - GENERATED VALUE OF TYPE List<Comparable<*>> = arrayListOf<Comparable<*>>(0.5326106f)
2021-03-11 12:06:35,502 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:35,503 [main:55] - randomType = UInt
2021-03-11 12:06:35,603 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:35,636 [main:94] - GETTING List<Comparable<*>> from MutableList<UInt>
2021-03-11 12:06:35,683 [main:63] - replacement of (((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()) of type List<Comparable<*>> is MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()})
2021-03-11 12:06:35,773 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:35,773 [main:66] - Compilation checking started
2021-03-11 12:06:36,002 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), 4478790838590408090.toULong())
    for (i in ulongProgression) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()}), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:36,005 [main:56] - replacing (ulongProgression, ULongRange)
2021-03-11 12:06:36,006 [main:38] - replacing ulongProgression ULongRange
2021-03-11 12:06:36,006 [main:42] - Getting value of type ULongRange
2021-03-11 12:06:36,097 [main:302] - generating value of type = ULongRange false depth = 0
2021-03-11 12:06:36,233 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:36,234 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:36,502 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:36,503 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:36,503 [main:95] - GENERATED = ULongRange(702591671138465287.toULong(), 11988149069151398.toULong())
2021-03-11 12:06:36,503 [main:46] - GENERATED VALUE OF TYPE ULongRange = ULongRange(702591671138465287.toULong(), 11988149069151398.toULong())
2021-03-11 12:06:36,503 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:36,595 [main:55] - randomType = LinkedHashSet<Int>
2021-03-11 12:06:36,685 [main:302] - generating value of type = LinkedHashSet<Int> false depth = 0
2021-03-11 12:06:36,779 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): LkedHashSet<Int> = TODO()
2021-03-11 12:06:36,780 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): LkedHashSet<Int> = TODO()
2021-03-11 12:06:36,877 [main:95] - GENERATED = linkedSetOf<Int>()
2021-03-11 12:06:36,986 [main:94] - GETTING ULongRange from UIntRange
2021-03-11 12:06:37,009 [main:94] - GETTING ULongRange from UShort
2021-03-11 12:06:37,030 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]]
2021-03-11 12:06:37,030 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1]
2021-03-11 12:06:37,125 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:37,126 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]
2021-03-11 12:06:37,217 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:37,218 [main:105] - GENERATED CALL = ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())
2021-03-11 12:06:37,218 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]]
2021-03-11 12:06:37,218 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1]
2021-03-11 12:06:37,307 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:37,307 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]
2021-03-11 12:06:37,396 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:37,397 [main:105] - GENERATED CALL = ((22203.toUShort())).div(8992315657646330036.toULong()).until(8673822305824341323.toULong())
2021-03-11 12:06:37,397 [main:63] - replacement of ulongProgression of type ULongRange is ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())
2021-03-11 12:06:37,485 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:37,486 [main:66] - Compilation checking started
2021-03-11 12:06:37,805 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), 4478790838590408090.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:37,808 [main:56] - replacing (4478790838590408090.toULong(), ULong)
2021-03-11 12:06:37,808 [main:38] - replacing 4478790838590408090.toULong() ULong
2021-03-11 12:06:37,808 [main:42] - Getting value of type ULong
2021-03-11 12:06:37,902 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:37,903 [main:46] - GENERATED VALUE OF TYPE ULong = 3603441799917508692.toULong()
2021-03-11 12:06:37,903 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:37,995 [main:55] - randomType = ULong?
2021-03-11 12:06:38,085 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:38,112 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@14c75a90]
2021-03-11 12:06:38,112 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@723ac77a]
2021-03-11 12:06:38,112 [main:66] - Generated call from random type = (1474413027913468075.toULong())?.toUInt().toULong()
2021-03-11 12:06:38,113 [main:94] - GETTING ULong from UIntRange
2021-03-11 12:06:38,136 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@725ad428]]
2021-03-11 12:06:38,137 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@725ad428]
2021-03-11 12:06:38,226 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:38,227 [main:105] - GENERATED CALL = (uintProgression).endInclusive.minus(9126634385234443471.toULong())
2021-03-11 12:06:38,227 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3ebd893d]]
2021-03-11 12:06:38,227 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3ebd893d]
2021-03-11 12:06:38,227 [main:105] - GENERATED CALL = (uintProgression).endInclusive.toULong()
2021-03-11 12:06:38,227 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4c410233]]
2021-03-11 12:06:38,227 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4c410233]
2021-03-11 12:06:38,318 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:38,319 [main:105] - GENERATED CALL = (uintProgression).first.plus(7198374525780202343.toULong())
2021-03-11 12:06:38,319 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3ebd893d]]
2021-03-11 12:06:38,319 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toULong(): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3ebd893d]
2021-03-11 12:06:38,319 [main:105] - GENERATED CALL = (uintProgression).first.toULong()
2021-03-11 12:06:38,319 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]]
2021-03-11 12:06:38,319 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]
2021-03-11 12:06:38,420 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:38,421 [main:105] - GENERATED CALL = (uintProgression).endInclusive.div(3214084464116705144.toULong())
2021-03-11 12:06:38,421 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4c410233]]
2021-03-11 12:06:38,421 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun plus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4c410233]
2021-03-11 12:06:38,511 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:38,512 [main:105] - GENERATED CALL = (uintProgression).endInclusive.plus(1492024894605735880.toULong())
2021-03-11 12:06:38,512 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@1b2d8ba3], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]]
2021-03-11 12:06:38,512 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Int.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@7e525116]
2021-03-11 12:06:38,512 [main:105] - GENERATED CALL = (uintProgression).step.toULong()
2021-03-11 12:06:38,512 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]]
2021-03-11 12:06:38,512 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@58d594b9]
2021-03-11 12:06:38,602 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:38,603 [main:105] - GENERATED CALL = (uintProgression).first.div(4603029985424981075.toULong())
2021-03-11 12:06:38,603 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3b2d83c5]]
2021-03-11 12:06:38,603 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rem(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@3b2d83c5]
2021-03-11 12:06:38,704 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:38,704 [main:105] - GENERATED CALL = (uintProgression).endInclusive.rem(7385456956144708000.toULong())
2021-03-11 12:06:38,704 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@725ad428]]
2021-03-11 12:06:38,704 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun minus(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@725ad428]
2021-03-11 12:06:38,794 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:38,795 [main:105] - GENERATED CALL = (uintProgression).first.minus(6966810746034670660.toULong())
2021-03-11 12:06:38,795 [main:63] - replacement of 4478790838590408090.toULong() of type ULong is (uintProgression).first.plus(7198374525780202343.toULong())
2021-03-11 12:06:38,886 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:38,886 [main:66] - Compilation checking started
2021-03-11 12:06:39,201 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>(4478790838590408090.toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong()))
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:39,204 [main:56] - replacing (4478790838590408090.toULong(), ULong)
2021-03-11 12:06:39,204 [main:38] - replacing 4478790838590408090.toULong() ULong
2021-03-11 12:06:39,204 [main:42] - Getting value of type ULong
2021-03-11 12:06:39,332 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:39,332 [main:46] - GENERATED VALUE OF TYPE ULong = 8399539574827668946.toULong()
2021-03-11 12:06:39,333 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:39,424 [main:55] - randomType = Short
2021-03-11 12:06:39,516 [main:302] - generating value of type = Short true depth = 0
2021-03-11 12:06:39,545 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@35117447]
2021-03-11 12:06:39,637 [main:302] - generating value of type = Double true depth = 0
2021-03-11 12:06:39,638 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Double.toULong(): kotlin.ULong defined in kotlin[DeserializedSimpleFunctionDescriptor@55f2111b]
2021-03-11 12:06:39,638 [main:66] - Generated call from random type = (14371).div(0.8655518152889377).toULong()
2021-03-11 12:06:39,638 [main:63] - replacement of 4478790838590408090.toULong() of type ULong is (14371).div(0.8655518152889377).toULong()
2021-03-11 12:06:39,729 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:39,729 [main:66] - Compilation checking started
2021-03-11 12:06:40,049 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>((14371).div(0.8655518152889377).toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong()))
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:40,053 [main:56] - replacing ((((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()), List<Comparable<*>>)
2021-03-11 12:06:40,054 [main:38] - replacing (((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()) List<Comparable<*>>
2021-03-11 12:06:40,054 [main:42] - Getting value of type List<Comparable<*>>
2021-03-11 12:06:40,145 [main:302] - generating value of type = List<Comparable<*>> false depth = 0
2021-03-11 12:06:40,241 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Comparable<*>>): List<Comparable<*>> = TODO()
2021-03-11 12:06:40,242 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Comparable<*>>): List<Comparable<*>> = TODO()
2021-03-11 12:06:40,426 [main:302] - generating value of type = Collection<Comparable<*>> false depth = 3
2021-03-11 12:06:40,522 [main:43] - GENERATING CALL OF fun <T> emptyList(): Collection<Comparable<*>> = TODO()
2021-03-11 12:06:40,523 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyList(): Collection<Comparable<*>> = TODO()
2021-03-11 12:06:40,613 [main:95] - GENERATED = emptyList<Comparable<*>>()
2021-03-11 12:06:40,613 [main:95] - GENERATED = ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>())
2021-03-11 12:06:40,613 [main:46] - GENERATED VALUE OF TYPE List<Comparable<*>> = ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>())
2021-03-11 12:06:40,613 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:40,706 [main:55] - randomType = String?
2021-03-11 12:06:40,797 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:06:40,820 [main:94] - GETTING List<Comparable<*>> from MutableList<UInt>
2021-03-11 12:06:40,867 [main:63] - replacement of (((ulongProgression)).endInclusive.rangeTo(7975482290167576169.toULong())).minus(((uintProgression).first).toUShort()) of type List<Comparable<*>> is ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>())
2021-03-11 12:06:40,959 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:40,959 [main:66] - Compilation checking started
2021-03-11 12:06:41,280 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>((14371).div(0.8655518152889377).toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong()))
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:41,283 [main:56] - replacing (mutableListOf<ULong>((14371).div(0.8655518152889377).toULong()), MutableList<ULong>)
2021-03-11 12:06:41,284 [main:38] - replacing mutableListOf<ULong>((14371).div(0.8655518152889377).toULong()) MutableList<ULong>
2021-03-11 12:06:41,284 [main:42] - Getting value of type MutableList<ULong>
2021-03-11 12:06:41,372 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-11 12:06:41,477 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): MutableList<ULong> = TODO()
2021-03-11 12:06:41,478 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): MutableList<ULong> = TODO()
2021-03-11 12:06:41,686 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:06:41,686 [main:95] - GENERATED = ArrayDeque<ULong>(126756981)
2021-03-11 12:06:41,687 [main:46] - GENERATED VALUE OF TYPE MutableList<ULong> = ArrayDeque<ULong>(126756981)
2021-03-11 12:06:41,687 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:41,961 [main:55] - randomType = Function1<Double, Byte?>
2021-03-11 12:06:41,964 [main:94] - GETTING MutableList<ULong> from UIntRange
2021-03-11 12:06:41,990 [main:94] - GETTING MutableList<ULong> from UInt
2021-03-11 12:06:42,015 [main:94] - GETTING MutableList<ULong> from UShort
2021-03-11 12:06:42,040 [main:94] - GETTING MutableList<ULong> from UShort
2021-03-11 12:06:42,043 [main:94] - GETTING MutableList<ULong> from ULongRange
2021-03-11 12:06:42,068 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:06:42,068 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:06:42,068 [main:105] - GENERATED CALL = ((ulongProgression)).toMutableList()
2021-03-11 12:06:42,068 [main:63] - replacement of mutableListOf<ULong>((14371).div(0.8655518152889377).toULong()) of type MutableList<ULong> is ((ulongProgression)).toMutableList()
2021-03-11 12:06:42,157 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:42,157 [main:66] - Compilation checking started
2021-03-11 12:06:42,419 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = ((ulongProgression)).toMutableList()
    val ulongProgression = ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong()))
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:42,422 [main:56] - replacing ((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), List<UInt?>)
2021-03-11 12:06:42,422 [main:38] - replacing (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) List<UInt?>
2021-03-11 12:06:42,422 [main:42] - Getting value of type List<UInt?>
2021-03-11 12:06:42,513 [main:302] - generating value of type = List<UInt?> false depth = 0
2021-03-11 12:06:42,609 [main:43] - GENERATING CALL OF fun <T> listOfNotNull(element: UInt?): List<UInt?> = TODO()
2021-03-11 12:06:42,610 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOfNotNull(element: UInt?): List<UInt?> = TODO()
2021-03-11 12:06:42,700 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:42,700 [main:95] - GENERATED = listOfNotNull<UInt?>(966448909.toUInt())
2021-03-11 12:06:42,701 [main:46] - GENERATED VALUE OF TYPE List<UInt?> = listOfNotNull<UInt?>(966448909.toUInt())
2021-03-11 12:06:42,701 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:42,702 [main:55] - randomType = UByte
2021-03-11 12:06:42,791 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:42,820 [main:94] - GETTING List<UInt?> from UIntRange
2021-03-11 12:06:42,847 [main:94] - GETTING List<UInt?> from UShort
2021-03-11 12:06:42,872 [main:94] - GETTING List<UInt?> from MutableList<UInt>
2021-03-11 12:06:42,917 [main:63] - replacement of (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) of type List<UInt?> is listOfNotNull<UInt?>(966448909.toUInt())
2021-03-11 12:06:43,017 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:43,017 [main:66] - Compilation checking started
2021-03-11 12:06:43,244 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals(listOfNotNull<UInt?>(966448909.toUInt()), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>((14371).div(0.8655518152889377).toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong()))
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:43,247 [main:56] - replacing (UIntRange(743974176.toUInt(), 1819912119.toUInt()), UIntRange)
2021-03-11 12:06:43,248 [main:38] - replacing UIntRange(743974176.toUInt(), 1819912119.toUInt()) UIntRange
2021-03-11 12:06:43,248 [main:42] - Getting value of type UIntRange
2021-03-11 12:06:43,338 [main:302] - generating value of type = UIntRange false depth = 0
2021-03-11 12:06:43,431 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:43,432 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:43,708 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:43,709 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:43,709 [main:95] - GENERATED = UIntRange(1583740742.toUInt(), 662280874.toUInt())
2021-03-11 12:06:43,709 [main:46] - GENERATED VALUE OF TYPE UIntRange = UIntRange(1583740742.toUInt(), 662280874.toUInt())
2021-03-11 12:06:43,710 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:43,805 [main:55] - randomType = String?
2021-03-11 12:06:43,896 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:06:43,917 [main:94] - GETTING UIntRange from UIntRange
2021-03-11 12:06:43,940 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:43,940 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:44,029 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:44,030 [main:105] - GENERATED CALL = (uintProgression).first.until(615082334.toUInt())
2021-03-11 12:06:44,030 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:44,030 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:44,120 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:44,121 [main:105] - GENERATED CALL = (uintProgression).endInclusive.until(518932461.toUInt())
2021-03-11 12:06:44,121 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:44,121 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:44,210 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:44,211 [main:105] - GENERATED CALL = (uintProgression).first.rangeTo(55012917.toUInt())
2021-03-11 12:06:44,211 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:44,211 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:44,300 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:44,301 [main:105] - GENERATED CALL = (uintProgression).endInclusive.rangeTo(885284660.toUInt())
2021-03-11 12:06:44,301 [main:63] - replacement of UIntRange(743974176.toUInt(), 1819912119.toUInt()) of type UIntRange is uintProgression
2021-03-11 12:06:44,392 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:06:44,392 [main:66] - Compilation checking started
2021-03-11 12:06:44,635 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = uintProgression
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>((14371).div(0.8655518152889377).toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong()))
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:44,638 [main:56] - replacing ((((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList(), MutableList<ULong>)
2021-03-11 12:06:44,639 [main:38] - replacing (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList() MutableList<ULong>
2021-03-11 12:06:44,639 [main:42] - Getting value of type MutableList<ULong>
2021-03-11 12:06:44,730 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-11 12:06:44,824 [main:43] - GENERATING CALL OF fun <T> mutableListOf(): MutableList<ULong> = TODO()
2021-03-11 12:06:44,825 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(): MutableList<ULong> = TODO()
2021-03-11 12:06:44,919 [main:95] - GENERATED = mutableListOf<ULong>()
2021-03-11 12:06:44,919 [main:46] - GENERATED VALUE OF TYPE MutableList<ULong> = mutableListOf<ULong>()
2021-03-11 12:06:44,919 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:44,920 [main:55] - randomType = Long
2021-03-11 12:06:45,009 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:06:45,042 [main:94] - GETTING MutableList<ULong> from ULongRange
2021-03-11 12:06:45,065 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:06:45,065 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:06:45,065 [main:105] - GENERATED CALL = ((ulongProgression)).toMutableList()
2021-03-11 12:06:45,065 [main:63] - replacement of (((22203.toUShort())).div(2678760878652316203.toULong()).until(8530324897641168381.toULong())).toMutableList() of type MutableList<ULong> is ((ulongProgression)).toMutableList()
2021-03-11 12:06:45,154 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:45,154 [main:66] - Compilation checking started
2021-03-11 12:06:45,494 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>((14371).div(0.8655518152889377).toULong())
    val ulongProgression = ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong()))
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:45,497 [main:56] - replacing (80807937.toUInt(), UInt)
2021-03-11 12:06:45,497 [main:38] - replacing 80807937.toUInt() UInt
2021-03-11 12:06:45,497 [main:42] - Getting value of type UInt
2021-03-11 12:06:45,585 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:45,586 [main:46] - GENERATED VALUE OF TYPE UInt = 1618069928.toUInt()
2021-03-11 12:06:45,586 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:45,587 [main:55] - randomType = Double
2021-03-11 12:06:45,673 [main:302] - generating value of type = Double true depth = 0
2021-03-11 12:06:45,703 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4249978b]
2021-03-11 12:06:45,703 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Short.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@773ebb6d]
2021-03-11 12:06:45,703 [main:66] - Generated call from random type = (0.8223286461361631).toShort().toUInt()
2021-03-11 12:06:45,704 [main:94] - GETTING UInt from ULongRange
2021-03-11 12:06:45,727 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-11 12:06:45,727 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.UInt): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-11 12:06:45,816 [main:302] - generating value of type = Function1<T, UInt> false depth = 0
2021-03-11 12:06:45,817 [main:302] - generating value of type = UInt true depth = 1
2021-03-11 12:06:45,817 [main:105] - GENERATED CALL = ((ulongProgression)).sumOf({a: T -> 565464879.toUInt()})
2021-03-11 12:06:45,817 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@5f731cda], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]]
2021-03-11 12:06:45,818 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.Long.toUInt(): kotlin.UInt defined in kotlin[DeserializedSimpleFunctionDescriptor@38823d86]
2021-03-11 12:06:45,818 [main:105] - GENERATED CALL = ((ulongProgression)).step.toUInt()
2021-03-11 12:06:45,818 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@2378ec38], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]]
2021-03-11 12:06:45,818 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]
2021-03-11 12:06:45,818 [main:105] - GENERATED CALL = ((ulongProgression)).first.toUInt()
2021-03-11 12:06:45,818 [main:101] - Case = [@kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]]
2021-03-11 12:06:45,818 [main:137] - GENERATING call of type @kotlin.jvm.JvmName @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.collections.Iterable<kotlin.UByte>.sum(): kotlin.UInt defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1460458c]
2021-03-11 12:06:45,818 [main:105] - GENERATED CALL = ((ulongProgression)).sum()
2021-03-11 12:06:45,818 [main:101] - Case = [public open val endInclusive: kotlin.ULong defined in kotlin.ranges.ULongRange[DeserializedPropertyDescriptor@21c31c8f], @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]]
2021-03-11 12:06:45,818 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4e286997]
2021-03-11 12:06:45,818 [main:105] - GENERATED CALL = ((ulongProgression)).endInclusive.toUInt()
2021-03-11 12:06:45,818 [main:63] - replacement of 80807937.toUInt() of type UInt is 1618069928.toUInt()
2021-03-11 12:06:45,906 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:45,909 [main:56] - replacing (ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong())), ULongRange)
2021-03-11 12:06:45,909 [main:38] - replacing ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong())) ULongRange
2021-03-11 12:06:45,909 [main:42] - Getting value of type ULongRange
2021-03-11 12:06:45,997 [main:302] - generating value of type = ULongRange false depth = 0
2021-03-11 12:06:46,089 [main:43] - GENERATING CALL OF fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:46,090 [main:61] - WITHOUT TYPE PARAMS = fun ULongRange(start: kotlin.ULong, endInclusive: kotlin.ULong): ULongRange = TODO()
2021-03-11 12:06:46,357 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:46,357 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:06:46,358 [main:95] - GENERATED = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
2021-03-11 12:06:46,358 [main:46] - GENERATED VALUE OF TYPE ULongRange = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
2021-03-11 12:06:46,358 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:46,448 [main:55] - randomType = Float
2021-03-11 12:06:46,537 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:06:46,568 [main:94] - GETTING ULongRange from UShort
2021-03-11 12:06:46,588 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]]
2021-03-11 12:06:46,588 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1]
2021-03-11 12:06:46,677 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:46,677 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.ULong.until(to: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2ac0ceae]
2021-03-11 12:06:46,765 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:46,765 [main:105] - GENERATED CALL = (22203.toUShort()).div(2900268072860047935.toULong()).until(590764407330761151.toULong())
2021-03-11 12:06:46,766 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]]
2021-03-11 12:06:46,766 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@64b47b1]
2021-03-11 12:06:46,854 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:46,854 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4506d459]
2021-03-11 12:06:46,942 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:46,943 [main:105] - GENERATED CALL = (22203.toUShort()).div(1212393620426000190.toULong()).rangeTo(7717847049412872093.toULong())
2021-03-11 12:06:46,943 [main:63] - replacement of ULongRange(("mxmka").length.toULong(), (uintProgression).first.plus(7198374525780202343.toULong())) of type ULongRange is ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
2021-03-11 12:06:47,031 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:47,031 [main:66] - Compilation checking started
2021-03-11 12:06:47,344 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()))

    val ulongList = mutableListOf<ULong>((14371).div(0.8655518152889377).toULong())
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:47,349 [main:56] - replacing (arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()), ArrayList<UInt>)
2021-03-11 12:06:47,349 [main:38] - replacing arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()) ArrayList<UInt>
2021-03-11 12:06:47,349 [main:42] - Getting value of type ArrayList<UInt>
2021-03-11 12:06:47,457 [main:302] - generating value of type = ArrayList<UInt> false depth = 0
2021-03-11 12:06:47,553 [main:43] - GENERATING CALL OF fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<UInt> = TODO()
2021-03-11 12:06:47,554 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<UInt> = TODO()
2021-03-11 12:06:47,729 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:06:47,729 [main:95] - GENERATED = ArrayList<UInt>(-1299500509)
2021-03-11 12:06:47,729 [main:46] - GENERATED VALUE OF TYPE ArrayList<UInt> = ArrayList<UInt>(-1299500509)
2021-03-11 12:06:47,729 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:48,001 [main:55] - randomType = Function2<UShort?, ULong, LinkedHashMap<UShort, UInt>>
2021-03-11 12:06:48,005 [main:94] - GETTING ArrayList<UInt> from UShort
2021-03-11 12:06:48,030 [main:94] - GETTING ArrayList<UInt> from UShort
2021-03-11 12:06:48,033 [main:94] - GETTING ArrayList<UInt> from ULongRange
2021-03-11 12:06:48,059 [main:94] - GETTING ArrayList<UInt> from MutableList<UInt>
2021-03-11 12:06:48,110 [main:94] - GETTING ArrayList<UInt> from UIntRange
2021-03-11 12:06:48,137 [main:94] - GETTING ArrayList<UInt> from UIntRange
2021-03-11 12:06:48,139 [main:94] - GETTING ArrayList<UInt> from UInt
2021-03-11 12:06:48,162 [main:63] - replacement of arrayListOf<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).component2()) of type ArrayList<UInt> is ArrayList<UInt>(-1299500509)
2021-03-11 12:06:48,248 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:48,248 [main:66] - Compilation checking started
2021-03-11 12:06:48,562 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), ArrayList<UInt>(-1299500509))

    val ulongList = mutableListOf<ULong>((14371).div(0.8655518152889377).toULong())
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:48,565 [main:56] - replacing (uintProgression, UIntRange)
2021-03-11 12:06:48,565 [main:38] - replacing uintProgression UIntRange
2021-03-11 12:06:48,565 [main:42] - Getting value of type UIntRange
2021-03-11 12:06:48,649 [main:302] - generating value of type = UIntRange false depth = 0
2021-03-11 12:06:48,737 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:48,737 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:48,992 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:48,993 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:48,993 [main:95] - GENERATED = UIntRange(427844209.toUInt(), 2042045248.toUInt())
2021-03-11 12:06:48,993 [main:46] - GENERATED VALUE OF TYPE UIntRange = UIntRange(427844209.toUInt(), 2042045248.toUInt())
2021-03-11 12:06:48,993 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:49,166 [main:55] - randomType = Set<UInt?>
2021-03-11 12:06:49,167 [main:94] - GETTING UIntRange from ULongRange
2021-03-11 12:06:49,191 [main:94] - GETTING UIntRange from UIntRange
2021-03-11 12:06:49,214 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:49,214 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:49,298 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:49,299 [main:105] - GENERATED CALL = ((uintProgression)).first.until(249451710.toUInt())
2021-03-11 12:06:49,299 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:49,299 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:49,384 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:49,384 [main:105] - GENERATED CALL = ((uintProgression)).endInclusive.until(411824124.toUInt())
2021-03-11 12:06:49,384 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@8864209], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:49,384 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:49,470 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:49,470 [main:105] - GENERATED CALL = ((uintProgression)).first.rangeTo(1353415995.toUInt())
2021-03-11 12:06:49,470 [main:101] - Case = [public open val endInclusive: kotlin.UInt defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@45b305c6], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:49,470 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:49,556 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:49,556 [main:105] - GENERATED CALL = ((uintProgression)).endInclusive.rangeTo(1472498166.toUInt())
2021-03-11 12:06:49,557 [main:63] - replacement of uintProgression of type UIntRange is ((uintProgression)).endInclusive.until(411824124.toUInt())
2021-03-11 12:06:49,642 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:49,644 [main:56] - replacing ((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), List<UInt?>)
2021-03-11 12:06:49,645 [main:38] - replacing (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) List<UInt?>
2021-03-11 12:06:49,645 [main:42] - Getting value of type List<UInt?>
2021-03-11 12:06:49,729 [main:302] - generating value of type = List<UInt?> false depth = 0
2021-03-11 12:06:49,818 [main:43] - GENERATING CALL OF fun <T> listOf(): List<UInt?> = TODO()
2021-03-11 12:06:49,819 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOf(): List<UInt?> = TODO()
2021-03-11 12:06:49,904 [main:95] - GENERATED = listOf<UInt?>()
2021-03-11 12:06:49,904 [main:46] - GENERATED VALUE OF TYPE List<UInt?> = listOf<UInt?>()
2021-03-11 12:06:49,904 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:50,075 [main:55] - randomType = Collection<UInt?>
2021-03-11 12:06:50,079 [main:94] - GETTING List<UInt?> from MutableList<UInt>
2021-03-11 12:06:50,128 [main:63] - replacement of (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) of type List<UInt?> is MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()})
2021-03-11 12:06:50,212 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:50,212 [main:66] - Compilation checking started
2021-03-11 12:06:50,419 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals(MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()}), ArrayList<UInt>(-1299500509))

    val ulongList = mutableListOf<ULong>((14371).div(0.8655518152889377).toULong())
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:50,422 [main:56] - replacing (mutableListOf<ULong>((14371).div(0.8655518152889377).toULong()), MutableList<ULong>)
2021-03-11 12:06:50,422 [main:38] - replacing mutableListOf<ULong>((14371).div(0.8655518152889377).toULong()) MutableList<ULong>
2021-03-11 12:06:50,422 [main:42] - Getting value of type MutableList<ULong>
2021-03-11 12:06:50,507 [main:302] - generating value of type = MutableList<ULong> false depth = 0
2021-03-11 12:06:50,595 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): MutableList<ULong> = TODO()
2021-03-11 12:06:50,596 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): MutableList<ULong> = TODO()
2021-03-11 12:06:50,680 [main:95] - GENERATED = arrayListOf<ULong>()
2021-03-11 12:06:50,680 [main:46] - GENERATED VALUE OF TYPE MutableList<ULong> = arrayListOf<ULong>()
2021-03-11 12:06:50,680 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:50,681 [main:55] - randomType = UByte
2021-03-11 12:06:50,766 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:50,794 [main:94] - GETTING MutableList<ULong> from ULongRange
2021-03-11 12:06:50,819 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]]
2021-03-11 12:06:50,819 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@49d61ca8]
2021-03-11 12:06:50,819 [main:105] - GENERATED CALL = ((ulongProgression)).toMutableList()
2021-03-11 12:06:50,819 [main:63] - replacement of mutableListOf<ULong>((14371).div(0.8655518152889377).toULong()) of type MutableList<ULong> is arrayListOf<ULong>()
2021-03-11 12:06:50,903 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:50,903 [main:66] - Compilation checking started
2021-03-11 12:06:51,175 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:51,177 [main:56] - replacing (22203.toUShort(), UShort)
2021-03-11 12:06:51,177 [main:38] - replacing 22203.toUShort() UShort
2021-03-11 12:06:51,177 [main:42] - Getting value of type UShort
2021-03-11 12:06:51,261 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:51,261 [main:46] - GENERATED VALUE OF TYPE UShort = 4605.toUShort()
2021-03-11 12:06:51,261 [main:49] - GENERATED IS CALL =false
2021-03-11 12:06:51,262 [main:55] - randomType = ULong
2021-03-11 12:06:51,346 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:06:51,368 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@53bc3513]
2021-03-11 12:06:51,369 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun inc(): kotlin.UShort defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@2d548edd]
2021-03-11 12:06:51,369 [main:66] - Generated call from random type = (4152981033010736901.toULong()).toUShort().inc()
2021-03-11 12:06:51,369 [main:63] - replacement of 22203.toUShort() of type UShort is (4152981033010736901.toULong()).toUShort().inc()
2021-03-11 12:06:51,452 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:51,455 [main:56] - replacing ((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), List<UInt?>)
2021-03-11 12:06:51,455 [main:38] - replacing (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) List<UInt?>
2021-03-11 12:06:51,455 [main:42] - Getting value of type List<UInt?>
2021-03-11 12:06:51,583 [main:302] - generating value of type = List<UInt?> false depth = 0
2021-03-11 12:06:51,672 [main:43] - GENERATING CALL OF fun <T> listOf(element: UInt?): List<UInt?> = TODO()
2021-03-11 12:06:51,672 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOf(element: UInt?): List<UInt?> = TODO()
2021-03-11 12:06:51,756 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:51,757 [main:95] - GENERATED = listOf<UInt?>(1532570746.toUInt())
2021-03-11 12:06:51,757 [main:46] - GENERATED VALUE OF TYPE List<UInt?> = listOf<UInt?>(1532570746.toUInt())
2021-03-11 12:06:51,757 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:52,010 [main:55] - randomType = Function1<Char, Double>
2021-03-11 12:06:52,014 [main:94] - GETTING List<UInt?> from UShort
2021-03-11 12:06:52,040 [main:94] - GETTING List<UInt?> from MutableList<UInt>
2021-03-11 12:06:52,092 [main:63] - replacement of (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) of type List<UInt?> is MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()})
2021-03-11 12:06:52,177 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:52,177 [main:66] - Compilation checking started
2021-03-11 12:06:52,383 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals(MutableList<UInt>((MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).indexOfFirst({a: T -> false}), {a: Int -> 1682604828.toUInt()}), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:52,386 [main:56] - replacing ((UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null), List<UInt?>)
2021-03-11 12:06:52,386 [main:38] - replacing (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) List<UInt?>
2021-03-11 12:06:52,386 [main:42] - Getting value of type List<UInt?>
2021-03-11 12:06:52,470 [main:302] - generating value of type = List<UInt?> false depth = 0
2021-03-11 12:06:52,558 [main:43] - GENERATING CALL OF fun <T> mutableListOf(elements: UInt?): List<UInt?> = TODO()
2021-03-11 12:06:52,559 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(elements: UInt?): List<UInt?> = TODO()
2021-03-11 12:06:52,643 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:52,643 [main:95] - GENERATED = mutableListOf<UInt?>(798063582.toUInt())
2021-03-11 12:06:52,643 [main:46] - GENERATED VALUE OF TYPE List<UInt?> = mutableListOf<UInt?>(798063582.toUInt())
2021-03-11 12:06:52,644 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:52,729 [main:55] - randomType = Boolean
2021-03-11 12:06:52,813 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:06:52,826 [main:94] - GETTING List<UInt?> from UInt
2021-03-11 12:06:52,851 [main:94] - GETTING List<UInt?> from UShort
2021-03-11 12:06:52,878 [main:94] - GETTING List<UInt?> from UIntRange
2021-03-11 12:06:52,905 [main:94] - GETTING List<UInt?> from UShort
2021-03-11 12:06:52,908 [main:94] - GETTING List<UInt?> from UIntRange
2021-03-11 12:06:52,911 [main:94] - GETTING List<UInt?> from MutableList<UInt>
2021-03-11 12:06:52,958 [main:63] - replacement of (UIntRange(1168063556.toUInt(), 707608570.toUInt())).minusElement(null) of type List<UInt?> is mutableListOf<UInt?>(798063582.toUInt())
2021-03-11 12:06:53,041 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:06:53,041 [main:66] - Compilation checking started
2021-03-11 12:06:53,310 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = UIntRange(743974176.toUInt(), 1819912119.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:53,313 [main:56] - replacing (UIntRange(743974176.toUInt(), 1819912119.toUInt()), UIntRange)
2021-03-11 12:06:53,313 [main:38] - replacing UIntRange(743974176.toUInt(), 1819912119.toUInt()) UIntRange
2021-03-11 12:06:53,313 [main:42] - Getting value of type UIntRange
2021-03-11 12:06:53,401 [main:302] - generating value of type = UIntRange false depth = 0
2021-03-11 12:06:53,488 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:53,489 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:53,740 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:53,740 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:53,741 [main:95] - GENERATED = UIntRange(37829506.toUInt(), 1346604876.toUInt())
2021-03-11 12:06:53,741 [main:46] - GENERATED VALUE OF TYPE UIntRange = UIntRange(37829506.toUInt(), 1346604876.toUInt())
2021-03-11 12:06:53,741 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:54,625 [main:55] - randomType = MutableMap<Sequence<Byte?>, Collection<Function1<Pair<UShort, Double>, HashSet<ULong>>>>
2021-03-11 12:06:54,626 [main:94] - GETTING UIntRange from UInt
2021-03-11 12:06:54,648 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.until(to: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7923fb86]]
2021-03-11 12:06:54,649 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:54,649 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.until(to: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7923fb86]
2021-03-11 12:06:54,731 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:54,731 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().until(17990.toUShort())
2021-03-11 12:06:54,731 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:54,731 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:54,813 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:54,814 [main:105] - GENERATED CALL = ((uintProgression).first).until(831747644.toUInt())
2021-03-11 12:06:54,814 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@735bec77]]
2021-03-11 12:06:54,814 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:54,814 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@735bec77]
2021-03-11 12:06:54,896 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:54,896 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().rangeTo(70.toUByte())
2021-03-11 12:06:54,897 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb]]
2021-03-11 12:06:54,897 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:54,897 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb]
2021-03-11 12:06:54,979 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:54,979 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().rangeTo(5612.toUShort())
2021-03-11 12:06:54,979 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.until(to: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@53f6a24]]
2021-03-11 12:06:54,979 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:54,979 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.until(to: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@53f6a24]
2021-03-11 12:06:55,061 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:55,062 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().until(9.toUByte())
2021-03-11 12:06:55,062 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:55,062 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:55,144 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:55,144 [main:105] - GENERATED CALL = ((uintProgression).first).rangeTo(1720393298.toUInt())
2021-03-11 12:06:55,145 [main:63] - replacement of UIntRange(743974176.toUInt(), 1819912119.toUInt()) of type UIntRange is ((uintProgression).first).toUByte().rangeTo(70.toUByte())
2021-03-11 12:06:55,227 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:55,227 [main:66] - Compilation checking started
2021-03-11 12:06:55,434 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = ((uintProgression).first).toUByte().rangeTo(70.toUByte())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:55,437 [main:56] - replacing (UIntRange(743974176.toUInt(), 1819912119.toUInt()), UIntRange)
2021-03-11 12:06:55,437 [main:38] - replacing UIntRange(743974176.toUInt(), 1819912119.toUInt()) UIntRange
2021-03-11 12:06:55,437 [main:42] - Getting value of type UIntRange
2021-03-11 12:06:55,523 [main:302] - generating value of type = UIntRange false depth = 0
2021-03-11 12:06:55,610 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:55,611 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:55,861 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:55,861 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:55,861 [main:95] - GENERATED = UIntRange(1889124993.toUInt(), 264077561.toUInt())
2021-03-11 12:06:55,861 [main:46] - GENERATED VALUE OF TYPE UIntRange = UIntRange(1889124993.toUInt(), 264077561.toUInt())
2021-03-11 12:06:55,862 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:55,945 [main:55] - randomType = Char
2021-03-11 12:06:56,029 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:06:56,047 [main:94] - GETTING UIntRange from UInt
2021-03-11 12:06:56,069 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb]]
2021-03-11 12:06:56,069 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:56,069 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb]
2021-03-11 12:06:56,153 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:56,153 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().rangeTo(31603.toUShort())
2021-03-11 12:06:56,153 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:56,153 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:56,236 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:56,237 [main:105] - GENERATED CALL = ((uintProgression).first).until(1088034838.toUInt())
2021-03-11 12:06:56,237 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.until(to: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@53f6a24]]
2021-03-11 12:06:56,237 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:56,237 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.until(to: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@53f6a24]
2021-03-11 12:06:56,320 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:56,321 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().until(67.toUByte())
2021-03-11 12:06:56,321 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:56,321 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:56,404 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:56,404 [main:105] - GENERATED CALL = ((uintProgression).first).rangeTo(544274304.toUInt())
2021-03-11 12:06:56,404 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@735bec77]]
2021-03-11 12:06:56,405 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:56,405 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@735bec77]
2021-03-11 12:06:56,488 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:56,489 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().rangeTo(14.toUByte())
2021-03-11 12:06:56,489 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.until(to: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7923fb86]]
2021-03-11 12:06:56,489 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:56,489 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.until(to: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7923fb86]
2021-03-11 12:06:56,572 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:56,572 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().until(30975.toUShort())
2021-03-11 12:06:56,572 [main:63] - replacement of UIntRange(743974176.toUInt(), 1819912119.toUInt()) of type UIntRange is ((uintProgression).first).toUShort().rangeTo(31603.toUShort())
2021-03-11 12:06:56,658 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:56,658 [main:66] - Compilation checking started
2021-03-11 12:06:56,883 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = ((uintProgression).first).toUShort().rangeTo(31603.toUShort())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:56,886 [main:56] - replacing (UIntRange(743974176.toUInt(), 1819912119.toUInt()), UIntRange)
2021-03-11 12:06:56,886 [main:38] - replacing UIntRange(743974176.toUInt(), 1819912119.toUInt()) UIntRange
2021-03-11 12:06:56,886 [main:42] - Getting value of type UIntRange
2021-03-11 12:06:56,973 [main:302] - generating value of type = UIntRange false depth = 0
2021-03-11 12:06:57,060 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:57,061 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:57,311 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:57,311 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:57,312 [main:95] - GENERATED = UIntRange(1853828769.toUInt(), 1661472894.toUInt())
2021-03-11 12:06:57,312 [main:46] - GENERATED VALUE OF TYPE UIntRange = UIntRange(1853828769.toUInt(), 1661472894.toUInt())
2021-03-11 12:06:57,312 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:57,704 [main:55] - randomType = Function1<Array<Sequence<UByte>>, Boolean>
2021-03-11 12:06:57,705 [main:94] - GETTING UIntRange from UInt
2021-03-11 12:06:57,726 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:57,726 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:57,809 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:57,810 [main:105] - GENERATED CALL = ((uintProgression).first).rangeTo(356578829.toUInt())
2021-03-11 12:06:57,810 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:57,810 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:57,892 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:57,893 [main:105] - GENERATED CALL = ((uintProgression).first).until(1804726054.toUInt())
2021-03-11 12:06:57,893 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@735bec77]]
2021-03-11 12:06:57,893 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:57,893 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@735bec77]
2021-03-11 12:06:57,976 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:57,977 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().rangeTo(128.toUByte())
2021-03-11 12:06:57,977 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.until(to: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7923fb86]]
2021-03-11 12:06:57,977 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:57,977 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UShort.until(to: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7923fb86]
2021-03-11 12:06:58,060 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:58,060 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().until(4718.toUShort())
2021-03-11 12:06:58,060 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb]]
2021-03-11 12:06:58,060 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7a865c42]
2021-03-11 12:06:58,060 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UShort): kotlin.ranges.UIntRange defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@630538eb]
2021-03-11 12:06:58,143 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:06:58,143 [main:105] - GENERATED CALL = ((uintProgression).first).toUShort().rangeTo(20933.toUShort())
2021-03-11 12:06:58,143 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.until(to: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@53f6a24]]
2021-03-11 12:06:58,143 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@82b23e0]
2021-03-11 12:06:58,144 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UByte.until(to: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@53f6a24]
2021-03-11 12:06:58,227 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:06:58,227 [main:105] - GENERATED CALL = ((uintProgression).first).toUByte().until(34.toUByte())
2021-03-11 12:06:58,228 [main:63] - replacement of UIntRange(743974176.toUInt(), 1819912119.toUInt()) of type UIntRange is ((uintProgression).first).toUShort().until(4718.toUShort())
2021-03-11 12:06:58,310 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:58,310 [main:66] - Compilation checking started
2021-03-11 12:06:58,515 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = ((uintProgression).first).toUShort().until(4718.toUShort())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:58,517 [main:56] - replacing (UIntRange(743974176.toUInt(), 1819912119.toUInt()), UIntRange)
2021-03-11 12:06:58,517 [main:38] - replacing UIntRange(743974176.toUInt(), 1819912119.toUInt()) UIntRange
2021-03-11 12:06:58,518 [main:42] - Getting value of type UIntRange
2021-03-11 12:06:58,600 [main:302] - generating value of type = UIntRange false depth = 0
2021-03-11 12:06:58,686 [main:43] - GENERATING CALL OF fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:58,687 [main:61] - WITHOUT TYPE PARAMS = fun UIntRange(start: kotlin.UInt, endInclusive: kotlin.UInt): UIntRange = TODO()
2021-03-11 12:06:58,936 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:58,936 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:06:58,937 [main:95] - GENERATED = UIntRange(1624402599.toUInt(), 474678008.toUInt())
2021-03-11 12:06:58,937 [main:46] - GENERATED VALUE OF TYPE UIntRange = UIntRange(1624402599.toUInt(), 474678008.toUInt())
2021-03-11 12:06:58,937 [main:49] - GENERATED IS CALL =true
2021-03-11 12:06:58,938 [main:55] - randomType = Long
2021-03-11 12:06:59,020 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:06:59,049 [main:94] - GETTING UIntRange from MutableList<UInt>
2021-03-11 12:06:59,094 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]]
2021-03-11 12:06:59,094 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:59,177 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:59,178 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7daf8975]
2021-03-11 12:06:59,260 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:59,261 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1860877947).rangeTo(2108677839.toUInt())
2021-03-11 12:06:59,261 [main:101] - Case = [public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-11 12:06:59,261 [main:137] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@22302139]
2021-03-11 12:06:59,344 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:06:59,344 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public infix fun kotlin.UInt.until(to: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-11 12:06:59,427 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:06:59,427 [main:105] - GENERATED CALL = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
2021-03-11 12:06:59,427 [main:63] - replacement of UIntRange(743974176.toUInt(), 1819912119.toUInt()) of type UIntRange is (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
2021-03-11 12:06:59,511 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:06:59,511 [main:66] - Compilation checking started
2021-03-11 12:06:59,788 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(17.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:06:59,876 [main:90] - TRYING TO REPLACE CONSTANT 17
2021-03-11 12:06:59,962 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:06:59,962 [main:66] - Compilation checking started
2021-03-11 12:07:00,236 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:07:00,236 [main:90] - TRYING TO REPLACE CONSTANT 22203
2021-03-11 12:07:00,321 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 12:07:00,321 [main:66] - Compilation checking started
2021-03-11 12:07:00,517 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((-1552729021.toUShort())).div(113.toUByte()).downTo(615707251.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:07:00,517 [main:90] - TRYING TO REPLACE CONSTANT 615707251
2021-03-11 12:07:00,616 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:00,616 [main:66] - Compilation checking started
2021-03-11 12:07:00,892 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(113.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:07:00,893 [main:90] - TRYING TO REPLACE CONSTANT 113
2021-03-11 12:07:01,020 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:01,021 [main:66] - Compilation checking started
2021-03-11 12:07:01,301 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (3389023086783008851.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:07:01,301 [main:90] - TRYING TO REPLACE CONSTANT 3389023086783008851
2021-03-11 12:07:01,387 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:01,388 [main:66] - Compilation checking started
2021-03-11 12:07:01,669 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(-1552729021)
}


2021-03-11 12:07:01,669 [main:90] - TRYING TO REPLACE CONSTANT 1552729021
2021-03-11 12:07:01,758 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:01,758 [main:66] - Compilation checking started
2021-03-11 12:07:02,032 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (22203.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:02,033 [main:90] - TRYING TO REPLACE CONSTANT 22203
2021-03-11 12:07:02,119 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:02,120 [main:66] - Compilation checking started
2021-03-11 12:07:02,392 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div(703401903611873182.toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:02,393 [main:90] - TRYING TO REPLACE CONSTANT 703401903611873182
2021-03-11 12:07:02,482 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:02,482 [main:66] - Compilation checking started
2021-03-11 12:07:02,770 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:02,770 [main:90] - TRYING TO REPLACE CONSTANT 22203
2021-03-11 12:07:02,860 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 12:07:02,860 [main:66] - Compilation checking started
2021-03-11 12:07:03,062 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((-1927852284.toUShort())).div(2425696761664416251.toULong()).rangeTo(6840020027589662098.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:03,062 [main:90] - TRYING TO REPLACE CONSTANT 6840020027589662098
2021-03-11 12:07:03,150 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:03,150 [main:66] - Compilation checking started
2021-03-11 12:07:03,424 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(2425696761664416251.toULong()).rangeTo(4645170938242719988.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:03,424 [main:90] - TRYING TO REPLACE CONSTANT 2425696761664416251
2021-03-11 12:07:03,511 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:03,511 [main:66] - Compilation checking started
2021-03-11 12:07:03,787 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(1491238320341559292.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(3389023086783008851.toULong()).rangeTo(4645170938242719988.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:03,787 [main:90] - TRYING TO REPLACE CONSTANT 1491238320341559292
2021-03-11 12:07:03,874 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:03,874 [main:66] - Compilation checking started
2021-03-11 12:07:04,160 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(3389023086783008851.toULong(), 4645170938242719988.toULong())
    for (i in ((22203.toUShort())).div(3389023086783008851.toULong()).rangeTo(4645170938242719988.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:04,160 [main:90] - TRYING TO REPLACE CONSTANT 4645170938242719988
2021-03-11 12:07:04,250 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:04,250 [main:66] - Compilation checking started
2021-03-11 12:07:04,573 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(-1299500509))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(3389023086783008851.toULong(), 2425696761664416251.toULong())
    for (i in ((22203.toUShort())).div(3389023086783008851.toULong()).rangeTo(4645170938242719988.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:04,573 [main:90] - TRYING TO REPLACE CONSTANT 1299500509
2021-03-11 12:07:04,663 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:04,663 [main:66] - Compilation checking started
2021-03-11 12:07:04,943 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(798063582.toUInt()), ArrayList<UInt>(1255122071))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(3389023086783008851.toULong(), 2425696761664416251.toULong())
    for (i in ((22203.toUShort())).div(3389023086783008851.toULong()).rangeTo(4645170938242719988.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:04,943 [main:90] - TRYING TO REPLACE CONSTANT 798063582
2021-03-11 12:07:05,030 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:05,031 [main:66] - Compilation checking started
2021-03-11 12:07:05,310 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(1552729021.toUInt()), ArrayList<UInt>(1255122071))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(3389023086783008851.toULong(), 2425696761664416251.toULong())
    for (i in ((22203.toUShort())).div(3389023086783008851.toULong()).rangeTo(4645170938242719988.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:05,310 [main:90] - TRYING TO REPLACE CONSTANT 1255122071
2021-03-11 12:07:05,398 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 12:07:05,399 [main:66] - Compilation checking started
2021-03-11 12:07:05,596 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1927852284).until(-1299500509.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(1552729021.toUInt()), ArrayList<UInt>(1255122071))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(3389023086783008851.toULong(), 2425696761664416251.toULong())
    for (i in ((22203.toUShort())).div(3389023086783008851.toULong()).rangeTo(4645170938242719988.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:05,596 [main:90] - TRYING TO REPLACE CONSTANT 1079481874
2021-03-11 12:07:05,683 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:05,684 [main:66] - Compilation checking started
2021-03-11 12:07:05,962 [main:90] - TRYING TO REPLACE CONSTANT 1927852284
2021-03-11 12:07:06,049 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 12:07:06,049 [main:66] - Compilation checking started
2021-03-11 12:07:06,330 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 80807937.toUInt()})).get(-1299500509).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(1552729021.toUInt()), ArrayList<UInt>(1255122071))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(3389023086783008851.toULong(), 2425696761664416251.toULong())
    for (i in ((22203.toUShort())).div(3389023086783008851.toULong()).rangeTo(4645170938242719988.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:06,330 [main:90] - TRYING TO REPLACE CONSTANT 80807937
2021-03-11 12:07:06,419 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:07:06,420 [main:66] - Compilation checking started
2021-03-11 12:07:06,697 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = arrayListOf<UInt>()
    val uintProgression = (MutableList<UInt>(1079481874, {a: Int -> 615707251.toUInt()})).get(-1299500509).until(1255122071.toUInt())
    for (i in ((22203.toUShort())).div(22203.toUByte()).downTo(22203.toUInt())) {
        mutableListOf<UInt>() += ((uintProgression).first).toUShort().plus(1299500509.toUByte())
    }
    assertEquals(mutableListOf<UInt?>(1552729021.toUInt()), ArrayList<UInt>(1255122071))

    val ulongList = arrayListOf<ULong>()
    val ulongProgression = ULongRange(3389023086783008851.toULong(), 2425696761664416251.toULong())
    for (i in ((22203.toUShort())).div(3389023086783008851.toULong()).rangeTo(4645170938242719988.toULong())) {
        ((ulongProgression)).toMutableList() += (113.toUShort()).toUByte().div((1491238320341559292.toULong()).toLong().toULong())
    }
    assertEquals(ArrayDeque<Comparable<*>>(emptyList<Comparable<*>>()), ((ulongProgression)).toMutableList())

    return (1491238320341559292.toULong()).toLong().toString(1255122071)
}


2021-03-11 12:07:06,715 [main:46] - AFTER TRY 0 res = import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}


2021-03-11 12:07:07,067 [main:43] - GENERATING CALL OF inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:07:07,240 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Short) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:07:07,412 [main:302] - generating value of type = Function0<Short> false depth = 1
2021-03-11 12:07:07,412 [main:302] - generating value of type = Short true depth = 2
2021-03-11 12:07:07,413 [main:95] - GENERATED = fu0<Short, Short>({ -25906})
2021-03-11 12:07:07,498 [main:43] - GENERATING CALL OF public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()
2021-03-11 12:07:08,170 [main:61] - WITHOUT TYPE PARAMS = public inline fun <Ty1> fu1(f: () -> LinkedHashMap<HashSet<Short?>?, UByte?>): LinkedHashMap<HashSet<Short?>?, UByte?> = f()
2021-03-11 12:07:08,345 [main:302] - generating value of type = Function0<LinkedHashMap<HashSet<Short?>?, UByte?>> false depth = 1
2021-03-11 12:07:08,346 [main:302] - generating value of type = LinkedHashMap<HashSet<Short?>?, UByte?> false depth = 2
2021-03-11 12:07:08,436 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<HashSet<Short?>?, UByte?>): LkedHashMap<HashSet<Short?>?, UByte?> = TODO()
2021-03-11 12:07:08,437 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<HashSet<Short?>?, UByte?>): LkedHashMap<HashSet<Short?>?, UByte?> = TODO()
2021-03-11 12:07:08,524 [main:302] - generating value of type = Pair<HashSet<Short?>?, UByte?> false depth = 5
2021-03-11 12:07:08,610 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: HashSet<Short?>?, second: UByte?): Pair<HashSet<Short?>?, UByte?> = TODO()
2021-03-11 12:07:08,611 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: HashSet<Short?>?, second: UByte?): Pair<HashSet<Short?>?, UByte?> = TODO()
2021-03-11 12:07:08,695 [main:302] - generating value of type = HashSet<Short?> false depth = 8
2021-03-11 12:07:08,781 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Short?): HashSet<Short?> = TODO()
2021-03-11 12:07:08,782 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Short?): HashSet<Short?> = TODO()
2021-03-11 12:07:08,869 [main:302] - generating value of type = Short true depth = 11
2021-03-11 12:07:08,869 [main:95] - GENERATED = linkedSetOf<Short?>(-14998)
2021-03-11 12:07:08,869 [main:302] - generating value of type = UByte true depth = 8
2021-03-11 12:07:08,870 [main:95] - GENERATED = Pair<HashSet<Short?>?, UByte?>(linkedSetOf<Short?>(-14998), 44.toUByte())
2021-03-11 12:07:08,870 [main:95] - GENERATED = linkedMapOf<HashSet<Short?>?, UByte?>(Pair<HashSet<Short?>?, UByte?>(linkedSetOf<Short?>(-14998), 44.toUByte()))
2021-03-11 12:07:08,870 [main:95] - GENERATED = fu1<LinkedHashMap<HashSet<Short?>?, UByte?>>({ linkedMapOf<HashSet<Short?>?, UByte?>(Pair<HashSet<Short?>?, UByte?>(linkedSetOf<Short?>(-14998), 44.toUByte()))})
2021-03-11 12:07:08,955 [main:43] - GENERATING CALL OF inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:07:09,129 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:07:09,212 [main:95] - GENERATED = fu2<Set<UShort>>()
2021-03-11 12:07:09,292 [main:43] - GENERATING CALL OF fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}
2021-03-11 12:07:09,293 [main:61] - WITHOUT TYPE PARAMS = fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}
2021-03-11 12:07:09,463 [main:302] - generating value of type = Int true depth = 1
2021-03-11 12:07:09,463 [main:302] - generating value of type = Function0<Int> false depth = 1
2021-03-11 12:07:09,464 [main:302] - generating value of type = Int true depth = 2
2021-03-11 12:07:09,464 [main:95] - GENERATED = fu3(-1929534665, { -6708121})
2021-03-11 12:07:09,556 [main:48] - Try №0
2021-03-11 12:07:11,016 [main:71] - Trying to insert fun fu6() {
        fu4 {
            {
                fu7 {
                    this@fu4::fu5
                }()
            }()
        }
    }
2021-03-11 12:07:11,161 [main:66] - Compilation checking started
2021-03-11 12:07:11,811 [main:99] - Trying to change 16 nodes
2021-03-11 12:07:11,812 [main:103] - replacing (init, [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>)
2021-03-11 12:07:11,813 [main:38] - replacing init [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>
2021-03-11 12:07:11,813 [main:42] - Getting value of type [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>
2021-03-11 12:07:11,906 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> false depth = 0
2021-03-11 12:07:11,907 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 12:07:12,007 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 12:07:12,008 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 12:07:12,217 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 12:07:12,218 [main:95] - GENERATED = check(true)
2021-03-11 12:07:12,219 [main:46] - GENERATED VALUE OF TYPE [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> = { check(true)}
2021-03-11 12:07:12,219 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:12,324 [main:55] - randomType = Float
2021-03-11 12:07:12,421 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:07:12,469 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Int
2021-03-11 12:07:12,507 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from UIntProgression
2021-03-11 12:07:12,526 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<String>
2021-03-11 12:07:12,539 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULongProgression
2021-03-11 12:07:12,557 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<Nothing?>
2021-03-11 12:07:12,578 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULong
2021-03-11 12:07:12,614 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from LinkedHashMap<HashSet<Short?>?, UByte?>
2021-03-11 12:07:12,767 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<String>
2021-03-11 12:07:12,771 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULongProgression
2021-03-11 12:07:12,771 [main:110] - replacement of init of type [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> is { check(true)}
2021-03-11 12:07:12,865 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 12:07:12,865 [main:66] - Compilation checking started
2021-03-11 12:07:13,086 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().{ check(true)}()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        prope3 = "OK"
    }
}

class Kla1  {
    fun fu6() {
        fu4 {
            {
                fu7 {
                    this@fu4::fu5
                }()
            }()
        }
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}

fun box479(): String {
    Kla1().fu6()
    return prope3
}


2021-03-11 12:07:13,086 [main:103] - replacing (init, [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>)
2021-03-11 12:07:13,086 [main:38] - replacing init [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>
2021-03-11 12:07:13,086 [main:42] - Getting value of type [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>
2021-03-11 12:07:13,183 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> false depth = 0
2021-03-11 12:07:13,184 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 12:07:13,280 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 12:07:13,282 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 12:07:13,479 [main:302] - generating value of type = Any false depth = 4
2021-03-11 12:07:13,479 [main:95] - GENERATED = println("plrdb")
2021-03-11 12:07:13,479 [main:46] - GENERATED VALUE OF TYPE [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> = { println("plrdb")}
2021-03-11 12:07:13,479 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:13,583 [main:55] - randomType = Kla1?
2021-03-11 12:07:13,688 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:07:13,689 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        fu4 {
            {
                fu7 {
                    this@fu4::fu5
                }()
            }()
        }
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}
2021-03-11 12:07:13,703 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from UIntProgression
2021-03-11 12:07:13,728 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULong
2021-03-11 12:07:13,763 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULongProgression
2021-03-11 12:07:13,782 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from LinkedHashMap<HashSet<Short?>?, UByte?>
2021-03-11 12:07:13,931 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULongProgression
2021-03-11 12:07:13,935 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<String>
2021-03-11 12:07:13,947 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Int
2021-03-11 12:07:13,981 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<String>
2021-03-11 12:07:13,985 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<Nothing?>
2021-03-11 12:07:13,999 [main:110] - replacement of init of type [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> is { println("plrdb")}
2021-03-11 12:07:14,092 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 12:07:14,092 [main:66] - Compilation checking started
2021-03-11 12:07:14,321 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().{ println("plrdb")}()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        prope3 = "OK"
    }
}

class Kla1  {
    fun fu6() {
        fu4 {
            {
                fu7 {
                    this@fu4::fu5
                }()
            }()
        }
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}

fun box479(): String {
    Kla1().fu6()
    return prope3
}


2021-03-11 12:07:14,322 [main:103] - replacing ({
                fu7 {
                    this@fu4::fu5
                }()
            }, Function0<Unit>)
2021-03-11 12:07:14,323 [main:38] - replacing {
                fu7 {
                    this@fu4::fu5
                }()
            } Function0<Unit>
2021-03-11 12:07:14,323 [main:42] - Getting value of type Function0<Unit>
2021-03-11 12:07:14,418 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 12:07:14,419 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 12:07:14,518 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 12:07:14,520 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 12:07:14,728 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 12:07:14,729 [main:95] - GENERATED = check(false)
2021-03-11 12:07:14,729 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { check(false)}
2021-03-11 12:07:14,729 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:14,732 [main:55] - randomType = Long
2021-03-11 12:07:14,825 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:07:14,863 [main:94] - GETTING Function0<Unit> from Int
2021-03-11 12:07:14,906 [main:94] - GETTING Function0<Unit> from ULongProgression
2021-03-11 12:07:14,924 [main:94] - GETTING Function0<Unit> from UIntProgression
2021-03-11 12:07:14,940 [main:94] - GETTING Function0<Unit> from LinkedHashMap<HashSet<Short?>?, UByte?>
2021-03-11 12:07:15,150 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 12:07:15,182 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 12:07:15,194 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 12:07:15,195 [main:94] - GETTING Function0<Unit> from Function0<Nothing?>
2021-03-11 12:07:15,213 [main:94] - GETTING Function0<Unit> from ULongProgression
2021-03-11 12:07:15,213 [main:110] - replacement of {
                fu7 {
                    this@fu4::fu5
                }()
            } of type Function0<Unit> is { check(false)}
2021-03-11 12:07:15,309 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:07:15,309 [main:66] - Compilation checking started
2021-03-11 12:07:15,664 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        prope3 = "OK"
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 {
            { check(false)}()
        }
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}

fun box479(): String {
    Kla1().fu6()
    return prope3
}


2021-03-11 12:07:15,664 [main:103] - replacing ({
            { check(false)}()
        }, [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>)
2021-03-11 12:07:15,665 [main:38] - replacing {
            { check(false)}()
        } [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>
2021-03-11 12:07:15,665 [main:42] - Getting value of type [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>
2021-03-11 12:07:15,760 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> false depth = 0
2021-03-11 12:07:15,761 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 12:07:15,766 [main:46] - GENERATED VALUE OF TYPE [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> = { println()}
2021-03-11 12:07:15,766 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:15,769 [main:55] - randomType = Kla1
2021-03-11 12:07:15,865 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:07:15,866 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 {
            { check(false)}()
        }
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}
2021-03-11 12:07:15,877 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Int
2021-03-11 12:07:15,924 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<String>
2021-03-11 12:07:15,942 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULong
2021-03-11 12:07:15,986 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<String>
2021-03-11 12:07:15,990 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULongProgression
2021-03-11 12:07:16,015 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from UIntProgression
2021-03-11 12:07:16,041 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULongProgression
2021-03-11 12:07:16,046 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from LinkedHashMap<HashSet<Short?>?, UByte?>
2021-03-11 12:07:16,189 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<Nothing?>
2021-03-11 12:07:16,203 [main:110] - replacement of {
            { check(false)}()
        } of type [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> is { println()}
2021-03-11 12:07:16,295 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:07:16,296 [main:66] - Compilation checking started
2021-03-11 12:07:16,621 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        prope3 = "OK"
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}

fun box479(): String {
    Kla1().fu6()
    return prope3
}


2021-03-11 12:07:16,621 [main:103] - replacing (Kla1(), Kla1)
2021-03-11 12:07:16,622 [main:38] - replacing Kla1() Kla1
2021-03-11 12:07:16,622 [main:42] - Getting value of type Kla1
2021-03-11 12:07:16,721 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:07:16,722 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}
2021-03-11 12:07:16,722 [main:46] - GENERATED VALUE OF TYPE Kla1 = Kla1()
2021-03-11 12:07:16,722 [main:49] - GENERATED IS CALL =true
2021-03-11 12:07:16,825 [main:55] - randomType = Kla1?
2021-03-11 12:07:16,919 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:07:16,920 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}
2021-03-11 12:07:16,927 [main:94] - GETTING Kla1 from LinkedHashMap<HashSet<Short?>?, UByte?>
2021-03-11 12:07:17,054 [main:94] - GETTING Kla1 from Function0<String>
2021-03-11 12:07:17,062 [main:94] - GETTING Kla1 from ULongProgression
2021-03-11 12:07:17,076 [main:94] - GETTING Kla1 from Int
2021-03-11 12:07:17,107 [main:94] - GETTING Kla1 from ULong
2021-03-11 12:07:17,129 [main:94] - GETTING Kla1 from ULongProgression
2021-03-11 12:07:17,129 [main:94] - GETTING Kla1 from Function0<String>
2021-03-11 12:07:17,130 [main:94] - GETTING Kla1 from Function0<Nothing?>
2021-03-11 12:07:17,143 [main:94] - GETTING Kla1 from UIntProgression
2021-03-11 12:07:17,156 [main:110] - replacement of Kla1() of type Kla1 is Kla1()
2021-03-11 12:07:17,248 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:07:17,249 [main:103] - replacing ("OK", String)
2021-03-11 12:07:17,250 [main:38] - replacing "OK" String
2021-03-11 12:07:17,250 [main:42] - Getting value of type String
2021-03-11 12:07:17,346 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:17,347 [main:46] - GENERATED VALUE OF TYPE String = "roxxm"
2021-03-11 12:07:17,347 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:17,454 [main:55] - randomType = Float
2021-03-11 12:07:17,551 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:07:17,581 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@7a028aa3]
2021-03-11 12:07:17,582 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]
2021-03-11 12:07:17,582 [main:66] - Generated call from random type = (0.7274546f).toChar().titlecase()
2021-03-11 12:07:17,583 [main:94] - GETTING String from UIntProgression
2021-03-11 12:07:17,598 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:07:17,598 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:07:17,697 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:17,798 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:17,800 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:18,010 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 12:07:18,014 [main:95] - GENERATED = StringBuilder("iiras")
2021-03-11 12:07:18,109 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:18,211 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:18,313 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:18,314 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:18,519 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:07:18,520 [main:95] - GENERATED = StringBuilder(1554151886)
2021-03-11 12:07:18,615 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:18,713 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:18,854 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:07:18,855 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:07:18,953 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:18,954 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:19,157 [main:302] - generating value of type = Int true depth = 4
2021-03-11 12:07:19,158 [main:95] - GENERATED = StringBuilder(-1117214318)
2021-03-11 12:07:19,158 [main:105] - GENERATED CALL = (uintProgression).joinToString(StringBuilder("iiras"), "gwpmc", StringBuilder(1554151886), 850399143, StringBuilder(), {a: T -> StringBuilder(-1117214318)})
2021-03-11 12:07:19,158 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@65b417b8], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:07:19,158 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:07:19,252 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:19,253 [main:105] - GENERATED CALL = (uintProgression).step.toString(2080471336)
2021-03-11 12:07:19,253 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@7cbbb981], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]]
2021-03-11 12:07:19,253 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]
2021-03-11 12:07:19,347 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:19,348 [main:105] - GENERATED CALL = (uintProgression).first.toString(-1846446631)
2021-03-11 12:07:19,348 [main:110] - replacement of "OK" of type String is (0.7274546f).toChar().titlecase()
2021-03-11 12:07:19,447 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:19,448 [main:66] - Compilation checking started
2021-03-11 12:07:19,796 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = (0.7274546f).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}


2021-03-11 12:07:19,797 [main:103] - replacing (prope3, String)
2021-03-11 12:07:19,797 [main:38] - replacing prope3 String
2021-03-11 12:07:19,797 [main:42] - Getting value of type String
2021-03-11 12:07:19,897 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:19,898 [main:46] - GENERATED VALUE OF TYPE String = "bdqyg"
2021-03-11 12:07:19,898 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:19,901 [main:55] - randomType = Kla1
2021-03-11 12:07:20,006 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:07:20,007 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}
2021-03-11 12:07:20,015 [main:94] - GETTING String from Int
2021-03-11 12:07:20,066 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@21b5dbc], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:07:20,066 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@21b5dbc]
2021-03-11 12:07:20,162 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:20,163 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:07:20,259 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:20,260 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).compareTo(-672858540).toString(1085815358)
2021-03-11 12:07:20,260 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]]
2021-03-11 12:07:20,260 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:07:20,260 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]
2021-03-11 12:07:20,359 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:20,360 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).toChar().plus("lwhuw")
2021-03-11 12:07:20,360 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:07:20,360 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7]
2021-03-11 12:07:20,456 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:07:20,457 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:07:20,553 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:20,554 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).div(-7016142175309542515).toString(626416390)
2021-03-11 12:07:20,554 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]]
2021-03-11 12:07:20,554 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596]
2021-03-11 12:07:20,554 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]
2021-03-11 12:07:20,653 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:20,654 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).toShort().toString(-541886225)
2021-03-11 12:07:20,654 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]]
2021-03-11 12:07:20,654 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:07:20,654 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]
2021-03-11 12:07:20,654 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).toChar().lowercase()
2021-03-11 12:07:20,654 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:07:20,654 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360]
2021-03-11 12:07:20,655 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:07:20,751 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:20,752 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).toLong().toString(2303293)
2021-03-11 12:07:20,752 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:07:20,752 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437]
2021-03-11 12:07:20,752 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:07:20,848 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:20,849 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).toInt().toString(-601630214)
2021-03-11 12:07:20,849 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]]
2021-03-11 12:07:20,849 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:07:20,849 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]
2021-03-11 12:07:20,849 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).toChar().uppercase()
2021-03-11 12:07:20,849 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]]
2021-03-11 12:07:20,850 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd]
2021-03-11 12:07:20,850 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]
2021-03-11 12:07:20,946 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:20,947 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).toByte().toString(1297265490)
2021-03-11 12:07:20,947 [main:101] - Case = [@kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:07:20,947 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:07:21,045 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:21,046 [main:105] - GENERATED CALL = (fu3(-1929534665, { -6708121})).toString(-1785821788)
2021-03-11 12:07:21,046 [main:110] - replacement of prope3 of type String is (fu3(-1929534665, { -6708121})).toString(-1785821788)
2021-03-11 12:07:21,142 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:21,142 [main:66] - Compilation checking started
2021-03-11 12:07:21,377 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
(fu3(-1929534665, { -6708121})).toString(-1785821788) = (0.7274546f).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}


2021-03-11 12:07:21,377 [main:103] - replacing (prope3, String)
2021-03-11 12:07:21,377 [main:38] - replacing prope3 String
2021-03-11 12:07:21,377 [main:42] - Getting value of type String
2021-03-11 12:07:21,477 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:21,478 [main:46] - GENERATED VALUE OF TYPE String = "zetrv"
2021-03-11 12:07:21,479 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:21,589 [main:55] - randomType = MutableMap<Kla1, ULong>
2021-03-11 12:07:21,590 [main:94] - GETTING String from ULongProgression
2021-03-11 12:07:21,603 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@618331e5], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:07:21,603 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:07:21,699 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:21,700 [main:105] - GENERATED CALL = ((ulongProgression)).step.toString(542045021)
2021-03-11 12:07:21,700 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@7bad5b13], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:07:21,700 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:07:21,796 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:21,797 [main:105] - GENERATED CALL = ((ulongProgression)).first.toString(747228285)
2021-03-11 12:07:21,797 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:07:21,797 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:07:21,891 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:21,990 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:21,991 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:22,193 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 12:07:22,291 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:22,292 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:22,558 [main:302] - generating value of type = CharSequence false depth = 6
2021-03-11 12:07:22,563 [main:95] - GENERATED = StringBuilder("nxaro")
2021-03-11 12:07:22,563 [main:95] - GENERATED = StringBuilder(StringBuilder("nxaro"))
2021-03-11 12:07:22,657 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:22,754 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:22,755 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:22,962 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 12:07:22,966 [main:95] - GENERATED = StringBuilder("gtwea")
2021-03-11 12:07:23,060 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:23,157 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:23,252 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:23,349 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:07:23,350 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:07:23,448 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:23,449 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:23,648 [main:302] - generating value of type = Int true depth = 4
2021-03-11 12:07:23,649 [main:95] - GENERATED = StringBuilder(400430513)
2021-03-11 12:07:23,649 [main:105] - GENERATED CALL = ((ulongProgression)).joinToString(StringBuilder(StringBuilder("nxaro")), StringBuilder("gtwea"), "nmxna", -384133266, "vjlwl", {a: T -> StringBuilder(400430513)})
2021-03-11 12:07:23,649 [main:110] - replacement of prope3 of type String is ((ulongProgression)).step.toString(542045021)
2021-03-11 12:07:23,743 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:23,743 [main:66] - Compilation checking started
2021-03-11 12:07:23,972 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
((ulongProgression)).step.toString(542045021) = (0.7274546f).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}


2021-03-11 12:07:23,973 [main:103] - replacing (init, [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>)
2021-03-11 12:07:23,973 [main:38] - replacing init [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>
2021-03-11 12:07:23,973 [main:42] - Getting value of type [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit>
2021-03-11 12:07:24,068 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> false depth = 0
2021-03-11 12:07:24,068 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 12:07:24,168 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 12:07:24,169 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 12:07:24,367 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 12:07:24,368 [main:95] - GENERATED = require(false)
2021-03-11 12:07:24,368 [main:46] - GENERATED VALUE OF TYPE [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> = { require(false)}
2021-03-11 12:07:24,368 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:24,472 [main:55] - randomType = LinkedHashSet<String>
2021-03-11 12:07:24,566 [main:302] - generating value of type = LinkedHashSet<String> false depth = 0
2021-03-11 12:07:24,665 [main:43] - GENERATING CALL OF fun linkedStringSetOf(elements: String): LkedHashSet<Strg> = TODO()
2021-03-11 12:07:24,667 [main:61] - WITHOUT TYPE PARAMS = fun linkedStringSetOf(elements: String): LkedHashSet<Strg> = TODO()
2021-03-11 12:07:24,765 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:07:24,766 [main:95] - GENERATED = linkedStringSetOf("vrvgp")
2021-03-11 12:07:24,886 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from LinkedHashMap<HashSet<Short?>?, UByte?>
2021-03-11 12:07:25,016 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULongProgression
2021-03-11 12:07:25,032 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULongProgression
2021-03-11 12:07:25,036 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<String>
2021-03-11 12:07:25,049 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<Nothing?>
2021-03-11 12:07:25,066 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from ULong
2021-03-11 12:07:25,093 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from UIntProgression
2021-03-11 12:07:25,109 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Int
2021-03-11 12:07:25,152 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> from Function0<String>
2021-03-11 12:07:25,152 [main:110] - replacement of init of type [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> is { require(false)}
2021-03-11 12:07:25,245 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 12:07:25,245 [main:66] - Compilation checking started
2021-03-11 12:07:25,479 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().{ require(false)}()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = (0.7274546f).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}


2021-03-11 12:07:25,480 [main:103] - replacing (block, [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3>)
2021-03-11 12:07:25,481 [main:38] - replacing block [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3>
2021-03-11 12:07:25,481 [main:42] - Getting value of type [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3>
2021-03-11 12:07:25,578 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> false depth = 0
2021-03-11 12:07:25,579 [main:302] - generating value of type = Ty3 false depth = 1
2021-03-11 12:07:25,583 [main:46] - GENERATED VALUE OF TYPE [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> = { }
2021-03-11 12:07:25,583 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:26,177 [main:55] - randomType = List<Triple<Long, Map<ULong, UShort>, Kla1>?>
2021-03-11 12:07:26,182 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> from Function0<Nothing?>
2021-03-11 12:07:26,200 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> from ULongProgression
2021-03-11 12:07:26,217 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> from ULongProgression
2021-03-11 12:07:26,221 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> from LinkedHashMap<HashSet<Short?>?, UByte?>
2021-03-11 12:07:26,353 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> from Function0<String>
2021-03-11 12:07:26,365 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> from Function0<String>
2021-03-11 12:07:26,369 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> from UIntProgression
2021-03-11 12:07:26,386 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> from Int
2021-03-11 12:07:26,421 [main:94] - GETTING [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> from ULong
2021-03-11 12:07:26,443 [main:110] - replacement of block of type [@kotlin.ExtensionFunctionType] Function1<Ty2, Ty3> is { }
2021-03-11 12:07:26,539 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 12:07:26,539 [main:66] - Compilation checking started
2021-03-11 12:07:26,776 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = (0.7274546f).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return { }()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}


2021-03-11 12:07:26,873 [main:137] - TRYING TO REPLACE CONSTANT 0.7274546f
2021-03-11 12:07:26,969 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(PARENTHESIZED)
2021-03-11 12:07:26,970 [main:66] - Compilation checking started
2021-03-11 12:07:27,323 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}


2021-03-11 12:07:27,323 [main:46] - AFTER TRY 1 res = import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}


2021-03-11 12:07:27,518 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:07:27,518 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}
2021-03-11 12:07:27,722 [main:43] - GENERATING CALL OF inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:07:28,463 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Pair<Function1<Char?, Float>, Function1<Float?, Kla0>>) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:07:28,669 [main:302] - generating value of type = Function0<Pair<Function1<Char?, Float>, Function1<Float?, Kla0>>> false depth = 1
2021-03-11 12:07:28,670 [main:302] - generating value of type = Pair<Function1<Char?, Float>, Function1<Float?, Kla0>> false depth = 2
2021-03-11 12:07:28,773 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Function1<Char?, Float>, second: Function1<Float?, Kla0>): Pair<Function1<Char?, Float>, Function1<Float?, Kla0>> = TODO()
2021-03-11 12:07:28,775 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Function1<Char?, Float>, second: Function1<Float?, Kla0>): Pair<Function1<Char?, Float>, Function1<Float?, Kla0>> = TODO()
2021-03-11 12:07:28,875 [main:302] - generating value of type = Function1<Char?, Float> false depth = 5
2021-03-11 12:07:28,876 [main:302] - generating value of type = Float true depth = 6
2021-03-11 12:07:28,877 [main:302] - generating value of type = Function1<Float?, Kla0> false depth = 5
2021-03-11 12:07:28,878 [main:302] - generating value of type = Kla0 false depth = 6
2021-03-11 12:07:28,879 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:07:28,879 [main:95] - GENERATED = Pair<Function1<Char?, Float>, Function1<Float?, Kla0>>({a: Char? -> 0.1809808f}, {a: Float? -> Kla0()})
2021-03-11 12:07:28,879 [main:95] - GENERATED = fu0<List<String>, Pair<Function1<Char?, Float>, Function1<Float?, Kla0>>>({ Pair<Function1<Char?, Float>, Function1<Float?, Kla0>>({a: Char? -> 0.1809808f}, {a: Float? -> Kla0()})})
2021-03-11 12:07:28,975 [main:43] - GENERATING CALL OF public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()
2021-03-11 12:07:28,978 [main:61] - WITHOUT TYPE PARAMS = public inline fun <Ty1> fu1(f: () -> Char): Char = f()
2021-03-11 12:07:29,181 [main:302] - generating value of type = Function0<Char> false depth = 1
2021-03-11 12:07:29,182 [main:302] - generating value of type = Char true depth = 2
2021-03-11 12:07:29,183 [main:95] - GENERATED = fu1<Char>({ '㥩'})
2021-03-11 12:07:29,280 [main:43] - GENERATING CALL OF inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:07:29,284 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:07:29,383 [main:95] - GENERATED = fu2<Kla0>()
2021-03-11 12:07:29,478 [main:43] - GENERATING CALL OF fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}
2021-03-11 12:07:29,479 [main:61] - WITHOUT TYPE PARAMS = fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}
2021-03-11 12:07:29,682 [main:302] - generating value of type = Int true depth = 1
2021-03-11 12:07:29,683 [main:302] - generating value of type = Function0<Int> false depth = 1
2021-03-11 12:07:29,684 [main:302] - generating value of type = Int true depth = 2
2021-03-11 12:07:29,685 [main:95] - GENERATED = fu3(2129972429, { 161364729})
2021-03-11 12:07:29,782 [main:43] - GENERATING CALL OF inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}
2021-03-11 12:07:29,783 [main:61] - WITHOUT TYPE PARAMS = inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}
2021-03-11 12:07:30,040 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> false depth = 1
2021-03-11 12:07:30,041 [main:302] - generating value of type = Unit false depth = 2
2021-03-11 12:07:30,141 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 12:07:30,142 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 12:07:30,343 [main:302] - generating value of type = Boolean true depth = 5
2021-03-11 12:07:30,344 [main:95] - GENERATED = check(false)
2021-03-11 12:07:30,344 [main:95] - GENERATED = fu4({ check(false)})
2021-03-11 12:07:30,451 [main:48] - Try №1
2021-03-11 12:07:32,302 [main:71] - Trying to insert private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
2021-03-11 12:07:32,424 [main:66] - Compilation checking started
2021-03-11 12:07:33,139 [main:99] - Trying to change 83 nodes
2021-03-11 12:07:33,140 [main:103] - replacing (prope4.fu9(Kla2.Kla7), String)
2021-03-11 12:07:33,141 [main:38] - replacing prope4.fu9(Kla2.Kla7) String
2021-03-11 12:07:33,141 [main:42] - Getting value of type String
2021-03-11 12:07:33,260 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:33,261 [main:46] - GENERATED VALUE OF TYPE String = "lhjkq"
2021-03-11 12:07:33,261 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:34,987 [main:55] - randomType = LinkedHashMap<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>>?
2021-03-11 12:07:35,101 [main:302] - generating value of type = LinkedHashMap<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>> false depth = 0
2021-03-11 12:07:35,222 [main:43] - GENERATING CALL OF fun <K, V> LinkedHashMap(original: kotlin.collections.Map<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>>): LinkedHashMap<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>> = TODO()
2021-03-11 12:07:35,224 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> LinkedHashMap(original: kotlin.collections.Map<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>>): LinkedHashMap<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>> = TODO()
2021-03-11 12:07:35,474 [main:302] - generating value of type = Map<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>> false depth = 3
2021-03-11 12:07:35,597 [main:43] - GENERATING CALL OF fun <K, V> mapOf(): Map<Collection<Function2<LkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>> = TODO()
2021-03-11 12:07:35,599 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> mapOf(): Map<Collection<Function2<LkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>> = TODO()
2021-03-11 12:07:35,723 [main:95] - GENERATED = mapOf<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>>()
2021-03-11 12:07:35,723 [main:95] - GENERATED = LinkedHashMap<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>>(mapOf<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>>())
2021-03-11 12:07:36,007 [main:137] - GENERATING call of type public open fun get(key: kotlin.collections.Collection<(kotlin.collections.LinkedHashMap<kotlin.collections.ArrayDeque<kotlin.Pair<kotlin.Double, kotlin.Int>>, kotlin.Byte?>?, Kla2) -> kotlin.Int>): kotlin.Array<Kla3>? defined in kotlin.collections.LinkedHashMap[DeserializedSimpleFunctionDescriptor@5a806ca]
2021-03-11 12:07:36,118 [main:302] - generating value of type = Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>> false depth = 0
2021-03-11 12:07:36,240 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): Collection<Function2<LkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>> = TODO()
2021-03-11 12:07:36,242 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): Collection<Function2<LkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>> = TODO()
2021-03-11 12:07:36,362 [main:95] - GENERATED = linkedSetOf<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>()
2021-03-11 12:07:36,362 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@ad9f257]
2021-03-11 12:07:36,362 [main:66] - Generated call from random type = (LinkedHashMap<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>>(mapOf<Collection<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>, Array<Kla3>>()))?.get(linkedSetOf<Function2<LinkedHashMap<ArrayDeque<Pair<Double, Int>>, Byte?>?, Kla2, Int>>())?.contentToString()!!
2021-03-11 12:07:36,363 [main:94] - GETTING String from Function0<String>
2021-03-11 12:07:36,375 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5da6971c]]
2021-03-11 12:07:36,376 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:36,376 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5da6971c]
2021-03-11 12:07:36,376 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().toLowerCase()
2021-03-11 12:07:36,376 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]]
2021-03-11 12:07:36,376 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:36,376 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke()
2021-03-11 12:07:36,376 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@147cd849]]
2021-03-11 12:07:36,376 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:36,376 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@147cd849]
2021-03-11 12:07:36,489 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:07:36,489 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().plus("pjvko")
2021-03-11 12:07:36,489 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fb53a5c]]
2021-03-11 12:07:36,490 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:36,490 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fb53a5c]
2021-03-11 12:07:36,490 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().trimStart()
2021-03-11 12:07:36,490 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@88541d6]]
2021-03-11 12:07:36,490 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:36,490 [main:137] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@88541d6]
2021-03-11 12:07:36,603 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:36,716 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:07:36,718 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().padStart(1503532675, '')
2021-03-11 12:07:36,718 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a0ddbcf]]
2021-03-11 12:07:36,718 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:36,718 [main:137] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a0ddbcf]
2021-03-11 12:07:36,718 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().trimIndent()
2021-03-11 12:07:36,718 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2aca670]]
2021-03-11 12:07:36,718 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:36,719 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2aca670]
2021-03-11 12:07:36,830 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:36,943 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:36,945 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().removeRange(598813140, -144883739)
2021-03-11 12:07:36,945 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2f70b86a]]
2021-03-11 12:07:36,945 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:36,945 [main:137] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2f70b86a]
2021-03-11 12:07:37,054 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:37,059 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().removePrefix("jlidz")
2021-03-11 12:07:37,059 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d8ba384]]
2021-03-11 12:07:37,059 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:37,059 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d8ba384]
2021-03-11 12:07:37,059 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().reversed()
2021-03-11 12:07:37,059 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]]
2021-03-11 12:07:37,059 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:37,059 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]
2021-03-11 12:07:37,059 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().trimEnd()
2021-03-11 12:07:37,059 [main:110] - replacement of prope4.fu9(Kla2.Kla7) of type String is (fu2<Kla0>()).invoke().reversed()
2021-03-11 12:07:37,169 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:37,169 [main:66] - Compilation checking started
2021-03-11 12:07:37,622 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> "autumn"
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", prope4.fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", prope4.fu9(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return "OK"
}


2021-03-11 12:07:37,623 [main:103] - replacing (prope4.fu9(Kla2.Kla4), String)
2021-03-11 12:07:37,624 [main:38] - replacing prope4.fu9(Kla2.Kla4) String
2021-03-11 12:07:37,624 [main:42] - Getting value of type String
2021-03-11 12:07:37,795 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:37,796 [main:46] - GENERATED VALUE OF TYPE String = "psveo"
2021-03-11 12:07:37,796 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:38,045 [main:55] - randomType = LinkedHashSet<UShort>
2021-03-11 12:07:38,157 [main:302] - generating value of type = LinkedHashSet<UShort> false depth = 0
2021-03-11 12:07:38,272 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: UShort): LkedHashSet<UShort> = TODO()
2021-03-11 12:07:38,274 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: UShort): LkedHashSet<UShort> = TODO()
2021-03-11 12:07:38,389 [main:302] - generating value of type = UShort true depth = 3
2021-03-11 12:07:38,391 [main:95] - GENERATED = linkedSetOf<UShort>(6.toUShort())
2021-03-11 12:07:38,500 [main:137] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.LinkedHashSet[DeserializedSimpleFunctionDescriptor@25e102d0]
2021-03-11 12:07:38,500 [main:137] - GENERATING call of type public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d0eefba]
2021-03-11 12:07:38,611 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:38,775 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:38,891 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:39,006 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:39,118 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:39,237 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:07:39,240 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:07:39,244 [main:66] - Generated call from random type = (linkedSetOf<UShort>(6.toUShort())).toArray().joinToString(StringBuilder(), "cftmk", "pglxy", 1235583440, StringBuilder(), {a: T -> "xzefp"})
2021-03-11 12:07:39,245 [main:94] - GETTING String from ULongProgression
2021-03-11 12:07:39,261 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@223b8e4e], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:07:39,262 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:07:39,377 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:39,378 [main:105] - GENERATED CALL = ((ulongProgression)).first.toString(-1765991894)
2021-03-11 12:07:39,378 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:07:39,379 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:07:39,489 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:39,619 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:39,739 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:39,741 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:07:39,980 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 12:07:39,984 [main:95] - GENERATED = StringBuilder("jundg")
2021-03-11 12:07:40,096 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:40,214 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:40,216 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:40,451 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:07:40,452 [main:95] - GENERATED = StringBuilder(1934773906)
2021-03-11 12:07:40,564 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:40,677 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:40,798 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:07:40,800 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:07:40,804 [main:105] - GENERATED CALL = ((ulongProgression)).joinToString("gvuuc", StringBuilder("jundg"), StringBuilder(1934773906), 1990503327, "heqsk", {a: T -> "bqopi"})
2021-03-11 12:07:40,804 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@29766726], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:07:40,804 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:07:40,916 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:40,917 [main:105] - GENERATED CALL = ((ulongProgression)).step.toString(-510766703)
2021-03-11 12:07:40,918 [main:110] - replacement of prope4.fu9(Kla2.Kla4) of type String is ((ulongProgression)).step.toString(-510766703)
2021-03-11 12:07:41,029 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:41,030 [main:66] - Compilation checking started
2021-03-11 12:07:41,491 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> "autumn"
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", prope4.fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", prope4.fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return "OK"
}


2021-03-11 12:07:41,492 [main:103] - replacing (prope4, Kla3)
2021-03-11 12:07:41,492 [main:38] - replacing prope4 Kla3
2021-03-11 12:07:41,492 [main:42] - Getting value of type Kla3
2021-03-11 12:07:41,606 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:07:41,608 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> "autumn"
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}
2021-03-11 12:07:41,608 [main:46] - GENERATED VALUE OF TYPE Kla3 = Kla3()
2021-03-11 12:07:41,608 [main:49] - GENERATED IS CALL =true
2021-03-11 12:07:41,736 [main:55] - randomType = Double
2021-03-11 12:07:41,848 [main:302] - generating value of type = Double true depth = 0
2021-03-11 12:07:41,884 [main:94] - GETTING Kla3 from ULong
2021-03-11 12:07:41,911 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:07:41,923 [main:94] - GETTING Kla3 from Kla1
2021-03-11 12:07:41,928 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:07:41,937 [main:94] - GETTING Kla3 from UIntProgression
2021-03-11 12:07:41,951 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:07:41,951 [main:94] - GETTING Kla3 from Function0<Nothing?>
2021-03-11 12:07:41,964 [main:94] - GETTING Kla3 from Char
2021-03-11 12:07:41,982 [main:94] - GETTING Kla3 from Int
2021-03-11 12:07:42,012 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:07:42,012 [main:110] - replacement of prope4 of type Kla3 is Kla3()
2021-03-11 12:07:42,141 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:07:42,141 [main:66] - Compilation checking started
2021-03-11 12:07:42,578 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> "autumn"
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", prope4.fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return "OK"
}


2021-03-11 12:07:42,579 [main:103] - replacing (block(x), String)
2021-03-11 12:07:42,579 [main:38] - replacing block(x) String
2021-03-11 12:07:42,579 [main:42] - Getting value of type String
2021-03-11 12:07:42,698 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:42,699 [main:46] - GENERATED VALUE OF TYPE String = "awhff"
2021-03-11 12:07:42,700 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:42,705 [main:55] - randomType = Kla0
2021-03-11 12:07:42,815 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 12:07:42,816 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:07:42,822 [main:94] - GETTING String from ULongProgression
2021-03-11 12:07:42,834 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:07:42,834 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:07:42,943 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:43,059 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:07:43,062 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:07:43,356 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:07:43,358 [main:95] - GENERATED = StringBuilder("oafvx")
2021-03-11 12:07:43,469 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:43,584 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:07:43,587 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:07:43,821 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:07:43,823 [main:95] - GENERATED = StringBuilder("fzqau")
2021-03-11 12:07:43,934 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:44,049 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:44,161 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:44,278 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:07:44,280 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:07:44,395 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:44,397 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:07:44,635 [main:302] - generating value of type = Int true depth = 4
2021-03-11 12:07:44,636 [main:95] - GENERATED = StringBuilder(1931712568)
2021-03-11 12:07:44,637 [main:105] - GENERATED CALL = (ulongProgression).joinToString(StringBuilder("oafvx"), StringBuilder("fzqau"), StringBuilder(), -1286295779, "ojwic", {a: T -> StringBuilder(1931712568)})
2021-03-11 12:07:44,637 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@223b8e4e], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:07:44,637 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:07:44,748 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:44,750 [main:105] - GENERATED CALL = (ulongProgression).first.toString(-647170107)
2021-03-11 12:07:44,750 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@29766726], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:07:44,750 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:07:44,862 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:44,864 [main:105] - GENERATED CALL = (ulongProgression).step.toString(1728837621)
2021-03-11 12:07:44,864 [main:110] - replacement of block(x) of type String is (ulongProgression).joinToString(StringBuilder("oafvx"), StringBuilder("fzqau"), StringBuilder(), -1286295779, "ojwic", {a: T -> StringBuilder(1931712568)})
2021-03-11 12:07:44,975 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:44,975 [main:66] - Compilation checking started
2021-03-11 12:07:45,284 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> "autumn"
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (ulongProgression).joinToString(StringBuilder("oafvx"), StringBuilder("fzqau"), StringBuilder(), -1286295779, "ojwic", {a: T -> StringBuilder(1931712568)})
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", prope4.fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return "OK"
}


2021-03-11 12:07:45,285 [main:103] - replacing (Kla4, Kla2)
2021-03-11 12:07:45,286 [main:38] - replacing Kla4 Kla2
2021-03-11 12:07:45,286 [main:42] - Getting value of type Kla2
2021-03-11 12:07:45,401 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:07:45,402 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:07:45,402 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla4
2021-03-11 12:07:45,402 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:45,652 [main:55] - randomType = Short?
2021-03-11 12:07:45,765 [main:302] - generating value of type = Short true depth = 0
2021-03-11 12:07:45,801 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:45,813 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:45,821 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:07:45,827 [main:94] - GETTING Kla2 from Char
2021-03-11 12:07:45,844 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:07:45,857 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:45,857 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:07:45,879 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:07:45,892 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:45,892 [main:94] - GETTING Kla2 from Int
2021-03-11 12:07:45,922 [main:110] - replacement of Kla4 of type Kla2 is Kla2.Kla4
2021-03-11 12:07:46,034 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:46,035 [main:66] - Compilation checking started
2021-03-11 12:07:46,357 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> "autumn"
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", prope4.fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return "OK"
}


2021-03-11 12:07:46,358 [main:103] - replacing ("autumn", String)
2021-03-11 12:07:46,358 [main:38] - replacing "autumn" String
2021-03-11 12:07:46,358 [main:42] - Getting value of type String
2021-03-11 12:07:46,473 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:46,474 [main:46] - GENERATED VALUE OF TYPE String = "dyurr"
2021-03-11 12:07:46,474 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:46,599 [main:55] - randomType = UShort
2021-03-11 12:07:46,713 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:07:46,748 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@5ae93525]
2021-03-11 12:07:46,748 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:07:46,871 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:46,872 [main:66] - Generated call from random type = (16550.toUShort()).toLong().toString(431423138)
2021-03-11 12:07:46,873 [main:94] - GETTING String from Function0<Nothing?>
2021-03-11 12:07:46,891 [main:94] - GETTING String from Int
2021-03-11 12:07:46,923 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]]
2021-03-11 12:07:46,923 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:07:46,923 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]
2021-03-11 12:07:46,923 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().uppercase()
2021-03-11 12:07:46,924 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:07:46,924 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7]
2021-03-11 12:07:47,035 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:07:47,037 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:07:47,152 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:47,153 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).div(3366970912994143922).toString(1983433028)
2021-03-11 12:07:47,153 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]]
2021-03-11 12:07:47,153 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:07:47,154 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]
2021-03-11 12:07:47,154 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().lowercase()
2021-03-11 12:07:47,154 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:07:47,154 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360]
2021-03-11 12:07:47,154 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:07:47,266 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:47,268 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toLong().toString(-530117503)
2021-03-11 12:07:47,268 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:07:47,268 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437]
2021-03-11 12:07:47,268 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:07:47,381 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:47,382 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toInt().toString(-1955891589)
2021-03-11 12:07:47,382 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]]
2021-03-11 12:07:47,382 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd]
2021-03-11 12:07:47,383 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]
2021-03-11 12:07:47,495 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:47,496 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
2021-03-11 12:07:47,496 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]]
2021-03-11 12:07:47,497 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:07:47,497 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]
2021-03-11 12:07:47,664 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:47,666 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().plus("wpwlm")
2021-03-11 12:07:47,666 [main:101] - Case = [@kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:07:47,666 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:07:47,779 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:47,780 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toString(-1704280655)
2021-03-11 12:07:47,780 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]]
2021-03-11 12:07:47,780 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:07:47,780 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]
2021-03-11 12:07:47,781 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().titlecase()
2021-03-11 12:07:47,781 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]]
2021-03-11 12:07:47,781 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596]
2021-03-11 12:07:47,781 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]
2021-03-11 12:07:47,893 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:47,895 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toShort().toString(-2055567597)
2021-03-11 12:07:47,895 [main:110] - replacement of "autumn" of type String is (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
2021-03-11 12:07:48,008 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:48,008 [main:66] - Compilation checking started
2021-03-11 12:07:48,472 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", prope4.fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return "OK"
}


2021-03-11 12:07:48,473 [main:103] - replacing ("OK", String)
2021-03-11 12:07:48,473 [main:38] - replacing "OK" String
2021-03-11 12:07:48,473 [main:42] - Getting value of type String
2021-03-11 12:07:48,591 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:48,593 [main:46] - GENERATED VALUE OF TYPE String = "rvjte"
2021-03-11 12:07:48,593 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:49,116 [main:55] - randomType = Collection<Function1<Collection<Double>, Kla2>>
2021-03-11 12:07:49,117 [main:94] - GETTING String from Function0<String>
2021-03-11 12:07:49,126 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6722b236]]
2021-03-11 12:07:49,126 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:49,126 [main:137] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6722b236]
2021-03-11 12:07:49,241 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:49,243 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().trimMargin("vaium")
2021-03-11 12:07:49,243 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70714d36]]
2021-03-11 12:07:49,243 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:49,243 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70714d36]
2021-03-11 12:07:49,359 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:49,361 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().concat("rooog")
2021-03-11 12:07:49,362 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]]
2021-03-11 12:07:49,362 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:49,362 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]
2021-03-11 12:07:49,362 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().trimEnd()
2021-03-11 12:07:49,362 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3c6ccd7]]
2021-03-11 12:07:49,362 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:49,362 [main:137] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3c6ccd7]
2021-03-11 12:07:49,477 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 12:07:49,479 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:07:49,481 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().dropWhile({a: Char -> false})
2021-03-11 12:07:49,481 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@553802ac]]
2021-03-11 12:07:49,481 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:49,481 [main:137] - GENERATING call of type public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@553802ac]
2021-03-11 12:07:49,597 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:49,712 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:49,714 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().replaceIndentByMargin("gmdxk", "uzrgw")
2021-03-11 12:07:49,714 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@73bcd4e9]]
2021-03-11 12:07:49,714 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:49,714 [main:137] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@73bcd4e9]
2021-03-11 12:07:49,830 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:07:49,950 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:07:49,953 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:07:50,201 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:07:50,203 [main:95] - GENERATED = StringBuilder("qejca")
2021-03-11 12:07:50,203 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().removeSurrounding(StringBuilder("qejca"))
2021-03-11 12:07:50,203 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@212dee0d]]
2021-03-11 12:07:50,203 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:50,203 [main:137] - GENERATING call of type public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@212dee0d]
2021-03-11 12:07:50,318 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:07:50,434 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:50,549 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:50,551 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().replaceBeforeLast('蕚', "trsqv", "qnsvh")
2021-03-11 12:07:50,551 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7e176136]]
2021-03-11 12:07:50,551 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:50,551 [main:137] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7e176136]
2021-03-11 12:07:50,664 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:50,667 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().replaceIndent("xpjjd")
2021-03-11 12:07:50,667 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fb53a5c]]
2021-03-11 12:07:50,667 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:50,667 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fb53a5c]
2021-03-11 12:07:50,667 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().trimStart()
2021-03-11 12:07:50,667 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3b9eb815]]
2021-03-11 12:07:50,667 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:07:50,667 [main:137] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3b9eb815]
2021-03-11 12:07:50,782 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:07:50,899 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:07:51,016 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:07:51,018 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().replaceFirst('빓', '뱜', false)
2021-03-11 12:07:51,018 [main:110] - replacement of "OK" of type String is (fu2<Kla0>()).invoke().trimEnd()
2021-03-11 12:07:51,133 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:51,133 [main:66] - Compilation checking started
2021-03-11 12:07:51,588 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", prope4.fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:07:51,589 [main:103] - replacing (Kla5, Kla2)
2021-03-11 12:07:51,590 [main:38] - replacing Kla5 Kla2
2021-03-11 12:07:51,590 [main:42] - Getting value of type Kla2
2021-03-11 12:07:51,724 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:07:51,726 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:07:51,726 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla4
2021-03-11 12:07:51,726 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:52,124 [main:55] - randomType = Pair<Double, String>
2021-03-11 12:07:52,299 [main:302] - generating value of type = Pair<Double, String> false depth = 0
2021-03-11 12:07:52,419 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Double, second: String): Pair<Double, String> = TODO()
2021-03-11 12:07:52,422 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Double, second: String): Pair<Double, String> = TODO()
2021-03-11 12:07:52,541 [main:302] - generating value of type = Double true depth = 3
2021-03-11 12:07:52,543 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:07:52,545 [main:95] - GENERATED = Pair<Double, String>(0.14182087092506468, "pwwse")
2021-03-11 12:07:52,556 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:52,568 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:52,578 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:52,579 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:07:52,591 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:07:52,605 [main:94] - GETTING Kla2 from Char
2021-03-11 12:07:52,621 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:07:52,644 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:07:52,649 [main:94] - GETTING Kla2 from Int
2021-03-11 12:07:52,681 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:52,682 [main:110] - replacement of Kla5 of type Kla2 is Kla2.Kla4
2021-03-11 12:07:52,796 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:52,796 [main:66] - Compilation checking started
2021-03-11 12:07:53,114 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", prope4.fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:07:53,115 [main:103] - replacing (Kla5, Kla2)
2021-03-11 12:07:53,116 [main:38] - replacing Kla5 Kla2
2021-03-11 12:07:53,116 [main:42] - Getting value of type Kla2
2021-03-11 12:07:53,231 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:07:53,233 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:07:53,233 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla7
2021-03-11 12:07:53,233 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:53,361 [main:55] - randomType = Short
2021-03-11 12:07:53,476 [main:302] - generating value of type = Short true depth = 0
2021-03-11 12:07:53,509 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:53,518 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:07:53,541 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:53,553 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:07:53,566 [main:94] - GETTING Kla2 from Int
2021-03-11 12:07:53,596 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:53,597 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:53,598 [main:94] - GETTING Kla2 from Char
2021-03-11 12:07:53,616 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:07:53,621 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:07:53,634 [main:110] - replacement of Kla5 of type Kla2 is Kla2.Kla7
2021-03-11 12:07:53,749 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:53,749 [main:66] - Compilation checking started
2021-03-11 12:07:54,066 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla2.Kla7 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", prope4.fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:07:54,067 [main:103] - replacing (prope4, Kla3)
2021-03-11 12:07:54,067 [main:38] - replacing prope4 Kla3
2021-03-11 12:07:54,067 [main:42] - Getting value of type Kla3
2021-03-11 12:07:54,182 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:07:54,184 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}
2021-03-11 12:07:54,184 [main:46] - GENERATED VALUE OF TYPE Kla3 = Kla3()
2021-03-11 12:07:54,184 [main:49] - GENERATED IS CALL =true
2021-03-11 12:07:54,188 [main:55] - randomType = Int
2021-03-11 12:07:54,304 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:54,338 [main:94] - GETTING Kla3 from Kla1
2021-03-11 12:07:54,343 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:07:54,351 [main:94] - GETTING Kla3 from ULong
2021-03-11 12:07:54,374 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:07:54,386 [main:94] - GETTING Kla3 from Function0<Nothing?>
2021-03-11 12:07:54,400 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:07:54,400 [main:94] - GETTING Kla3 from UIntProgression
2021-03-11 12:07:54,413 [main:94] - GETTING Kla3 from Char
2021-03-11 12:07:54,431 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:07:54,432 [main:94] - GETTING Kla3 from Int
2021-03-11 12:07:54,463 [main:110] - replacement of prope4 of type Kla3 is Kla3()
2021-03-11 12:07:54,576 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:07:54,577 [main:66] - Compilation checking started
2021-03-11 12:07:55,030 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = block(x)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:07:55,031 [main:103] - replacing (block(x), String)
2021-03-11 12:07:55,031 [main:38] - replacing block(x) String
2021-03-11 12:07:55,031 [main:42] - Getting value of type String
2021-03-11 12:07:55,146 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:55,148 [main:46] - GENERATED VALUE OF TYPE String = "drykc"
2021-03-11 12:07:55,148 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:55,155 [main:55] - randomType = Kla0
2021-03-11 12:07:55,270 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 12:07:55,272 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:07:55,277 [main:94] - GETTING String from Char
2021-03-11 12:07:55,294 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]]
2021-03-11 12:07:55,294 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]
2021-03-11 12:07:55,294 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).lowercase()
2021-03-11 12:07:55,294 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]]
2021-03-11 12:07:55,294 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]
2021-03-11 12:07:55,294 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).titlecase()
2021-03-11 12:07:55,294 [main:101] - Case = [public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@1b3ea198], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]]
2021-03-11 12:07:55,294 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@1b3ea198]
2021-03-11 12:07:55,295 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]
2021-03-11 12:07:55,409 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:55,411 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
2021-03-11 12:07:55,411 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]]
2021-03-11 12:07:55,411 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]
2021-03-11 12:07:55,527 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:07:55,529 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).plus("deyno")
2021-03-11 12:07:55,529 [main:101] - Case = [public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@56b7fcf6], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:07:55,529 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@56b7fcf6]
2021-03-11 12:07:55,643 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:07:55,645 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:07:55,759 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:55,761 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).compareTo('↊').toString(-737035486)
2021-03-11 12:07:55,761 [main:101] - Case = [public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@52f6f7c0], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]]
2021-03-11 12:07:55,761 [main:137] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@52f6f7c0]
2021-03-11 12:07:55,761 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]
2021-03-11 12:07:55,875 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:55,877 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).toShort().toString(-372394492)
2021-03-11 12:07:55,878 [main:101] - Case = [public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@636671c1], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:07:55,878 [main:137] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@636671c1]
2021-03-11 12:07:55,878 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:07:55,997 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:55,999 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).toLong().toString(1687099525)
2021-03-11 12:07:55,999 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]]
2021-03-11 12:07:55,999 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]
2021-03-11 12:07:56,000 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).uppercase()
2021-03-11 12:07:56,000 [main:110] - replacement of block(x) of type String is (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
2021-03-11 12:07:56,116 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:56,116 [main:66] - Compilation checking started
2021-03-11 12:07:56,586 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:07:56,587 [main:103] - replacing (Kla3(), Kla3)
2021-03-11 12:07:56,587 [main:38] - replacing Kla3() Kla3
2021-03-11 12:07:56,587 [main:42] - Getting value of type Kla3
2021-03-11 12:07:56,703 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:07:56,705 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}
2021-03-11 12:07:56,705 [main:46] - GENERATED VALUE OF TYPE Kla3 = Kla3()
2021-03-11 12:07:56,705 [main:49] - GENERATED IS CALL =true
2021-03-11 12:07:57,037 [main:55] - randomType = Function2<Kla2, Kla0, Short>
2021-03-11 12:07:57,038 [main:94] - GETTING Kla3 from Kla1
2021-03-11 12:07:57,046 [main:94] - GETTING Kla3 from Int
2021-03-11 12:07:57,088 [main:94] - GETTING Kla3 from Function0<Nothing?>
2021-03-11 12:07:57,104 [main:94] - GETTING Kla3 from UIntProgression
2021-03-11 12:07:57,121 [main:94] - GETTING Kla3 from ULong
2021-03-11 12:07:57,144 [main:94] - GETTING Kla3 from Char
2021-03-11 12:07:57,162 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:07:57,171 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:07:57,183 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:07:57,183 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:07:57,183 [main:110] - replacement of Kla3() of type Kla3 is Kla3()
2021-03-11 12:07:57,298 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:07:57,299 [main:103] - replacing (Kla5, Kla2)
2021-03-11 12:07:57,299 [main:38] - replacing Kla5 Kla2
2021-03-11 12:07:57,299 [main:42] - Getting value of type Kla2
2021-03-11 12:07:57,415 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:07:57,417 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:07:57,417 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla5
2021-03-11 12:07:57,417 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:57,425 [main:55] - randomType = Kla3
2021-03-11 12:07:57,548 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:07:57,550 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}
2021-03-11 12:07:57,556 [main:94] - GETTING Kla2 from Int
2021-03-11 12:07:57,586 [main:94] - GETTING Kla2 from Char
2021-03-11 12:07:57,603 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:07:57,617 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:07:57,640 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:57,652 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:07:57,658 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:07:57,671 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:57,679 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:57,680 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:57,680 [main:110] - replacement of Kla5 of type Kla2 is Kla2.Kla5
2021-03-11 12:07:57,795 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:57,796 [main:66] - Compilation checking started
2021-03-11 12:07:58,111 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:07:58,112 [main:103] - replacing (Kla6, Kla2)
2021-03-11 12:07:58,112 [main:38] - replacing Kla6 Kla2
2021-03-11 12:07:58,112 [main:42] - Getting value of type Kla2
2021-03-11 12:07:58,226 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:07:58,228 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:07:58,228 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla7
2021-03-11 12:07:58,228 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:59,173 [main:55] - randomType = Function1<Collection<Function2<Boolean?, UInt, Kla1>>?, HashMap<Short, UInt>>
2021-03-11 12:07:59,174 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:07:59,188 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:07:59,213 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:59,225 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:59,234 [main:94] - GETTING Kla2 from Char
2021-03-11 12:07:59,251 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:07:59,251 [main:94] - GETTING Kla2 from Int
2021-03-11 12:07:59,281 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:07:59,282 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:07:59,287 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:07:59,300 [main:110] - replacement of Kla6 of type Kla2 is Kla2.Kla7
2021-03-11 12:07:59,413 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:07:59,413 [main:66] - Compilation checking started
2021-03-11 12:07:59,726 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla2.Kla7))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:07:59,727 [main:103] - replacing (Kla2.Kla7, Kla2)
2021-03-11 12:07:59,728 [main:38] - replacing Kla2.Kla7 Kla2
2021-03-11 12:07:59,728 [main:42] - Getting value of type Kla2
2021-03-11 12:07:59,843 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:07:59,845 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:07:59,845 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla7
2021-03-11 12:07:59,845 [main:49] - GENERATED IS CALL =false
2021-03-11 12:07:59,849 [main:55] - randomType = Int
2021-03-11 12:07:59,963 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:07:59,995 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:00,005 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:00,017 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:00,030 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:00,060 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:00,061 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:00,066 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:00,083 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:00,106 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:00,119 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:00,119 [main:110] - replacement of Kla2.Kla7 of type Kla2 is Kla2.Kla7
2021-03-11 12:08:00,234 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:00,235 [main:103] - replacing (Kla5, Kla2)
2021-03-11 12:08:00,237 [main:38] - replacing Kla5 Kla2
2021-03-11 12:08:00,237 [main:42] - Getting value of type Kla2
2021-03-11 12:08:00,354 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:00,356 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:00,356 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla4
2021-03-11 12:08:00,356 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:00,494 [main:55] - randomType = LinkedHashSet<Kla0>
2021-03-11 12:08:00,613 [main:302] - generating value of type = LinkedHashSet<Kla0> false depth = 0
2021-03-11 12:08:00,735 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Kla0): LkedHashSet<Kla0> = TODO()
2021-03-11 12:08:00,738 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Kla0): LkedHashSet<Kla0> = TODO()
2021-03-11 12:08:00,861 [main:302] - generating value of type = Kla0 false depth = 3
2021-03-11 12:08:00,863 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:08:00,863 [main:95] - GENERATED = linkedSetOf<Kla0>(Kla0())
2021-03-11 12:08:00,973 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:00,985 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:01,007 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:01,019 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:01,037 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:01,042 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:01,072 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:01,085 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:01,095 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:01,095 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:01,096 [main:110] - replacement of Kla5 of type Kla2 is Kla2.Kla4
2021-03-11 12:08:01,257 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:01,257 [main:66] - Compilation checking started
2021-03-11 12:08:01,575 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla2.Kla4 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:01,577 [main:103] - replacing (Kla5, Kla2)
2021-03-11 12:08:01,577 [main:38] - replacing Kla5 Kla2
2021-03-11 12:08:01,577 [main:42] - Getting value of type Kla2
2021-03-11 12:08:01,696 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:01,698 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:01,698 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla7
2021-03-11 12:08:01,698 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:01,841 [main:55] - randomType = Short
2021-03-11 12:08:01,974 [main:302] - generating value of type = Short true depth = 0
2021-03-11 12:08:02,017 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:02,040 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:02,053 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:02,065 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:02,071 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:02,087 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:02,101 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:02,132 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:02,140 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:02,140 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:02,140 [main:110] - replacement of Kla5 of type Kla2 is Kla2.Kla7
2021-03-11 12:08:02,260 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:02,260 [main:66] - Compilation checking started
2021-03-11 12:08:02,577 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla2.Kla7 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:02,578 [main:103] - replacing (Kla4, Kla2)
2021-03-11 12:08:02,578 [main:38] - replacing Kla4 Kla2
2021-03-11 12:08:02,578 [main:42] - Getting value of type Kla2
2021-03-11 12:08:02,695 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:02,697 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:02,697 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla6
2021-03-11 12:08:02,697 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:02,701 [main:55] - randomType = Char
2021-03-11 12:08:02,819 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:02,839 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:02,861 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:02,870 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:02,870 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:02,875 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:02,889 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:02,919 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:02,931 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:02,944 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:02,961 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:02,961 [main:110] - replacement of Kla4 of type Kla2 is Kla2.Kla6
2021-03-11 12:08:03,081 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:03,081 [main:66] - Compilation checking started
2021-03-11 12:08:03,400 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla2.Kla6, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:03,400 [main:103] - replacing (Kla6, Kla2)
2021-03-11 12:08:03,401 [main:38] - replacing Kla6 Kla2
2021-03-11 12:08:03,401 [main:42] - Getting value of type Kla2
2021-03-11 12:08:03,518 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:03,520 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:03,520 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla4
2021-03-11 12:08:03,520 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:03,655 [main:55] - randomType = String?
2021-03-11 12:08:03,773 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:03,801 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:03,822 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:03,839 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:03,851 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:03,868 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:03,900 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:03,906 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:03,907 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:03,927 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:03,927 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:03,974 [main:110] - replacement of Kla6 of type Kla2 is Kla2.Kla4
2021-03-11 12:08:04,093 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:04,094 [main:66] - Compilation checking started
2021-03-11 12:08:04,417 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla2.Kla4))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:04,418 [main:103] - replacing (Kla5, Kla2)
2021-03-11 12:08:04,418 [main:38] - replacing Kla5 Kla2
2021-03-11 12:08:04,418 [main:42] - Getting value of type Kla2
2021-03-11 12:08:04,537 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:04,539 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:04,539 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla5
2021-03-11 12:08:04,539 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:04,676 [main:55] - randomType = ArrayList<Kla3>
2021-03-11 12:08:04,794 [main:302] - generating value of type = ArrayList<Kla3> false depth = 0
2021-03-11 12:08:04,917 [main:43] - GENERATING CALL OF fun <E> ArrayList(): ArrayList<Kla3> = TODO()
2021-03-11 12:08:04,920 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): ArrayList<Kla3> = TODO()
2021-03-11 12:08:05,041 [main:95] - GENERATED = ArrayList<Kla3>()
2021-03-11 12:08:05,160 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:05,182 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:05,191 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:05,203 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:05,208 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:05,209 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:05,223 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:05,235 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:05,252 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:05,282 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:05,282 [main:110] - replacement of Kla5 of type Kla2 is Kla2.Kla5
2021-03-11 12:08:05,407 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:05,407 [main:66] - Compilation checking started
2021-03-11 12:08:05,768 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla2.Kla5 -> return "spring"
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:05,769 [main:103] - replacing ("spring", String)
2021-03-11 12:08:05,769 [main:38] - replacing "spring" String
2021-03-11 12:08:05,769 [main:42] - Getting value of type String
2021-03-11 12:08:05,887 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:05,889 [main:46] - GENERATED VALUE OF TYPE String = "zkhdy"
2021-03-11 12:08:05,890 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:06,440 [main:55] - randomType = Sequence<List<Function1<Kla1, Kla1>>>?
2021-03-11 12:08:06,441 [main:94] - GETTING String from ULong
2021-03-11 12:08:06,463 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@1d3b16a2], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:08:06,463 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@1d3b16a2]
2021-03-11 12:08:06,463 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:08:06,581 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:06,583 [main:105] - GENERATED CALL = ((ulongProgression).first).toLong().toString(-766555352)
2021-03-11 12:08:06,583 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2ce16a7a], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]]
2021-03-11 12:08:06,583 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2ce16a7a]
2021-03-11 12:08:06,583 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]
2021-03-11 12:08:06,700 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:06,702 [main:105] - GENERATED CALL = ((ulongProgression).first).toShort().toString(-1007111620)
2021-03-11 12:08:06,702 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:08:06,702 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:08:06,820 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:06,822 [main:105] - GENERATED CALL = ((ulongProgression).first).toString(2024953590)
2021-03-11 12:08:06,822 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@230fbe1c], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b52f678]]
2021-03-11 12:08:06,822 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@230fbe1c]
2021-03-11 12:08:06,822 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b52f678]
2021-03-11 12:08:06,948 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:06,950 [main:105] - GENERATED CALL = ((ulongProgression).first).toUByte().toString(-1373038704)
2021-03-11 12:08:06,950 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@8412af4], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5abcdda0]]
2021-03-11 12:08:06,950 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@8412af4]
2021-03-11 12:08:06,950 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5abcdda0]
2021-03-11 12:08:07,066 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:07,069 [main:105] - GENERATED CALL = ((ulongProgression).first).toUShort().toString(1638393810)
2021-03-11 12:08:07,069 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@5eb05b58], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:08:07,069 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@5eb05b58]
2021-03-11 12:08:07,188 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:08:07,190 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:08:07,307 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:07,309 [main:105] - GENERATED CALL = ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
2021-03-11 12:08:07,309 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@67831a47], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]]
2021-03-11 12:08:07,310 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@67831a47]
2021-03-11 12:08:07,310 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]
2021-03-11 12:08:07,432 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:07,434 [main:105] - GENERATED CALL = ((ulongProgression).first).toByte().toString(766271809)
2021-03-11 12:08:07,434 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6a1fa229], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]]
2021-03-11 12:08:07,434 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6a1fa229]
2021-03-11 12:08:07,434 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]
2021-03-11 12:08:07,557 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:07,559 [main:105] - GENERATED CALL = ((ulongProgression).first).toUInt().toString(-697190225)
2021-03-11 12:08:07,559 [main:110] - replacement of "spring" of type String is ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
2021-03-11 12:08:07,676 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:07,677 [main:66] - Compilation checking started
2021-03-11 12:08:08,167 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:08,168 [main:103] - replacing (Kla6, Kla2)
2021-03-11 12:08:08,168 [main:38] - replacing Kla6 Kla2
2021-03-11 12:08:08,169 [main:42] - Getting value of type Kla2
2021-03-11 12:08:08,292 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:08,295 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:08,295 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla6
2021-03-11 12:08:08,295 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:08,299 [main:55] - randomType = Char
2021-03-11 12:08:08,433 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:08,457 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:08,466 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:08,478 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:08,479 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:08,484 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:08,504 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:08,505 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:08,527 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:08,539 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:08,553 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:08,582 [main:110] - replacement of Kla6 of type Kla2 is Kla2.Kla6
2021-03-11 12:08:08,700 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:08,701 [main:66] - Compilation checking started
2021-03-11 12:08:09,039 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", prope4.fu8(Kla2.Kla7))

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:09,040 [main:103] - replacing (prope4.fu8(Kla2.Kla7), String)
2021-03-11 12:08:09,040 [main:38] - replacing prope4.fu8(Kla2.Kla7) String
2021-03-11 12:08:09,040 [main:42] - Getting value of type String
2021-03-11 12:08:09,160 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:09,163 [main:46] - GENERATED VALUE OF TYPE String = "zdrlr"
2021-03-11 12:08:09,163 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:09,299 [main:55] - randomType = Boolean?
2021-03-11 12:08:09,419 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:08:09,434 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@198af3c8]
2021-03-11 12:08:09,552 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:08:09,554 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:08:09,674 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:09,677 [main:66] - Generated call from random type = (true)?.compareTo(true).toString(201612849)
2021-03-11 12:08:09,678 [main:94] - GETTING String from Function0<String>
2021-03-11 12:08:09,689 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b52135a]]
2021-03-11 12:08:09,689 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:09,689 [main:137] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b52135a]
2021-03-11 12:08:09,810 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:09,815 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().removeSuffix(StringBuilder())
2021-03-11 12:08:09,815 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d8ba384]]
2021-03-11 12:08:09,815 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:09,815 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d8ba384]
2021-03-11 12:08:09,815 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().reversed()
2021-03-11 12:08:09,815 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f75e331]]
2021-03-11 12:08:09,815 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:09,816 [main:137] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f75e331]
2021-03-11 12:08:09,934 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:10,055 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:10,058 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().padEnd(1664560538, 'ࡸ')
2021-03-11 12:08:10,058 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2237999d]]
2021-03-11 12:08:10,058 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:10,058 [main:137] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2237999d]
2021-03-11 12:08:10,181 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:10,184 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().drop(1856255209)
2021-03-11 12:08:10,184 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70714d36]]
2021-03-11 12:08:10,184 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:10,184 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70714d36]
2021-03-11 12:08:10,307 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:10,310 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().concat("ggwtf")
2021-03-11 12:08:10,310 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@553802ac]]
2021-03-11 12:08:10,310 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:10,310 [main:137] - GENERATING call of type public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@553802ac]
2021-03-11 12:08:10,473 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:10,593 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:10,595 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().replaceIndentByMargin("itenk", "zeqao")
2021-03-11 12:08:10,595 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fb53a5c]]
2021-03-11 12:08:10,595 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:10,595 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fb53a5c]
2021-03-11 12:08:10,595 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().trimStart()
2021-03-11 12:08:10,595 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12a0add8]]
2021-03-11 12:08:10,595 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:10,595 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12a0add8]
2021-03-11 12:08:10,713 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:10,833 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:10,954 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:10,957 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().replaceAfter('넉', "gvuxo", "gaqyf")
2021-03-11 12:08:10,957 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@147cd849]]
2021-03-11 12:08:10,957 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:10,957 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@147cd849]
2021-03-11 12:08:11,082 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:08:11,082 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().plus("stnsh")
2021-03-11 12:08:11,082 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f], public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560cde94]]
2021-03-11 12:08:11,082 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@51f26c4f]
2021-03-11 12:08:11,082 [main:137] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560cde94]
2021-03-11 12:08:11,203 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-11 12:08:11,205 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:08:11,207 [main:105] - GENERATED CALL = (fu2<Kla0>()).invoke().filterIndexed({a: Int, b: Char -> true})
2021-03-11 12:08:11,207 [main:110] - replacement of prope4.fu8(Kla2.Kla7) of type String is (fu2<Kla0>()).invoke().reversed()
2021-03-11 12:08:11,325 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:11,325 [main:66] - Compilation checking started
2021-03-11 12:08:11,816 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:11,817 [main:103] - replacing ("autumn", String)
2021-03-11 12:08:11,818 [main:38] - replacing "autumn" String
2021-03-11 12:08:11,818 [main:42] - Getting value of type String
2021-03-11 12:08:11,944 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:11,946 [main:46] - GENERATED VALUE OF TYPE String = "leake"
2021-03-11 12:08:11,946 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:11,950 [main:55] - randomType = ULong
2021-03-11 12:08:12,071 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:08:12,101 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2acb34f4]
2021-03-11 12:08:12,101 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:08:12,222 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:12,225 [main:66] - Generated call from random type = (4053158255662030801.toULong()).toLong().toString(-1361149475)
2021-03-11 12:08:12,226 [main:94] - GETTING String from Int
2021-03-11 12:08:12,272 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]]
2021-03-11 12:08:12,272 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:08:12,272 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]
2021-03-11 12:08:12,272 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().titlecase()
2021-03-11 12:08:12,272 [main:101] - Case = [@kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:08:12,272 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:08:12,392 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:12,394 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toString(-730083176)
2021-03-11 12:08:12,394 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]]
2021-03-11 12:08:12,394 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:08:12,394 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]
2021-03-11 12:08:12,395 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().lowercase()
2021-03-11 12:08:12,395 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]]
2021-03-11 12:08:12,395 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd]
2021-03-11 12:08:12,395 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]
2021-03-11 12:08:12,514 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:12,516 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toByte().toString(-535253793)
2021-03-11 12:08:12,516 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]]
2021-03-11 12:08:12,516 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:08:12,516 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]
2021-03-11 12:08:12,634 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:12,637 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().plus("vnzdh")
2021-03-11 12:08:12,637 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:08:12,637 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437]
2021-03-11 12:08:12,637 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:08:12,757 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:12,759 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toInt().toString(-276720632)
2021-03-11 12:08:12,759 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:08:12,759 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7]
2021-03-11 12:08:12,877 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:08:12,879 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:08:12,999 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:13,001 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).div(-4133799050663471880).toString(494017961)
2021-03-11 12:08:13,001 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]]
2021-03-11 12:08:13,001 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596]
2021-03-11 12:08:13,001 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]
2021-03-11 12:08:13,121 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:13,123 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toShort().toString(-38164794)
2021-03-11 12:08:13,123 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:08:13,123 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360]
2021-03-11 12:08:13,123 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:08:13,242 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:13,244 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toLong().toString(-1291184013)
2021-03-11 12:08:13,244 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]]
2021-03-11 12:08:13,244 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:08:13,244 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]
2021-03-11 12:08:13,244 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().uppercase()
2021-03-11 12:08:13,244 [main:110] - replacement of "autumn" of type String is (fu3(2129972429, { 161364729})).toChar().uppercase()
2021-03-11 12:08:13,363 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:13,363 [main:66] - Compilation checking started
2021-03-11 12:08:13,828 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", prope4.fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:13,829 [main:103] - replacing (prope4, Kla3)
2021-03-11 12:08:13,829 [main:38] - replacing prope4 Kla3
2021-03-11 12:08:13,829 [main:42] - Getting value of type Kla3
2021-03-11 12:08:13,949 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:08:13,951 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}
2021-03-11 12:08:13,951 [main:46] - GENERATED VALUE OF TYPE Kla3 = Kla3()
2021-03-11 12:08:13,951 [main:49] - GENERATED IS CALL =true
2021-03-11 12:08:13,959 [main:55] - randomType = Kla0
2021-03-11 12:08:14,079 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 12:08:14,081 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:08:14,089 [main:94] - GETTING Kla3 from UIntProgression
2021-03-11 12:08:14,102 [main:94] - GETTING Kla3 from ULong
2021-03-11 12:08:14,124 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:08:14,136 [main:94] - GETTING Kla3 from Int
2021-03-11 12:08:14,165 [main:94] - GETTING Kla3 from Kla1
2021-03-11 12:08:14,171 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:08:14,180 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:08:14,181 [main:94] - GETTING Kla3 from Char
2021-03-11 12:08:14,197 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:08:14,198 [main:94] - GETTING Kla3 from Function0<Nothing?>
2021-03-11 12:08:14,211 [main:110] - replacement of prope4 of type Kla3 is Kla3()
2021-03-11 12:08:14,332 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:08:14,332 [main:66] - Compilation checking started
2021-03-11 12:08:14,811 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla5 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:14,812 [main:103] - replacing (Kla2.Kla5, Kla2)
2021-03-11 12:08:14,812 [main:38] - replacing Kla2.Kla5 Kla2
2021-03-11 12:08:14,812 [main:42] - Getting value of type Kla2
2021-03-11 12:08:14,938 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:14,940 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:14,940 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla4
2021-03-11 12:08:14,940 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:15,413 [main:55] - randomType = Pair<Collection<Float>, Long>
2021-03-11 12:08:15,532 [main:302] - generating value of type = Pair<Collection<Float>, Long> false depth = 0
2021-03-11 12:08:15,657 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Collection<Float>, second: Long): Pair<Collection<Float>, Long> = TODO()
2021-03-11 12:08:15,660 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Collection<Float>, second: Long): Pair<Collection<Float>, Long> = TODO()
2021-03-11 12:08:15,785 [main:302] - generating value of type = Collection<Float> false depth = 3
2021-03-11 12:08:15,910 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): Collection<Float> = TODO()
2021-03-11 12:08:15,913 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): Collection<Float> = TODO()
2021-03-11 12:08:16,036 [main:95] - GENERATED = linkedSetOf<Float>()
2021-03-11 12:08:16,037 [main:302] - generating value of type = Long true depth = 3
2021-03-11 12:08:16,039 [main:95] - GENERATED = Pair<Collection<Float>, Long>(linkedSetOf<Float>(), 1446411289346636246)
2021-03-11 12:08:16,054 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:16,070 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:16,079 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:16,092 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:16,113 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:16,127 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:16,128 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:16,158 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:16,163 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:16,163 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:16,175 [main:110] - replacement of Kla2.Kla5 of type Kla2 is Kla2.Kla4
2021-03-11 12:08:16,295 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:16,295 [main:66] - Compilation checking started
2021-03-11 12:08:16,783 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("summer", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:16,784 [main:103] - replacing ("summer", String)
2021-03-11 12:08:16,784 [main:38] - replacing "summer" String
2021-03-11 12:08:16,784 [main:42] - Getting value of type String
2021-03-11 12:08:16,911 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:16,913 [main:46] - GENERATED VALUE OF TYPE String = "fmjvs"
2021-03-11 12:08:16,913 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:17,194 [main:55] - randomType = ArrayList<Char?>
2021-03-11 12:08:17,323 [main:302] - generating value of type = ArrayList<Char?> false depth = 0
2021-03-11 12:08:17,447 [main:43] - GENERATING CALL OF fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<Char?> = TODO()
2021-03-11 12:08:17,450 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<Char?> = TODO()
2021-03-11 12:08:17,706 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:08:17,708 [main:95] - GENERATED = ArrayList<Char?>(98113687)
2021-03-11 12:08:17,826 [main:137] - GENERATING call of type protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.ArrayList[DeserializedSimpleFunctionDescriptor@4a99b7c7]
2021-03-11 12:08:17,827 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@ad9f257]
2021-03-11 12:08:17,827 [main:66] - Generated call from random type = (ArrayList<Char?>(98113687)).toArray().contentToString()
2021-03-11 12:08:17,828 [main:94] - GETTING String from Function0<String>
2021-03-11 12:08:17,836 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@73bcd4e9]]
2021-03-11 12:08:17,836 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:17,836 [main:137] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@73bcd4e9]
2021-03-11 12:08:17,954 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:17,959 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().removeSurrounding("zqqli")
2021-03-11 12:08:17,959 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560cde94]]
2021-03-11 12:08:17,959 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:17,959 [main:137] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560cde94]
2021-03-11 12:08:18,078 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-11 12:08:18,080 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:08:18,083 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().filterIndexed({a: Int, b: Char -> true})
2021-03-11 12:08:18,083 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12a0add8]]
2021-03-11 12:08:18,083 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:18,083 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12a0add8]
2021-03-11 12:08:18,201 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:18,323 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:18,444 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:18,446 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().replaceAfter('兜', "pjfkx", "yxtxp")
2021-03-11 12:08:18,446 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2f70b86a]]
2021-03-11 12:08:18,447 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:18,447 [main:137] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2f70b86a]
2021-03-11 12:08:18,565 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:18,688 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:08:18,691 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:08:18,959 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 12:08:18,964 [main:95] - GENERATED = StringBuilder("kfslo")
2021-03-11 12:08:18,964 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().removePrefix(StringBuilder("kfslo"))
2021-03-11 12:08:18,965 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2adf5814]]
2021-03-11 12:08:18,965 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:18,965 [main:137] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2adf5814]
2021-03-11 12:08:19,092 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:19,094 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().takeLast(23163498)
2021-03-11 12:08:19,095 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@372657c0]]
2021-03-11 12:08:19,095 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:19,095 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@372657c0]
2021-03-11 12:08:19,095 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().uppercase()
2021-03-11 12:08:19,095 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a29fc78]]
2021-03-11 12:08:19,095 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:19,095 [main:137] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a29fc78]
2021-03-11 12:08:19,215 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:19,336 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:19,339 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().substringBeforeLast('', "iafpt")
2021-03-11 12:08:19,339 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f75e331]]
2021-03-11 12:08:19,339 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:19,339 [main:137] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f75e331]
2021-03-11 12:08:19,458 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:19,578 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:19,580 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().padEnd(-1641066873, '痲')
2021-03-11 12:08:19,581 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3b9eb815]]
2021-03-11 12:08:19,581 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:19,581 [main:137] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3b9eb815]
2021-03-11 12:08:19,702 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:19,830 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:20,006 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:08:20,009 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().replaceFirst('ǉ', '蝡', false)
2021-03-11 12:08:20,009 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@88541d6]]
2021-03-11 12:08:20,009 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:20,009 [main:137] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@88541d6]
2021-03-11 12:08:20,129 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:20,248 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:20,251 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().padStart(622248172, '薋')
2021-03-11 12:08:20,251 [main:110] - replacement of "summer" of type String is "fmjvs"
2021-03-11 12:08:20,370 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:08:20,370 [main:66] - Compilation checking started
2021-03-11 12:08:20,863 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:20,864 [main:103] - replacing (fu8(Kla2.Kla6), String)
2021-03-11 12:08:20,865 [main:38] - replacing fu8(Kla2.Kla6) String
2021-03-11 12:08:20,865 [main:42] - Getting value of type String
2021-03-11 12:08:20,987 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:20,989 [main:46] - GENERATED VALUE OF TYPE String = "qattw"
2021-03-11 12:08:20,989 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:20,997 [main:55] - randomType = Kla3
2021-03-11 12:08:21,117 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:08:21,119 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}
2021-03-11 12:08:21,124 [main:137] - GENERATING call of type public final fun fu8(x: Kla2): kotlin.String defined in Kla3[SimpleFunctionDescriptorImpl@62e2e1c1]
2021-03-11 12:08:21,242 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:21,244 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:21,244 [main:137] - GENERATING call of type public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3dc1f40a]
2021-03-11 12:08:21,362 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:21,483 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:21,485 [main:66] - Generated call from random type = (Kla3()).fu8(Kla2.Kla4).substringAfter('梀', "ampmv")
2021-03-11 12:08:21,486 [main:94] - GETTING String from ULongProgression
2021-03-11 12:08:21,498 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:08:21,499 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:08:21,617 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:21,740 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:21,866 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:21,991 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:22,120 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:22,247 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:08:22,249 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:08:22,254 [main:105] - GENERATED CALL = ((ulongProgression)).joinToString(StringBuilder(), "wklcu", StringBuilder(), 1789692371, "rwzub", {a: T -> "rzbcd"})
2021-03-11 12:08:22,254 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@223b8e4e], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:08:22,254 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:08:22,375 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:22,377 [main:105] - GENERATED CALL = ((ulongProgression)).first.toString(-570469194)
2021-03-11 12:08:22,377 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@29766726], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:08:22,377 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:08:22,503 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:22,505 [main:105] - GENERATED CALL = ((ulongProgression)).step.toString(-1258071109)
2021-03-11 12:08:22,505 [main:110] - replacement of fu8(Kla2.Kla6) of type String is ((ulongProgression)).step.toString(-1258071109)
2021-03-11 12:08:22,626 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:22,626 [main:66] - Compilation checking started
2021-03-11 12:08:22,956 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla4))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().((ulongProgression)).step.toString(-1258071109))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:22,957 [main:103] - replacing (Kla2.Kla4, Kla2)
2021-03-11 12:08:22,958 [main:38] - replacing Kla2.Kla4 Kla2
2021-03-11 12:08:22,958 [main:42] - Getting value of type Kla2
2021-03-11 12:08:23,079 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:23,081 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:23,081 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla7
2021-03-11 12:08:23,081 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:23,225 [main:55] - randomType = Kla1?
2021-03-11 12:08:23,346 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:08:23,348 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}
2021-03-11 12:08:23,355 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:23,383 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:23,421 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:23,434 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:23,447 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:23,455 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:23,456 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:23,470 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:23,471 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:23,476 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:23,492 [main:110] - replacement of Kla2.Kla4 of type Kla2 is Kla2.Kla7
2021-03-11 12:08:23,613 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:23,614 [main:66] - Compilation checking started
2021-03-11 12:08:24,091 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> "spring"
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:24,092 [main:103] - replacing ("spring", String)
2021-03-11 12:08:24,092 [main:38] - replacing "spring" String
2021-03-11 12:08:24,092 [main:42] - Getting value of type String
2021-03-11 12:08:24,212 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:24,214 [main:46] - GENERATED VALUE OF TYPE String = "qmers"
2021-03-11 12:08:24,214 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:24,361 [main:55] - randomType = LinkedHashMap<Int, UByte>
2021-03-11 12:08:24,480 [main:302] - generating value of type = LinkedHashMap<Int, UByte> false depth = 0
2021-03-11 12:08:24,604 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): LkedHashMap<Int, UByte> = TODO()
2021-03-11 12:08:24,607 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): LkedHashMap<Int, UByte> = TODO()
2021-03-11 12:08:24,732 [main:95] - GENERATED = linkedMapOf<Int, UByte>()
2021-03-11 12:08:24,843 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:08:25,015 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:25,017 [main:66] - Generated call from random type = (linkedMapOf<Int, UByte>()).size.toString(-1282478242)
2021-03-11 12:08:25,018 [main:94] - GETTING String from ULongProgression
2021-03-11 12:08:25,031 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@29766726], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:08:25,031 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:08:25,157 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:25,160 [main:105] - GENERATED CALL = (ulongProgression).step.toString(39577017)
2021-03-11 12:08:25,160 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:08:25,160 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:08:25,278 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:25,400 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:25,524 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:25,648 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:08:25,651 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:08:25,907 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 12:08:25,912 [main:95] - GENERATED = StringBuilder("xwdxa")
2021-03-11 12:08:26,031 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:26,153 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:26,278 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:08:26,280 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:08:26,405 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:08:26,408 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:08:26,673 [main:302] - generating value of type = Int true depth = 4
2021-03-11 12:08:26,675 [main:95] - GENERATED = StringBuilder(-827034412)
2021-03-11 12:08:26,676 [main:105] - GENERATED CALL = (ulongProgression).joinToString("snvup", "akqwe", StringBuilder("xwdxa"), 1436590992, "rzljl", {a: T -> StringBuilder(-827034412)})
2021-03-11 12:08:26,676 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@223b8e4e], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:08:26,676 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:08:26,794 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:26,796 [main:105] - GENERATED CALL = (ulongProgression).first.toString(2021410559)
2021-03-11 12:08:26,796 [main:110] - replacement of "spring" of type String is (ulongProgression).step.toString(39577017)
2021-03-11 12:08:26,917 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:26,917 [main:66] - Compilation checking started
2021-03-11 12:08:27,405 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(y) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:27,406 [main:103] - replacing (y, Kla2)
2021-03-11 12:08:27,406 [main:38] - replacing y Kla2
2021-03-11 12:08:27,406 [main:42] - Getting value of type Kla2
2021-03-11 12:08:27,526 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:27,528 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:27,528 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla4
2021-03-11 12:08:27,528 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:27,536 [main:55] - randomType = Kla1
2021-03-11 12:08:27,656 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:08:27,658 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}
2021-03-11 12:08:27,665 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:27,678 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:27,696 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:27,701 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:27,731 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:27,743 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:27,752 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:27,774 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:27,775 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:27,775 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:27,788 [main:110] - replacement of y of type Kla2 is Kla2.Kla4
2021-03-11 12:08:27,909 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:27,909 [main:66] - Compilation checking started
2021-03-11 12:08:28,379 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", Kla3().fu9(Kla2.Kla5))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:28,380 [main:103] - replacing (Kla3().fu9(Kla2.Kla5), String)
2021-03-11 12:08:28,381 [main:38] - replacing Kla3().fu9(Kla2.Kla5) String
2021-03-11 12:08:28,381 [main:42] - Getting value of type String
2021-03-11 12:08:28,500 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:28,502 [main:46] - GENERATED VALUE OF TYPE String = "pncdj"
2021-03-11 12:08:28,502 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:28,510 [main:55] - randomType = Kla1
2021-03-11 12:08:28,633 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:08:28,635 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}
2021-03-11 12:08:28,643 [main:94] - GETTING String from Function0<String>
2021-03-11 12:08:28,652 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2237999d]]
2021-03-11 12:08:28,653 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:28,653 [main:137] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2237999d]
2021-03-11 12:08:28,780 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:28,782 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().drop(712122403)
2021-03-11 12:08:28,782 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@77cf9c04]]
2021-03-11 12:08:28,782 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:28,782 [main:137] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@77cf9c04]
2021-03-11 12:08:28,782 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().decapitalize()
2021-03-11 12:08:28,782 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2adf5814]]
2021-03-11 12:08:28,782 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:28,782 [main:137] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2adf5814]
2021-03-11 12:08:28,904 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:28,907 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().takeLast(-1638910909)
2021-03-11 12:08:28,907 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2aca670]]
2021-03-11 12:08:28,907 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:28,907 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2aca670]
2021-03-11 12:08:29,029 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:29,152 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:29,154 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().removeRange(2038749535, -816511402)
2021-03-11 12:08:29,154 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d8ba384]]
2021-03-11 12:08:29,154 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:29,154 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d8ba384]
2021-03-11 12:08:29,154 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().reversed()
2021-03-11 12:08:29,154 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ffb2204]]
2021-03-11 12:08:29,154 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:29,155 [main:137] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ffb2204]
2021-03-11 12:08:29,274 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 12:08:29,277 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:08:29,279 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().takeLastWhile({a: Char -> true})
2021-03-11 12:08:29,279 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6722b236]]
2021-03-11 12:08:29,279 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:29,279 [main:137] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6722b236]
2021-03-11 12:08:29,406 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:29,408 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().trimMargin("srejo")
2021-03-11 12:08:29,410 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f75e331]]
2021-03-11 12:08:29,410 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:29,410 [main:137] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f75e331]
2021-03-11 12:08:29,530 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:29,651 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:29,653 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().padEnd(885367670, '臋')
2021-03-11 12:08:29,653 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5da6971c]]
2021-03-11 12:08:29,653 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:29,654 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5da6971c]
2021-03-11 12:08:29,654 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().toLowerCase()
2021-03-11 12:08:29,654 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]]
2021-03-11 12:08:29,654 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:29,654 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]
2021-03-11 12:08:29,654 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().trimEnd()
2021-03-11 12:08:29,654 [main:110] - replacement of Kla3().fu9(Kla2.Kla5) of type String is ({ "ebdjj"}).invoke().takeLast(-1638910909)
2021-03-11 12:08:29,824 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:29,824 [main:66] - Compilation checking started
2021-03-11 12:08:30,297 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:30,298 [main:103] - replacing ("summer", String)
2021-03-11 12:08:30,298 [main:38] - replacing "summer" String
2021-03-11 12:08:30,298 [main:42] - Getting value of type String
2021-03-11 12:08:30,422 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:30,424 [main:46] - GENERATED VALUE OF TYPE String = "iiaud"
2021-03-11 12:08:30,424 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:30,432 [main:55] - randomType = Kla3
2021-03-11 12:08:30,554 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:08:30,556 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}
2021-03-11 12:08:30,562 [main:137] - GENERATING call of type public final fun fu8(x: Kla2): kotlin.String defined in Kla3[SimpleFunctionDescriptorImpl@30b7d033]
2021-03-11 12:08:30,683 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:30,686 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:30,686 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70714d36]
2021-03-11 12:08:30,807 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:30,810 [main:66] - Generated call from random type = (Kla3()).fu8(Kla2.Kla7).concat("bfeip")
2021-03-11 12:08:30,811 [main:94] - GETTING String from ULongProgression
2021-03-11 12:08:30,823 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@29766726], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:08:30,824 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:08:30,953 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:30,955 [main:105] - GENERATED CALL = (ulongProgression).step.toString(937383453)
2021-03-11 12:08:30,955 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@223b8e4e], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:08:30,955 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:08:31,075 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:31,078 [main:105] - GENERATED CALL = (ulongProgression).first.toString(-1818524958)
2021-03-11 12:08:31,078 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:08:31,078 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:08:31,197 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:31,321 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:31,446 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:31,449 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:31,708 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:08:31,711 [main:95] - GENERATED = StringBuilder("woavn")
2021-03-11 12:08:31,830 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:31,956 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:31,959 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:32,218 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:08:32,220 [main:95] - GENERATED = StringBuilder("lfkfn")
2021-03-11 12:08:32,341 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:32,470 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:32,596 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:08:32,598 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:08:32,603 [main:105] - GENERATED CALL = (ulongProgression).joinToString("xpsob", StringBuilder("woavn"), StringBuilder("lfkfn"), -554586932, StringBuilder(), {a: T -> "abjpb"})
2021-03-11 12:08:32,603 [main:110] - replacement of "summer" of type String is (ulongProgression).joinToString("xpsob", StringBuilder("woavn"), StringBuilder("lfkfn"), -554586932, StringBuilder(), {a: T -> "abjpb"})
2021-03-11 12:08:32,723 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:32,723 [main:66] - Compilation checking started
2021-03-11 12:08:33,062 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when (x) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals((ulongProgression).joinToString("xpsob", StringBuilder("woavn"), StringBuilder("lfkfn"), -554586932, StringBuilder(), {a: T -> "abjpb"}), Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:33,064 [main:103] - replacing (x, Kla2)
2021-03-11 12:08:33,064 [main:38] - replacing x Kla2
2021-03-11 12:08:33,064 [main:42] - Getting value of type Kla2
2021-03-11 12:08:33,185 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:33,187 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:33,187 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla7
2021-03-11 12:08:33,187 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:33,488 [main:55] - randomType = Triple<Kla2, Kla0, ULong>
2021-03-11 12:08:33,610 [main:302] - generating value of type = Triple<Kla2, Kla0, ULong> false depth = 0
2021-03-11 12:08:33,737 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Kla2, second: Kla0, third: ULong): Triple<Kla2, Kla0, ULong> = TODO()
2021-03-11 12:08:33,740 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Kla2, second: Kla0, third: ULong): Triple<Kla2, Kla0, ULong> = TODO()
2021-03-11 12:08:33,865 [main:302] - generating value of type = Kla2 false depth = 3
2021-03-11 12:08:33,867 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:33,867 [main:302] - generating value of type = Kla0 false depth = 3
2021-03-11 12:08:33,869 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:08:33,869 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 12:08:33,871 [main:95] - GENERATED = Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())
2021-03-11 12:08:33,884 [main:66] - Generated call from random type = (Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first
2021-03-11 12:08:33,885 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:33,897 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:33,907 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:33,923 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:33,929 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:33,941 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:33,974 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:33,975 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:33,992 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:34,022 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:34,022 [main:110] - replacement of x of type Kla2 is (Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first
2021-03-11 12:08:34,142 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:34,143 [main:66] - Compilation checking started
2021-03-11 12:08:34,636 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla6))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:34,638 [main:103] - replacing (Kla2.Kla6, Kla2)
2021-03-11 12:08:34,638 [main:38] - replacing Kla2.Kla6 Kla2
2021-03-11 12:08:34,638 [main:42] - Getting value of type Kla2
2021-03-11 12:08:34,832 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:34,836 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:34,836 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla7
2021-03-11 12:08:34,836 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:35,124 [main:55] - randomType = List<Kla2>
2021-03-11 12:08:35,125 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:35,148 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:35,157 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:35,169 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:35,186 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:35,199 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:35,199 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:35,205 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:35,217 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:35,247 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:35,247 [main:110] - replacement of Kla2.Kla6 of type Kla2 is Kla2.Kla7
2021-03-11 12:08:35,369 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:35,369 [main:66] - Compilation checking started
2021-03-11 12:08:35,852 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return "autumn";
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla7))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:35,853 [main:103] - replacing (Kla2.Kla6, Kla2)
2021-03-11 12:08:35,853 [main:38] - replacing Kla2.Kla6 Kla2
2021-03-11 12:08:35,853 [main:42] - Getting value of type Kla2
2021-03-11 12:08:35,980 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:35,982 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:35,982 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla6
2021-03-11 12:08:35,982 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:35,986 [main:55] - randomType = Byte
2021-03-11 12:08:36,111 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:08:36,148 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:36,156 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:36,186 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:36,207 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:36,219 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:36,236 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:36,248 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:36,249 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:36,254 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:36,255 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:36,267 [main:110] - replacement of Kla2.Kla6 of type Kla2 is Kla2.Kla6
2021-03-11 12:08:36,388 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:36,390 [main:103] - replacing ("autumn", String)
2021-03-11 12:08:36,390 [main:38] - replacing "autumn" String
2021-03-11 12:08:36,390 [main:42] - Getting value of type String
2021-03-11 12:08:36,512 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:36,514 [main:46] - GENERATED VALUE OF TYPE String = "bjdoj"
2021-03-11 12:08:36,514 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:37,111 [main:55] - randomType = Triple<Float, Array<Kla1?>, Long>?
2021-03-11 12:08:37,233 [main:302] - generating value of type = Triple<Float, Array<Kla1?>, Long> false depth = 0
2021-03-11 12:08:37,370 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Float, second: Array<Kla1?>, third: Long): Triple<Float, Array<Kla1?>, Long> = TODO()
2021-03-11 12:08:37,373 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Float, second: Array<Kla1?>, third: Long): Triple<Float, Array<Kla1?>, Long> = TODO()
2021-03-11 12:08:37,502 [main:302] - generating value of type = Float true depth = 3
2021-03-11 12:08:37,504 [main:302] - generating value of type = Array<Kla1?> false depth = 3
2021-03-11 12:08:37,633 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Kla1?): Array<Kla1?> = TODO()
2021-03-11 12:08:37,636 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Kla1?): Array<Kla1?> = TODO()
2021-03-11 12:08:37,765 [main:302] - generating value of type = Kla1 false depth = 6
2021-03-11 12:08:37,767 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}
2021-03-11 12:08:37,767 [main:95] - GENERATED = arrayOf<Kla1?>(Kla1())
2021-03-11 12:08:37,767 [main:302] - generating value of type = Long true depth = 3
2021-03-11 12:08:37,770 [main:95] - GENERATED = Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942)
2021-03-11 12:08:37,794 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1106b71]
2021-03-11 12:08:37,795 [main:66] - Generated call from random type = (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString()
2021-03-11 12:08:37,796 [main:94] - GETTING String from ULongProgression
2021-03-11 12:08:37,809 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:08:37,809 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:08:37,932 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:38,061 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:08:38,064 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:08:38,327 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 12:08:38,455 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:08:38,458 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 12:08:38,733 [main:302] - generating value of type = CharSequence false depth = 6
2021-03-11 12:08:38,738 [main:95] - GENERATED = StringBuilder("sonih")
2021-03-11 12:08:38,738 [main:95] - GENERATED = StringBuilder(StringBuilder("sonih"))
2021-03-11 12:08:38,869 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:38,996 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:39,122 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:39,246 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:39,372 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:08:39,374 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:08:39,379 [main:105] - GENERATED CALL = (ulongProgression).joinToString(StringBuilder(StringBuilder("sonih")), "qisfy", "xzems", -805233900, "gekyr", {a: T -> StringBuilder()})
2021-03-11 12:08:39,379 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@29766726], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:08:39,379 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:08:39,501 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:39,503 [main:105] - GENERATED CALL = (ulongProgression).step.toString(-163294845)
2021-03-11 12:08:39,504 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@223b8e4e], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:08:39,504 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:08:39,675 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:39,677 [main:105] - GENERATED CALL = (ulongProgression).first.toString(1571523172)
2021-03-11 12:08:39,677 [main:110] - replacement of "autumn" of type String is (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString()
2021-03-11 12:08:39,798 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:39,799 [main:66] - Compilation checking started
2021-03-11 12:08:40,318 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return "winter_spring"
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla7))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:40,319 [main:103] - replacing ("winter_spring", String)
2021-03-11 12:08:40,319 [main:38] - replacing "winter_spring" String
2021-03-11 12:08:40,319 [main:42] - Getting value of type String
2021-03-11 12:08:40,453 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:40,455 [main:46] - GENERATED VALUE OF TYPE String = "pgxfj"
2021-03-11 12:08:40,456 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:40,460 [main:55] - randomType = UByte
2021-03-11 12:08:40,586 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:08:40,614 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@5da9af2d]
2021-03-11 12:08:40,614 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]
2021-03-11 12:08:40,740 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:40,743 [main:66] - Generated call from random type = (86.toUByte()).toShort().toString(1095302636)
2021-03-11 12:08:40,743 [main:110] - replacement of "winter_spring" of type String is (86.toUByte()).toShort().toString(1095302636)
2021-03-11 12:08:40,867 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:40,868 [main:66] - Compilation checking started
2021-03-11 12:08:41,377 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", Kla3().fu8(Kla2.Kla7))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:41,379 [main:103] - replacing (Kla3().fu8(Kla2.Kla7), String)
2021-03-11 12:08:41,379 [main:38] - replacing Kla3().fu8(Kla2.Kla7) String
2021-03-11 12:08:41,379 [main:42] - Getting value of type String
2021-03-11 12:08:41,539 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:41,541 [main:46] - GENERATED VALUE OF TYPE String = "nosix"
2021-03-11 12:08:41,541 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:41,829 [main:55] - randomType = UShort?
2021-03-11 12:08:41,955 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:08:41,984 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@62948539]
2021-03-11 12:08:41,984 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b52f678]
2021-03-11 12:08:42,115 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:42,117 [main:66] - Generated call from random type = (3968.toUShort())?.toUByte().toString(-598686525)
2021-03-11 12:08:42,117 [main:110] - replacement of Kla3().fu8(Kla2.Kla7) of type String is (3968.toUShort())?.toUByte().toString(-598686525)
2021-03-11 12:08:42,243 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:42,243 [main:66] - Compilation checking started
2021-03-11 12:08:42,774 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals("autumn", (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:42,776 [main:103] - replacing ("autumn", String)
2021-03-11 12:08:42,776 [main:38] - replacing "autumn" String
2021-03-11 12:08:42,776 [main:42] - Getting value of type String
2021-03-11 12:08:42,905 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:42,907 [main:46] - GENERATED VALUE OF TYPE String = "nvoum"
2021-03-11 12:08:42,907 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:43,195 [main:55] - randomType = Double?
2021-03-11 12:08:43,322 [main:302] - generating value of type = Double true depth = 0
2021-03-11 12:08:43,357 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3a077eb]
2021-03-11 12:08:43,358 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]
2021-03-11 12:08:43,358 [main:66] - Generated call from random type = (0.3477862470832853)?.toChar().titlecase()
2021-03-11 12:08:43,358 [main:110] - replacement of "autumn" of type String is (0.3477862470832853)?.toChar().titlecase()
2021-03-11 12:08:43,487 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:43,488 [main:66] - Compilation checking started
2021-03-11 12:08:44,006 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:44,007 [main:103] - replacing ("summer", String)
2021-03-11 12:08:44,007 [main:38] - replacing "summer" String
2021-03-11 12:08:44,007 [main:42] - Getting value of type String
2021-03-11 12:08:44,134 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:44,136 [main:46] - GENERATED VALUE OF TYPE String = "gwdsz"
2021-03-11 12:08:44,136 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:44,285 [main:55] - randomType = Kla0?
2021-03-11 12:08:44,412 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 12:08:44,414 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:08:44,421 [main:94] - GETTING String from UIntProgression
2021-03-11 12:08:44,437 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4d305a8], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]]
2021-03-11 12:08:44,437 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]
2021-03-11 12:08:44,563 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:44,565 [main:105] - GENERATED CALL = (uintProgression).first.toString(49623685)
2021-03-11 12:08:44,566 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:08:44,566 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:08:44,694 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:44,827 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:44,831 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:45,161 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:08:45,163 [main:95] - GENERATED = StringBuilder("abttu")
2021-03-11 12:08:45,289 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:45,421 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:45,552 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:45,555 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:45,826 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:08:45,828 [main:95] - GENERATED = StringBuilder("jnnue")
2021-03-11 12:08:45,954 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:46,082 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:46,214 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:08:46,216 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:08:46,222 [main:105] - GENERATED CALL = (uintProgression).joinToString(StringBuilder("abttu"), "odznw", StringBuilder("jnnue"), -467167078, "tlhop", {a: T -> "ebndy"})
2021-03-11 12:08:46,222 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@1b7cfdd9], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:08:46,222 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:08:46,348 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:46,350 [main:105] - GENERATED CALL = (uintProgression).step.toString(-1083071782)
2021-03-11 12:08:46,350 [main:110] - replacement of "summer" of type String is (uintProgression).joinToString(StringBuilder("abttu"), "odznw", StringBuilder("jnnue"), -467167078, "tlhop", {a: T -> "ebndy"})
2021-03-11 12:08:46,475 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:46,476 [main:66] - Compilation checking started
2021-03-11 12:08:46,844 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (uintProgression).joinToString(StringBuilder("abttu"), "odznw", StringBuilder("jnnue"), -467167078, "tlhop", {a: T -> "ebndy"})
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "winter_spring"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:46,845 [main:103] - replacing ("winter_spring", String)
2021-03-11 12:08:46,845 [main:38] - replacing "winter_spring" String
2021-03-11 12:08:46,845 [main:42] - Getting value of type String
2021-03-11 12:08:46,974 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:46,976 [main:46] - GENERATED VALUE OF TYPE String = "aduzy"
2021-03-11 12:08:46,976 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:46,981 [main:55] - randomType = UByte
2021-03-11 12:08:47,107 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 12:08:47,135 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b52f678]
2021-03-11 12:08:47,261 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:47,264 [main:66] - Generated call from random type = (73.toUByte()).toString(-1954763643)
2021-03-11 12:08:47,265 [main:94] - GETTING String from ULongProgression
2021-03-11 12:08:47,277 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:08:47,277 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:08:47,404 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:47,536 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:47,539 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:47,812 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:08:47,814 [main:95] - GENERATED = StringBuilder("vrgnb")
2021-03-11 12:08:47,941 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:48,079 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:48,210 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:08:48,213 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:08:48,490 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:08:48,492 [main:95] - GENERATED = StringBuilder(682216127)
2021-03-11 12:08:48,618 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:48,745 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:48,875 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:08:48,877 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:08:48,883 [main:105] - GENERATED CALL = (ulongProgression).joinToString(StringBuilder("vrgnb"), "peqcp", StringBuilder(682216127), 422040412, "zopwl", {a: T -> "rrnqq"})
2021-03-11 12:08:48,883 [main:101] - Case = [public final val step: kotlin.Long defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@29766726], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:08:48,883 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:08:49,012 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:49,014 [main:105] - GENERATED CALL = (ulongProgression).step.toString(-1959200359)
2021-03-11 12:08:49,014 [main:101] - Case = [public final val first: kotlin.ULong defined in kotlin.ranges.ULongProgression[DeserializedPropertyDescriptor@223b8e4e], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]]
2021-03-11 12:08:49,014 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@76d3e666]
2021-03-11 12:08:49,141 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:49,143 [main:105] - GENERATED CALL = (ulongProgression).first.toString(1140593485)
2021-03-11 12:08:49,143 [main:110] - replacement of "winter_spring" of type String is "aduzy"
2021-03-11 12:08:49,271 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:08:49,271 [main:66] - Compilation checking started
2021-03-11 12:08:49,805 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla5))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:49,806 [main:103] - replacing (Kla2.Kla5, Kla2)
2021-03-11 12:08:49,806 [main:38] - replacing Kla2.Kla5 Kla2
2021-03-11 12:08:49,806 [main:42] - Getting value of type Kla2
2021-03-11 12:08:49,934 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:49,936 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:49,936 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla7
2021-03-11 12:08:49,936 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:50,293 [main:55] - randomType = LinkedHashSet<UShort>
2021-03-11 12:08:50,420 [main:302] - generating value of type = LinkedHashSet<UShort> false depth = 0
2021-03-11 12:08:50,552 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: UShort): LkedHashSet<UShort> = TODO()
2021-03-11 12:08:50,555 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: UShort): LkedHashSet<UShort> = TODO()
2021-03-11 12:08:50,687 [main:302] - generating value of type = UShort true depth = 3
2021-03-11 12:08:50,689 [main:95] - GENERATED = linkedSetOf<UShort>(985.toUShort())
2021-03-11 12:08:50,802 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:50,819 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:50,832 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:50,845 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:50,875 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:50,887 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:50,896 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:50,918 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:50,919 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:50,920 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:50,926 [main:110] - replacement of Kla2.Kla5 of type Kla2 is Kla2.Kla7
2021-03-11 12:08:51,057 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:51,058 [main:66] - Compilation checking started
2021-03-11 12:08:51,607 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:51,608 [main:103] - replacing (fu8(Kla2.Kla7), String)
2021-03-11 12:08:51,609 [main:38] - replacing fu8(Kla2.Kla7) String
2021-03-11 12:08:51,609 [main:42] - Getting value of type String
2021-03-11 12:08:51,735 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:51,737 [main:46] - GENERATED VALUE OF TYPE String = "inhxt"
2021-03-11 12:08:51,737 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:51,742 [main:55] - randomType = Short
2021-03-11 12:08:51,868 [main:302] - generating value of type = Short true depth = 0
2021-03-11 12:08:51,904 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@35603d9f]
2021-03-11 12:08:51,904 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]
2021-03-11 12:08:51,905 [main:66] - Generated call from random type = (12602).toChar().uppercase()
2021-03-11 12:08:51,905 [main:94] - GETTING String from Function0<String>
2021-03-11 12:08:51,913 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70714d36]]
2021-03-11 12:08:51,913 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:51,914 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70714d36]
2021-03-11 12:08:52,039 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:52,042 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().concat("zfbuf")
2021-03-11 12:08:52,042 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2f70b86a]]
2021-03-11 12:08:52,042 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:52,042 [main:137] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2f70b86a]
2021-03-11 12:08:52,167 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:52,173 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().removePrefix(StringBuilder())
2021-03-11 12:08:52,173 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@88541d6]]
2021-03-11 12:08:52,173 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:52,173 [main:137] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@88541d6]
2021-03-11 12:08:52,300 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:52,428 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:52,431 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().padStart(-2104289701, '➹')
2021-03-11 12:08:52,431 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b52135a]]
2021-03-11 12:08:52,431 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:52,431 [main:137] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b52135a]
2021-03-11 12:08:52,557 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:52,688 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:52,691 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:52,966 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:08:52,969 [main:95] - GENERATED = StringBuilder("iykxa")
2021-03-11 12:08:52,969 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().removeSuffix(StringBuilder("iykxa"))
2021-03-11 12:08:52,969 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]]
2021-03-11 12:08:52,969 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:52,969 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12f8dd34]
2021-03-11 12:08:52,969 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().trimEnd()
2021-03-11 12:08:52,969 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3b9eb815]]
2021-03-11 12:08:52,969 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:52,969 [main:137] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3b9eb815]
2021-03-11 12:08:53,095 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:53,223 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:53,350 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:08:53,353 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().replaceFirst('㐢', '⤭', true)
2021-03-11 12:08:53,353 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@73bcd4e9]]
2021-03-11 12:08:53,353 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:53,353 [main:137] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@73bcd4e9]
2021-03-11 12:08:53,479 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:53,484 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().removeSurrounding("zsxay")
2021-03-11 12:08:53,485 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@ec83a56]]
2021-03-11 12:08:53,485 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:53,485 [main:137] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@ec83a56]
2021-03-11 12:08:53,611 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:08:53,739 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:53,741 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().substringBefore('ၑ', "yzivl")
2021-03-11 12:08:53,741 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e1e5232]]
2021-03-11 12:08:53,741 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:53,741 [main:137] - GENERATING call of type public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e1e5232]
2021-03-11 12:08:53,868 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 12:08:53,870 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:08:53,872 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().filterNot({a: Char -> true})
2021-03-11 12:08:53,872 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]]
2021-03-11 12:08:53,872 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:08:53,872 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke()
2021-03-11 12:08:53,873 [main:110] - replacement of fu8(Kla2.Kla7) of type String is ({ "ebdjj"}).invoke().replaceFirst('㐢', '⤭', true)
2021-03-11 12:08:53,998 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:53,998 [main:66] - Compilation checking started
2021-03-11 12:08:54,352 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.({ "ebdjj"}).invoke().replaceFirst('㐢', '⤭', true))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla6))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:54,354 [main:103] - replacing (Kla2.Kla6, Kla2)
2021-03-11 12:08:54,354 [main:38] - replacing Kla2.Kla6 Kla2
2021-03-11 12:08:54,354 [main:42] - Getting value of type Kla2
2021-03-11 12:08:54,484 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:54,486 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:54,486 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla5
2021-03-11 12:08:54,486 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:54,786 [main:55] - randomType = Set<Boolean?>
2021-03-11 12:08:54,787 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:54,807 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:54,837 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:54,846 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:54,859 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:54,871 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:54,888 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:54,925 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:54,931 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:54,932 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:54,932 [main:110] - replacement of Kla2.Kla6 of type Kla2 is Kla2.Kla5
2021-03-11 12:08:55,068 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:55,068 [main:66] - Compilation checking started
2021-03-11 12:08:55,616 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla5))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:55,617 [main:103] - replacing (Kla5, Kla2)
2021-03-11 12:08:55,618 [main:38] - replacing Kla5 Kla2
2021-03-11 12:08:55,618 [main:42] - Getting value of type Kla2
2021-03-11 12:08:55,750 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:55,752 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:55,752 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla6
2021-03-11 12:08:55,752 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:56,054 [main:55] - randomType = Pair<UInt?, String>
2021-03-11 12:08:56,180 [main:302] - generating value of type = Pair<UInt?, String> false depth = 0
2021-03-11 12:08:56,311 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: UInt?, second: String): Pair<UInt?, String> = TODO()
2021-03-11 12:08:56,314 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: UInt?, second: String): Pair<UInt?, String> = TODO()
2021-03-11 12:08:56,444 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 12:08:56,446 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:08:56,448 [main:95] - GENERATED = Pair<UInt?, String>(1196666903.toUInt(), "stkue")
2021-03-11 12:08:56,461 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:56,490 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:56,507 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:56,516 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:56,528 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:56,533 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:56,547 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:56,569 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:56,570 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:56,582 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:56,582 [main:110] - replacement of Kla5 of type Kla2 is Kla2.Kla6
2021-03-11 12:08:56,706 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:56,707 [main:66] - Compilation checking started
2021-03-11 12:08:57,070 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla2.Kla6 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla5 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla5))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:57,071 [main:103] - replacing (Kla2.Kla5, Kla2)
2021-03-11 12:08:57,072 [main:38] - replacing Kla2.Kla5 Kla2
2021-03-11 12:08:57,072 [main:42] - Getting value of type Kla2
2021-03-11 12:08:57,199 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:08:57,201 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:08:57,201 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla7
2021-03-11 12:08:57,201 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:57,210 [main:55] - randomType = Kla1
2021-03-11 12:08:57,336 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:08:57,339 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}
2021-03-11 12:08:57,346 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:08:57,358 [main:94] - GETTING Kla2 from Char
2021-03-11 12:08:57,376 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:57,388 [main:94] - GETTING Kla2 from Int
2021-03-11 12:08:57,418 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:08:57,423 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:08:57,445 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:57,453 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:08:57,453 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:08:57,467 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:08:57,467 [main:110] - replacement of Kla2.Kla5 of type Kla2 is Kla2.Kla7
2021-03-11 12:08:57,591 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:08:57,592 [main:66] - Compilation checking started
2021-03-11 12:08:58,104 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("winter_spring", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla5))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:08:58,105 [main:103] - replacing ("winter_spring", String)
2021-03-11 12:08:58,106 [main:38] - replacing "winter_spring" String
2021-03-11 12:08:58,106 [main:42] - Getting value of type String
2021-03-11 12:08:58,234 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:08:58,236 [main:46] - GENERATED VALUE OF TYPE String = "ukdqv"
2021-03-11 12:08:58,237 [main:49] - GENERATED IS CALL =false
2021-03-11 12:08:58,245 [main:55] - randomType = Kla0
2021-03-11 12:08:58,374 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 12:08:58,376 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:08:58,383 [main:94] - GETTING String from UIntProgression
2021-03-11 12:08:58,399 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:08:58,399 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:08:58,525 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:58,661 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:58,793 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:58,796 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:08:59,078 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:08:59,080 [main:95] - GENERATED = StringBuilder("uxxxu")
2021-03-11 12:08:59,205 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:59,337 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:59,466 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:08:59,598 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:08:59,600 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:08:59,605 [main:105] - GENERATED CALL = (uintProgression).joinToString("wtkga", StringBuilder("uxxxu"), "ivnuj", -1866356644, "efsdt", {a: T -> "ltijq"})
2021-03-11 12:08:59,605 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@1b7cfdd9], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:08:59,605 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:08:59,733 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:59,736 [main:105] - GENERATED CALL = (uintProgression).step.toString(-867298941)
2021-03-11 12:08:59,736 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4d305a8], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]]
2021-03-11 12:08:59,736 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]
2021-03-11 12:08:59,864 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:08:59,866 [main:105] - GENERATED CALL = (uintProgression).first.toString(451351116)
2021-03-11 12:08:59,868 [main:110] - replacement of "winter_spring" of type String is "ukdqv"
2021-03-11 12:08:59,995 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:08:59,995 [main:66] - Compilation checking started
2021-03-11 12:09:00,535 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla5))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:00,536 [main:103] - replacing (prope4, Kla3)
2021-03-11 12:09:00,536 [main:38] - replacing prope4 Kla3
2021-03-11 12:09:00,536 [main:42] - Getting value of type Kla3
2021-03-11 12:09:00,661 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:09:00,664 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}
2021-03-11 12:09:00,664 [main:46] - GENERATED VALUE OF TYPE Kla3 = Kla3()
2021-03-11 12:09:00,664 [main:49] - GENERATED IS CALL =true
2021-03-11 12:09:00,672 [main:55] - randomType = Kla3
2021-03-11 12:09:00,799 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:09:00,801 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}
2021-03-11 12:09:00,806 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:09:00,816 [main:94] - GETTING Kla3 from Int
2021-03-11 12:09:00,850 [main:94] - GETTING Kla3 from UIntProgression
2021-03-11 12:09:00,863 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:09:00,875 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:09:00,876 [main:94] - GETTING Kla3 from Char
2021-03-11 12:09:00,893 [main:94] - GETTING Kla3 from Kla1
2021-03-11 12:09:00,899 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:09:00,899 [main:94] - GETTING Kla3 from ULong
2021-03-11 12:09:00,922 [main:94] - GETTING Kla3 from Function0<Nothing?>
2021-03-11 12:09:00,934 [main:110] - replacement of prope4 of type Kla3 is Kla3()
2021-03-11 12:09:01,059 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:09:01,059 [main:66] - Compilation checking started
2021-03-11 12:09:01,560 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", Kla3().fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla5))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:01,561 [main:103] - replacing (Kla2.Kla6, Kla2)
2021-03-11 12:09:01,561 [main:38] - replacing Kla2.Kla6 Kla2
2021-03-11 12:09:01,561 [main:42] - Getting value of type Kla2
2021-03-11 12:09:01,694 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:09:01,696 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:09:01,696 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla6
2021-03-11 12:09:01,697 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:01,701 [main:55] - randomType = Boolean
2021-03-11 12:09:01,828 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 12:09:01,841 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:09:01,853 [main:94] - GETTING Kla2 from Int
2021-03-11 12:09:01,883 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:09:01,896 [main:94] - GETTING Kla2 from Char
2021-03-11 12:09:01,912 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:09:01,922 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:09:01,934 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:09:01,956 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:09:01,956 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:09:01,957 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:09:01,962 [main:110] - replacement of Kla2.Kla6 of type Kla2 is Kla2.Kla6
2021-03-11 12:09:02,087 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:02,088 [main:103] - replacing ("summer", String)
2021-03-11 12:09:02,088 [main:38] - replacing "summer" String
2021-03-11 12:09:02,089 [main:42] - Getting value of type String
2021-03-11 12:09:02,214 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:02,216 [main:46] - GENERATED VALUE OF TYPE String = "dtgmd"
2021-03-11 12:09:02,216 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:02,225 [main:55] - randomType = Kla2
2021-03-11 12:09:02,351 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:09:02,353 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:09:02,372 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d8ba384]
2021-03-11 12:09:02,372 [main:66] - Generated call from random type = (Kla2.Kla5).name.reversed()
2021-03-11 12:09:02,373 [main:94] - GETTING String from Kla1
2021-03-11 12:09:02,378 [main:94] - GETTING String from Function0<Nothing?>
2021-03-11 12:09:02,392 [main:94] - GETTING String from Char
2021-03-11 12:09:02,407 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]]
2021-03-11 12:09:02,408 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]
2021-03-11 12:09:02,408 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).lowercase()
2021-03-11 12:09:02,408 [main:101] - Case = [public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@56b7fcf6], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:09:02,408 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@56b7fcf6]
2021-03-11 12:09:02,534 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:09:02,536 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:09:02,662 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:02,664 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).compareTo('?').toString(556678172)
2021-03-11 12:09:02,665 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]]
2021-03-11 12:09:02,665 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]
2021-03-11 12:09:02,665 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).titlecase()
2021-03-11 12:09:02,665 [main:101] - Case = [public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@1b3ea198], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]]
2021-03-11 12:09:02,665 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@1b3ea198]
2021-03-11 12:09:02,665 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]
2021-03-11 12:09:02,793 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:02,795 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).toByte().toString(-1100085670)
2021-03-11 12:09:02,795 [main:101] - Case = [public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@52f6f7c0], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]]
2021-03-11 12:09:02,795 [main:137] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@52f6f7c0]
2021-03-11 12:09:02,795 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]
2021-03-11 12:09:02,924 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:02,927 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).toShort().toString(569518065)
2021-03-11 12:09:02,927 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]]
2021-03-11 12:09:02,927 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]
2021-03-11 12:09:03,053 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:03,056 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).plus("ifbdg")
2021-03-11 12:09:03,056 [main:101] - Case = [public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@636671c1], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:09:03,056 [main:137] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@636671c1]
2021-03-11 12:09:03,056 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:09:03,184 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:03,187 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).toLong().toString(786052519)
2021-03-11 12:09:03,187 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]]
2021-03-11 12:09:03,187 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]
2021-03-11 12:09:03,187 [main:105] - GENERATED CALL = (fu1<Char>({ '㥩'})).uppercase()
2021-03-11 12:09:03,187 [main:110] - replacement of "summer" of type String is (fu1<Char>({ '㥩'})).titlecase()
2021-03-11 12:09:03,313 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:03,313 [main:66] - Compilation checking started
2021-03-11 12:09:03,839 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (x) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", Kla3().fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla5))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:03,840 [main:103] - replacing (x, Kla2)
2021-03-11 12:09:03,841 [main:38] - replacing x Kla2
2021-03-11 12:09:03,841 [main:42] - Getting value of type Kla2
2021-03-11 12:09:03,969 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:09:03,971 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:09:03,971 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla6
2021-03-11 12:09:03,972 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:03,976 [main:55] - randomType = UInt
2021-03-11 12:09:04,103 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 12:09:04,131 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:09:04,145 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:09:04,150 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:09:04,150 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:09:04,164 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:09:04,177 [main:94] - GETTING Kla2 from Char
2021-03-11 12:09:04,193 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:09:04,203 [main:94] - GETTING Kla2 from Int
2021-03-11 12:09:04,233 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:09:04,234 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:09:04,254 [main:110] - replacement of x of type Kla2 is Kla2.Kla6
2021-03-11 12:09:04,382 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:04,382 [main:66] - Compilation checking started
2021-03-11 12:09:04,913 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", Kla3().fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla5))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:04,914 [main:103] - replacing ({ x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }, Function1<Kla2, String>)
2021-03-11 12:09:04,914 [main:38] - replacing { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        } Function1<Kla2, String>
2021-03-11 12:09:04,914 [main:42] - Getting value of type Function1<Kla2, String>
2021-03-11 12:09:05,040 [main:302] - generating value of type = Function1<Kla2, String> false depth = 0
2021-03-11 12:09:05,043 [main:302] - generating value of type = String true depth = 1
2021-03-11 12:09:05,045 [main:46] - GENERATED VALUE OF TYPE Function1<Kla2, String> = {a: Kla2 -> "gitce"}
2021-03-11 12:09:05,045 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:05,054 [main:55] - randomType = Kla3
2021-03-11 12:09:05,180 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:09:05,183 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        }
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}
2021-03-11 12:09:05,188 [main:94] - GETTING Function1<Kla2, String> from Function0<String>
2021-03-11 12:09:05,198 [main:94] - GETTING Function1<Kla2, String> from Function0<String>
2021-03-11 12:09:05,199 [main:94] - GETTING Function1<Kla2, String> from ULong
2021-03-11 12:09:05,222 [main:94] - GETTING Function1<Kla2, String> from UIntProgression
2021-03-11 12:09:05,235 [main:94] - GETTING Function1<Kla2, String> from Kla1
2021-03-11 12:09:05,242 [main:94] - GETTING Function1<Kla2, String> from Function0<Nothing?>
2021-03-11 12:09:05,255 [main:94] - GETTING Function1<Kla2, String> from ULongProgression
2021-03-11 12:09:05,268 [main:94] - GETTING Function1<Kla2, String> from Char
2021-03-11 12:09:05,286 [main:94] - GETTING Function1<Kla2, String> from ULongProgression
2021-03-11 12:09:05,287 [main:94] - GETTING Function1<Kla2, String> from Int
2021-03-11 12:09:05,317 [main:110] - replacement of { x ->
            when ((Triple<Kla2, Kla0, ULong>(Kla2.Kla5, Kla0(), 5374581144006635934.toULong())).first) {
                Kla2.Kla4, Kla2.Kla4 -> "aduzy"
                Kla2.Kla5 -> (ulongProgression).step.toString(39577017)
                Kla2.Kla6 -> "summer"
                else -> (fu3(2129972429, { 161364729})).toByte().toString(-1500564733)
            }
        } of type Function1<Kla2, String> is {a: Kla2 -> "gitce"}
2021-03-11 12:09:05,483 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:09:05,483 [main:66] - Compilation checking started
2021-03-11 12:09:05,980 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) {a: Kla2 -> "gitce"}
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", Kla3().fu8(Kla2.Kla7))
    assertEquals("winter_spring", prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla5))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:05,980 [main:103] - replacing ("winter_spring", String)
2021-03-11 12:09:05,981 [main:38] - replacing "winter_spring" String
2021-03-11 12:09:05,981 [main:42] - Getting value of type String
2021-03-11 12:09:06,104 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:06,106 [main:46] - GENERATED VALUE OF TYPE String = "cgqbm"
2021-03-11 12:09:06,106 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:06,265 [main:55] - randomType = HashMap<Kla1, Kla1?>
2021-03-11 12:09:06,388 [main:302] - generating value of type = HashMap<Kla1, Kla1?> false depth = 0
2021-03-11 12:09:06,516 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): HashMap<Kla1, Kla1?> = TODO()
2021-03-11 12:09:06,519 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): HashMap<Kla1, Kla1?> = TODO()
2021-03-11 12:09:06,647 [main:95] - GENERATED = linkedMapOf<Kla1, Kla1?>()
2021-03-11 12:09:06,736 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:09:06,857 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:06,859 [main:66] - Generated call from random type = (linkedMapOf<Kla1, Kla1?>()).size.toString(562273165)
2021-03-11 12:09:06,860 [main:94] - GETTING String from Int
2021-03-11 12:09:06,890 [main:101] - Case = [@kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:09:06,890 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:09:07,012 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:07,014 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toString(1610246877)
2021-03-11 12:09:07,014 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:09:07,014 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7]
2021-03-11 12:09:07,136 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:09:07,138 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:09:07,258 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:07,260 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).div(6047304894395938826).toString(1611141673)
2021-03-11 12:09:07,260 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]]
2021-03-11 12:09:07,260 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:09:07,260 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]
2021-03-11 12:09:07,261 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().titlecase()
2021-03-11 12:09:07,261 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:09:07,261 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437]
2021-03-11 12:09:07,261 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:09:07,381 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:07,383 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toInt().toString(57158947)
2021-03-11 12:09:07,383 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:09:07,383 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360]
2021-03-11 12:09:07,383 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:09:07,505 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:07,507 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toLong().toString(2059712549)
2021-03-11 12:09:07,507 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]]
2021-03-11 12:09:07,507 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd]
2021-03-11 12:09:07,507 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]
2021-03-11 12:09:07,628 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:07,630 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toByte().toString(517534956)
2021-03-11 12:09:07,630 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]]
2021-03-11 12:09:07,630 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596]
2021-03-11 12:09:07,630 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]
2021-03-11 12:09:07,752 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:07,754 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toShort().toString(1621305286)
2021-03-11 12:09:07,754 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@21b5dbc], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:09:07,754 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@21b5dbc]
2021-03-11 12:09:07,878 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:07,880 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:09:08,001 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:08,003 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).compareTo(811406392).toString(2026625460)
2021-03-11 12:09:08,003 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]]
2021-03-11 12:09:08,004 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:09:08,004 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]
2021-03-11 12:09:08,004 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().lowercase()
2021-03-11 12:09:08,004 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]]
2021-03-11 12:09:08,004 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:09:08,004 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]
2021-03-11 12:09:08,125 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:08,127 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().plus("pglxj")
2021-03-11 12:09:08,127 [main:110] - replacement of "winter_spring" of type String is (fu3(2129972429, { 161364729})).toChar().lowercase()
2021-03-11 12:09:08,248 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:08,249 [main:66] - Compilation checking started
2021-03-11 12:09:08,749 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) {a: Kla2 -> "gitce"}
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", Kla3().fu8(Kla2.Kla7))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", Kla3().fu9(Kla2.Kla5))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:08,750 [main:103] - replacing (Kla3().fu9(Kla2.Kla5), String)
2021-03-11 12:09:08,751 [main:38] - replacing Kla3().fu9(Kla2.Kla5) String
2021-03-11 12:09:08,751 [main:42] - Getting value of type String
2021-03-11 12:09:08,877 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:08,879 [main:46] - GENERATED VALUE OF TYPE String = "udxrc"
2021-03-11 12:09:08,879 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:09,020 [main:55] - randomType = Long?
2021-03-11 12:09:09,145 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:09:09,180 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437]
2021-03-11 12:09:09,181 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:09:09,304 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:09,306 [main:66] - Generated call from random type = (6945579553642657895)?.toInt().toString(-2142734969)
2021-03-11 12:09:09,307 [main:94] - GETTING String from Function0<String>
2021-03-11 12:09:09,317 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f75e331]]
2021-03-11 12:09:09,317 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:09,317 [main:137] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f75e331]
2021-03-11 12:09:09,441 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:09,567 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:09:09,569 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔')
2021-03-11 12:09:09,569 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b52135a]]
2021-03-11 12:09:09,569 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:09,569 [main:137] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@b52135a]
2021-03-11 12:09:09,694 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:09:09,699 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().removeSuffix("tqytj")
2021-03-11 12:09:09,699 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12a0add8]]
2021-03-11 12:09:09,699 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:09,699 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@12a0add8]
2021-03-11 12:09:09,822 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:09:09,946 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:10,070 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:10,072 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().replaceAfter('', "uykic", "rjxkj")
2021-03-11 12:09:10,072 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@212dee0d]]
2021-03-11 12:09:10,072 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:10,072 [main:137] - GENERATING call of type public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@212dee0d]
2021-03-11 12:09:10,195 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:09:10,320 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:10,446 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:10,448 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().replaceBeforeLast('', "waaxk", "yuqpr")
2021-03-11 12:09:10,448 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@77cf9c04]]
2021-03-11 12:09:10,448 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:10,448 [main:137] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@77cf9c04]
2021-03-11 12:09:10,448 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().decapitalize()
2021-03-11 12:09:10,448 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f91bb1c]]
2021-03-11 12:09:10,448 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:10,448 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f91bb1c]
2021-03-11 12:09:10,615 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:10,740 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:10,865 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:09:10,870 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().replaceRange(-24272055, -1705637151, "vqnjl")
2021-03-11 12:09:10,870 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@372657c0]]
2021-03-11 12:09:10,870 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:10,870 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@372657c0]
2021-03-11 12:09:10,870 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().uppercase()
2021-03-11 12:09:10,870 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5da6971c]]
2021-03-11 12:09:10,870 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:10,870 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5da6971c]
2021-03-11 12:09:10,870 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().toLowerCase()
2021-03-11 12:09:10,870 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f6c8f16]]
2021-03-11 12:09:10,870 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:10,870 [main:137] - GENERATING call of type public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1f6c8f16]
2021-03-11 12:09:10,993 [main:302] - generating value of type = Char true depth = 0
2021-03-11 12:09:11,117 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:11,119 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().substringAfterLast('俇', "kkplc")
2021-03-11 12:09:11,120 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8], public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@49ba7b20]]
2021-03-11 12:09:11,120 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@2c4ac0d8]
2021-03-11 12:09:11,120 [main:137] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@49ba7b20]
2021-03-11 12:09:11,242 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 12:09:11,244 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 12:09:11,246 [main:105] - GENERATED CALL = ({ "ebdjj"}).invoke().dropLastWhile({a: Char -> false})
2021-03-11 12:09:11,246 [main:110] - replacement of Kla3().fu9(Kla2.Kla5) of type String is ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔')
2021-03-11 12:09:11,368 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:11,368 [main:66] - Compilation checking started
2021-03-11 12:09:11,878 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) {a: Kla2 -> "gitce"}
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", Kla3().fu8(Kla2.Kla7))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), prope4.fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:11,879 [main:103] - replacing (prope4, Kla3)
2021-03-11 12:09:11,879 [main:38] - replacing prope4 Kla3
2021-03-11 12:09:11,879 [main:42] - Getting value of type Kla3
2021-03-11 12:09:12,003 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:09:12,005 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) {a: Kla2 -> "gitce"}
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}
2021-03-11 12:09:12,005 [main:46] - GENERATED VALUE OF TYPE Kla3 = Kla3()
2021-03-11 12:09:12,005 [main:49] - GENERATED IS CALL =true
2021-03-11 12:09:12,017 [main:55] - randomType = Kla1?
2021-03-11 12:09:12,140 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 12:09:12,142 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}
2021-03-11 12:09:12,148 [main:94] - GETTING Kla3 from UIntProgression
2021-03-11 12:09:12,161 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:09:12,174 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:09:12,183 [main:94] - GETTING Kla3 from Char
2021-03-11 12:09:12,200 [main:94] - GETTING Kla3 from ULong
2021-03-11 12:09:12,222 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 12:09:12,222 [main:94] - GETTING Kla3 from ULongProgression
2021-03-11 12:09:12,223 [main:94] - GETTING Kla3 from Function0<Nothing?>
2021-03-11 12:09:12,237 [main:94] - GETTING Kla3 from Int
2021-03-11 12:09:12,268 [main:94] - GETTING Kla3 from Kla1
2021-03-11 12:09:12,273 [main:110] - replacement of prope4 of type Kla3 is Kla3()
2021-03-11 12:09:12,395 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:09:12,395 [main:66] - Compilation checking started
2021-03-11 12:09:12,902 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) {a: Kla2 -> "gitce"}
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", Kla3().fu8(Kla2.Kla7))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:12,902 [main:103] - replacing (Kla4, Kla2)
2021-03-11 12:09:12,903 [main:38] - replacing Kla4 Kla2
2021-03-11 12:09:12,903 [main:42] - Getting value of type Kla2
2021-03-11 12:09:13,027 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:09:13,029 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:09:13,029 [main:46] - GENERATED VALUE OF TYPE Kla2 = Kla2.Kla5
2021-03-11 12:09:13,029 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:13,614 [main:55] - randomType = Function1<ArrayDeque<Kla2>, Function2<Kla2?, Kla1?, Int>>
2021-03-11 12:09:13,614 [main:94] - GETTING Kla2 from Int
2021-03-11 12:09:13,648 [main:94] - GETTING Kla2 from Kla1
2021-03-11 12:09:13,653 [main:94] - GETTING Kla2 from Function0<Nothing?>
2021-03-11 12:09:13,665 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:09:13,678 [main:94] - GETTING Kla2 from UIntProgression
2021-03-11 12:09:13,690 [main:94] - GETTING Kla2 from Char
2021-03-11 12:09:13,708 [main:94] - GETTING Kla2 from ULong
2021-03-11 12:09:13,729 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:09:13,738 [main:94] - GETTING Kla2 from Function0<String>
2021-03-11 12:09:13,738 [main:94] - GETTING Kla2 from ULongProgression
2021-03-11 12:09:13,739 [main:110] - replacement of Kla4 of type Kla2 is Kla2.Kla5
2021-03-11 12:09:13,861 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:13,861 [main:66] - Compilation checking started
2021-03-11 12:09:14,205 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla2.Kla5, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) {a: Kla2 -> "gitce"}
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", Kla3().fu8(Kla2.Kla7))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:14,206 [main:103] - replacing (Kla3().fu8(Kla2.Kla7), String)
2021-03-11 12:09:14,207 [main:38] - replacing Kla3().fu8(Kla2.Kla7) String
2021-03-11 12:09:14,207 [main:42] - Getting value of type String
2021-03-11 12:09:14,329 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:14,331 [main:46] - GENERATED VALUE OF TYPE String = "htuyh"
2021-03-11 12:09:14,331 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:14,473 [main:55] - randomType = Kla2?
2021-03-11 12:09:14,599 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 12:09:14,601 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:09:14,629 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70714d36]
2021-03-11 12:09:14,754 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:14,756 [main:66] - Generated call from random type = (Kla2.Kla7)?.name.concat("ckhqy")
2021-03-11 12:09:14,757 [main:94] - GETTING String from Int
2021-03-11 12:09:14,790 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]]
2021-03-11 12:09:14,790 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:09:14,790 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9621210]
2021-03-11 12:09:14,790 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().uppercase()
2021-03-11 12:09:14,790 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]]
2021-03-11 12:09:14,790 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:09:14,790 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e18fa7d]
2021-03-11 12:09:14,790 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().titlecase()
2021-03-11 12:09:14,791 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:09:14,791 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3fa3b360]
2021-03-11 12:09:14,791 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:09:14,914 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:14,916 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toLong().toString(-180289134)
2021-03-11 12:09:14,916 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@21b5dbc], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:09:14,916 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@21b5dbc]
2021-03-11 12:09:15,040 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:15,042 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:09:15,164 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:15,166 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).compareTo(2061490182).toString(-1867656601)
2021-03-11 12:09:15,166 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]]
2021-03-11 12:09:15,166 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@623fb8e7]
2021-03-11 12:09:15,288 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:09:15,290 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@72582115]
2021-03-11 12:09:15,412 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:15,414 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).div(-7176531731295330520).toString(-945159447)
2021-03-11 12:09:15,415 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:09:15,415 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@33d11437]
2021-03-11 12:09:15,415 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:09:15,537 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:15,539 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toInt().toString(-491123595)
2021-03-11 12:09:15,539 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]]
2021-03-11 12:09:15,539 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@60e858cd]
2021-03-11 12:09:15,539 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e988b6c]
2021-03-11 12:09:15,661 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:15,663 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toByte().toString(190661650)
2021-03-11 12:09:15,664 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]]
2021-03-11 12:09:15,664 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:09:15,664 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@410b61df]
2021-03-11 12:09:15,827 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:15,829 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().plus("pjrad")
2021-03-11 12:09:15,829 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]]
2021-03-11 12:09:15,829 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2c14eb95]
2021-03-11 12:09:15,829 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e06648]
2021-03-11 12:09:15,829 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toChar().lowercase()
2021-03-11 12:09:15,829 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]]
2021-03-11 12:09:15,829 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4ff25596]
2021-03-11 12:09:15,829 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@671c69b1]
2021-03-11 12:09:15,951 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:15,953 [main:105] - GENERATED CALL = (fu3(2129972429, { 161364729})).toShort().toString(-1492832219)
2021-03-11 12:09:15,953 [main:110] - replacement of Kla3().fu8(Kla2.Kla7) of type String is (fu3(2129972429, { 161364729})).toShort().toString(-1492832219)
2021-03-11 12:09:16,075 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:16,076 [main:66] - Compilation checking started
2021-03-11 12:09:16,567 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return fu10(Kla2.Kla4) {a: Kla2 -> "gitce"}
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:16,568 [main:103] - replacing (fu10(Kla2.Kla4) {a: Kla2 -> "gitce"}, String)
2021-03-11 12:09:16,569 [main:38] - replacing fu10(Kla2.Kla4) {a: Kla2 -> "gitce"} String
2021-03-11 12:09:16,569 [main:42] - Getting value of type String
2021-03-11 12:09:16,693 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:09:16,695 [main:46] - GENERATED VALUE OF TYPE String = "yocar"
2021-03-11 12:09:16,695 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:16,974 [main:55] - randomType = LinkedHashSet<Short>
2021-03-11 12:09:17,098 [main:302] - generating value of type = LinkedHashSet<Short> false depth = 0
2021-03-11 12:09:17,226 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Short): LkedHashSet<Short> = TODO()
2021-03-11 12:09:17,229 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Short): LkedHashSet<Short> = TODO()
2021-03-11 12:09:17,356 [main:302] - generating value of type = Short true depth = 3
2021-03-11 12:09:17,359 [main:95] - GENERATED = linkedSetOf<Short>(24243)
2021-03-11 12:09:17,467 [main:137] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.LinkedHashSet[DeserializedSimpleFunctionDescriptor@61ce3195]
2021-03-11 12:09:17,467 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1106b71]
2021-03-11 12:09:17,467 [main:66] - Generated call from random type = (linkedSetOf<Short>(24243)).toArray().contentDeepToString()
2021-03-11 12:09:17,468 [main:94] - GETTING String from UIntProgression
2021-03-11 12:09:17,480 [main:101] - Case = [public final val first: kotlin.UInt defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@4d305a8], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]]
2021-03-11 12:09:17,480 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@75a62cae]
2021-03-11 12:09:17,603 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:17,605 [main:105] - GENERATED CALL = (uintProgression).first.toString(1699010763)
2021-03-11 12:09:17,605 [main:101] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]]
2021-03-11 12:09:17,605 [main:137] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1339f9e0]
2021-03-11 12:09:17,729 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:09:17,856 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:09:17,983 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:09:18,112 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:18,237 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:09:18,365 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:09:18,367 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:09:18,494 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:09:18,497 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 12:09:18,761 [main:302] - generating value of type = Int true depth = 4
2021-03-11 12:09:18,764 [main:95] - GENERATED = StringBuilder(2129456480)
2021-03-11 12:09:18,764 [main:105] - GENERATED CALL = (uintProgression).joinToString("zufgz", "apkra", StringBuilder(), -2034106682, "hmlhm", {a: T -> StringBuilder(2129456480)})
2021-03-11 12:09:18,764 [main:101] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.UIntProgression[DeserializedPropertyDescriptor@1b7cfdd9], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]]
2021-03-11 12:09:18,764 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3d9d6aa1]
2021-03-11 12:09:18,887 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:18,889 [main:105] - GENERATED CALL = (uintProgression).step.toString(1714203425)
2021-03-11 12:09:18,889 [main:110] - replacement of fu10(Kla2.Kla4) {a: Kla2 -> "gitce"} of type String is (uintProgression).first.toString(1699010763)
2021-03-11 12:09:19,012 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:19,013 [main:66] - Compilation checking started
2021-03-11 12:09:19,504 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(-510766703))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:19,635 [main:137] - TRYING TO REPLACE CONSTANT 510766703
2021-03-11 12:09:19,759 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:19,759 [main:66] - Compilation checking started
2021-03-11 12:09:20,249 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(-391599701)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:20,250 [main:137] - TRYING TO REPLACE CONSTANT 391599701
2021-03-11 12:09:20,372 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:20,372 [main:66] - Compilation checking started
2021-03-11 12:09:20,895 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '㥩'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:20,895 [main:137] - TRYING TO REPLACE CONSTANT '㥩'
2021-03-11 12:09:21,059 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(CHARACTER_CONSTANT)
2021-03-11 12:09:21,059 [main:66] - Compilation checking started
2021-03-11 12:09:21,564 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(58596772)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:21,564 [main:137] - TRYING TO REPLACE CONSTANT 58596772
2021-03-11 12:09:21,688 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:21,688 [main:66] - Compilation checking started
2021-03-11 12:09:22,196 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(120.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:22,197 [main:137] - TRYING TO REPLACE CONSTANT 120
2021-03-11 12:09:22,326 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:22,326 [main:66] - Compilation checking started
2021-03-11 12:09:22,819 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(2129972429, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:22,819 [main:137] - TRYING TO REPLACE CONSTANT 2129972429
2021-03-11 12:09:22,946 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:22,946 [main:66] - Compilation checking started
2021-03-11 12:09:23,444 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { 161364729})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:23,444 [main:137] - TRYING TO REPLACE CONSTANT 161364729
2021-03-11 12:09:23,570 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 12:09:23,570 [main:66] - Compilation checking started
2021-03-11 12:09:24,062 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(-1638910909))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:24,062 [main:137] - TRYING TO REPLACE CONSTANT 1638910909
2021-03-11 12:09:24,188 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:24,188 [main:66] - Compilation checking started
2021-03-11 12:09:24,671 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.63783723f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:24,671 [main:137] - TRYING TO REPLACE CONSTANT 0.63783723f
2021-03-11 12:09:24,796 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(FLOAT_CONSTANT)
2021-03-11 12:09:24,796 [main:66] - Compilation checking started
2021-03-11 12:09:25,287 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), -8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:25,287 [main:137] - TRYING TO REPLACE CONSTANT 8952740062004656942
2021-03-11 12:09:25,411 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:25,411 [main:66] - Compilation checking started
2021-03-11 12:09:25,904 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:25,905 [main:137] - TRYING TO REPLACE CONSTANT 86
2021-03-11 12:09:26,031 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 12:09:26,031 [main:66] - Compilation checking started
2021-03-11 12:09:26,378 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (-1492832219.toUByte()).toShort().toString(1095302636)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:26,379 [main:137] - TRYING TO REPLACE CONSTANT 1095302636
2021-03-11 12:09:26,543 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:26,544 [main:66] - Compilation checking started
2021-03-11 12:09:27,026 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:27,026 [main:137] - TRYING TO REPLACE CONSTANT 3968
2021-03-11 12:09:27,150 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-11 12:09:27,150 [main:66] - Compilation checking started
2021-03-11 12:09:27,494 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (toInt().toUShort())?.toUByte().toString(-598686525))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:27,494 [main:137] - TRYING TO REPLACE CONSTANT 598686525
2021-03-11 12:09:27,617 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 12:09:27,618 [main:66] - Compilation checking started
2021-03-11 12:09:28,098 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals((0.3477862470832853)?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:28,099 [main:137] - TRYING TO REPLACE CONSTANT 0.3477862470832853
2021-03-11 12:09:28,223 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(PARENTHESIZED)
2021-03-11 12:09:28,223 [main:66] - Compilation checking started
2021-03-11 12:09:28,707 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ '㥩'})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:28,707 [main:137] - TRYING TO REPLACE CONSTANT '㥩'
2021-03-11 12:09:28,833 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(PARENTHESIZED)
2021-03-11 12:09:28,833 [main:66] - Compilation checking started
2021-03-11 12:09:29,339 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(2129972429, { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:29,340 [main:137] - TRYING TO REPLACE CONSTANT 2129972429
2021-03-11 12:09:29,471 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-11 12:09:29,471 [main:66] - Compilation checking started
2021-03-11 12:09:29,969 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(fu3(7, { -510766703}), { 161364729})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:29,969 [main:137] - TRYING TO REPLACE CONSTANT 161364729
2021-03-11 12:09:30,095 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:30,096 [main:66] - Compilation checking started
2021-03-11 12:09:30,620 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1080753757, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:30,621 [main:137] - TRYING TO REPLACE CONSTANT 1080753757
2021-03-11 12:09:30,746 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:30,746 [main:66] - Compilation checking started
2021-03-11 12:09:31,230 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, '鲔'))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:31,230 [main:137] - TRYING TO REPLACE CONSTANT '鲔'
2021-03-11 12:09:31,354 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:31,355 [main:66] - Compilation checking started
2021-03-11 12:09:31,846 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(-1492832219))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:31,846 [main:137] - TRYING TO REPLACE CONSTANT 1492832219
2021-03-11 12:09:32,010 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:32,011 [main:66] - Compilation checking started
2021-03-11 12:09:32,500 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3(2129972429, { 161364729})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:32,500 [main:137] - TRYING TO REPLACE CONSTANT 2129972429
2021-03-11 12:09:32,624 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PARENTHESIZED)
2021-03-11 12:09:32,625 [main:66] - Compilation checking started
2021-03-11 12:09:33,154 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { 161364729})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:33,154 [main:137] - TRYING TO REPLACE CONSTANT 161364729
2021-03-11 12:09:33,280 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-11 12:09:33,281 [main:66] - Compilation checking started
2021-03-11 12:09:33,775 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(1699010763)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:33,775 [main:137] - TRYING TO REPLACE CONSTANT 1699010763
2021-03-11 12:09:33,900 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 12:09:33,900 [main:66] - Compilation checking started
2021-03-11 12:09:34,397 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:34,398 [main:46] - AFTER TRY 2 res = import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}


2021-03-11 12:09:34,650 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:09:34,651 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}
2021-03-11 12:09:34,651 [main:112] - generating klass Kla2 text = enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}
2021-03-11 12:09:34,651 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}
2021-03-11 12:09:34,651 [main:112] - generating klass Kla4 text = Kla4,
2021-03-11 12:09:34,651 [main:112] - generating klass Kla5 text = Kla5,
2021-03-11 12:09:34,651 [main:112] - generating klass Kla6 text = Kla6,
2021-03-11 12:09:34,651 [main:112] - generating klass Kla7 text = Kla7
2021-03-11 12:09:34,913 [main:43] - GENERATING CALL OF inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:09:35,240 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Double?) = {
    null is Ty0
    run({ run({ null})})
}
2021-03-11 12:09:35,513 [main:302] - generating value of type = Function0<Double?> false depth = 1
2021-03-11 12:09:35,515 [main:302] - generating value of type = Double true depth = 2
2021-03-11 12:09:35,518 [main:95] - GENERATED = fu0<ArrayDeque<Short>, Double?>({ 0.038712390428811694})
2021-03-11 12:09:35,643 [main:43] - GENERATING CALL OF public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()
2021-03-11 12:09:35,654 [main:61] - WITHOUT TYPE PARAMS = public inline fun <Ty1> fu1(f: () -> Kla1): Kla1 = f()
2021-03-11 12:09:35,932 [main:302] - generating value of type = Function0<Kla1> false depth = 1
2021-03-11 12:09:35,935 [main:302] - generating value of type = Kla1 false depth = 2
2021-03-11 12:09:35,937 [main:112] - generating klass Kla1 text = class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}
2021-03-11 12:09:35,937 [main:95] - GENERATED = fu1<Kla1>({ Kla1()})
2021-03-11 12:09:36,068 [main:43] - GENERATING CALL OF inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:09:36,229 [main:61] - WITHOUT TYPE PARAMS = inline fun <reified Ty0> fu2() = { "kxpjp"}
2021-03-11 12:09:36,361 [main:95] - GENERATED = fu2<HashSet<Kla1>>()
2021-03-11 12:09:36,494 [main:43] - GENERATING CALL OF fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}
2021-03-11 12:09:36,496 [main:61] - WITHOUT TYPE PARAMS = fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}
2021-03-11 12:09:36,771 [main:302] - generating value of type = Int true depth = 1
2021-03-11 12:09:36,773 [main:302] - generating value of type = Function0<Int> false depth = 1
2021-03-11 12:09:36,775 [main:302] - generating value of type = Int true depth = 2
2021-03-11 12:09:36,778 [main:95] - GENERATED = fu3(-617768786, { -1562242140})
2021-03-11 12:09:36,904 [main:43] - GENERATING CALL OF inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}
2021-03-11 12:09:36,906 [main:61] - WITHOUT TYPE PARAMS = inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}
2021-03-11 12:09:37,178 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Kla0, Unit> false depth = 1
2021-03-11 12:09:37,180 [main:302] - generating value of type = Unit false depth = 2
2021-03-11 12:09:37,310 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 12:09:37,313 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 12:09:37,629 [main:302] - generating value of type = Any false depth = 5
2021-03-11 12:09:37,629 [main:95] - GENERATED = print("fidcg")
2021-03-11 12:09:37,629 [main:95] - GENERATED = fu4({ print("fidcg")})
2021-03-11 12:09:37,769 [main:48] - Try №2
2021-03-11 12:09:38,333 [main:71] - Trying to insert fun box428(): String {
    var prope5 = "Fail"
    fu11 {
        prope5 = "OK"
    }
    return prope5
}
2021-03-11 12:09:38,482 [main:66] - Compilation checking started
2021-03-11 12:09:39,449 [main:99] - Trying to change 8 nodes
2021-03-11 12:09:39,449 [main:103] - replacing ({
        prope5 = "OK"
    }, Function0<Unit>)
2021-03-11 12:09:39,450 [main:38] - replacing {
        prope5 = "OK"
    } Function0<Unit>
2021-03-11 12:09:39,451 [main:42] - Getting value of type Function0<Unit>
2021-03-11 12:09:39,582 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 12:09:39,584 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 12:09:39,721 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:09:39,724 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 12:09:40,188 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 12:09:40,190 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 12:09:40,193 [main:302] - generating value of type = Any false depth = 5
2021-03-11 12:09:40,193 [main:95] - GENERATED = require(false, { "spwma"})
2021-03-11 12:09:40,193 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { require(false, { "spwma"})}
2021-03-11 12:09:40,193 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:40,668 [main:55] - randomType = Map<Set<Kla1>, Set<Kla1?>>
2021-03-11 12:09:40,670 [main:94] - GETTING Function0<Unit> from Int
2021-03-11 12:09:40,703 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 12:09:40,712 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 12:09:40,713 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 12:09:40,714 [main:94] - GETTING Function0<Unit> from UShort
2021-03-11 12:09:40,741 [main:94] - GETTING Function0<Unit> from String
2021-03-11 12:09:40,757 [main:94] - GETTING Function0<Unit> from String
2021-03-11 12:09:40,758 [main:94] - GETTING Function0<Unit> from ULongProgression
2021-03-11 12:09:40,776 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 12:09:40,801 [main:94] - GETTING Function0<Unit> from Kla1
2021-03-11 12:09:40,806 [main:94] - GETTING Function0<Unit> from Int
2021-03-11 12:09:40,807 [main:94] - GETTING Function0<Unit> from Char
2021-03-11 12:09:40,826 [main:94] - GETTING Function0<Unit> from Kla1
2021-03-11 12:09:40,827 [main:94] - GETTING Function0<Unit> from Short
2021-03-11 12:09:40,858 [main:94] - GETTING Function0<Unit> from ULongProgression
2021-03-11 12:09:40,859 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 12:09:40,881 [main:94] - GETTING Function0<Unit> from Int
2021-03-11 12:09:40,882 [main:94] - GETTING Function0<Unit> from ULongProgression
2021-03-11 12:09:40,884 [main:94] - GETTING Function0<Unit> from Int
2021-03-11 12:09:40,885 [main:94] - GETTING Function0<Unit> from UShort
2021-03-11 12:09:40,887 [main:94] - GETTING Function0<Unit> from Int
2021-03-11 12:09:40,888 [main:94] - GETTING Function0<Unit> from UIntProgression
2021-03-11 12:09:40,903 [main:94] - GETTING Function0<Unit> from Char
2021-03-11 12:09:40,904 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 12:09:40,905 [main:94] - GETTING Function0<Unit> from Long
2021-03-11 12:09:40,935 [main:94] - GETTING Function0<Unit> from String
2021-03-11 12:09:40,936 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 12:09:40,936 [main:94] - GETTING Function0<Unit> from Double
2021-03-11 12:09:40,964 [main:94] - GETTING Function0<Unit> from Int
2021-03-11 12:09:40,965 [main:94] - GETTING Function0<Unit> from String
2021-03-11 12:09:40,966 [main:94] - GETTING Function0<Unit> from Double
2021-03-11 12:09:40,967 [main:94] - GETTING Function0<Unit> from Int
2021-03-11 12:09:40,968 [main:94] - GETTING Function0<Unit> from Function0<Nothing?>
2021-03-11 12:09:40,983 [main:94] - GETTING Function0<Unit> from Char
2021-03-11 12:09:40,983 [main:110] - replacement of {
        prope5 = "OK"
    } of type Function0<Unit> is { require(false, { "spwma"})}
2021-03-11 12:09:41,111 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:09:41,111 [main:66] - Compilation checking started
2021-03-11 12:09:41,671 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:41,672 [main:103] - replacing (a, Any?)
2021-03-11 12:09:41,674 [main:38] - replacing a Any?
2021-03-11 12:09:41,675 [main:42] - Getting value of type Any?
2021-03-11 12:09:41,821 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:09:41,821 [main:46] - GENERATED VALUE OF TYPE Any? = "uquaz"
2021-03-11 12:09:41,821 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:42,128 [main:55] - randomType = ArrayDeque<String?>
2021-03-11 12:09:42,260 [main:302] - generating value of type = ArrayDeque<String?> false depth = 0
2021-03-11 12:09:42,396 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<String?> = TODO()
2021-03-11 12:09:42,400 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<String?> = TODO()
2021-03-11 12:09:42,750 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:09:42,753 [main:95] - GENERATED = ArrayDeque<String?>(720632132)
2021-03-11 12:09:42,873 [main:137] - GENERATING call of type @kotlin.js.JsName public open fun toJSON(): kotlin.Any defined in kotlin.collections.ArrayDeque[DeserializedSimpleFunctionDescriptor@3cf64762]
2021-03-11 12:09:42,873 [main:66] - Generated call from random type = (ArrayDeque<String?>(720632132)).toJSON()
2021-03-11 12:09:42,874 [main:94] - GETTING Any? from Int
2021-03-11 12:09:42,903 [main:94] - GETTING Any? from Int
2021-03-11 12:09:42,904 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:42,913 [main:94] - GETTING Any? from String
2021-03-11 12:09:42,929 [main:94] - GETTING Any? from ULong
2021-03-11 12:09:42,953 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:42,953 [main:94] - GETTING Any? from UByte
2021-03-11 12:09:42,976 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:42,976 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:42,988 [main:94] - GETTING Any? from Int
2021-03-11 12:09:42,989 [main:94] - GETTING Any? from Short
2021-03-11 12:09:43,019 [main:94] - GETTING Any? from Int
2021-03-11 12:09:43,020 [main:94] - GETTING Any? from String
2021-03-11 12:09:43,021 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:43,021 [main:94] - GETTING Any? from Char
2021-03-11 12:09:43,039 [main:94] - GETTING Any? from Int
2021-03-11 12:09:43,040 [main:94] - GETTING Any? from Long
2021-03-11 12:09:43,069 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:43,070 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:43,070 [main:94] - GETTING Any? from Char
2021-03-11 12:09:43,071 [main:94] - GETTING Any? from Int
2021-03-11 12:09:43,072 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:43,072 [main:94] - GETTING Any? from Int
2021-03-11 12:09:43,073 [main:94] - GETTING Any? from String
2021-03-11 12:09:43,074 [main:94] - GETTING Any? from String
2021-03-11 12:09:43,074 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:43,080 [main:94] - GETTING Any? from Double
2021-03-11 12:09:43,108 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:43,109 [main:94] - GETTING Any? from Char
2021-03-11 12:09:43,109 [main:94] - GETTING Any? from Function0<Nothing?>
2021-03-11 12:09:43,123 [main:94] - GETTING Any? from UIntProgression
2021-03-11 12:09:43,135 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:43,157 [main:94] - GETTING Any? from Double
2021-03-11 12:09:43,158 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:43,158 [main:110] - replacement of a of type Any? is (ArrayDeque<String?>(720632132)).toJSON()
2021-03-11 12:09:43,289 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:09:43,289 [main:66] - Compilation checking started
2021-03-11 12:09:43,681 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
(ArrayDeque<String?>(720632132)).toJSON() as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:43,681 [main:103] - replacing (a, Any?)
2021-03-11 12:09:43,681 [main:38] - replacing a Any?
2021-03-11 12:09:43,681 [main:42] - Getting value of type Any?
2021-03-11 12:09:43,815 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:09:43,815 [main:46] - GENERATED VALUE OF TYPE Any? = "qoltq"
2021-03-11 12:09:43,815 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:43,821 [main:55] - randomType = Int
2021-03-11 12:09:43,954 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:09:43,986 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:43,999 [main:94] - GETTING Any? from Int
2021-03-11 12:09:44,029 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:44,030 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:44,035 [main:94] - GETTING Any? from String
2021-03-11 12:09:44,052 [main:94] - GETTING Any? from Short
2021-03-11 12:09:44,083 [main:94] - GETTING Any? from Char
2021-03-11 12:09:44,099 [main:94] - GETTING Any? from Int
2021-03-11 12:09:44,100 [main:94] - GETTING Any? from ULong
2021-03-11 12:09:44,124 [main:94] - GETTING Any? from Char
2021-03-11 12:09:44,125 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:44,133 [main:94] - GETTING Any? from String
2021-03-11 12:09:44,134 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:44,135 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:44,135 [main:94] - GETTING Any? from UIntProgression
2021-03-11 12:09:44,149 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:44,149 [main:94] - GETTING Any? from Int
2021-03-11 12:09:44,150 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:44,172 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:44,173 [main:94] - GETTING Any? from Long
2021-03-11 12:09:44,203 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:44,204 [main:94] - GETTING Any? from Int
2021-03-11 12:09:44,205 [main:94] - GETTING Any? from UByte
2021-03-11 12:09:44,227 [main:94] - GETTING Any? from Double
2021-03-11 12:09:44,254 [main:94] - GETTING Any? from Double
2021-03-11 12:09:44,255 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:44,256 [main:94] - GETTING Any? from Function0<Nothing?>
2021-03-11 12:09:44,270 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:44,270 [main:94] - GETTING Any? from String
2021-03-11 12:09:44,271 [main:94] - GETTING Any? from Char
2021-03-11 12:09:44,272 [main:94] - GETTING Any? from Int
2021-03-11 12:09:44,272 [main:94] - GETTING Any? from String
2021-03-11 12:09:44,273 [main:94] - GETTING Any? from Int
2021-03-11 12:09:44,274 [main:94] - GETTING Any? from Int
2021-03-11 12:09:44,274 [main:110] - replacement of a of type Any? is "qoltq"
2021-03-11 12:09:44,406 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 12:09:44,406 [main:66] - Compilation checking started
2021-03-11 12:09:44,816 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
"qoltq" as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:44,817 [main:103] - replacing (a, Any?)
2021-03-11 12:09:44,817 [main:38] - replacing a Any?
2021-03-11 12:09:44,817 [main:42] - Getting value of type Any?
2021-03-11 12:09:44,954 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:09:44,954 [main:46] - GENERATED VALUE OF TYPE Any? = "wflox"
2021-03-11 12:09:44,955 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:45,267 [main:55] - randomType = Collection<List<Double>>
2021-03-11 12:09:45,268 [main:94] - GETTING Any? from Int
2021-03-11 12:09:45,300 [main:94] - GETTING Any? from Long
2021-03-11 12:09:45,330 [main:94] - GETTING Any? from Int
2021-03-11 12:09:45,331 [main:94] - GETTING Any? from Char
2021-03-11 12:09:45,348 [main:94] - GETTING Any? from String
2021-03-11 12:09:45,365 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:45,370 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:45,371 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:45,379 [main:94] - GETTING Any? from Int
2021-03-11 12:09:45,380 [main:94] - GETTING Any? from Double
2021-03-11 12:09:45,408 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:45,409 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:45,433 [main:94] - GETTING Any? from String
2021-03-11 12:09:45,434 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:45,446 [main:94] - GETTING Any? from ULong
2021-03-11 12:09:45,468 [main:94] - GETTING Any? from String
2021-03-11 12:09:45,469 [main:94] - GETTING Any? from Double
2021-03-11 12:09:45,470 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:45,471 [main:94] - GETTING Any? from String
2021-03-11 12:09:45,471 [main:94] - GETTING Any? from UByte
2021-03-11 12:09:45,494 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:45,495 [main:94] - GETTING Any? from Int
2021-03-11 12:09:45,496 [main:94] - GETTING Any? from Char
2021-03-11 12:09:45,496 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:45,497 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:45,498 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:45,498 [main:94] - GETTING Any? from Function0<Nothing?>
2021-03-11 12:09:45,512 [main:94] - GETTING Any? from Short
2021-03-11 12:09:45,542 [main:94] - GETTING Any? from Int
2021-03-11 12:09:45,543 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:45,544 [main:94] - GETTING Any? from Int
2021-03-11 12:09:45,545 [main:94] - GETTING Any? from Char
2021-03-11 12:09:45,546 [main:94] - GETTING Any? from Int
2021-03-11 12:09:45,546 [main:94] - GETTING Any? from UIntProgression
2021-03-11 12:09:45,559 [main:110] - replacement of a of type Any? is "wflox"
2021-03-11 12:09:45,691 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 12:09:45,691 [main:66] - Compilation checking started
2021-03-11 12:09:46,072 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
"wflox" as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:46,072 [main:103] - replacing (a, Any?)
2021-03-11 12:09:46,073 [main:38] - replacing a Any?
2021-03-11 12:09:46,073 [main:42] - Getting value of type Any?
2021-03-11 12:09:46,206 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:09:46,206 [main:46] - GENERATED VALUE OF TYPE Any? = "efzgj"
2021-03-11 12:09:46,206 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:46,216 [main:55] - randomType = Kla3
2021-03-11 12:09:46,349 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 12:09:46,351 [main:112] - generating klass Kla3 text = class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}
2021-03-11 12:09:46,357 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:46,369 [main:94] - GETTING Any? from Function0<Nothing?>
2021-03-11 12:09:46,382 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:46,405 [main:94] - GETTING Any? from UByte
2021-03-11 12:09:46,428 [main:94] - GETTING Any? from Double
2021-03-11 12:09:46,455 [main:94] - GETTING Any? from Long
2021-03-11 12:09:46,484 [main:94] - GETTING Any? from Char
2021-03-11 12:09:46,501 [main:94] - GETTING Any? from Int
2021-03-11 12:09:46,531 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:46,532 [main:94] - GETTING Any? from Int
2021-03-11 12:09:46,533 [main:94] - GETTING Any? from String
2021-03-11 12:09:46,550 [main:94] - GETTING Any? from ULong
2021-03-11 12:09:46,572 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:46,573 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:46,582 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:46,582 [main:94] - GETTING Any? from Short
2021-03-11 12:09:46,612 [main:94] - GETTING Any? from Char
2021-03-11 12:09:46,613 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:46,618 [main:94] - GETTING Any? from String
2021-03-11 12:09:46,619 [main:94] - GETTING Any? from Char
2021-03-11 12:09:46,620 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:46,620 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:46,621 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:46,622 [main:94] - GETTING Any? from String
2021-03-11 12:09:46,622 [main:94] - GETTING Any? from String
2021-03-11 12:09:46,623 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:46,624 [main:94] - GETTING Any? from UIntProgression
2021-03-11 12:09:46,637 [main:94] - GETTING Any? from Int
2021-03-11 12:09:46,638 [main:94] - GETTING Any? from Int
2021-03-11 12:09:46,638 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:46,639 [main:94] - GETTING Any? from Double
2021-03-11 12:09:46,640 [main:94] - GETTING Any? from Int
2021-03-11 12:09:46,640 [main:94] - GETTING Any? from Int
2021-03-11 12:09:46,641 [main:94] - GETTING Any? from Int
2021-03-11 12:09:46,641 [main:110] - replacement of a of type Any? is "efzgj"
2021-03-11 12:09:46,773 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 12:09:46,773 [main:66] - Compilation checking started
2021-03-11 12:09:47,152 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable("efzgj").run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:47,152 [main:103] - replacing (a, Any?)
2021-03-11 12:09:47,152 [main:38] - replacing a Any?
2021-03-11 12:09:47,153 [main:42] - Getting value of type Any?
2021-03-11 12:09:47,348 [main:302] - generating value of type = Any false depth = 0
2021-03-11 12:09:47,348 [main:46] - GENERATED VALUE OF TYPE Any? = "arcyg"
2021-03-11 12:09:47,349 [main:49] - GENERATED IS CALL =false
2021-03-11 12:09:47,359 [main:55] - randomType = Kla0
2021-03-11 12:09:47,493 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 12:09:47,495 [main:112] - generating klass Kla0 text = class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}
2021-03-11 12:09:47,503 [main:94] - GETTING Any? from String
2021-03-11 12:09:47,523 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:47,544 [main:94] - GETTING Any? from UByte
2021-03-11 12:09:47,567 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:47,580 [main:94] - GETTING Any? from UShort
2021-03-11 12:09:47,580 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:47,590 [main:94] - GETTING Any? from Char
2021-03-11 12:09:47,607 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:47,608 [main:94] - GETTING Any? from Char
2021-03-11 12:09:47,608 [main:94] - GETTING Any? from Int
2021-03-11 12:09:47,639 [main:94] - GETTING Any? from Short
2021-03-11 12:09:47,669 [main:94] - GETTING Any? from Long
2021-03-11 12:09:47,698 [main:94] - GETTING Any? from Int
2021-03-11 12:09:47,699 [main:94] - GETTING Any? from String
2021-03-11 12:09:47,700 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:47,701 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:47,706 [main:94] - GETTING Any? from Double
2021-03-11 12:09:47,734 [main:94] - GETTING Any? from ULongProgression
2021-03-11 12:09:47,735 [main:94] - GETTING Any? from Int
2021-03-11 12:09:47,736 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:47,736 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:47,737 [main:94] - GETTING Any? from Int
2021-03-11 12:09:47,738 [main:94] - GETTING Any? from UIntProgression
2021-03-11 12:09:47,752 [main:94] - GETTING Any? from Int
2021-03-11 12:09:47,752 [main:94] - GETTING Any? from Int
2021-03-11 12:09:47,753 [main:94] - GETTING Any? from Int
2021-03-11 12:09:47,754 [main:94] - GETTING Any? from Function0<Nothing?>
2021-03-11 12:09:47,767 [main:94] - GETTING Any? from ULong
2021-03-11 12:09:47,790 [main:94] - GETTING Any? from Char
2021-03-11 12:09:47,791 [main:94] - GETTING Any? from Double
2021-03-11 12:09:47,791 [main:94] - GETTING Any? from String
2021-03-11 12:09:47,792 [main:94] - GETTING Any? from String
2021-03-11 12:09:47,793 [main:94] - GETTING Any? from Kla1
2021-03-11 12:09:47,793 [main:94] - GETTING Any? from Function0<String>
2021-03-11 12:09:47,793 [main:110] - replacement of a of type Any? is "arcyg"
2021-03-11 12:09:47,925 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 12:09:47,925 [main:66] - Compilation checking started
2021-03-11 12:09:48,302 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable("arcyg").run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:48,440 [main:137] - TRYING TO REPLACE CONSTANT false
2021-03-11 12:09:48,574 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(BOOLEAN_CONSTANT)
2021-03-11 12:09:48,574 [main:66] - Compilation checking started
2021-03-11 12:09:49,174 [main:86] - Final res = import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
prope3 = ((0.7274546f)).toChar().titlecase()
    }
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:49,193 [main:26] - Trying to change some nodes to nodes from other programs 521 times
2021-03-11 12:09:49,193 [main:28] - Try №0 of 521
2021-03-11 12:09:49,202 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:09:49,203 [main:28] - Try №1 of 521
2021-03-11 12:09:49,209 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:09:49,210 [main:66] - Compilation checking started
2021-03-11 12:09:49,762 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:49,762 [main:28] - Try №2 of 521
2021-03-11 12:09:49,773 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:09:49,773 [main:28] - Try №3 of 521
2021-03-11 12:09:49,783 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:09:49,783 [main:66] - Compilation checking started
2021-03-11 12:09:50,147 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.saveStackTrace -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:50,147 [main:28] - Try №4 of 521
2021-03-11 12:09:50,151 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:09:50,151 [main:66] - Compilation checking started
2021-03-11 12:09:50,522 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { l()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:50,522 [main:28] - Try №5 of 521
2021-03-11 12:09:50,531 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:09:50,531 [main:28] - Try №6 of 521
2021-03-11 12:09:50,534 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:09:50,535 [main:66] - Compilation checking started
2021-03-11 12:09:51,102 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:51,102 [main:28] - Try №7 of 521
2021-03-11 12:09:51,110 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:09:51,110 [main:28] - Try №8 of 521
2021-03-11 12:09:51,119 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:09:51,120 [main:66] - Compilation checking started
2021-03-11 12:09:51,516 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> IllegalArgumentException
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:51,516 [main:28] - Try №9 of 521
2021-03-11 12:09:51,531 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:09:51,531 [main:66] - Compilation checking started
2021-03-11 12:09:51,916 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<C>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:51,916 [main:28] - Try №10 of 521
2021-03-11 12:09:51,925 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:09:51,925 [main:66] - Compilation checking started
2021-03-11 12:09:52,324 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = sum<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:52,325 [main:28] - Try №11 of 521
2021-03-11 12:09:52,331 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:09:52,331 [main:66] - Compilation checking started
2021-03-11 12:09:52,735 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().Inner<T>())
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:52,735 [main:28] - Try №12 of 521
2021-03-11 12:09:52,740 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:09:52,741 [main:66] - Compilation checking started
2021-03-11 12:09:52,746 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:09:52,746 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479: String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:52,746 [main:28] - Try №13 of 521
2021-03-11 12:09:52,760 [main:28] - Try №14 of 521
2021-03-11 12:09:52,771 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:09:52,771 [main:28] - Try №15 of 521
2021-03-11 12:09:52,775 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:09:52,775 [main:66] - Compilation checking started
2021-03-11 12:09:53,166 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<step>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:53,167 [main:28] - Try №16 of 521
2021-03-11 12:09:53,175 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:09:53,176 [main:66] - Compilation checking started
2021-03-11 12:09:53,550 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Int, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:53,550 [main:28] - Try №17 of 521
2021-03-11 12:09:53,559 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:09:53,560 [main:66] - Compilation checking started
2021-03-11 12:09:53,934 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): uintProgression {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:53,934 [main:28] - Try №18 of 521
2021-03-11 12:09:53,945 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:09:53,946 [main:66] - Compilation checking started
2021-03-11 12:09:54,326 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
override val entries: MutableSet<MutableMap.MutableEntry<String, String>>
        get() = null!!
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:54,326 [main:28] - Try №19 of 521
2021-03-11 12:09:54,333 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:09:54,334 [main:28] - Try №20 of 521
2021-03-11 12:09:54,345 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:09:54,345 [main:66] - Compilation checking started
2021-03-11 12:09:54,731 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
@JvmField
        val triggered: Boolean = try {
            A().doAssert()
            false
        } catch (e: AssertionError) {
            true
        }
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:54,731 [main:28] - Try №21 of 521
2021-03-11 12:09:54,734 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:09:54,734 [main:66] - Compilation checking started
2021-03-11 12:09:55,111 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = String<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:55,111 [main:28] - Try №22 of 521
2021-03-11 12:09:55,128 [main:33] - Trying to replace Element(WHEN_ENTRY) on Element(WHEN_ENTRY)
2021-03-11 12:09:55,128 [main:66] - Compilation checking started
2021-03-11 12:09:55,501 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Season.SUMMER -> "summer"
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "ebdjj"}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:55,501 [main:28] - Try №23 of 521
2021-03-11 12:09:55,515 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:09:55,516 [main:66] - Compilation checking started
2021-03-11 12:09:56,057 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:56,057 [main:28] - Try №24 of 521
2021-03-11 12:09:56,063 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:09:56,063 [main:66] - Compilation checking started
2021-03-11 12:09:56,442 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    step(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:56,442 [main:28] - Try №25 of 521
2021-03-11 12:09:56,457 [main:28] - Try №26 of 521
2021-03-11 12:09:56,465 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:09:56,465 [main:28] - Try №27 of 521
2021-03-11 12:09:56,473 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:09:56,473 [main:28] - Try №28 of 521
2021-03-11 12:09:56,476 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:09:56,477 [main:66] - Compilation checking started
2021-03-11 12:09:56,848 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class a {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:56,849 [main:28] - Try №29 of 521
2021-03-11 12:09:56,858 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:09:56,858 [main:66] - Compilation checking started
2021-03-11 12:09:57,233 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<x>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:57,233 [main:28] - Try №30 of 521
2021-03-11 12:09:57,240 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:09:57,240 [main:66] - Compilation checking started
2021-03-11 12:09:57,611 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.Entity("OK"))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:57,611 [main:28] - Try №31 of 521
2021-03-11 12:09:57,620 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:09:57,620 [main:66] - Compilation checking started
2021-03-11 12:09:58,044 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (put<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:58,044 [main:28] - Try №32 of 521
2021-03-11 12:09:58,050 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:09:58,051 [main:66] - Compilation checking started
2021-03-11 12:09:58,416 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): Double {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:58,416 [main:28] - Try №33 of 521
2021-03-11 12:09:58,427 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:09:58,427 [main:66] - Compilation checking started
2021-03-11 12:09:58,796 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals()
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:58,796 [main:28] - Try №34 of 521
2021-03-11 12:09:58,801 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:09:58,801 [main:28] - Try №35 of 521
2021-03-11 12:09:58,807 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:09:58,808 [main:66] - Compilation checking started
2021-03-11 12:09:59,182 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3({
            result = this as String
        }(), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    assertEquals("fmjvs", (3968.toUShort())?.toUByte().toString(-391599701))
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:59,182 [main:28] - Try №36 of 521
2021-03-11 12:09:59,188 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:09:59,189 [main:66] - Compilation checking started
2021-03-11 12:09:59,709 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:09:59,709 [main:28] - Try №37 of 521
2021-03-11 12:09:59,724 [main:28] - Try №38 of 521
2021-03-11 12:09:59,733 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:09:59,733 [main:28] - Try №39 of 521
2021-03-11 12:09:59,740 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:09:59,740 [main:66] - Compilation checking started
2021-03-11 12:10:00,120 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : (Kla2) -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).samAdapter { s = "OK"; null }))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:00,121 [main:28] - Try №40 of 521
2021-03-11 12:10:00,126 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:10:00,126 [main:66] - Compilation checking started
2021-03-11 12:10:00,671 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:00,671 [main:28] - Try №41 of 521
2021-03-11 12:10:00,680 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:10:00,680 [main:28] - Try №42 of 521
2021-03-11 12:10:00,684 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:00,684 [main:66] - Compilation checking started
2021-03-11 12:10:01,078 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<kind2>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:01,078 [main:28] - Try №43 of 521
2021-03-11 12:10:01,095 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:10:01,095 [main:66] - Compilation checking started
2021-03-11 12:10:01,484 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, {
        outer@for (x in listOf("O", "K")) {
            result += suspendWithResult(x)
            for (y in listOf("Q", "W")) {
                result += suspendWithResult(y)
                if (y == "W") {
                    break@outer
                }
            }
        }
        result += "."
    }), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:01,484 [main:28] - Try №44 of 521
2021-03-11 12:10:01,495 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:01,495 [main:66] - Compilation checking started
2021-03-11 12:10:01,868 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val barName = A.BAR.testName == "bar"
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:01,868 [main:28] - Try №45 of 521
2021-03-11 12:10:01,879 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:01,880 [main:66] - Compilation checking started
2021-03-11 12:10:02,248 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<suspendCoroutineUninterceptedOrReturn>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:02,248 [main:28] - Try №46 of 521
2021-03-11 12:10:02,262 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:10:02,263 [main:66] - Compilation checking started
2021-03-11 12:10:02,805 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:02,805 [main:28] - Try №47 of 521
2021-03-11 12:10:02,814 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:10:02,815 [main:66] - Compilation checking started
2021-03-11 12:10:03,231 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u + 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:03,231 [main:28] - Try №48 of 521
2021-03-11 12:10:03,242 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:03,242 [main:66] - Compilation checking started
2021-03-11 12:10:03,611 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val uintProgression = 7u downTo 1u
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> Ty1) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:03,611 [main:28] - Try №49 of 521
2021-03-11 12:10:03,627 [main:28] - Try №50 of 521
2021-03-11 12:10:03,641 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:10:03,641 [main:28] - Try №51 of 521
2021-03-11 12:10:03,651 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:10:03,652 [main:66] - Compilation checking started
2021-03-11 12:10:04,201 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:04,201 [main:28] - Try №52 of 521
2021-03-11 12:10:04,210 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:04,211 [main:66] - Compilation checking started
2021-03-11 12:10:04,584 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = reflect<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:04,584 [main:28] - Try №53 of 521
2021-03-11 12:10:04,588 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:10:04,589 [main:28] - Try №54 of 521
2021-03-11 12:10:04,592 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:04,593 [main:66] - Compilation checking started
2021-03-11 12:10:04,954 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL manual 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:04,954 [main:28] - Try №55 of 521
2021-03-11 12:10:04,957 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:04,958 [main:66] - Compilation checking started
2021-03-11 12:10:05,321 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    kt { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:05,321 [main:28] - Try №56 of 521
2021-03-11 12:10:05,328 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:05,328 [main:66] - Compilation checking started
2021-03-11 12:10:05,690 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = getGenericReturnType()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:05,691 [main:28] - Try №57 of 521
2021-03-11 12:10:05,706 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:10:05,707 [main:66] - Compilation checking started
2021-03-11 12:10:05,712 [main:71] - Wrong syntax or breaks conditions
2021-03-11 12:10:05,712 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL !! 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:05,712 [main:28] - Try №58 of 521
2021-03-11 12:10:05,721 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:10:05,722 [main:66] - Compilation checking started
2021-03-11 12:10:06,238 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:06,238 [main:28] - Try №59 of 521
2021-03-11 12:10:06,248 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:06,248 [main:66] - Compilation checking started
2021-03-11 12:10:06,618 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.String.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:06,618 [main:28] - Try №60 of 521
2021-03-11 12:10:06,624 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:10:06,625 [main:66] - Compilation checking started
2021-03-11 12:10:06,993 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { {
        return p
    }})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:06,993 [main:28] - Try №61 of 521
2021-03-11 12:10:07,007 [main:28] - Try №62 of 521
2021-03-11 12:10:07,010 [main:33] - Trying to replace Element(IMPORT_LIST) on Element(IMPORT_LIST)
2021-03-11 12:10:07,010 [main:66] - Compilation checking started
2021-03-11 12:10:07,372 [main:49] - Result = false
Text:



fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), (fu2<Kla0>()).invoke().reversed())

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:07,372 [main:28] - Try №63 of 521
2021-03-11 12:10:07,377 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:10:07,377 [main:28] - Try №64 of 521
2021-03-11 12:10:07,390 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:10:07,390 [main:28] - Try №65 of 521
2021-03-11 12:10:07,402 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:10:07,402 [main:66] - Compilation checking started
2021-03-11 12:10:07,916 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:07,916 [main:28] - Try №66 of 521
2021-03-11 12:10:07,922 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:07,922 [main:28] - Try №67 of 521
2021-03-11 12:10:07,936 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:10:07,936 [main:28] - Try №68 of 521
2021-03-11 12:10:07,940 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:07,940 [main:66] - Compilation checking started
2021-03-11 12:10:08,306 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val void = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:08,306 [main:28] - Try №69 of 521
2021-03-11 12:10:08,346 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:08,346 [main:66] - Compilation checking started
2021-03-11 12:10:08,712 [main:49] - Result = false
Text:
import foo.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:08,712 [main:28] - Try №70 of 521
2021-03-11 12:10:08,718 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:10:08,718 [main:66] - Compilation checking started
2021-03-11 12:10:09,276 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:09,276 [main:28] - Try №71 of 521
2021-03-11 12:10:09,282 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:09,283 [main:66] - Compilation checking started
2021-03-11 12:10:09,673 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<Int>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:09,673 [main:28] - Try №72 of 521
2021-03-11 12:10:09,682 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:09,683 [main:66] - Compilation checking started
2021-03-11 12:10:10,051 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.StringBuilder();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:10,051 [main:28] - Try №73 of 521
2021-03-11 12:10:10,057 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:10,058 [main:66] - Compilation checking started
2021-03-11 12:10:10,432 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(Kla1()), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (Suppress<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:10,432 [main:28] - Try №74 of 521
2021-03-11 12:10:10,442 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:10:10,443 [main:66] - Compilation checking started
2021-03-11 12:10:10,972 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "ebdjj"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:10,972 [main:28] - Try №75 of 521
2021-03-11 12:10:10,986 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:10:10,986 [main:66] - Compilation checking started
2021-03-11 12:10:11,522 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:11,522 [main:28] - Try №76 of 521
2021-03-11 12:10:11,526 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:11,527 [main:66] - Compilation checking started
2021-03-11 12:10:11,893 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Foo>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:11,894 [main:28] - Try №77 of 521
2021-03-11 12:10:11,897 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:11,898 [main:66] - Compilation checking started
2021-03-11 12:10:12,275 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    String { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:12,275 [main:28] - Try №78 of 521
2021-03-11 12:10:12,291 [main:28] - Try №79 of 521
2021-03-11 12:10:12,302 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:12,302 [main:28] - Try №80 of 521
2021-03-11 12:10:12,306 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:12,307 [main:66] - Compilation checking started
2021-03-11 12:10:12,674 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    String("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:12,674 [main:28] - Try №81 of 521
2021-03-11 12:10:12,689 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:10:12,690 [main:66] - Compilation checking started
2021-03-11 12:10:13,057 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 5
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:13,057 [main:28] - Try №82 of 521
2021-03-11 12:10:13,066 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:10:13,067 [main:66] - Compilation checking started
2021-03-11 12:10:13,588 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:13,588 [main:28] - Try №83 of 521
2021-03-11 12:10:13,604 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:10:13,605 [main:66] - Compilation checking started
2021-03-11 12:10:13,999 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo().toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:13,999 [main:28] - Try №84 of 521
2021-03-11 12:10:14,015 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:10:14,016 [main:66] - Compilation checking started
2021-03-11 12:10:14,382 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { x }), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:14,382 [main:28] - Try №85 of 521
2021-03-11 12:10:14,385 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:14,386 [main:66] - Compilation checking started
2021-03-11 12:10:14,755 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun Exception(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:14,755 [main:28] - Try №86 of 521
2021-03-11 12:10:14,774 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:10:14,775 [main:66] - Compilation checking started
2021-03-11 12:10:15,145 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), "OK")).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:15,146 [main:28] - Try №87 of 521
2021-03-11 12:10:15,149 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:15,149 [main:66] - Compilation checking started
2021-03-11 12:10:15,529 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Any, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:15,529 [main:28] - Try №88 of 521
2021-03-11 12:10:15,532 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:15,533 [main:66] - Compilation checking started
2021-03-11 12:10:16,086 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:16,086 [main:28] - Try №89 of 521
2021-03-11 12:10:16,094 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:10:16,094 [main:66] - Compilation checking started
2021-03-11 12:10:16,469 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { {
    val localResult = doCall (
            {
                h.value += "OK_NONLOCAL"
                return "OK_NONLOCAL"
            }, {
                h.value += ", OK_FINALLY"
                return "OK_FINALLY"
            })

    return "FAIL";
}})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:16,470 [main:28] - Try №90 of 521
2021-03-11 12:10:16,474 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:16,474 [main:66] - Compilation checking started
2021-03-11 12:10:16,985 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, block : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:16,985 [main:28] - Try №91 of 521
2021-03-11 12:10:16,989 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:16,989 [main:66] - Compilation checking started
2021-03-11 12:10:17,505 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:17,505 [main:28] - Try №92 of 521
2021-03-11 12:10:17,523 [main:28] - Try №93 of 521
2021-03-11 12:10:17,526 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:17,527 [main:66] - Compilation checking started
2021-03-11 12:10:17,906 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in String step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:17,906 [main:28] - Try №94 of 521
2021-03-11 12:10:17,920 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:10:17,920 [main:66] - Compilation checking started
2021-03-11 12:10:18,424 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:18,424 [main:28] - Try №95 of 521
2021-03-11 12:10:18,428 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:18,428 [main:28] - Try №96 of 521
2021-03-11 12:10:18,443 [main:28] - Try №97 of 521
2021-03-11 12:10:18,446 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:18,447 [main:66] - Compilation checking started
2021-03-11 12:10:18,811 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = x()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:18,811 [main:28] - Try №98 of 521
2021-03-11 12:10:18,814 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:10:18,815 [main:66] - Compilation checking started
2021-03-11 12:10:19,216 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun <T : Any> isNullGeneric(x: T?) = x == null

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun box428(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:19,216 [main:28] - Try №99 of 521
2021-03-11 12:10:19,225 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:10:19,226 [main:28] - Try №100 of 521
2021-03-11 12:10:19,229 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:19,230 [main:66] - Compilation checking started
2021-03-11 12:10:19,782 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:19,782 [main:28] - Try №101 of 521
2021-03-11 12:10:19,787 [main:33] - Trying to replace Element(FUN) on Element(FUN)
2021-03-11 12:10:19,787 [main:66] - Compilation checking started
2021-03-11 12:10:20,169 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

fun box() = C(::x)::value.get()

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:20,170 [main:28] - Try №102 of 521
2021-03-11 12:10:20,185 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:20,186 [main:66] - Compilation checking started
2021-03-11 12:10:20,566 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = Int<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:20,566 [main:28] - Try №103 of 521
2021-03-11 12:10:20,577 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:20,577 [main:66] - Compilation checking started
2021-03-11 12:10:21,089 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:21,089 [main:28] - Try №104 of 521
2021-03-11 12:10:21,106 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 12:10:21,107 [main:66] - Compilation checking started
2021-03-11 12:10:21,469 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { it.name == "ext" }()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:21,469 [main:28] - Try №105 of 521
2021-03-11 12:10:21,473 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:21,474 [main:66] - Compilation checking started
2021-03-11 12:10:21,834 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { add(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:21,834 [main:28] - Try №106 of 521
2021-03-11 12:10:21,839 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:10:21,840 [main:66] - Compilation checking started
2021-03-11 12:10:22,203 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4() {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:22,203 [main:28] - Try №107 of 521
2021-03-11 12:10:22,207 [main:33] - Trying to replace Element(TYPE_PARAMETER_LIST) on Element(TYPE_PARAMETER_LIST)
2021-03-11 12:10:22,208 [main:66] - Compilation checking started
2021-03-11 12:10:22,578 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Q> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:22,578 [main:28] - Try №108 of 521
2021-03-11 12:10:22,582 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:22,582 [main:66] - Compilation checking started
2021-03-11 12:10:22,954 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = B<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:22,955 [main:28] - Try №109 of 521
2021-03-11 12:10:22,965 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:10:22,965 [main:28] - Try №110 of 521
2021-03-11 12:10:22,972 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:22,972 [main:66] - Compilation checking started
2021-03-11 12:10:23,333 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (AssertionError()).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:23,333 [main:28] - Try №111 of 521
2021-03-11 12:10:23,340 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:10:23,340 [main:66] - Compilation checking started
2021-03-11 12:10:23,711 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return hs.clone()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(x : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:23,711 [main:28] - Try №112 of 521
2021-03-11 12:10:23,714 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:23,715 [main:66] - Compilation checking started
2021-03-11 12:10:24,237 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:24,237 [main:28] - Try №113 of 521
2021-03-11 12:10:24,240 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:24,241 [main:66] - Compilation checking started
2021-03-11 12:10:24,644 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            a.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:24,645 [main:28] - Try №114 of 521
2021-03-11 12:10:24,648 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:24,648 [main:28] - Try №115 of 521
2021-03-11 12:10:24,653 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:10:24,653 [main:66] - Compilation checking started
2021-03-11 12:10:25,024 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = index == 3
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:25,024 [main:28] - Try №116 of 521
2021-03-11 12:10:25,032 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:10:25,032 [main:28] - Try №117 of 521
2021-03-11 12:10:25,042 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:25,042 [main:66] - Compilation checking started
2021-03-11 12:10:25,415 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).myRun(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:25,415 [main:28] - Try №118 of 521
2021-03-11 12:10:25,422 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:25,422 [main:66] - Compilation checking started
2021-03-11 12:10:25,783 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> fu0(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().add(""), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:25,783 [main:28] - Try №119 of 521
2021-03-11 12:10:25,787 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:25,787 [main:66] - Compilation checking started
2021-03-11 12:10:26,289 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:26,289 [main:28] - Try №120 of 521
2021-03-11 12:10:26,300 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:26,300 [main:66] - Compilation checking started
2021-03-11 12:10:26,676 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val a = uIntArrayOf(1, 2, 3, 4)
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:26,676 [main:28] - Try №121 of 521
2021-03-11 12:10:26,679 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:26,680 [main:66] - Compilation checking started
2021-03-11 12:10:27,045 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): startCoroutine {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:27,045 [main:28] - Try №122 of 521
2021-03-11 12:10:27,056 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:10:27,057 [main:66] - Compilation checking started
2021-03-11 12:10:27,423 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(x1)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:27,423 [main:28] - Try №123 of 521
2021-03-11 12:10:27,438 [main:28] - Try №124 of 521
2021-03-11 12:10:27,448 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:27,449 [main:66] - Compilation checking started
2021-03-11 12:10:27,957 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:27,957 [main:28] - Try №125 of 521
2021-03-11 12:10:27,965 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:10:27,966 [main:28] - Try №126 of 521
2021-03-11 12:10:27,982 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(PARENTHESIZED)
2021-03-11 12:10:27,983 [main:66] - Compilation checking started
2021-03-11 12:10:28,349 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return (i + 1).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:28,350 [main:28] - Try №127 of 521
2021-03-11 12:10:28,360 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:28,361 [main:66] - Compilation checking started
2021-03-11 12:10:28,869 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { require(false, { "spwma"})}
    return prope5
}


2021-03-11 12:10:28,869 [main:28] - Try №128 of 521
2021-03-11 12:10:28,885 [main:33] - Trying to replace Element(LAMBDA_ARGUMENT) on Element(LAMBDA_ARGUMENT)
2021-03-11 12:10:28,885 [main:66] - Compilation checking started
2021-03-11 12:10:29,404 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:29,405 [main:28] - Try №129 of 521
2021-03-11 12:10:29,412 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:10:29,412 [main:28] - Try №130 of 521
2021-03-11 12:10:29,426 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:10:29,426 [main:66] - Compilation checking started
2021-03-11 12:10:29,808 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<*>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:29,809 [main:28] - Try №131 of 521
2021-03-11 12:10:29,823 [main:28] - Try №132 of 521
2021-03-11 12:10:29,832 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:10:29,832 [main:28] - Try №133 of 521
2021-03-11 12:10:29,836 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:29,836 [main:66] - Compilation checking started
2021-03-11 12:10:30,196 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(listOf(7uL), ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : KModel {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:30,196 [main:28] - Try №134 of 521
2021-03-11 12:10:30,207 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:10:30,208 [main:66] - Compilation checking started
2021-03-11 12:10:30,701 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:30,701 [main:28] - Try №135 of 521
2021-03-11 12:10:30,707 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:30,707 [main:66] - Compilation checking started
2021-03-11 12:10:31,066 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, endIndex> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:31,066 [main:28] - Try №136 of 521
2021-03-11 12:10:31,070 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:31,070 [main:66] - Compilation checking started
2021-03-11 12:10:31,427 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Char))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:31,428 [main:28] - Try №137 of 521
2021-03-11 12:10:31,438 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:10:31,439 [main:66] - Compilation checking started
2021-03-11 12:10:31,794 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}("INVISIBLE_MEMBER")
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:31,794 [main:28] - Try №138 of 521
2021-03-11 12:10:31,803 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:10:31,803 [main:28] - Try №139 of 521
2021-03-11 12:10:31,819 [main:28] - Try №140 of 521
2021-03-11 12:10:31,833 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:10:31,834 [main:66] - Compilation checking started
2021-03-11 12:10:32,186 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Range<Int>, Int>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:32,187 [main:28] - Try №141 of 521
2021-03-11 12:10:32,190 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:32,191 [main:66] - Compilation checking started
2021-03-11 12:10:32,543 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.sumC -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:32,543 [main:28] - Try №142 of 521
2021-03-11 12:10:32,556 [main:33] - Trying to replace PsiElement(OPEN_QUOTE) on PsiElement(OPEN_QUOTE)
2021-03-11 12:10:32,557 [main:28] - Try №143 of 521
2021-03-11 12:10:32,567 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:10:32,567 [main:28] - Try №144 of 521
2021-03-11 12:10:32,588 [main:33] - Trying to replace PsiElement(ARROW) on PsiElement(ARROW)
2021-03-11 12:10:32,588 [main:28] - Try №145 of 521
2021-03-11 12:10:32,605 [main:33] - Trying to replace Element(FUNCTION_TYPE) on Element(FUNCTION_TYPE)
2021-03-11 12:10:32,605 [main:66] - Compilation checking started
2021-03-11 12:10:32,969 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> String): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:32,969 [main:28] - Try №146 of 521
2021-03-11 12:10:32,983 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:10:32,984 [main:66] - Compilation checking started
2021-03-11 12:10:33,342 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 0L
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:33,342 [main:28] - Try №147 of 521
2021-03-11 12:10:33,345 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:33,346 [main:66] - Compilation checking started
2021-03-11 12:10:33,727 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (String).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:33,727 [main:28] - Try №148 of 521
2021-03-11 12:10:33,735 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:10:33,735 [main:28] - Try №149 of 521
2021-03-11 12:10:33,747 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:33,747 [main:66] - Compilation checking started
2021-03-11 12:10:34,106 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<suspendCoroutineUninterceptedOrReturn>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:34,106 [main:28] - Try №150 of 521
2021-03-11 12:10:34,116 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:10:34,116 [main:28] - Try №151 of 521
2021-03-11 12:10:34,126 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:34,126 [main:28] - Try №152 of 521
2021-03-11 12:10:34,131 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:10:34,132 [main:66] - Compilation checking started
2021-03-11 12:10:34,496 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = storage = value
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:34,496 [main:28] - Try №153 of 521
2021-03-11 12:10:34,501 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:10:34,501 [main:28] - Try №154 of 521
2021-03-11 12:10:34,505 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:34,505 [main:66] - Compilation checking started
2021-03-11 12:10:34,877 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).T(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:34,877 [main:28] - Try №155 of 521
2021-03-11 12:10:34,881 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:34,882 [main:66] - Compilation checking started
2021-03-11 12:10:35,230 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : intList {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:35,231 [main:28] - Try №156 of 521
2021-03-11 12:10:35,240 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:10:35,240 [main:28] - Try №157 of 521
2021-03-11 12:10:35,247 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:10:35,248 [main:66] - Compilation checking started
2021-03-11 12:10:35,598 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            a.o -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:35,598 [main:28] - Try №158 of 521
2021-03-11 12:10:35,608 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:10:35,609 [main:28] - Try №159 of 521
2021-03-11 12:10:35,623 [main:28] - Try №160 of 521
2021-03-11 12:10:35,627 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:35,627 [main:66] - Compilation checking started
2021-03-11 12:10:35,997 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), run)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : () -> String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:35,998 [main:28] - Try №161 of 521
2021-03-11 12:10:36,003 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:10:36,004 [main:66] - Compilation checking started
2021-03-11 12:10:36,505 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:36,505 [main:28] - Try №162 of 521
2021-03-11 12:10:36,516 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:10:36,517 [main:66] - Compilation checking started
2021-03-11 12:10:36,874 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<T>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:36,874 [main:28] - Try №163 of 521
2021-03-11 12:10:36,886 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:10:36,887 [main:66] - Compilation checking started
2021-03-11 12:10:37,247 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals(baz<R1>(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:37,247 [main:28] - Try №164 of 521
2021-03-11 12:10:37,265 [main:33] - Trying to replace Element(NULLABLE_TYPE) on Element(NULLABLE_TYPE)
2021-03-11 12:10:37,265 [main:66] - Compilation checking started
2021-03-11 12:10:37,623 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Any?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:37,623 [main:28] - Try №165 of 521
2021-03-11 12:10:37,634 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:37,635 [main:28] - Try №166 of 521
2021-03-11 12:10:37,644 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:10:37,644 [main:66] - Compilation checking started
2021-03-11 12:10:37,999 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return c.checkTrueWithMessage()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:37,999 [main:28] - Try №167 of 521
2021-03-11 12:10:38,003 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:38,003 [main:66] - Compilation checking started
2021-03-11 12:10:38,359 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<test>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:38,359 [main:28] - Try №168 of 521
2021-03-11 12:10:38,367 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:10:38,367 [main:28] - Try №169 of 521
2021-03-11 12:10:38,375 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:38,375 [main:66] - Compilation checking started
2021-03-11 12:10:38,726 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = test("OK")
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:38,726 [main:28] - Try №170 of 521
2021-03-11 12:10:38,732 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:10:38,733 [main:66] - Compilation checking started
2021-03-11 12:10:39,093 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<String>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:39,093 [main:28] - Try №171 of 521
2021-03-11 12:10:39,100 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:39,101 [main:66] - Compilation checking started
2021-03-11 12:10:39,458 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().checkMethodExists(Test2::class.java, "test", Any::class.java))


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:39,458 [main:28] - Try №172 of 521
2021-03-11 12:10:39,481 [main:28] - Try №173 of 521
2021-03-11 12:10:39,492 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:39,493 [main:66] - Compilation checking started
2021-03-11 12:10:39,866 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val f1 = ::fn1 as Any
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:39,867 [main:28] - Try №174 of 521
2021-03-11 12:10:39,870 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:39,870 [main:66] - Compilation checking started
2021-03-11 12:10:40,227 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u A 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:40,228 [main:28] - Try №175 of 521
2021-03-11 12:10:40,237 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:40,238 [main:66] - Compilation checking started
2021-03-11 12:10:40,593 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<s>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:40,593 [main:28] - Try №176 of 521
2021-03-11 12:10:40,604 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:10:40,604 [main:66] - Compilation checking started
2021-03-11 12:10:40,960 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(::sparse))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:40,960 [main:28] - Try №177 of 521
2021-03-11 12:10:40,963 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:40,964 [main:66] - Compilation checking started
2021-03-11 12:10:41,310 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <String> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:41,310 [main:28] - Try №178 of 521
2021-03-11 12:10:41,325 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:10:41,326 [main:66] - Compilation checking started
2021-03-11 12:10:41,689 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:41,689 [main:28] - Try №179 of 521
2021-03-11 12:10:41,706 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:10:41,706 [main:28] - Try №180 of 521
2021-03-11 12:10:41,715 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:41,715 [main:28] - Try №181 of 521
2021-03-11 12:10:41,728 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:10:41,728 [main:66] - Compilation checking started
2021-03-11 12:10:42,083 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(1000000)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:42,083 [main:28] - Try №182 of 521
2021-03-11 12:10:42,086 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:42,087 [main:66] - Compilation checking started
2021-03-11 12:10:42,439 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).EmptyContinuation().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:42,439 [main:28] - Try №183 of 521
2021-03-11 12:10:42,448 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:42,448 [main:66] - Compilation checking started
2021-03-11 12:10:42,816 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).Int().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:42,816 [main:28] - Try №184 of 521
2021-03-11 12:10:42,820 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:42,820 [main:66] - Compilation checking started
2021-03-11 12:10:43,172 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    o("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:43,173 [main:28] - Try №185 of 521
2021-03-11 12:10:43,179 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:43,179 [main:66] - Compilation checking started
2021-03-11 12:10:43,538 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = foo()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:43,538 [main:28] - Try №186 of 521
2021-03-11 12:10:43,541 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:43,542 [main:66] - Compilation checking started
2021-03-11 12:10:43,894 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val charArrayOf = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:43,894 [main:28] - Try №187 of 521
2021-03-11 12:10:43,903 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:43,904 [main:66] - Compilation checking started
2021-03-11 12:10:44,265 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<v>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:44,265 [main:28] - Try №188 of 521
2021-03-11 12:10:44,275 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:10:44,276 [main:66] - Compilation checking started
2021-03-11 12:10:44,630 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run()
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:44,630 [main:28] - Try №189 of 521
2021-03-11 12:10:44,648 [main:33] - Trying to replace Element(WHEN_CONDITION_WITH_EXPRESSION) on Element(WHEN_CONDITION_WITH_EXPRESSION)
2021-03-11 12:10:44,648 [main:66] - Compilation checking started
2021-03-11 12:10:45,030 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            x.compareTo(y) >= 0, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:45,031 [main:28] - Try №190 of 521
2021-03-11 12:10:45,034 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:45,034 [main:66] - Compilation checking started
2021-03-11 12:10:45,394 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (V<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:45,394 [main:28] - Try №191 of 521
2021-03-11 12:10:45,404 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:10:45,404 [main:66] - Compilation checking started
2021-03-11 12:10:45,760 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "kxpjp"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo().toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:45,760 [main:28] - Try №192 of 521
2021-03-11 12:10:45,771 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 12:10:45,772 [main:66] - Compilation checking started
2021-03-11 12:10:46,287 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:46,287 [main:28] - Try №193 of 521
2021-03-11 12:10:46,297 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:46,297 [main:66] - Compilation checking started
2021-03-11 12:10:46,655 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.isEmpty -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:46,655 [main:28] - Try №194 of 521
2021-03-11 12:10:46,666 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:46,667 [main:66] - Compilation checking started
2021-03-11 12:10:47,162 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals("winter_spring", (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:47,162 [main:28] - Try №195 of 521
2021-03-11 12:10:47,174 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:10:47,175 [main:66] - Compilation checking started
2021-03-11 12:10:47,673 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:47,673 [main:28] - Try №196 of 521
2021-03-11 12:10:47,683 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:47,683 [main:28] - Try №197 of 521
2021-03-11 12:10:47,688 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:47,689 [main:66] - Compilation checking started
2021-03-11 12:10:48,053 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = uintList()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:48,053 [main:28] - Try №198 of 521
2021-03-11 12:10:48,057 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:10:48,057 [main:28] - Try №199 of 521
2021-03-11 12:10:48,063 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:10:48,064 [main:66] - Compilation checking started
2021-03-11 12:10:48,565 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:48,565 [main:28] - Try №200 of 521
2021-03-11 12:10:48,570 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:48,571 [main:66] - Compilation checking started
2021-03-11 12:10:48,953 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<String>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:48,953 [main:28] - Try №201 of 521
2021-03-11 12:10:48,956 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:48,957 [main:66] - Compilation checking started
2021-03-11 12:10:49,319 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(String.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:49,319 [main:28] - Try №202 of 521
2021-03-11 12:10:49,330 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:49,331 [main:66] - Compilation checking started
2021-03-11 12:10:49,684 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val invokes = clazz.getDeclaredMethods().single() { !it.isBridge() }
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:49,684 [main:28] - Try №203 of 521
2021-03-11 12:10:49,701 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(PARENTHESIZED)
2021-03-11 12:10:49,701 [main:66] - Compilation checking started
2021-03-11 12:10:50,053 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (p == null).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:50,054 [main:28] - Try №204 of 521
2021-03-11 12:10:50,059 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:10:50,060 [main:66] - Compilation checking started
2021-03-11 12:10:50,434 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:String, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:50,434 [main:28] - Try №205 of 521
2021-03-11 12:10:50,438 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:50,438 [main:28] - Try №206 of 521
2021-03-11 12:10:50,445 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:10:50,445 [main:66] - Compilation checking started
2021-03-11 12:10:50,798 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", this.inc().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:50,798 [main:28] - Try №207 of 521
2021-03-11 12:10:50,802 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:50,802 [main:66] - Compilation checking started
2021-03-11 12:10:51,159 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun assertTrue(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:51,159 [main:28] - Try №208 of 521
2021-03-11 12:10:51,165 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:10:51,165 [main:28] - Try №209 of 521
2021-03-11 12:10:51,169 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:51,169 [main:66] - Compilation checking started
2021-03-11 12:10:51,528 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = bar<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:51,528 [main:28] - Try №210 of 521
2021-03-11 12:10:51,532 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:51,533 [main:66] - Compilation checking started
2021-03-11 12:10:51,886 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> bar): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:51,886 [main:28] - Try №211 of 521
2021-03-11 12:10:51,895 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:51,895 [main:28] - Try №212 of 521
2021-03-11 12:10:51,903 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:10:51,904 [main:28] - Try №213 of 521
2021-03-11 12:10:51,915 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:51,915 [main:28] - Try №214 of 521
2021-03-11 12:10:51,924 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:10:51,924 [main:28] - Try №215 of 521
2021-03-11 12:10:51,927 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:51,928 [main:66] - Compilation checking started
2021-03-11 12:10:52,283 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified minusZero, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:52,283 [main:28] - Try №216 of 521
2021-03-11 12:10:52,294 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:52,294 [main:66] - Compilation checking started
2021-03-11 12:10:52,658 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
    null is Ty0
    run({ run({ null})})
}

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val p = Value("O", "K")
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:52,658 [main:28] - Try №217 of 521
2021-03-11 12:10:52,674 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:10:52,674 [main:66] - Compilation checking started
2021-03-11 12:10:53,185 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:53,185 [main:28] - Try №218 of 521
2021-03-11 12:10:53,195 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:53,195 [main:66] - Compilation checking started
2021-03-11 12:10:53,555 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(S).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:53,555 [main:28] - Try №219 of 521
2021-03-11 12:10:53,562 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:10:53,562 [main:66] - Compilation checking started
2021-03-11 12:10:53,926 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { {
    val a = (::A).call("OK")
    return a.result
}})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:53,927 [main:28] - Try №220 of 521
2021-03-11 12:10:53,933 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:53,933 [main:66] - Compilation checking started
2021-03-11 12:10:54,287 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = foo()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:54,287 [main:28] - Try №221 of 521
2021-03-11 12:10:54,299 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:54,299 [main:28] - Try №222 of 521
2021-03-11 12:10:54,304 [main:33] - Trying to replace PsiElement(COLON) on PsiElement(COLON)
2021-03-11 12:10:54,304 [main:28] - Try №223 of 521
2021-03-11 12:10:54,312 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:10:54,312 [main:28] - Try №224 of 521
2021-03-11 12:10:54,328 [main:28] - Try №225 of 521
2021-03-11 12:10:54,339 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:10:54,340 [main:66] - Compilation checking started
2021-03-11 12:10:54,695 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val aFloat = A<Float>(1.0f)
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:54,695 [main:28] - Try №226 of 521
2021-03-11 12:10:54,698 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:54,699 [main:66] - Compilation checking started
2021-03-11 12:10:55,054 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.File(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:55,054 [main:28] - Try №227 of 521
2021-03-11 12:10:55,064 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:55,064 [main:66] - Compilation checking started
2021-03-11 12:10:55,437 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> KFunction) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:55,437 [main:28] - Try №228 of 521
2021-03-11 12:10:55,447 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:10:55,447 [main:66] - Compilation checking started
2021-03-11 12:10:55,806 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<String?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:55,806 [main:28] - Try №229 of 521
2021-03-11 12:10:55,813 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:10:55,814 [main:66] - Compilation checking started
2021-03-11 12:10:56,167 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, kotlin.coroutines)
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:56,167 [main:28] - Try №230 of 521
2021-03-11 12:10:56,172 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:56,173 [main:66] - Compilation checking started
2021-03-11 12:10:56,544 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(Controller: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:56,545 [main:28] - Try №231 of 521
2021-03-11 12:10:56,548 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:56,548 [main:28] - Try №232 of 521
2021-03-11 12:10:56,553 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:10:56,554 [main:66] - Compilation checking started
2021-03-11 12:10:56,926 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = this == 1.0
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:56,926 [main:28] - Try №233 of 521
2021-03-11 12:10:56,935 [main:33] - Trying to replace Element(OPERATION_REFERENCE) on Element(OPERATION_REFERENCE)
2021-03-11 12:10:56,936 [main:66] - Compilation checking started
2021-03-11 12:10:57,295 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL = 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:57,295 [main:28] - Try №234 of 521
2021-03-11 12:10:57,305 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:57,305 [main:66] - Compilation checking started
2021-03-11 12:10:57,668 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            map.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:57,668 [main:28] - Try №235 of 521
2021-03-11 12:10:57,682 [main:33] - Trying to replace PsiElement(CLOSING_QUOTE) on PsiElement(CLOSING_QUOTE)
2021-03-11 12:10:57,682 [main:28] - Try №236 of 521
2021-03-11 12:10:57,685 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:57,685 [main:66] - Compilation checking started
2021-03-11 12:10:58,039 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = b<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:58,039 [main:28] - Try №237 of 521
2021-03-11 12:10:58,048 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:10:58,049 [main:66] - Compilation checking started
2021-03-11 12:10:58,407 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (kotlin<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:58,407 [main:28] - Try №238 of 521
2021-03-11 12:10:58,411 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:10:58,412 [main:66] - Compilation checking started
2021-03-11 12:10:58,766 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class d  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:58,766 [main:28] - Try №239 of 521
2021-03-11 12:10:58,786 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:10:58,787 [main:66] - Compilation checking started
2021-03-11 12:10:59,149 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 128
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:59,149 [main:28] - Try №240 of 521
2021-03-11 12:10:59,159 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:10:59,160 [main:66] - Compilation checking started
2021-03-11 12:10:59,520 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals()
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:59,520 [main:28] - Try №241 of 521
2021-03-11 12:10:59,526 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:59,526 [main:66] - Compilation checking started
2021-03-11 12:10:59,893 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = bar()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:10:59,893 [main:28] - Try №242 of 521
2021-03-11 12:10:59,899 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:10:59,899 [main:66] - Compilation checking started
2021-03-11 12:11:00,252 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (foo()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:00,252 [main:28] - Try №243 of 521
2021-03-11 12:11:00,258 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:11:00,258 [main:66] - Compilation checking started
2021-03-11 12:11:00,635 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : Int {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(58596772)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:00,635 [main:28] - Try №244 of 521
2021-03-11 12:11:00,650 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:11:00,650 [main:66] - Compilation checking started
2021-03-11 12:11:01,159 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:01,159 [main:28] - Try №245 of 521
2021-03-11 12:11:01,166 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:11:01,166 [main:66] - Compilation checking started
2021-03-11 12:11:01,518 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <reified Ty0> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().le(42L, ONEL), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:01,518 [main:28] - Try №246 of 521
2021-03-11 12:11:01,524 [main:33] - Trying to replace Element(TYPE_PARAMETER) on Element(TYPE_PARAMETER)
2021-03-11 12:11:01,525 [main:66] - Compilation checking started
2021-03-11 12:11:02,024 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:02,025 [main:28] - Try №247 of 521
2021-03-11 12:11:02,040 [main:28] - Try №248 of 521
2021-03-11 12:11:02,049 [main:33] - Trying to replace PsiElement(COMMA) on PsiElement(COMMA)
2021-03-11 12:11:02,049 [main:28] - Try №249 of 521
2021-03-11 12:11:02,058 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:11:02,058 [main:28] - Try №250 of 521
2021-03-11 12:11:02,069 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:11:02,069 [main:66] - Compilation checking started
2021-03-11 12:11:02,428 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
val ref = ::foo
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:02,428 [main:28] - Try №251 of 521
2021-03-11 12:11:02,436 [main:33] - Trying to replace PsiElement(LBRACE) on PsiElement(LBRACE)
2021-03-11 12:11:02,436 [main:28] - Try №252 of 521
2021-03-11 12:11:02,450 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:11:02,450 [main:28] - Try №253 of 521
2021-03-11 12:11:02,461 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:11:02,461 [main:66] - Compilation checking started
2021-03-11 12:11:02,815 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
private var s2: String
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:02,815 [main:28] - Try №254 of 521
2021-03-11 12:11:02,832 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:11:02,832 [main:66] - Compilation checking started
2021-03-11 12:11:03,217 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { it.name == "bbb" }), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("ukdqv", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:03,217 [main:28] - Try №255 of 521
2021-03-11 12:11:03,229 [main:33] - Trying to replace Element(LITERAL_STRING_TEMPLATE_ENTRY) on Element(LITERAL_STRING_TEMPLATE_ENTRY)
2021-03-11 12:11:03,230 [main:66] - Compilation checking started
2021-03-11 12:11:03,732 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, rangeTo : String) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:03,732 [main:28] - Try №256 of 521
2021-03-11 12:11:03,740 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-11 12:11:03,740 [main:66] - Compilation checking started
2021-03-11 12:11:04,262 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<UInt>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:04,262 [main:28] - Try №257 of 521
2021-03-11 12:11:04,276 [main:33] - Trying to replace Element(TYPE_PROJECTION) on Element(TYPE_PROJECTION)
2021-03-11 12:11:04,277 [main:66] - Compilation checking started
2021-03-11 12:11:04,785 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(((0.3477862470832853))?.toChar().titlecase(), "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:04,786 [main:28] - Try №258 of 521
2021-03-11 12:11:04,789 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:04,789 [main:28] - Try №259 of 521
2021-03-11 12:11:04,796 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:11:04,796 [main:66] - Compilation checking started
2021-03-11 12:11:05,333 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified(crossinline tasksFactory: () -> String) = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:05,333 [main:28] - Try №260 of 521
2021-03-11 12:11:05,338 [main:33] - Trying to replace Element(VALUE_PARAMETER_LIST) on Element(VALUE_PARAMETER_LIST)
2021-03-11 12:11:05,339 [main:66] - Compilation checking started
2021-03-11 12:11:05,886 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
        ulongList += i
    }
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:05,886 [main:28] - Try №261 of 521
2021-03-11 12:11:05,900 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:11:05,901 [main:28] - Try №262 of 521
2021-03-11 12:11:05,907 [main:33] - Trying to replace BLOCK on BLOCK
2021-03-11 12:11:05,908 [main:66] - Compilation checking started
2021-03-11 12:11:06,431 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:06,431 [main:28] - Try №263 of 521
2021-03-11 12:11:06,447 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:11:06,447 [main:66] - Compilation checking started
2021-03-11 12:11:06,820 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<test1>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:06,820 [main:28] - Try №264 of 521
2021-03-11 12:11:06,834 [main:33] - Trying to replace PsiElement(REGULAR_STRING_PART) on PsiElement(REGULAR_STRING_PART)
2021-03-11 12:11:06,834 [main:28] - Try №265 of 521
2021-03-11 12:11:06,844 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:11:06,845 [main:66] - Compilation checking started
2021-03-11 12:11:07,365 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:07,365 [main:28] - Try №266 of 521
2021-03-11 12:11:07,382 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:11:07,382 [main:66] - Compilation checking started
2021-03-11 12:11:07,785 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).parameters().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:07,786 [main:28] - Try №267 of 521
2021-03-11 12:11:07,795 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:11:07,795 [main:28] - Try №268 of 521
2021-03-11 12:11:07,799 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:07,799 [main:28] - Try №269 of 521
2021-03-11 12:11:07,809 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:11:07,809 [main:66] - Compilation checking started
2021-03-11 12:11:08,176 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val m = mapOf<A, String>()
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:08,176 [main:28] - Try №270 of 521
2021-03-11 12:11:08,190 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:11:08,190 [main:66] - Compilation checking started
2021-03-11 12:11:08,567 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41,
                  40, 39, 38, 37, 36, jj = 35, kk = 34, ll = 33, mm = 32, nn = 31, oo = 30, pp = 29, qq = 28, rr = 27, ss = 26, tt = 25,
                  uu = 24, vv = 23, ww = 22, xx = 21, yy = 20, zz = 19, aaa = 18, bbb = 17, ccc = 16, ddd = 15, eee = 14, fff = 13,
                  ggg = 12, hhh = 11, iii = 10, jjj = 9, kkk = 8, lll = 7, mmm = 6, nnn = 5, ooo = 4, ppp = 3, qqq = 2, rrr = 1)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:08,567 [main:28] - Try №271 of 521
2021-03-11 12:11:08,577 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:11:08,577 [main:66] - Compilation checking started
2021-03-11 12:11:08,937 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, Int<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(7, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:08,937 [main:28] - Try №272 of 521
2021-03-11 12:11:08,952 [main:33] - Trying to replace PsiElement(INTEGER_LITERAL) on PsiElement(INTEGER_LITERAL)
2021-03-11 12:11:08,953 [main:66] - Compilation checking started
2021-03-11 12:11:09,462 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:09,462 [main:28] - Try №273 of 521
2021-03-11 12:11:09,473 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:11:09,473 [main:66] - Compilation checking started
2021-03-11 12:11:09,832 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<String>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:09,832 [main:28] - Try №274 of 521
2021-03-11 12:11:09,837 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-11 12:11:09,838 [main:66] - Compilation checking started
2021-03-11 12:11:10,196 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = o + k
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:10,196 [main:28] - Try №275 of 521
2021-03-11 12:11:10,209 [main:33] - Trying to replace Element(TYPE_ARGUMENT_LIST) on Element(TYPE_ARGUMENT_LIST)
2021-03-11 12:11:10,210 [main:66] - Compilation checking started
2021-03-11 12:11:10,570 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Any>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:10,571 [main:28] - Try №276 of 521
2021-03-11 12:11:10,574 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:10,575 [main:28] - Try №277 of 521
2021-03-11 12:11:10,578 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:10,578 [main:66] - Compilation checking started
2021-03-11 12:11:10,933 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<test>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:10,934 [main:28] - Try №278 of 521
2021-03-11 12:11:10,945 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:11:10,945 [main:66] - Compilation checking started
2021-03-11 12:11:11,303 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, "A"), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:11,303 [main:28] - Try №279 of 521
2021-03-11 12:11:11,318 [main:28] - Try №280 of 521
2021-03-11 12:11:11,329 [main:33] - Trying to replace Element(VALUE_ARGUMENT) on Element(VALUE_ARGUMENT)
2021-03-11 12:11:11,330 [main:66] - Compilation checking started
2021-03-11 12:11:11,685 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3("2", { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:11,685 [main:28] - Try №281 of 521
2021-03-11 12:11:11,691 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:11:11,692 [main:66] - Compilation checking started
2021-03-11 12:11:12,044 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Nullable>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:12,044 [main:28] - Try №282 of 521
2021-03-11 12:11:12,048 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:12,049 [main:28] - Try №283 of 521
2021-03-11 12:11:12,052 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:12,052 [main:66] - Compilation checking started
2021-03-11 12:11:12,411 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return run
}


2021-03-11 12:11:12,411 [main:28] - Try №284 of 521
2021-03-11 12:11:12,428 [main:33] - Trying to replace Element(FUNCTION_LITERAL) on Element(FUNCTION_LITERAL)
2021-03-11 12:11:12,429 [main:66] - Compilation checking started
2021-03-11 12:11:12,792 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 {
        val base: Base<*> = Derived2()
        res = base.generic()
    }
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:12,792 [main:28] - Try №285 of 521
2021-03-11 12:11:12,803 [main:33] - Trying to replace Element(PROPERTY) on Element(PROPERTY)
2021-03-11 12:11:12,804 [main:66] - Compilation checking started
2021-03-11 12:11:13,172 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    // FILE: test.kt
val withAssertion = J().nullString()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:13,172 [main:28] - Try №286 of 521
2021-03-11 12:11:13,175 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:13,176 [main:66] - Compilation checking started
2021-03-11 12:11:13,532 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).iv(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:13,532 [main:28] - Try №287 of 521
2021-03-11 12:11:13,540 [main:33] - Trying to replace PsiElement(RBRACE) on PsiElement(RBRACE)
2021-03-11 12:11:13,541 [main:28] - Try №288 of 521
2021-03-11 12:11:13,557 [main:33] - Trying to replace Element(NULLABLE_TYPE) on Element(NULLABLE_TYPE)
2021-03-11 12:11:13,557 [main:66] - Compilation checking started
2021-03-11 12:11:13,929 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Int?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:13,929 [main:28] - Try №289 of 521
2021-03-11 12:11:13,935 [main:33] - Trying to replace Element(TYPE_REFERENCE) on Element(TYPE_REFERENCE)
2021-03-11 12:11:13,936 [main:66] - Compilation checking started
2021-03-11 12:11:14,294 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<T>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:14,294 [main:28] - Try №290 of 521
2021-03-11 12:11:14,310 [main:28] - Try №291 of 521
2021-03-11 12:11:14,319 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:11:14,319 [main:66] - Compilation checking started
2021-03-11 12:11:14,676 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = V3<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:14,676 [main:28] - Try №292 of 521
2021-03-11 12:11:14,679 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:14,680 [main:66] - Compilation checking started
2021-03-11 12:11:15,204 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(arg:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val Int = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:15,204 [main:28] - Try №293 of 521
2021-03-11 12:11:15,209 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:15,210 [main:66] - Compilation checking started
2021-03-11 12:11:15,728 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(box:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val Int = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:15,728 [main:28] - Try №294 of 521
2021-03-11 12:11:15,737 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:11:15,737 [main:66] - Compilation checking started
2021-03-11 12:11:16,109 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(box:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val Int = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (append<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke().padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:16,109 [main:28] - Try №295 of 521
2021-03-11 12:11:16,112 [main:33] - Trying to replace PsiElement(IDENTIFIER) on PsiElement(IDENTIFIER)
2021-03-11 12:11:16,113 [main:28] - Try №296 of 521
2021-03-11 12:11:16,129 [main:28] - Try №297 of 521
2021-03-11 12:11:16,139 [main:33] - Trying to replace Element(VALUE_ARGUMENT_LIST) on Element(VALUE_ARGUMENT_LIST)
2021-03-11 12:11:16,140 [main:66] - Compilation checking started
2021-03-11 12:11:16,513 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.test.assertEquals


fun box(): String {
    val uintList = mutableListOf<Any?>()
    val uintProgression = 7u downTo 1u
    for (i in uintProgression step 7) {
        uintList += i
    }
    assertEquals(listOf(7u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 7uL downTo 1uL
    for (i in ulongProgression step 7L) {
    var cycle = true;
    while (true) {
        if (true && break) {
            return "fail"
        }
    }
    return "OK"
}
    assertEquals(4, ulongList)

    return "OK"
}

inline fun <reified Ty0, Ty1> genericWithReified() = {
        for (i in 1 until 8 step 0) {
        }
    }

public inline fun <Ty1> fu1(f: () -> Ty1): Ty1 = f()

inline fun <T> fu2() = { "O"}

fun box142(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
var n = 2L
val Friend = 7uL downTo 1uL
return { "ebdjj"}()
}

fun box786() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
    return (ulongProgression).first.toString(-593531369)
}

fun fu3(box:Int, f :  () -> Int) : Int {
    val uintList = mutableListOf<Int>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Char>()
val ulongProgression = 7uL downTo 1uL
return ({ "ebdjj"}).invoke().toInt()
}

inline fun fu4(init: Kla0.() -> Unit) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<Throwable>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return Kla0().init()
}

var prope3 = "fail"

class Kla0 {
    fun fu5() {

}
}

class Kla1  {
    fun fu6() {
        val uintList = mutableListOf<String>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL + 1uL
val prope0 = 7
fu4 { println()}
    }

    public fun <Ty2, Ty3> Ty2.fu7(block: Ty2.() -> Ty3): Ty3 {
        val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
return block()
    }

}

fun box479(): String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val Long = 7uL downTo 1uL
val prope0 = 7
Kla1().fu6()
    return prope3
}

enum class Kla2 {
    Kla4,
    Kla5,
    Kla6,
    Kla7
}

class Kla3 {
    public fun fu8(Int : Kla2) : String {
        val uintList = mutableListOf<Any>()
var aa = 1
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
when (Kla2.Kla6) {
            Kla2.Kla4, Kla2.Kla5 -> return (86.toUByte()).toShort().toString(510766703)
            Kla2.Kla7 -> return ((ulongProgression).first).compareTo(58596772.toUByte()).toString(598686525)
            Kla2.Kla6 -> return (fu1<Char>({ (fu1<Char>({ '㥩'}))})).titlecase()
        }

        return (Triple<Float, Array<Kla1?>, Long>(0.7274546f, arrayOf<Kla1?>(), 8952740062004656942))?.second.contentDeepToString();
    }

    public fun fu9(y : Kla2) : String {
        val Int = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL < 1uL
val prope0 = 7
var prope3 = "fail"
return (uintProgression).first.toString(7)
    }

    private fun fu10(x : Kla2, a: Int) = (fu1<Char>({ '鲔'})).toByte().toString(0)
}

fun box939() : String {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
var prope3 = "fail"
val prope4 = Kla3()

    assertEquals(0, (fu3((fu3(fu3(7, { -510766703}), { 510766703})), { fu3(2129972429, { 161364729})})).toShort().toString(120))
    assertEquals((fu3(fu3(7, { -510766703}), { 510766703})).toChar().lowercase(), Kla3().fu8(Kla2.Kla7))
    mutableListOf<ULong>()
    assertEquals(Double.NaN, "abc")

    assertEquals("fail 3", ((ulongProgression)).step.toString(161364729))
    assertEquals("winter_spring", ({ "OK"}).invoke().takeLast(1699010763))
    assertEquals("summer", ({ "Fail: "}).invoke(a).padEnd(1492832219, (fu3(0, { -510766703})).toChar()))
    assertEquals((fu3(7, { -510766703})).toChar().uppercase(), (fu2<Kla0>()).invoke().reversed())


    return (fu2<Kla0>()).invoke().trimEnd()
}

fun fu11(a: Any?) {
    val uintList = mutableListOf<UInt>()
val uintProgression = 7u downTo 1u
val ulongList = mutableListOf<ULong>()
val A = 7uL downTo 1uL
val prope0 = 7
var s = ""
var prope3 = "fail"
a as () -> Unit
    Runnable(a).run()
}

fun Long(): String {
    val uintList = mutableListOf<UInt>()
var xl = 0L     // Long, size 2
val ulongList = mutableListOf<ULong>()
val ulongProgression = 7uL downTo 1uL
val prope0 = 7
val prope4 = Kla3()
var prope3 = "fail"
var prope5 = "Fail"
    fu11 { "lambda" }
    return prope5
}


2021-03-11 12:11:16,513 [main:28] - Try №298 of 521
2021-03-11 12:11:16,523 [main:33] - Trying to replace Element(USER_TYPE) on Element(USER_TYPE)
2021-03-11 12:11:16,524 [main:28] - Try №299 of 521
2021-03-11 12:11:16,531 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:11:16,532 [main:66] - Compilation checking started
