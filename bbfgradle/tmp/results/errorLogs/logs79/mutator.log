2021-03-12 04:39:11,849 [main:66] - Compilation checking started
2021-03-12 04:39:13,874 [main:45] - Trying to change 32 nodes
2021-03-12 04:39:13,879 [main:53] - replacing (if (flag) "OK" else "fail1", String)
2021-03-12 04:39:13,879 [main:50] - replacing if (flag) "OK" else "fail1" String
2021-03-12 04:39:13,879 [main:54] - Getting value of type String
2021-03-12 04:39:14,005 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:39:14,010 [main:58] - GENERATED VALUE OF TYPE String = "wxuqv"
2021-03-12 04:39:14,011 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:14,573 [main:67] - randomType = Long
2021-03-12 04:39:14,678 [main:302] - generating value of type = Long true depth = 0
2021-03-12 04:39:14,801 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5f1b963f]
2021-03-12 04:39:14,802 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@44e31c4b]
2021-03-12 04:39:14,952 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:39:14,954 [main:78] - Generated call from random type = (-5256905712190781949).toChar().plus("fqvwf")
2021-03-12 04:39:14,954 [main:61] - replacement of if (flag) "OK" else "fail1" of type String is (-5256905712190781949).toChar().plus("fqvwf")
2021-03-12 04:39:15,125 [main:33] - Trying to replace Element(IF) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:15,126 [main:66] - Compilation checking started
2021-03-12 04:39:15,981 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}
2021-03-12 04:39:15,983 [main:53] - replacing (false, Boolean)
2021-03-12 04:39:15,984 [main:50] - replacing false Boolean
2021-03-12 04:39:15,984 [main:54] - Getting value of type Boolean
2021-03-12 04:39:16,154 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:16,155 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 04:39:16,155 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:16,293 [main:67] - randomType = Char
2021-03-12 04:39:16,410 [main:302] - generating value of type = Char true depth = 0
2021-03-12 04:39:16,454 [main:149] - GENERATING call of type public final fun toDouble(): kotlin.Double defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@5529c12a]
2021-03-12 04:39:16,454 [main:149] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@65ab4a9d]
2021-03-12 04:39:16,455 [main:78] - Generated call from random type = ('Â∑è').toDouble().isInfinite()
2021-03-12 04:39:16,455 [main:106] - GETTING Boolean from Boolean
2021-03-12 04:39:16,471 [main:113] - Case = [public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:16,471 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:16,472 [main:117] - GENERATED CALL = (flagOuter).not()
2021-03-12 04:39:16,472 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:16,472 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:16,588 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:16,588 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:16,711 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:16,712 [main:117] - GENERATED CALL = (flagOuter).equals("dcwam").equals("wqocd")
2021-03-12 04:39:16,713 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:16,713 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:16,850 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:16,851 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:16,852 [main:117] - GENERATED CALL = (flagOuter).equals("pwrve").xor(flagOuter)
2021-03-12 04:39:16,852 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:16,852 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:16,962 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:16,963 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:16,963 [main:117] - GENERATED CALL = (flagOuter).equals("rzgip").not()
2021-03-12 04:39:16,963 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]]
2021-03-12 04:39:16,963 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:17,065 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:17,066 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]
2021-03-12 04:39:17,184 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:17,185 [main:117] - GENERATED CALL = (flagOuter).compareTo(true).equals("tvsda")
2021-03-12 04:39:17,185 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:17,185 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:17,303 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:17,304 [main:117] - GENERATED CALL = (flagOuter).equals("emask")
2021-03-12 04:39:17,304 [main:113] - Case = [public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:17,304 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:17,413 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:17,414 [main:117] - GENERATED CALL = (flagOuter).xor(false)
2021-03-12 04:39:17,415 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:17,415 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:17,550 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:17,550 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:17,663 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:17,665 [main:117] - GENERATED CALL = (flagOuter).equals("tkdac").or(true)
2021-03-12 04:39:17,665 [main:113] - Case = [public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:17,665 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:17,666 [main:117] - GENERATED CALL = (flagOuter).or(flagOuter)
2021-03-12 04:39:17,666 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:17,667 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:17,767 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:17,768 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:17,769 [main:117] - GENERATED CALL = (flagOuter).equals("bxdfl").and(test())
2021-03-12 04:39:17,769 [main:61] - replacement of false of type Boolean is (flagOuter).equals("tkdac").or(true)
2021-03-12 04:39:17,884 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:17,885 [main:66] - Compilation checking started
2021-03-12 04:39:18,285 [main:49] - Result = false
Text:
fun test(): Boolean {
    var flagOuter = (flagOuter).equals("tkdac").or(true)
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}
2021-03-12 04:39:18,287 [main:53] - replacing (flagInner, Boolean)
2021-03-12 04:39:18,287 [main:50] - replacing flagInner Boolean
2021-03-12 04:39:18,287 [main:54] - Getting value of type Boolean
2021-03-12 04:39:18,388 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:18,389 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 04:39:18,389 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:18,734 [main:67] - randomType = Collection<Float?>
2021-03-12 04:39:18,734 [main:106] - GETTING Boolean from Boolean
2021-03-12 04:39:18,750 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:18,751 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:18,852 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:18,853 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:18,854 [main:117] - GENERATED CALL = (flagOuter).equals("rbfrz").and(flagOuter)
2021-03-12 04:39:18,854 [main:113] - Case = [public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:18,854 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:18,854 [main:117] - GENERATED CALL = (flagOuter).and(test())
2021-03-12 04:39:18,855 [main:113] - Case = [public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:18,855 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:18,855 [main:117] - GENERATED CALL = (flagOuter).not()
2021-03-12 04:39:18,855 [main:113] - Case = [public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:18,855 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:18,856 [main:117] - GENERATED CALL = (flagOuter).or(flagInner)
2021-03-12 04:39:18,856 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:18,856 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:18,976 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:18,976 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:18,977 [main:117] - GENERATED CALL = (flagOuter).equals("xoqzn").xor(test())
2021-03-12 04:39:18,977 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]]
2021-03-12 04:39:18,978 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:19,085 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:19,086 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]
2021-03-12 04:39:19,187 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:19,188 [main:117] - GENERATED CALL = (flagOuter).compareTo(true).equals("sfbpv")
2021-03-12 04:39:19,188 [main:113] - Case = [public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:19,188 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:19,306 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:19,307 [main:117] - GENERATED CALL = (flagOuter).xor(false)
2021-03-12 04:39:19,308 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:19,308 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:19,413 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:19,414 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:19,414 [main:117] - GENERATED CALL = (flagOuter).equals("wchvc").not()
2021-03-12 04:39:19,414 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:19,415 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:19,508 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:19,509 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:19,618 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:19,619 [main:117] - GENERATED CALL = (flagOuter).equals("otadq").equals("kmpdy")
2021-03-12 04:39:19,620 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:19,620 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:19,724 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:19,725 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:19,725 [main:117] - GENERATED CALL = (flagOuter).equals("cbwgo").or(test())
2021-03-12 04:39:19,726 [main:61] - replacement of flagInner of type Boolean is (flagOuter).equals("rbfrz").and(flagOuter)
2021-03-12 04:39:19,816 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:19,817 [main:66] - Compilation checking started
2021-03-12 04:39:20,283 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and (flagOuter).equals("rbfrz").and(flagOuter)
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}
2021-03-12 04:39:20,286 [main:53] - replacing (4, Int)
2021-03-12 04:39:20,286 [main:50] - replacing 4 Int
2021-03-12 04:39:20,286 [main:54] - Getting value of type Int
2021-03-12 04:39:20,422 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:20,422 [main:58] - GENERATED VALUE OF TYPE Int = 919796645
2021-03-12 04:39:20,423 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:20,536 [main:67] - randomType = UShort
2021-03-12 04:39:20,630 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 04:39:20,686 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@42a33581]
2021-03-12 04:39:20,776 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 04:39:20,777 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50fa8c92]
2021-03-12 04:39:20,877 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:20,877 [main:78] - Generated call from random type = (20879.toUShort()).compareTo(93.toUByte()).xor(-1282101960)
2021-03-12 04:39:20,887 [main:106] - GETTING Int from Boolean
2021-03-12 04:39:20,907 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@457a8955]]
2021-03-12 04:39:20,907 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:20,908 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@457a8955]
2021-03-12 04:39:21,000 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:21,000 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).plus(-116)
2021-03-12 04:39:21,001 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@346d8f0a]]
2021-03-12 04:39:21,001 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:21,089 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:21,090 [main:117] - GENERATED CALL = (flagInner).compareTo(false).absoluteValue
2021-03-12 04:39:21,090 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31eb7290]]
2021-03-12 04:39:21,090 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:21,176 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:21,177 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31eb7290]
2021-03-12 04:39:21,177 [main:117] - GENERATED CALL = (flagInner).compareTo(true).countTrailingZeroBits()
2021-03-12 04:39:21,177 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5162cfa4]]
2021-03-12 04:39:21,177 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:21,178 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5162cfa4]
2021-03-12 04:39:21,178 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).inv()
2021-03-12 04:39:21,178 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@22116fe6]]
2021-03-12 04:39:21,178 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:21,178 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@22116fe6]
2021-03-12 04:39:21,264 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:21,265 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).rem(-78)
2021-03-12 04:39:21,265 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]]
2021-03-12 04:39:21,265 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:21,266 [main:117] - GENERATED CALL = (flagInner).compareTo(flagInner)
2021-03-12 04:39:21,266 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@79009ee]]
2021-03-12 04:39:21,266 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:21,266 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@79009ee]
2021-03-12 04:39:21,266 [main:117] - GENERATED CALL = (flagInner).compareTo(flagInner).toInt()
2021-03-12 04:39:21,266 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e09f149]]
2021-03-12 04:39:21,266 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:21,370 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:21,371 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e09f149]
2021-03-12 04:39:21,481 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:21,482 [main:117] - GENERATED CALL = (flagInner).compareTo(false).shl(546186568)
2021-03-12 04:39:21,482 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d0bbae5]]
2021-03-12 04:39:21,482 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:21,482 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d0bbae5]
2021-03-12 04:39:21,482 [main:117] - GENERATED CALL = (flagInner).compareTo(flagInner).dec()
2021-03-12 04:39:21,482 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]]
2021-03-12 04:39:21,482 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:21,483 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]
2021-03-12 04:39:21,483 [main:117] - GENERATED CALL = (flagInner).compareTo(flagInner).unaryPlus()
2021-03-12 04:39:21,483 [main:61] - replacement of 4 of type Int is (flagInner).compareTo(test()).rem(-78)
2021-03-12 04:39:21,570 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:21,570 [main:66] - Compilation checking started
2021-03-12 04:39:21,992 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and (flagOuter).equals("rbfrz").and(flagOuter)
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}
2021-03-12 04:39:21,992 [main:53] - replacing ("fail1", String)
2021-03-12 04:39:21,993 [main:50] - replacing "fail1" String
2021-03-12 04:39:21,993 [main:54] - Getting value of type String
2021-03-12 04:39:22,123 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:39:22,124 [main:58] - GENERATED VALUE OF TYPE String = "unvzv"
2021-03-12 04:39:22,124 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:22,230 [main:67] - randomType = Double
2021-03-12 04:39:22,334 [main:302] - generating value of type = Double true depth = 0
2021-03-12 04:39:22,418 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@10ccf675]
2021-03-12 04:39:22,418 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3f837310]
2021-03-12 04:39:22,419 [main:78] - Generated call from random type = (0.04461650110851578).toChar().lowercase()
2021-03-12 04:39:22,422 [main:106] - GETTING String from Boolean
2021-03-12 04:39:22,443 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]]
2021-03-12 04:39:22,443 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:22,443 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]
2021-03-12 04:39:22,564 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:22,565 [main:117] - GENERATED CALL = (test()).compareTo(test()).toString(468227778)
2021-03-12 04:39:22,565 [main:61] - replacement of "fail1" of type String is "unvzv"
2021-03-12 04:39:22,655 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 04:39:22,656 [main:53] - replacing (0, Int)
2021-03-12 04:39:22,657 [main:50] - replacing 0 Int
2021-03-12 04:39:22,657 [main:54] - Getting value of type Int
2021-03-12 04:39:22,746 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:22,747 [main:58] - GENERATED VALUE OF TYPE Int = 361765716
2021-03-12 04:39:22,747 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:23,002 [main:67] - randomType = Array<ULong>
2021-03-12 04:39:23,090 [main:302] - generating value of type = Array<ULong> false depth = 0
2021-03-12 04:39:23,185 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<ULong> = TODO()
2021-03-12 04:39:23,187 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<ULong> = TODO()
2021-03-12 04:39:23,280 [main:95] - GENERATED = emptyArray<ULong>()
2021-03-12 04:39:23,301 [main:78] - Generated call from random type = (emptyArray<ULong>()).size.sign
2021-03-12 04:39:23,302 [main:106] - GETTING Int from Boolean
2021-03-12 04:39:23,316 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@11f8edb5]]
2021-03-12 04:39:23,316 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:23,317 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@11f8edb5]
2021-03-12 04:39:23,317 [main:117] - GENERATED CALL = (flagInner).compareTo(flagOuter).countLeadingZeroBits()
2021-03-12 04:39:23,317 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@39df2130]]
2021-03-12 04:39:23,317 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:23,317 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@39df2130]
2021-03-12 04:39:23,443 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:23,444 [main:117] - GENERATED CALL = (flagInner).compareTo(flagOuter).rotateLeft(-1516458235)
2021-03-12 04:39:23,444 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@23bbb357]]
2021-03-12 04:39:23,444 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:23,445 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).sign
2021-03-12 04:39:23,445 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@22116fe6]]
2021-03-12 04:39:23,445 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:23,538 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:23,539 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@22116fe6]
2021-03-12 04:39:23,627 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:23,628 [main:117] - GENERATED CALL = (flagInner).compareTo(true).rem(-108)
2021-03-12 04:39:23,628 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7e6380]]
2021-03-12 04:39:23,628 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:23,628 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7e6380]
2021-03-12 04:39:23,629 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).unaryMinus()
2021-03-12 04:39:23,629 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2143dff1]]
2021-03-12 04:39:23,629 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:23,629 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2143dff1]
2021-03-12 04:39:23,716 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:23,717 [main:117] - GENERATED CALL = (flagInner).compareTo(flagInner).shr(-1540797224)
2021-03-12 04:39:23,717 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3d255920]]
2021-03-12 04:39:23,717 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:23,717 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3d255920]
2021-03-12 04:39:23,803 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:23,804 [main:117] - GENERATED CALL = (flagInner).compareTo(flagOuter).or(453603599)
2021-03-12 04:39:23,804 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2dec2b42]]
2021-03-12 04:39:23,804 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:23,905 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:23,906 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2dec2b42]
2021-03-12 04:39:23,996 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:23,997 [main:117] - GENERATED CALL = (flagInner).compareTo(false).coerceAtMost(1600735849)
2021-03-12 04:39:23,997 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@15731d4f]]
2021-03-12 04:39:23,997 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:24,084 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:24,084 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@15731d4f]
2021-03-12 04:39:24,173 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:24,174 [main:117] - GENERATED CALL = (flagInner).compareTo(true).coerceAtLeast(913660339)
2021-03-12 04:39:24,174 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]]
2021-03-12 04:39:24,175 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:24,259 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:24,260 [main:117] - GENERATED CALL = (flagInner).compareTo(false)
2021-03-12 04:39:24,260 [main:61] - replacement of 0 of type Int is (flagInner).compareTo(test()).unaryMinus()
2021-03-12 04:39:24,364 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:24,364 [main:66] - Compilation checking started
2021-03-12 04:39:24,746 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and (flagOuter).equals("rbfrz").and(flagOuter)
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:24,748 [main:53] - replacing (1, Int)
2021-03-12 04:39:24,748 [main:50] - replacing 1 Int
2021-03-12 04:39:24,748 [main:54] - Getting value of type Int
2021-03-12 04:39:24,854 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:24,855 [main:58] - GENERATED VALUE OF TYPE Int = -1617001690
2021-03-12 04:39:24,855 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:25,152 [main:67] - randomType = MutableMap<Char, Double?>
2021-03-12 04:39:25,153 [main:106] - GETTING Int from Boolean
2021-03-12 04:39:25,169 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@11f8edb5]]
2021-03-12 04:39:25,169 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,258 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:25,259 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@11f8edb5]
2021-03-12 04:39:25,259 [main:117] - GENERATED CALL = (flagInner).compareTo(false).countLeadingZeroBits()
2021-03-12 04:39:25,259 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1bba2e62]]
2021-03-12 04:39:25,260 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,260 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1bba2e62]
2021-03-12 04:39:25,347 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:25,348 [main:117] - GENERATED CALL = (flagInner).compareTo(flagOuter).compareTo(119)
2021-03-12 04:39:25,348 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2922bf92]]
2021-03-12 04:39:25,348 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,348 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2922bf92]
2021-03-12 04:39:25,348 [main:117] - GENERATED CALL = (flagInner).compareTo(flagInner).takeLowestOneBit()
2021-03-12 04:39:25,349 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@346d8f0a]]
2021-03-12 04:39:25,349 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,349 [main:117] - GENERATED CALL = (flagInner).compareTo(flagOuter).absoluteValue
2021-03-12 04:39:25,349 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cc25917]]
2021-03-12 04:39:25,349 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,349 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cc25917]
2021-03-12 04:39:25,437 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:25,438 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).ushr(809751016)
2021-03-12 04:39:25,438 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e09f149]]
2021-03-12 04:39:25,438 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,438 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e09f149]
2021-03-12 04:39:25,522 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:25,523 [main:117] - GENERATED CALL = (flagInner).compareTo(flagOuter).shl(-329269369)
2021-03-12 04:39:25,523 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@54118bbf]]
2021-03-12 04:39:25,523 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,523 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@54118bbf]
2021-03-12 04:39:25,523 [main:117] - GENERATED CALL = (flagInner).compareTo(flagInner).takeHighestOneBit()
2021-03-12 04:39:25,524 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@39df2130]]
2021-03-12 04:39:25,524 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,524 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@39df2130]
2021-03-12 04:39:25,610 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:25,611 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).rotateLeft(-317075104)
2021-03-12 04:39:25,611 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2dec2b42]]
2021-03-12 04:39:25,612 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,612 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2dec2b42]
2021-03-12 04:39:25,713 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:25,714 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).coerceAtMost(-288068597)
2021-03-12 04:39:25,714 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@32ac5ce1]]
2021-03-12 04:39:25,715 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:25,715 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@32ac5ce1]
2021-03-12 04:39:25,830 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:25,831 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).minus(-16)
2021-03-12 04:39:25,831 [main:61] - replacement of 1 of type Int is (flagInner).compareTo(test()).coerceAtMost(-288068597)
2021-03-12 04:39:25,924 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:25,925 [main:66] - Compilation checking started
2021-03-12 04:39:26,355 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..5) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and (flagOuter).equals("rbfrz").and(flagOuter)
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:26,358 [main:53] - replacing (5, Int)
2021-03-12 04:39:26,358 [main:50] - replacing 5 Int
2021-03-12 04:39:26,358 [main:54] - Getting value of type Int
2021-03-12 04:39:26,452 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:26,452 [main:58] - GENERATED VALUE OF TYPE Int = -166063144
2021-03-12 04:39:26,452 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:26,679 [main:67] - randomType = MutableMap<List<Char>, Int>
2021-03-12 04:39:26,681 [main:106] - GETTING Int from Boolean
2021-03-12 04:39:26,689 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@189c12c4]]
2021-03-12 04:39:26,690 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:26,776 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:26,777 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@189c12c4]
2021-03-12 04:39:26,863 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:26,864 [main:117] - GENERATED CALL = (flagInner).compareTo(false).and(-1345763901)
2021-03-12 04:39:26,864 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]]
2021-03-12 04:39:26,864 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:26,865 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]
2021-03-12 04:39:26,865 [main:117] - GENERATED CALL = (flagInner).compareTo(flagInner).unaryPlus()
2021-03-12 04:39:26,865 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d0bbae5]]
2021-03-12 04:39:26,865 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:26,865 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d0bbae5]
2021-03-12 04:39:26,865 [main:117] - GENERATED CALL = (flagInner).compareTo(test()).dec()
2021-03-12 04:39:26,866 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@23bbb357]]
2021-03-12 04:39:26,866 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:26,952 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:26,953 [main:117] - GENERATED CALL = (flagInner).compareTo(true).sign
2021-03-12 04:39:26,953 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1bba2e62]]
2021-03-12 04:39:26,953 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:27,045 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:27,045 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1bba2e62]
2021-03-12 04:39:27,178 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:27,179 [main:117] - GENERATED CALL = (flagInner).compareTo(true).compareTo(88)
2021-03-12 04:39:27,179 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31c00fe7]]
2021-03-12 04:39:27,179 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:27,269 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:27,270 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31c00fe7]
2021-03-12 04:39:27,270 [main:117] - GENERATED CALL = (flagInner).compareTo(true).countOneBits()
2021-03-12 04:39:27,270 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3d255920]]
2021-03-12 04:39:27,271 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:27,363 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:27,364 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3d255920]
2021-03-12 04:39:27,454 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:27,455 [main:117] - GENERATED CALL = (flagInner).compareTo(false).or(88349495)
2021-03-12 04:39:27,455 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2922bf92]]
2021-03-12 04:39:27,455 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:27,545 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:27,546 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2922bf92]
2021-03-12 04:39:27,546 [main:117] - GENERATED CALL = (flagInner).compareTo(true).takeLowestOneBit()
2021-03-12 04:39:27,546 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@15731d4f]]
2021-03-12 04:39:27,546 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:27,656 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:27,657 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@15731d4f]
2021-03-12 04:39:27,753 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:27,754 [main:117] - GENERATED CALL = (flagInner).compareTo(true).coerceAtLeast(139478626)
2021-03-12 04:39:27,754 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@47951aad]]
2021-03-12 04:39:27,754 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:27,755 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@47951aad]
2021-03-12 04:39:27,842 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:27,933 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:27,934 [main:117] - GENERATED CALL = (flagInner).compareTo(flagOuter).coerceIn(1419710882, -968318423)
2021-03-12 04:39:27,934 [main:61] - replacement of 5 of type Int is (flagInner).compareTo(true).takeLowestOneBit()
2021-03-12 04:39:28,021 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:28,021 [main:66] - Compilation checking started
2021-03-12 04:39:28,376 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and (flagOuter).equals("rbfrz").and(flagOuter)
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:28,376 [main:53] - replacing ("fail1", String)
2021-03-12 04:39:28,376 [main:50] - replacing "fail1" String
2021-03-12 04:39:28,376 [main:54] - Getting value of type String
2021-03-12 04:39:28,463 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:39:28,464 [main:58] - GENERATED VALUE OF TYPE String = "ewqry"
2021-03-12 04:39:28,464 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:28,465 [main:67] - randomType = Long
2021-03-12 04:39:28,551 [main:302] - generating value of type = Long true depth = 0
2021-03-12 04:39:28,590 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2e01a901]
2021-03-12 04:39:28,590 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@39ac9305]
2021-03-12 04:39:28,676 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:28,677 [main:78] - Generated call from random type = (5144400705331710299).toByte().toString(1160525024)
2021-03-12 04:39:28,677 [main:61] - replacement of "fail1" of type String is (5144400705331710299).toByte().toString(1160525024)
2021-03-12 04:39:28,765 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:28,766 [main:53] - replacing (i, Int)
2021-03-12 04:39:28,767 [main:50] - replacing i Int
2021-03-12 04:39:28,767 [main:54] - Getting value of type Int
2021-03-12 04:39:28,885 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:28,886 [main:58] - GENERATED VALUE OF TYPE Int = -1145276049
2021-03-12 04:39:28,886 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:28,887 [main:67] - randomType = Char
2021-03-12 04:39:28,998 [main:302] - generating value of type = Char true depth = 0
2021-03-12 04:39:29,027 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@7973195e]
2021-03-12 04:39:29,119 [main:302] - generating value of type = Char true depth = 0
2021-03-12 04:39:29,120 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@189c12c4]
2021-03-12 04:39:29,212 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:29,213 [main:78] - Generated call from random type = ('?').compareTo('·çº').and(1153377109)
2021-03-12 04:39:29,215 [main:106] - GETTING Int from Boolean
2021-03-12 04:39:29,228 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7e6380]]
2021-03-12 04:39:29,229 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:29,229 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7e6380]
2021-03-12 04:39:29,229 [main:117] - GENERATED CALL = (test()).compareTo(flagInner).unaryMinus()
2021-03-12 04:39:29,229 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e1c5321]]
2021-03-12 04:39:29,229 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:29,229 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e1c5321]
2021-03-12 04:39:29,230 [main:117] - GENERATED CALL = (test()).compareTo(flagInner).inc()
2021-03-12 04:39:29,230 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3d255920]]
2021-03-12 04:39:29,230 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:29,321 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:29,322 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3d255920]
2021-03-12 04:39:29,409 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:29,410 [main:117] - GENERATED CALL = (test()).compareTo(false).or(605405302)
2021-03-12 04:39:29,410 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]]
2021-03-12 04:39:29,410 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:29,511 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:29,512 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:29,612 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:29,612 [main:117] - GENERATED CALL = (test()).equals("oexod").compareTo(true)
2021-03-12 04:39:29,613 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2dec2b42]]
2021-03-12 04:39:29,613 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:29,698 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:29,699 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2dec2b42]
2021-03-12 04:39:29,787 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:29,788 [main:117] - GENERATED CALL = (test()).compareTo(true).coerceAtMost(-1612642674)
2021-03-12 04:39:29,788 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@eee9fa9]]
2021-03-12 04:39:29,788 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:29,879 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:29,880 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@eee9fa9]
2021-03-12 04:39:29,993 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:29,994 [main:117] - GENERATED CALL = (test()).compareTo(true).times(82)
2021-03-12 04:39:29,994 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1bba2e62]]
2021-03-12 04:39:29,994 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:29,995 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1bba2e62]
2021-03-12 04:39:30,089 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:30,090 [main:117] - GENERATED CALL = (test()).compareTo(flagOuter).compareTo(-31)
2021-03-12 04:39:30,090 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]]
2021-03-12 04:39:30,090 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:30,091 [main:117] - GENERATED CALL = (test()).compareTo(flagOuter)
2021-03-12 04:39:30,091 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31eb7290]]
2021-03-12 04:39:30,091 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:30,091 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31eb7290]
2021-03-12 04:39:30,091 [main:117] - GENERATED CALL = (test()).compareTo(flagOuter).countTrailingZeroBits()
2021-03-12 04:39:30,091 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5162cfa4]]
2021-03-12 04:39:30,091 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:30,092 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5162cfa4]
2021-03-12 04:39:30,092 [main:117] - GENERATED CALL = (test()).compareTo(flagInner).inv()
2021-03-12 04:39:30,092 [main:61] - replacement of i of type Int is (test()).compareTo(flagInner).unaryMinus()
2021-03-12 04:39:30,176 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:30,176 [main:66] - Compilation checking started
2021-03-12 04:39:30,515 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and (flagOuter).equals("rbfrz").and(flagOuter)
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:30,516 [main:53] - replacing ("OK", String)
2021-03-12 04:39:30,516 [main:50] - replacing "OK" String
2021-03-12 04:39:30,516 [main:54] - Getting value of type String
2021-03-12 04:39:30,623 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:39:30,623 [main:58] - GENERATED VALUE OF TYPE String = "ykwwa"
2021-03-12 04:39:30,624 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:30,733 [main:67] - randomType = Byte
2021-03-12 04:39:30,844 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:30,890 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@61d4838d]
2021-03-12 04:39:30,890 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@13b7f90b]
2021-03-12 04:39:30,976 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:30,976 [main:78] - Generated call from random type = (-6).toLong().toString(1730786825)
2021-03-12 04:39:30,978 [main:106] - GETTING String from Boolean
2021-03-12 04:39:30,986 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]]
2021-03-12 04:39:30,986 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:30,986 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]
2021-03-12 04:39:31,072 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:31,073 [main:117] - GENERATED CALL = (test()).compareTo(test()).toString(-1137957193)
2021-03-12 04:39:31,073 [main:61] - replacement of "OK" of type String is (test()).compareTo(test()).toString(-1137957193)
2021-03-12 04:39:31,157 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:31,159 [main:53] - replacing (flagInner, Boolean)
2021-03-12 04:39:31,159 [main:50] - replacing flagInner Boolean
2021-03-12 04:39:31,159 [main:54] - Getting value of type Boolean
2021-03-12 04:39:31,250 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:31,251 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 04:39:31,251 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:31,455 [main:67] - randomType = MutableMap<UShort, Char>
2021-03-12 04:39:31,455 [main:106] - GETTING Boolean from Boolean
2021-03-12 04:39:31,464 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]]
2021-03-12 04:39:31,464 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:31,464 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]
2021-03-12 04:39:31,554 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:31,555 [main:117] - GENERATED CALL = (flagInner).compareTo(flagOuter).equals("hhfxi")
2021-03-12 04:39:31,555 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:31,555 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:31,664 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:31,665 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:31,665 [main:117] - GENERATED CALL = (flagInner).equals("xpijv").not()
2021-03-12 04:39:31,665 [main:113] - Case = [public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:31,665 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:31,665 [main:117] - GENERATED CALL = (flagInner).not()
2021-03-12 04:39:31,665 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:31,665 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:31,759 [main:117] - GENERATED CALL = (flagInner).equals(null)
2021-03-12 04:39:31,759 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:31,759 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:31,879 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:31,880 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:31,881 [main:117] - GENERATED CALL = (flagInner).equals("fjstj").and(test())
2021-03-12 04:39:31,881 [main:113] - Case = [public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:31,881 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:31,881 [main:117] - GENERATED CALL = (flagInner).and(test())
2021-03-12 04:39:31,881 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:31,881 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:32,018 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:32,019 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:32,020 [main:117] - GENERATED CALL = (flagInner).equals("evuwc").or(flagOuter)
2021-03-12 04:39:32,020 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:32,020 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:32,129 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:32,129 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:32,260 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:32,261 [main:117] - GENERATED CALL = (flagInner).equals("hjzew").equals("apcxe")
2021-03-12 04:39:32,261 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:32,261 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:32,374 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:32,374 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:32,374 [main:117] - GENERATED CALL = (flagInner).equals("ucojv").xor(test())
2021-03-12 04:39:32,374 [main:113] - Case = [public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:32,374 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:32,375 [main:117] - GENERATED CALL = (flagInner).or(flagOuter)
2021-03-12 04:39:32,375 [main:61] - replacement of flagInner of type Boolean is (flagInner).or(flagOuter)
2021-03-12 04:39:32,457 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:32,458 [main:66] - Compilation checking started
2021-03-12 04:39:32,702 [main:49] - Result = false
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            (flagInner).or(flagOuter) = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and (flagOuter).equals("rbfrz").and(flagOuter)
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:32,704 [main:53] - replacing (flagOuter and (flagOuter).equals("rbfrz").and(flagOuter), Boolean)
2021-03-12 04:39:32,704 [main:50] - replacing flagOuter and (flagOuter).equals("rbfrz").and(flagOuter) Boolean
2021-03-12 04:39:32,704 [main:54] - Getting value of type Boolean
2021-03-12 04:39:32,802 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:32,802 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 04:39:32,803 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:32,894 [main:67] - randomType = Double
2021-03-12 04:39:32,983 [main:302] - generating value of type = Double true depth = 0
2021-03-12 04:39:33,028 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@10ccf675]
2021-03-12 04:39:33,029 [main:149] - GENERATING call of type public fun kotlin.Char.isWhitespace(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@73076ead]
2021-03-12 04:39:33,029 [main:78] - Generated call from random type = (0.6413892108227356).toChar().isWhitespace()
2021-03-12 04:39:33,029 [main:61] - replacement of flagOuter and (flagOuter).equals("rbfrz").and(flagOuter) of type Boolean is (0.6413892108227356).toChar().isWhitespace()
2021-03-12 04:39:33,117 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:33,117 [main:66] - Compilation checking started
2021-03-12 04:39:33,449 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return (0.6413892108227356).toChar().isWhitespace()
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:33,449 [main:53] - replacing (4, Int)
2021-03-12 04:39:33,449 [main:50] - replacing 4 Int
2021-03-12 04:39:33,450 [main:54] - Getting value of type Int
2021-03-12 04:39:33,548 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:33,548 [main:58] - GENERATED VALUE OF TYPE Int = 1821256075
2021-03-12 04:39:33,548 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:33,930 [main:67] - randomType = ArrayDeque<ArrayDeque<Map<String, UInt>>>
2021-03-12 04:39:34,042 [main:302] - generating value of type = ArrayDeque<ArrayDeque<Map<String, UInt>>> false depth = 0
2021-03-12 04:39:34,179 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<ArrayDeque<Map<String, UInt>>>): ArrayDeque<ArrayDeque<Map<String, UInt>>> = TODO()
2021-03-12 04:39:34,181 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<ArrayDeque<Map<String, UInt>>>): ArrayDeque<ArrayDeque<Map<String, UInt>>> = TODO()
2021-03-12 04:39:34,371 [main:302] - generating value of type = Collection<ArrayDeque<Map<String, UInt>>> false depth = 3
2021-03-12 04:39:34,471 [main:43] - GENERATING CALL OF fun <T> listOf(): Collection<ArrayDeque<Map<Strg, UInt>>> = TODO()
2021-03-12 04:39:34,473 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOf(): Collection<ArrayDeque<Map<Strg, UInt>>> = TODO()
2021-03-12 04:39:34,565 [main:95] - GENERATED = listOf<ArrayDeque<Map<String, UInt>>>()
2021-03-12 04:39:34,565 [main:95] - GENERATED = ArrayDeque<ArrayDeque<Map<String, UInt>>>(listOf<ArrayDeque<Map<String, UInt>>>())
2021-03-12 04:39:34,909 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7e6380]
2021-03-12 04:39:34,910 [main:78] - Generated call from random type = (ArrayDeque<ArrayDeque<Map<String, UInt>>>(listOf<ArrayDeque<Map<String, UInt>>>())).modCount.unaryMinus()
2021-03-12 04:39:34,910 [main:61] - replacement of 4 of type Int is (ArrayDeque<ArrayDeque<Map<String, UInt>>>(listOf<ArrayDeque<Map<String, UInt>>>())).modCount.unaryMinus()
2021-03-12 04:39:34,999 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:35,000 [main:53] - replacing ("fail1", String)
2021-03-12 04:39:35,000 [main:50] - replacing "fail1" String
2021-03-12 04:39:35,000 [main:54] - Getting value of type String
2021-03-12 04:39:35,083 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:39:35,084 [main:58] - GENERATED VALUE OF TYPE String = "hdzip"
2021-03-12 04:39:35,084 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:35,353 [main:67] - randomType = MutableMap<Double?, Char?>
2021-03-12 04:39:35,354 [main:106] - GETTING String from Boolean
2021-03-12 04:39:35,364 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]]
2021-03-12 04:39:35,364 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:35,365 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]
2021-03-12 04:39:35,472 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:35,473 [main:117] - GENERATED CALL = (test()).compareTo(test()).toString(2131923719)
2021-03-12 04:39:35,473 [main:61] - replacement of "fail1" of type String is "hdzip"
2021-03-12 04:39:35,564 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 04:39:35,564 [main:53] - replacing (4, Int)
2021-03-12 04:39:35,564 [main:50] - replacing 4 Int
2021-03-12 04:39:35,564 [main:54] - Getting value of type Int
2021-03-12 04:39:35,649 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:35,649 [main:58] - GENERATED VALUE OF TYPE Int = -1421991627
2021-03-12 04:39:35,649 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:35,740 [main:67] - randomType = UByte
2021-03-12 04:39:35,827 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 04:39:35,886 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7b80655e]
2021-03-12 04:39:35,887 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@a5810be]
2021-03-12 04:39:35,969 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:35,970 [main:78] - Generated call from random type = (90.toUByte()).toShort().times(-96)
2021-03-12 04:39:35,970 [main:106] - GETTING Int from Boolean
2021-03-12 04:39:35,979 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31c00fe7]]
2021-03-12 04:39:35,979 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:35,979 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31c00fe7]
2021-03-12 04:39:35,980 [main:117] - GENERATED CALL = (test()).compareTo(test()).countOneBits()
2021-03-12 04:39:35,980 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]]
2021-03-12 04:39:35,980 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:35,980 [main:117] - GENERATED CALL = (test()).compareTo(test())
2021-03-12 04:39:35,980 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7e6380]]
2021-03-12 04:39:35,980 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:35,980 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7e6380]
2021-03-12 04:39:35,980 [main:117] - GENERATED CALL = (test()).compareTo(test()).unaryMinus()
2021-03-12 04:39:35,980 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3bad9493]]
2021-03-12 04:39:35,981 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:35,981 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3bad9493]
2021-03-12 04:39:36,064 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:36,065 [main:117] - GENERATED CALL = (test()).compareTo(test()).rotateRight(-1888114052)
2021-03-12 04:39:36,065 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50fa8c92]]
2021-03-12 04:39:36,065 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:36,168 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:36,169 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50fa8c92]
2021-03-12 04:39:36,280 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:36,281 [main:117] - GENERATED CALL = (test()).compareTo(false).xor(1934334875)
2021-03-12 04:39:36,281 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@39df2130]]
2021-03-12 04:39:36,281 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:36,372 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:36,373 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@39df2130]
2021-03-12 04:39:36,453 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:36,454 [main:117] - GENERATED CALL = (test()).compareTo(false).rotateLeft(-982553263)
2021-03-12 04:39:36,454 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e09f149]]
2021-03-12 04:39:36,454 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:36,454 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e09f149]
2021-03-12 04:39:36,533 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:36,534 [main:117] - GENERATED CALL = (test()).compareTo(test()).shl(-1899406215)
2021-03-12 04:39:36,534 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@346d8f0a]]
2021-03-12 04:39:36,534 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:36,534 [main:117] - GENERATED CALL = (test()).compareTo(test()).absoluteValue
2021-03-12 04:39:36,534 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]]
2021-03-12 04:39:36,534 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:36,534 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]
2021-03-12 04:39:36,535 [main:117] - GENERATED CALL = (test()).compareTo(test()).unaryPlus()
2021-03-12 04:39:36,535 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@11f8edb5]]
2021-03-12 04:39:36,535 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:36,535 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@11f8edb5]
2021-03-12 04:39:36,535 [main:117] - GENERATED CALL = (test()).compareTo(test()).countLeadingZeroBits()
2021-03-12 04:39:36,536 [main:61] - replacement of 4 of type Int is (test()).compareTo(test()).countOneBits()
2021-03-12 04:39:36,623 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:36,624 [main:53] - replacing (flagInner, Boolean)
2021-03-12 04:39:36,624 [main:50] - replacing flagInner Boolean
2021-03-12 04:39:36,624 [main:54] - Getting value of type Boolean
2021-03-12 04:39:36,726 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:36,727 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 04:39:36,727 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:36,839 [main:67] - randomType = ArrayList<Double>
2021-03-12 04:39:36,934 [main:302] - generating value of type = ArrayList<Double> false depth = 0
2021-03-12 04:39:37,018 [main:43] - GENERATING CALL OF fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<Double> = TODO()
2021-03-12 04:39:37,019 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<Double> = TODO()
2021-03-12 04:39:37,189 [main:302] - generating value of type = Int true depth = 3
2021-03-12 04:39:37,190 [main:95] - GENERATED = ArrayList<Double>(2002386350)
2021-03-12 04:39:37,364 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.RandomAccess[DeserializedSimpleFunctionDescriptor@5611a202]
2021-03-12 04:39:37,471 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:37,471 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:37,570 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:37,571 [main:78] - Generated call from random type = (ArrayList<Double>(2002386350)).equals("gtjqv").equals("hzhvk")
2021-03-12 04:39:37,571 [main:106] - GETTING Boolean from Boolean
2021-03-12 04:39:37,583 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:37,583 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:37,670 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:37,671 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:37,671 [main:117] - GENERATED CALL = (test()).equals("ocpgt").not()
2021-03-12 04:39:37,671 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:37,671 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:37,753 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:37,753 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:37,834 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:37,834 [main:117] - GENERATED CALL = (test()).equals("lhszk").xor(true)
2021-03-12 04:39:37,834 [main:113] - Case = [public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:37,834 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:37,923 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:37,924 [main:117] - GENERATED CALL = (test()).and(false)
2021-03-12 04:39:37,924 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:37,924 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:38,013 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:38,013 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:38,127 [main:117] - GENERATED CALL = (test()).equals("hnuwe").equals(null)
2021-03-12 04:39:38,127 [main:113] - Case = [public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:38,131 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:38,132 [main:117] - GENERATED CALL = (test()).or(test())
2021-03-12 04:39:38,132 [main:113] - Case = [public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:38,132 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:38,132 [main:117] - GENERATED CALL = (test()).not()
2021-03-12 04:39:38,132 [main:113] - Case = [public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:38,132 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:38,219 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:38,220 [main:117] - GENERATED CALL = (test()).xor(false)
2021-03-12 04:39:38,220 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:38,220 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:38,299 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:38,300 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:38,381 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:38,381 [main:117] - GENERATED CALL = (test()).equals("clile").or(true)
2021-03-12 04:39:38,381 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:38,381 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:38,461 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:38,461 [main:117] - GENERATED CALL = (test()).equals("rbshn")
2021-03-12 04:39:38,461 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]]
2021-03-12 04:39:38,461 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:38,461 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]
2021-03-12 04:39:38,542 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:38,542 [main:117] - GENERATED CALL = (test()).compareTo(test()).equals("bkuqq")
2021-03-12 04:39:38,543 [main:61] - replacement of flagInner of type Boolean is (test()).equals("lhszk").xor(true)
2021-03-12 04:39:38,655 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:38,655 [main:53] - replacing ("OK", String)
2021-03-12 04:39:38,655 [main:50] - replacing "OK" String
2021-03-12 04:39:38,655 [main:54] - Getting value of type String
2021-03-12 04:39:38,744 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:39:38,744 [main:58] - GENERATED VALUE OF TYPE String = "rzfdm"
2021-03-12 04:39:38,744 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:38,835 [main:67] - randomType = UShort
2021-03-12 04:39:38,916 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 04:39:38,956 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@541be4eb]
2021-03-12 04:39:39,040 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:39,041 [main:78] - Generated call from random type = (10961.toUShort()).toString(-679436637)
2021-03-12 04:39:39,042 [main:106] - GETTING String from Boolean
2021-03-12 04:39:39,054 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]]
2021-03-12 04:39:39,054 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,054 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]
2021-03-12 04:39:39,135 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:39,136 [main:117] - GENERATED CALL = (test()).compareTo(test()).toString(2009713760)
2021-03-12 04:39:39,136 [main:61] - replacement of "OK" of type String is "rzfdm"
2021-03-12 04:39:39,232 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 04:39:39,232 [main:53] - replacing (0, Int)
2021-03-12 04:39:39,232 [main:50] - replacing 0 Int
2021-03-12 04:39:39,232 [main:54] - Getting value of type Int
2021-03-12 04:39:39,320 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:39,320 [main:58] - GENERATED VALUE OF TYPE Int = -1933120759
2021-03-12 04:39:39,320 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:39,321 [main:67] - randomType = Int
2021-03-12 04:39:39,409 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:39,460 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37a98c77]
2021-03-12 04:39:39,460 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f4f31c1]
2021-03-12 04:39:39,460 [main:78] - Generated call from random type = (1951035315).toByte().countTrailingZeroBits()
2021-03-12 04:39:39,461 [main:106] - GETTING Int from Boolean
2021-03-12 04:39:39,474 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3bad9493]]
2021-03-12 04:39:39,474 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,475 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3bad9493]
2021-03-12 04:39:39,554 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:39,555 [main:117] - GENERATED CALL = (test()).compareTo(test()).rotateRight(-1813153102)
2021-03-12 04:39:39,555 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@54118bbf]]
2021-03-12 04:39:39,555 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,633 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:39,634 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@54118bbf]
2021-03-12 04:39:39,634 [main:117] - GENERATED CALL = (test()).compareTo(false).takeHighestOneBit()
2021-03-12 04:39:39,634 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6a18b490]]
2021-03-12 04:39:39,634 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,712 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:39,713 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6a18b490]
2021-03-12 04:39:39,793 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:39,794 [main:117] - GENERATED CALL = (test()).compareTo(false).div(96)
2021-03-12 04:39:39,794 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]]
2021-03-12 04:39:39,794 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,794 [main:117] - GENERATED CALL = (test()).compareTo(test())
2021-03-12 04:39:39,795 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@189c12c4]]
2021-03-12 04:39:39,795 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,795 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@189c12c4]
2021-03-12 04:39:39,889 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:39,890 [main:117] - GENERATED CALL = (test()).compareTo(test()).and(-1701808252)
2021-03-12 04:39:39,890 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e1c5321]]
2021-03-12 04:39:39,890 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,890 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e1c5321]
2021-03-12 04:39:39,890 [main:117] - GENERATED CALL = (test()).compareTo(test()).inc()
2021-03-12 04:39:39,890 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]]
2021-03-12 04:39:39,890 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,890 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]
2021-03-12 04:39:39,891 [main:117] - GENERATED CALL = (test()).compareTo(test()).unaryPlus()
2021-03-12 04:39:39,891 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@23bbb357]]
2021-03-12 04:39:39,891 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,891 [main:117] - GENERATED CALL = (test()).compareTo(test()).sign
2021-03-12 04:39:39,891 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3d255920]]
2021-03-12 04:39:39,891 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:39,977 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:39,978 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3d255920]
2021-03-12 04:39:40,056 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:40,056 [main:117] - GENERATED CALL = (test()).compareTo(false).or(283775936)
2021-03-12 04:39:40,056 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31eb7290]]
2021-03-12 04:39:40,056 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:40,057 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@31eb7290]
2021-03-12 04:39:40,057 [main:117] - GENERATED CALL = (test()).compareTo(test()).countTrailingZeroBits()
2021-03-12 04:39:40,057 [main:61] - replacement of 0 of type Int is (1951035315).toByte().countTrailingZeroBits()
2021-03-12 04:39:40,136 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:40,138 [main:53] - replacing (false, Boolean)
2021-03-12 04:39:40,138 [main:50] - replacing false Boolean
2021-03-12 04:39:40,138 [main:54] - Getting value of type Boolean
2021-03-12 04:39:40,216 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:40,217 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 04:39:40,217 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:40,218 [main:67] - randomType = Double
2021-03-12 04:39:40,298 [main:302] - generating value of type = Double true depth = 0
2021-03-12 04:39:40,335 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@1108694]
2021-03-12 04:39:40,435 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:40,435 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:40,522 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:40,523 [main:78] - Generated call from random type = (0.20214717221180545).equals("lmprl").equals("drdar")
2021-03-12 04:39:40,523 [main:106] - GETTING Boolean from Boolean
2021-03-12 04:39:40,534 [main:113] - Case = [public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:40,535 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:40,535 [main:117] - GENERATED CALL = (test()).not()
2021-03-12 04:39:40,535 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:40,535 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:40,613 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:40,613 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:40,614 [main:117] - GENERATED CALL = (test()).equals("fvrdo").not()
2021-03-12 04:39:40,614 [main:113] - Case = [public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:40,614 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:40,614 [main:117] - GENERATED CALL = (test()).or(flagOuter)
2021-03-12 04:39:40,614 [main:113] - Case = [public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:40,614 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:40,614 [main:117] - GENERATED CALL = (test()).xor(test())
2021-03-12 04:39:40,614 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:40,614 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:40,693 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:40,693 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:40,693 [main:117] - GENERATED CALL = (test()).equals("iwmvj").and(test())
2021-03-12 04:39:40,693 [main:113] - Case = [public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:40,693 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:40,694 [main:117] - GENERATED CALL = (test()).and(test())
2021-03-12 04:39:40,694 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:40,694 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:40,771 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:40,772 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:40,849 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:40,850 [main:117] - GENERATED CALL = (test()).equals("kwuhs").equals("rsahb")
2021-03-12 04:39:40,850 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:40,850 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:40,943 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:40,943 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:40,943 [main:117] - GENERATED CALL = (test()).equals("jseti").xor(flagOuter)
2021-03-12 04:39:40,943 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:40,943 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:41,029 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:41,029 [main:117] - GENERATED CALL = (test()).equals("pdofl")
2021-03-12 04:39:41,029 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]]
2021-03-12 04:39:41,029 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:41,030 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]
2021-03-12 04:39:41,112 [main:117] - GENERATED CALL = (test()).compareTo(test()).equals(null)
2021-03-12 04:39:41,112 [main:61] - replacement of false of type Boolean is (test()).equals("jseti").xor(flagOuter)
2021-03-12 04:39:41,190 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:41,190 [main:66] - Compilation checking started
2021-03-12 04:39:41,514 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = (test()).equals("jseti").xor(flagOuter)
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return (0.6413892108227356).toChar().isWhitespace()
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:41,515 [main:53] - replacing (false, Boolean)
2021-03-12 04:39:41,516 [main:50] - replacing false Boolean
2021-03-12 04:39:41,516 [main:54] - Getting value of type Boolean
2021-03-12 04:39:41,600 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:41,601 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 04:39:41,601 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:41,703 [main:67] - randomType = UInt
2021-03-12 04:39:41,783 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 04:39:41,810 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@106baa3a]
2021-03-12 04:39:41,895 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:41,895 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:41,988 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:41,989 [main:78] - Generated call from random type = (2092252540.toUInt()).equals("mhplt").equals("shycd")
2021-03-12 04:39:41,989 [main:106] - GETTING Boolean from Boolean
2021-03-12 04:39:42,001 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]]
2021-03-12 04:39:42,001 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:42,001 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d4fdc5d]
2021-03-12 04:39:42,081 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:42,082 [main:117] - GENERATED CALL = (flagInner).compareTo(flagOuter).equals("jmnsd")
2021-03-12 04:39:42,082 [main:113] - Case = [public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:42,082 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:42,082 [main:117] - GENERATED CALL = (flagInner).and(flagInner)
2021-03-12 04:39:42,082 [main:113] - Case = [public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:42,082 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:42,083 [main:117] - GENERATED CALL = (flagInner).xor(flagOuter)
2021-03-12 04:39:42,083 [main:113] - Case = [public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:42,083 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:42,083 [main:117] - GENERATED CALL = (flagInner).not()
2021-03-12 04:39:42,083 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]]
2021-03-12 04:39:42,083 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:42,170 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:42,170 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67837104]
2021-03-12 04:39:42,253 [main:117] - GENERATED CALL = (flagInner).equals("rotoo").equals(null)
2021-03-12 04:39:42,253 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 04:39:42,253 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:42,370 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:42,370 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 04:39:42,371 [main:117] - GENERATED CALL = (flagInner).equals("bsrtw").xor(test())
2021-03-12 04:39:42,371 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:42,371 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:42,466 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:42,467 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:42,548 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:42,549 [main:117] - GENERATED CALL = (flagInner).equals("ytpyf").or(false)
2021-03-12 04:39:42,549 [main:113] - Case = [public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]]
2021-03-12 04:39:42,549 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:42,631 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:42,631 [main:117] - GENERATED CALL = (flagInner).or(false)
2021-03-12 04:39:42,632 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]]
2021-03-12 04:39:42,632 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:42,713 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:42,713 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3809f4ec]
2021-03-12 04:39:42,713 [main:117] - GENERATED CALL = (flagInner).equals("urgyd").not()
2021-03-12 04:39:42,714 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]]
2021-03-12 04:39:42,714 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@3470a705]
2021-03-12 04:39:42,795 [main:302] - generating value of type = Any false depth = 0
2021-03-12 04:39:42,795 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3cc16e8c]
2021-03-12 04:39:42,795 [main:117] - GENERATED CALL = (flagInner).equals("axbin").and(test())
2021-03-12 04:39:42,795 [main:61] - replacement of false of type Boolean is true
2021-03-12 04:39:42,877 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(BOOLEAN_CONSTANT)
2021-03-12 04:39:42,877 [main:66] - Compilation checking started
2021-03-12 04:39:43,227 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = true
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = (test()).equals("jseti").xor(flagOuter)
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return (0.6413892108227356).toChar().isWhitespace()
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:43,229 [main:53] - replacing (flagInner, Boolean)
2021-03-12 04:39:43,229 [main:50] - replacing flagInner Boolean
2021-03-12 04:39:43,229 [main:54] - Getting value of type Boolean
2021-03-12 04:39:43,308 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:43,308 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 04:39:43,308 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:43,309 [main:67] - randomType = Int
2021-03-12 04:39:43,388 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:43,417 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f664709]
2021-03-12 04:39:43,417 [main:149] - GENERATING call of type public fun kotlin.Char.isLetter(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a3db4d1]
2021-03-12 04:39:43,418 [main:78] - Generated call from random type = (-1222133232).toChar().isLetter()
2021-03-12 04:39:43,418 [main:61] - replacement of flagInner of type Boolean is (-1222133232).toChar().isLetter()
2021-03-12 04:39:43,495 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:43,496 [main:66] - Compilation checking started
2021-03-12 04:39:43,742 [main:49] - Result = false
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = true
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            (-1222133232).toChar().isLetter() = true
                            break
                        }
                        else -> flagInner = (test()).equals("jseti").xor(flagOuter)
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return (0.6413892108227356).toChar().isWhitespace()
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:43,744 [main:53] - replacing (3, Int)
2021-03-12 04:39:43,744 [main:50] - replacing 3 Int
2021-03-12 04:39:43,744 [main:54] - Getting value of type Int
2021-03-12 04:39:43,823 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:43,824 [main:58] - GENERATED VALUE OF TYPE Int = 332071299
2021-03-12 04:39:43,824 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:44,261 [main:67] - randomType = Triple<ArrayDeque<Double?>, Long, Float>?
2021-03-12 04:39:44,341 [main:302] - generating value of type = Triple<ArrayDeque<Double?>, Long, Float> false depth = 0
2021-03-12 04:39:44,426 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: ArrayDeque<Double?>, second: Long, third: Float): Triple<ArrayDeque<Double?>, Long, Float> = TODO()
2021-03-12 04:39:44,427 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: ArrayDeque<Double?>, second: Long, third: Float): Triple<ArrayDeque<Double?>, Long, Float> = TODO()
2021-03-12 04:39:44,508 [main:302] - generating value of type = ArrayDeque<Double?> false depth = 3
2021-03-12 04:39:44,613 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Double?>): ArrayDeque<Double?> = TODO()
2021-03-12 04:39:44,615 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Double?>): ArrayDeque<Double?> = TODO()
2021-03-12 04:39:44,788 [main:302] - generating value of type = Collection<Double?> false depth = 6
2021-03-12 04:39:44,874 [main:43] - GENERATING CALL OF fun <T> listOf(): Collection<Double?> = TODO()
2021-03-12 04:39:44,875 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOf(): Collection<Double?> = TODO()
2021-03-12 04:39:44,957 [main:95] - GENERATED = listOf<Double?>()
2021-03-12 04:39:44,957 [main:95] - GENERATED = ArrayDeque<Double?>(listOf<Double?>())
2021-03-12 04:39:44,957 [main:302] - generating value of type = Long true depth = 3
2021-03-12 04:39:44,958 [main:302] - generating value of type = Float true depth = 3
2021-03-12 04:39:44,958 [main:95] - GENERATED = Triple<ArrayDeque<Double?>, Long, Float>(ArrayDeque<Double?>(listOf<Double?>()), -5455651120921795061, 0.37272787f)
2021-03-12 04:39:44,993 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@38c607b2]
2021-03-12 04:39:44,994 [main:78] - Generated call from random type = (Triple<ArrayDeque<Double?>, Long, Float>(ArrayDeque<Double?>(listOf<Double?>()), -5455651120921795061, 0.37272787f))?.third.toRawBits()
2021-03-12 04:39:44,995 [main:106] - GETTING Int from Boolean
2021-03-12 04:39:45,009 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2143dff1]]
2021-03-12 04:39:45,009 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,010 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2143dff1]
2021-03-12 04:39:45,091 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:45,092 [main:117] - GENERATED CALL = (flagOuter).compareTo(test()).shr(1900758107)
2021-03-12 04:39:45,092 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@11f8edb5]]
2021-03-12 04:39:45,092 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,093 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@11f8edb5]
2021-03-12 04:39:45,093 [main:117] - GENERATED CALL = (flagOuter).compareTo(test()).countLeadingZeroBits()
2021-03-12 04:39:45,093 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5162cfa4]]
2021-03-12 04:39:45,093 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,093 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5162cfa4]
2021-03-12 04:39:45,093 [main:117] - GENERATED CALL = (flagOuter).compareTo(test()).inv()
2021-03-12 04:39:45,093 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]]
2021-03-12 04:39:45,093 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,175 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:45,176 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3deddbbd]
2021-03-12 04:39:45,176 [main:117] - GENERATED CALL = (flagOuter).compareTo(true).unaryPlus()
2021-03-12 04:39:45,176 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3bad9493]]
2021-03-12 04:39:45,176 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,177 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3bad9493]
2021-03-12 04:39:45,280 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:45,281 [main:117] - GENERATED CALL = (flagOuter).compareTo(flagOuter).rotateRight(-1977263155)
2021-03-12 04:39:45,282 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e1c5321]]
2021-03-12 04:39:45,282 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,282 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e1c5321]
2021-03-12 04:39:45,282 [main:117] - GENERATED CALL = (flagOuter).compareTo(test()).inc()
2021-03-12 04:39:45,282 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cc25917]]
2021-03-12 04:39:45,282 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,382 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:45,383 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cc25917]
2021-03-12 04:39:45,468 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:45,468 [main:117] - GENERATED CALL = (flagOuter).compareTo(false).ushr(1242484576)
2021-03-12 04:39:45,468 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@eee9fa9]]
2021-03-12 04:39:45,468 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,469 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@eee9fa9]
2021-03-12 04:39:45,553 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:45,554 [main:117] - GENERATED CALL = (flagOuter).compareTo(test()).times(84)
2021-03-12 04:39:45,554 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@346d8f0a]]
2021-03-12 04:39:45,554 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,554 [main:117] - GENERATED CALL = (flagOuter).compareTo(test()).absoluteValue
2021-03-12 04:39:45,554 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@32ac5ce1]]
2021-03-12 04:39:45,554 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:45,554 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@32ac5ce1]
2021-03-12 04:39:45,634 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 04:39:45,635 [main:117] - GENERATED CALL = (flagOuter).compareTo(flagOuter).minus(-59)
2021-03-12 04:39:45,635 [main:61] - replacement of 3 of type Int is 332071299
2021-03-12 04:39:45,714 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 04:39:45,714 [main:66] - Compilation checking started
2021-03-12 04:39:46,008 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = true
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            332071299 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = (test()).equals("jseti").xor(flagOuter)
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return (0.6413892108227356).toChar().isWhitespace()
}

fun box(): String {
    val flag = test()
    return (-5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:46,008 [main:53] - replacing (flagOuter, Boolean)
2021-03-12 04:39:46,008 [main:50] - replacing flagOuter Boolean
2021-03-12 04:39:46,008 [main:54] - Getting value of type Boolean
2021-03-12 04:39:46,105 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:46,105 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 04:39:46,105 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:46,352 [main:67] - randomType = HashSet<Float?>
2021-03-12 04:39:46,431 [main:302] - generating value of type = HashSet<Float?> false depth = 0
2021-03-12 04:39:46,514 [main:43] - GENERATING CALL OF fun <T> hashSetOf(): HashSet<Float?> = TODO()
2021-03-12 04:39:46,516 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(): HashSet<Float?> = TODO()
2021-03-12 04:39:46,597 [main:95] - GENERATED = hashSetOf<Float?>()
2021-03-12 04:39:46,746 [main:149] - GENERATING call of type public open fun contains(element: kotlin.Float?): kotlin.Boolean defined in kotlin.collections.AbstractCollection[DeserializedSimpleFunctionDescriptor@a89ff74]
2021-03-12 04:39:46,824 [main:302] - generating value of type = Float true depth = 0
2021-03-12 04:39:46,825 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@54531b67]
2021-03-12 04:39:46,923 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:46,924 [main:78] - Generated call from random type = (hashSetOf<Float?>()).contains(0.40183675f).or(true)
2021-03-12 04:39:46,924 [main:61] - replacement of flagOuter of type Boolean is (hashSetOf<Float?>()).contains(0.40183675f).or(true)
2021-03-12 04:39:47,004 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 04:39:47,084 [main:119] - TRYING TO REPLACE CONSTANT 5256905712190781949
2021-03-12 04:39:47,165 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-12 04:39:47,165 [main:66] - Compilation checking started
2021-03-12 04:39:47,454 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = true
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            332071299 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = (test()).equals("jseti").xor(flagOuter)
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return (0.6413892108227356).toChar().isWhitespace()
}

fun box(): String {
    val flag = test()
    return (5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:47,455 [main:119] - TRYING TO REPLACE CONSTANT 78
2021-03-12 04:39:47,536 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 04:39:47,536 [main:66] - Compilation checking started
2021-03-12 04:39:47,787 [main:49] - Result = false
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = true
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            332071299 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo(true).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = (test()).equals("jseti").xor(flagOuter)
                    }
                }
            }
            (flagInner).compareTo(test()).rem(unaryMinus()) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return (0.6413892108227356).toChar().isWhitespace()
}

fun box(): String {
    val flag = test()
    return (5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:47,787 [main:119] - TRYING TO REPLACE CONSTANT 288068597
2021-03-12 04:39:47,888 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-12 04:39:47,888 [main:66] - Compilation checking started
2021-03-12 04:39:48,226 [main:119] - TRYING TO REPLACE CONSTANT true
2021-03-12 04:39:48,305 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(PARENTHESIZED)
2021-03-12 04:39:48,305 [main:66] - Compilation checking started
2021-03-12 04:39:48,578 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = true
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            332071299 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo((test())).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = (test()).equals("jseti").xor(flagOuter)
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return (0.6413892108227356).toChar().isWhitespace()
}

fun box(): String {
    val flag = test()
    return (5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:48,579 [main:119] - TRYING TO REPLACE CONSTANT 0.6413892108227356
2021-03-12 04:39:48,664 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(PARENTHESIZED)
2021-03-12 04:39:48,664 [main:66] - Compilation checking started
2021-03-12 04:39:48,979 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = true
    for (i in 0..5) {
        when ((test()).compareTo(flagInner).unaryMinus()) {
            1 -> Unit
            2 -> Unit
            332071299 -> {
                for (j in (flagInner).compareTo(test()).unaryMinus()..(flagInner).compareTo((test())).takeLowestOneBit()) {
                    when (j) {
                        (flagInner).compareTo(test()).coerceAtMost(-288068597) -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = (test()).equals("jseti").xor(flagOuter)
                    }
                }
            }
            (flagInner).compareTo(test()).rem(-78) -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return ((0.6413892108227356)).toChar().isWhitespace()
}

fun box(): String {
    val flag = test()
    return (5256905712190781949).toChar().plus("fqvwf")
}


2021-03-12 04:39:49,002 [main:41] - AFTER TRY 0 res = fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return if (flag) "OK" else "fail1"
}
2021-03-12 04:39:49,283 [main:43] - Try ‚Ññ0
2021-03-12 04:39:50,973 [main:69] - Trying to insert fun fu0(any: Any)
2021-03-12 04:39:51,103 [main:66] - Compilation checking started
2021-03-12 04:39:51,706 [main:103] - Trying to change 11 nodes
2021-03-12 04:39:51,707 [main:107] - replacing (prope0, Kla1)
2021-03-12 04:39:51,708 [main:50] - replacing prope0 Kla1
2021-03-12 04:39:51,709 [main:54] - Getting value of type Kla1
2021-03-12 04:39:51,817 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-12 04:39:51,817 [main:112] - generating klass Kla1 text = interface Kla1  {
  fun fu0(any: Any)
}
2021-03-12 04:39:52,000 [main:302] - generating value of type = Kla2 false depth = 2
2021-03-12 04:39:52,000 [main:112] - generating klass Kla2 text = class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}
2021-03-12 04:39:52,000 [main:58] - GENERATED VALUE OF TYPE Kla1 = Kla2()
2021-03-12 04:39:52,000 [main:61] - GENERATED IS CALL =true
2021-03-12 04:39:52,003 [main:67] - randomType = Kla1
2021-03-12 04:39:52,005 [main:106] - GETTING Kla1 from Boolean
2021-03-12 04:39:52,018 [main:114] - replacement of prope0 of type Kla1 is Kla2()
2021-03-12 04:39:52,102 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 04:39:52,102 [main:66] - Compilation checking started
2021-03-12 04:39:52,441 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return if (flag) "OK" else "fail1"
}

class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return prope0
    }
}

interface Kla1  {
  fun fu0(any: Any)
}

class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}

interface Kla3 {
    fun fu1() : Kla1
}

fun box672() : String {
    Kla0({ fu0("OK") }).fu1()
    return "OK"
}


2021-03-12 04:39:52,441 [main:107] - replacing (prope0, Kla1)
2021-03-12 04:39:52,441 [main:50] - replacing prope0 Kla1
2021-03-12 04:39:52,441 [main:54] - Getting value of type Kla1
2021-03-12 04:39:52,540 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-12 04:39:52,541 [main:112] - generating klass Kla1 text = interface Kla1  {
  fun fu0(any: Any)
}
2021-03-12 04:39:52,733 [main:302] - generating value of type = Kla2 false depth = 2
2021-03-12 04:39:52,733 [main:112] - generating klass Kla2 text = class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}
2021-03-12 04:39:52,733 [main:58] - GENERATED VALUE OF TYPE Kla1 = Kla2()
2021-03-12 04:39:52,734 [main:61] - GENERATED IS CALL =true
2021-03-12 04:39:52,735 [main:67] - randomType = Kla1
2021-03-12 04:39:52,736 [main:106] - GETTING Kla1 from Boolean
2021-03-12 04:39:52,765 [main:114] - replacement of prope0 of type Kla1 is Kla2()
2021-03-12 04:39:52,847 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 04:39:52,847 [main:66] - Compilation checking started
2021-03-12 04:39:53,164 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return if (flag) "OK" else "fail1"
}

class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}

interface Kla1  {
  fun fu0(any: Any)
}

class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}

interface Kla3 {
    fun fu1() : Kla1
}

fun box672() : String {
    Kla0({ fu0("OK") }).fu1()
    return "OK"
}


2021-03-12 04:39:53,164 [main:107] - replacing ("OK", String)
2021-03-12 04:39:53,165 [main:50] - replacing "OK" String
2021-03-12 04:39:53,165 [main:54] - Getting value of type String
2021-03-12 04:39:53,252 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:39:53,253 [main:58] - GENERATED VALUE OF TYPE String = "vkurm"
2021-03-12 04:39:53,253 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:53,436 [main:67] - randomType = Collection<LinkedHashMap<String, Kla0>>
2021-03-12 04:39:53,437 [main:106] - GETTING String from Boolean
2021-03-12 04:39:53,450 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]]
2021-03-12 04:39:53,450 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:39:53,538 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 04:39:53,539 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]
2021-03-12 04:39:53,625 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:39:53,625 [main:117] - GENERATED CALL = (test()).compareTo(true).toString(-2113618460)
2021-03-12 04:39:53,626 [main:114] - replacement of "OK" of type String is "vkurm"
2021-03-12 04:39:53,708 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 04:39:53,709 [main:66] - Compilation checking started
2021-03-12 04:39:54,040 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return if (flag) "OK" else "fail1"
}

class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}

interface Kla1  {
  fun fu0(any: Any)
}

class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}

interface Kla3 {
    fun fu1() : Kla1
}

fun box672() : String {
    val flag = test()
Kla0({ fu0("vkurm") }).fu1()
    return "OK"
}


2021-03-12 04:39:54,040 [main:107] - replacing (Kla0({ fu0("vkurm") }).fu1(), Kla1)
2021-03-12 04:39:54,040 [main:50] - replacing Kla0({ fu0("vkurm") }).fu1() Kla1
2021-03-12 04:39:54,040 [main:54] - Getting value of type Kla1
2021-03-12 04:39:54,143 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-12 04:39:54,144 [main:112] - generating klass Kla1 text = interface Kla1  {
  fun fu0(any: Any)
}
2021-03-12 04:39:54,309 [main:302] - generating value of type = Kla2 false depth = 2
2021-03-12 04:39:54,309 [main:112] - generating klass Kla2 text = class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}
2021-03-12 04:39:54,310 [main:58] - GENERATED VALUE OF TYPE Kla1 = Kla2()
2021-03-12 04:39:54,310 [main:61] - GENERATED IS CALL =true
2021-03-12 04:39:54,402 [main:67] - randomType = ArrayList<Kla2>
2021-03-12 04:39:54,483 [main:302] - generating value of type = ArrayList<Kla2> false depth = 0
2021-03-12 04:39:54,569 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: Kla2): ArrayList<Kla2> = TODO()
2021-03-12 04:39:54,570 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: Kla2): ArrayList<Kla2> = TODO()
2021-03-12 04:39:54,659 [main:302] - generating value of type = Kla2 false depth = 3
2021-03-12 04:39:54,660 [main:112] - generating klass Kla2 text = class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}
2021-03-12 04:39:54,660 [main:95] - GENERATED = arrayListOf<Kla2>(Kla2())
2021-03-12 04:39:54,851 [main:106] - GETTING Kla1 from Boolean
2021-03-12 04:39:54,864 [main:114] - replacement of Kla0({ fu0("vkurm") }).fu1() of type Kla1 is Kla2()
2021-03-12 04:39:54,945 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 04:39:54,945 [main:66] - Compilation checking started
2021-03-12 04:39:55,243 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return if (flag) "OK" else "fail1"
}

class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}

interface Kla1  {
  fun fu0(any: Any)
}

class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}

interface Kla3 {
    fun fu1() : Kla1
}

fun box672() : String {
    val flag = test()
Kla2()
    return "OK"
}


2021-03-12 04:39:55,326 [main:41] - AFTER TRY 1 res = fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return if (flag) "OK" else "fail1"
}

class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}

interface Kla1  {
  fun fu0(any: Any)
}

class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}

interface Kla3 {
    fun fu1() : Kla1
}

fun box672() : String {
    val flag = test()
Kla2()
    return "OK"
}


2021-03-12 04:39:55,506 [main:112] - generating klass Kla0 text = class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}
2021-03-12 04:39:55,608 [main:194] - Type params = []
2021-03-12 04:39:55,691 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Kla1, Unit> false depth = 1
2021-03-12 04:39:55,691 [main:302] - generating value of type = Unit false depth = 2
2021-03-12 04:39:55,786 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 04:39:55,787 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 04:39:56,086 [main:302] - generating value of type = Boolean true depth = 5
2021-03-12 04:39:56,086 [main:302] - generating value of type = Function0<Any> false depth = 5
2021-03-12 04:39:56,087 [main:302] - generating value of type = Any false depth = 6
2021-03-12 04:39:56,087 [main:95] - GENERATED = check(true, { "vczva"})
2021-03-12 04:39:56,089 [main:112] - generating klass Kla1 text = interface Kla1  {
  fun fu0(any: Any)
}
2021-03-12 04:39:56,282 [main:302] - generating value of type = Kla2 false depth = 1
2021-03-12 04:39:56,283 [main:112] - generating klass Kla2 text = class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}
2021-03-12 04:39:56,283 [main:112] - generating klass Kla2 text = class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}
2021-03-12 04:39:56,283 [main:112] - generating klass Kla3 text = interface Kla3 {
    fun fu1() : Kla1
}
2021-03-12 04:39:56,447 [main:302] - generating value of type = Kla0 false depth = 1
2021-03-12 04:39:56,448 [main:112] - generating klass Kla0 text = class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}
2021-03-12 04:39:56,573 [main:194] - Type params = []
2021-03-12 04:39:56,681 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Kla1, Unit> false depth = 3
2021-03-12 04:39:56,681 [main:302] - generating value of type = Unit false depth = 4
2021-03-12 04:39:56,773 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 04:39:56,775 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 04:39:57,056 [main:302] - generating value of type = Boolean true depth = 7
2021-03-12 04:39:57,057 [main:302] - generating value of type = Function0<Any> false depth = 7
2021-03-12 04:39:57,057 [main:302] - generating value of type = Any false depth = 8
2021-03-12 04:39:57,058 [main:95] - GENERATED = require(false, { "zpcbn"})
2021-03-12 04:39:57,249 [main:43] - Try ‚Ññ1
2021-03-12 04:39:57,946 [main:69] - Trying to insert public override fun fu2() : String {
        return ({
          super.fu2()
        })()
    }
2021-03-12 04:39:58,038 [main:66] - Compilation checking started
2021-03-12 04:39:58,606 [main:103] - Trying to change 11 nodes
2021-03-12 04:39:58,606 [main:107] - replacing ("OK", String)
2021-03-12 04:39:58,607 [main:50] - replacing "OK" String
2021-03-12 04:39:58,607 [main:54] - Getting value of type String
2021-03-12 04:39:58,687 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:39:58,688 [main:58] - GENERATED VALUE OF TYPE String = "bxqhk"
2021-03-12 04:39:58,688 [main:61] - GENERATED IS CALL =false
2021-03-12 04:39:59,376 [main:67] - randomType = Pair<Array<Kla0?>, Array<Byte>>?
2021-03-12 04:39:59,456 [main:302] - generating value of type = Pair<Array<Kla0?>, Array<Byte>> false depth = 0
2021-03-12 04:39:59,544 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Array<Kla0?>, second: Array<Byte>): Pair<Array<Kla0?>, Array<Byte>> = TODO()
2021-03-12 04:39:59,545 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Array<Kla0?>, second: Array<Byte>): Pair<Array<Kla0?>, Array<Byte>> = TODO()
2021-03-12 04:39:59,632 [main:302] - generating value of type = Array<Kla0?> false depth = 3
2021-03-12 04:39:59,755 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Kla0?): Array<Kla0?> = TODO()
2021-03-12 04:39:59,756 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Kla0?): Array<Kla0?> = TODO()
2021-03-12 04:39:59,859 [main:302] - generating value of type = Kla0 false depth = 6
2021-03-12 04:39:59,859 [main:112] - generating klass Kla0 text = class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}
2021-03-12 04:39:59,946 [main:194] - Type params = []
2021-03-12 04:40:00,026 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<Kla1, Unit> false depth = 8
2021-03-12 04:40:00,027 [main:302] - generating value of type = Unit false depth = 9
2021-03-12 04:40:00,112 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 04:40:00,113 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 04:40:00,305 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 12
2021-03-12 04:40:00,305 [main:302] - generating value of type = Unit false depth = 13
2021-03-12 04:40:00,398 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 04:40:00,399 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 04:40:00,634 [main:302] - generating value of type = Boolean true depth = 16
2021-03-12 04:40:00,634 [main:385] - Cant generate call of fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 04:40:00,634 [main:95] - GENERATED = contract({ })
2021-03-12 04:40:00,635 [main:95] - GENERATED = arrayOf<Kla0?>(Kla0({ contract({ })}))
2021-03-12 04:40:00,635 [main:302] - generating value of type = Array<Byte> false depth = 3
2021-03-12 04:40:00,730 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Byte): Array<Byte> = TODO()
2021-03-12 04:40:00,731 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Byte): Array<Byte> = TODO()
2021-03-12 04:40:00,832 [main:302] - generating value of type = Byte true depth = 6
2021-03-12 04:40:00,833 [main:95] - GENERATED = arrayOf<Byte>(-31)
2021-03-12 04:40:00,834 [main:95] - GENERATED = Pair<Array<Kla0?>, Array<Byte>>(arrayOf<Kla0?>(Kla0({ contract({ })})), arrayOf<Byte>(-31))
2021-03-12 04:40:00,863 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7118ba4d]
2021-03-12 04:40:00,864 [main:78] - Generated call from random type = (Pair<Array<Kla0?>, Array<Byte>>(arrayOf<Kla0?>(Kla0({ contract({ })})), arrayOf<Byte>(-31)))?.first.contentDeepToString()
2021-03-12 04:40:00,865 [main:106] - GETTING String from Kla1
2021-03-12 04:40:00,873 [main:106] - GETTING String from [@kotlin.ExtensionFunctionType] Function1<Kla1, Unit>
2021-03-12 04:40:00,900 [main:106] - GETTING String from Boolean
2021-03-12 04:40:00,915 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]]
2021-03-12 04:40:00,915 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:40:00,915 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]
2021-03-12 04:40:01,003 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:40:01,004 [main:117] - GENERATED CALL = (test()).compareTo(val flag = test().toString(1295899129)
2021-03-12 04:40:01,005 [main:114] - replacement of "OK" of type String is (test()).compareTo(val flag = test().toString(1295899129)
2021-03-12 04:40:01,093 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(BINARY_EXPRESSION)
2021-03-12 04:40:01,094 [main:66] - Compilation checking started
2021-03-12 04:40:01,095 [main:71] - Wrong syntax or breaks conditions
2021-03-12 04:40:01,096 [main:49] - Result = false
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return if (flag) "OK" else "fail1"
}

class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}

interface Kla1  {
  fun fu0(any: Any)
}

class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}

interface Kla3 {
    fun fu1() : Kla1
}

fun box672() : String {
    val flag = test()
Kla2()
    return "OK"
}

fun box452() =
    Kla5().fu2()

public open class Kla4(){
    public open fun fu2() : String  = (test()).compareTo(val flag = test().toString(1295899129)
}

public class Kla5(): Kla4(){
    public override fun fu2() : String {
        return ({
          super.fu2()
        })()
    }
}


2021-03-12 04:40:01,096 [main:107] - replacing (fu2(), String)
2021-03-12 04:40:01,096 [main:50] - replacing fu2() String
2021-03-12 04:40:01,096 [main:54] - Getting value of type String
2021-03-12 04:40:01,179 [main:302] - generating value of type = String true depth = 0
2021-03-12 04:40:01,180 [main:58] - GENERATED VALUE OF TYPE String = "bdcwf"
2021-03-12 04:40:01,180 [main:61] - GENERATED IS CALL =false
2021-03-12 04:40:01,266 [main:67] - randomType = Kla3
2021-03-12 04:40:01,267 [main:106] - GETTING String from Kla2
2021-03-12 04:40:01,275 [main:106] - GETTING String from Kla1
2021-03-12 04:40:01,280 [main:106] - GETTING String from [@kotlin.ExtensionFunctionType] Function1<Kla1, Unit>
2021-03-12 04:40:01,304 [main:106] - GETTING String from Kla1
2021-03-12 04:40:01,305 [main:106] - GETTING String from Boolean
2021-03-12 04:40:01,318 [main:113] - Case = [public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]]
2021-03-12 04:40:01,318 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6fc06ec4]
2021-03-12 04:40:01,319 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@27522a0a]
2021-03-12 04:40:01,399 [main:302] - generating value of type = Int true depth = 0
2021-03-12 04:40:01,400 [main:117] - GENERATED CALL = (test()).compareTo(val flag = test().toString(730284358)
2021-03-12 04:40:01,400 [main:114] - replacement of fu2() of type String is (test()).compareTo(val flag = test().toString(730284358)
2021-03-12 04:40:01,483 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-12 04:40:01,483 [main:66] - Compilation checking started
2021-03-12 04:40:01,485 [main:71] - Wrong syntax or breaks conditions
2021-03-12 04:40:01,485 [main:49] - Result = false
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return if (flag) "OK" else "fail1"
}

class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}

interface Kla1  {
  fun fu0(any: Any)
}

class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}

interface Kla3 {
    fun fu1() : Kla1
}

fun box672() : String {
    val flag = test()
Kla2()
    return "OK"
}

fun box452() =
    Kla5().(test()).compareTo(val flag = test().toString(730284358)

public open class Kla4(){
    public open fun fu2() : String  = "OK"
}

public class Kla5(): Kla4(){
    public override fun fu2() : String {
        return ({
          super.fu2()
        })()
    }
}


2021-03-12 04:40:01,486 [main:107] - replacing (super, Kla4)
2021-03-12 04:40:01,486 [main:50] - replacing super Kla4
2021-03-12 04:40:01,486 [main:54] - Getting value of type Kla4
2021-03-12 04:40:01,581 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-12 04:40:01,581 [main:112] - generating klass Kla4 text = public open class Kla4(){
    public open fun fu2() : String  = "OK"
}
2021-03-12 04:40:01,674 [main:194] - Type params = []
2021-03-12 04:40:01,760 [main:58] - GENERATED VALUE OF TYPE Kla4 = Kla4()
2021-03-12 04:40:01,760 [main:61] - GENERATED IS CALL =true
2021-03-12 04:40:01,762 [main:67] - randomType = Kla1
2021-03-12 04:40:01,763 [main:106] - GETTING Kla4 from Kla2
2021-03-12 04:40:01,777 [main:106] - GETTING Kla4 from Kla1
2021-03-12 04:40:01,786 [main:106] - GETTING Kla4 from Boolean
2021-03-12 04:40:01,796 [main:106] - GETTING Kla4 from [@kotlin.ExtensionFunctionType] Function1<Kla1, Unit>
2021-03-12 04:40:01,815 [main:106] - GETTING Kla4 from Kla1
2021-03-12 04:40:01,815 [main:114] - replacement of super of type Kla4 is Kla4()
2021-03-12 04:40:01,895 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 04:40:01,895 [main:66] - Compilation checking started
2021-03-12 04:40:02,183 [main:53] - Result = true
Text:
fun test(): Boolean {
    var flagOuter = false
    var flagInner = false
    for (i in 0..5) {
        when (i) {
            1 -> Unit
            2 -> Unit
            3 -> {
                for (j in 0..5) {
                    when (j) {
                        1 -> Unit
                        2 -> {
                            flagInner = true
                            break
                        }
                        else -> flagInner = false
                    }
                }
            }
            4 -> {
                flagOuter = true
                break
            }
            else -> flagOuter = false
        }
    }

    return flagOuter and flagInner
}

fun box(): String {
    val flag = test()
    return if (flag) "OK" else "fail1"
}

class Kla0(val config : Kla1.() -> Unit) : Kla3 {
    override fun fu1() : Kla1 {
        val flag = test()
val prope0 : Kla1 = Kla2()
        Kla2().config()
        return Kla2()
    }
}

interface Kla1  {
  fun fu0(any: Any)
}

class Kla2 : Kla1 {
  override fun fu0(any: Any) {
      System.out?.println(any)
  }

}

interface Kla3 {
    fun fu1() : Kla1
}

fun box672() : String {
    val flag = test()
Kla2()
    return "OK"
}

fun box452() =
    Kla5().fu2()

public open class Kla4(){
    public open fun fu2() : String  = "OK"
}

public class Kla5(): Kla4(){
    public override fun fu2() : String {
        val flag = test()
return ({
          Kla4().fu2()
        })()
    }
}


2021-03-12 04:40:02,184 [main:107] - replacing ({
          Kla4().fu2()
        }, Function0<String>)
2021-03-12 04:40:02,184 [main:50] - replacing {
          Kla4().fu2()
        } Function0<String>
2021-03-12 04:40:02,184 [main:54] - Getting value of type Function0<String>
