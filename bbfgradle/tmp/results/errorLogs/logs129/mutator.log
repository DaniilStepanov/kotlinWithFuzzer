2021-03-12 13:06:40,501 [main:66] - Compilation checking started
2021-03-12 13:06:42,655 [main:45] - Trying to change 20 nodes
2021-03-12 13:06:42,660 [main:53] - replacing (10, Int)
2021-03-12 13:06:42,661 [main:50] - replacing 10 Int
2021-03-12 13:06:42,661 [main:54] - Getting value of type Int
2021-03-12 13:06:42,795 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:42,796 [main:58] - GENERATED VALUE OF TYPE Int = -554435121
2021-03-12 13:06:42,797 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:43,445 [main:67] - randomType = ULong?
2021-03-12 13:06:43,550 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 13:06:43,705 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun and(other: kotlin.ULong): kotlin.ULong defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ec351c8]
2021-03-12 13:06:43,838 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 13:06:43,840 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@607f76a1]
2021-03-12 13:06:43,945 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 13:06:43,947 [main:78] - Generated call from random type = (8710135876363170866.toULong())?.and(3307920048940249098.toULong()).compareTo(25.toUByte())
2021-03-12 13:06:43,947 [main:106] - GETTING Int from Int
2021-03-12 13:06:44,030 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@31d90af9]]
2021-03-12 13:06:44,030 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:06:44,031 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@31d90af9]
2021-03-12 13:06:44,032 [main:117] - GENERATED CALL = (sum).toInt().toInt()
2021-03-12 13:06:44,032 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7beba1a8]]
2021-03-12 13:06:44,032 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:06:44,132 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:44,133 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7beba1a8]
2021-03-12 13:06:44,255 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:44,257 [main:117] - GENERATED CALL = (sum).compareTo(-1020086585).times(39)
2021-03-12 13:06:44,258 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@29114a3]]
2021-03-12 13:06:44,258 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@29114a3]
2021-03-12 13:06:44,259 [main:117] - GENERATED CALL = (sum).countTrailingZeroBits()
2021-03-12 13:06:44,260 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5ecfa2a4]]
2021-03-12 13:06:44,260 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5ecfa2a4]
2021-03-12 13:06:44,376 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:44,378 [main:117] - GENERATED CALL = (sum).rotateRight(511271386)
2021-03-12 13:06:44,378 [main:113] - Case = [@kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@631852a5]]
2021-03-12 13:06:44,378 [main:117] - GENERATED CALL = (sum).sign
2021-03-12 13:06:44,379 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@15ef9a70]]
2021-03-12 13:06:44,379 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:06:44,379 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@15ef9a70]
2021-03-12 13:06:44,380 [main:117] - GENERATED CALL = (sum).compareTo(sum).shr(sum)
2021-03-12 13:06:44,380 [main:113] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]]
2021-03-12 13:06:44,380 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]
2021-03-12 13:06:44,497 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:44,498 [main:117] - GENERATED CALL = (sum).compareTo(-63)
2021-03-12 13:06:44,499 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4ef5094d]]
2021-03-12 13:06:44,499 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014]
2021-03-12 13:06:44,499 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4ef5094d]
2021-03-12 13:06:44,500 [main:117] - GENERATED CALL = (sum).toFloat().toRawBits()
2021-03-12 13:06:44,501 [main:113] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@55f0e377], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4fadc462]]
2021-03-12 13:06:44,501 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@55f0e377]
2021-03-12 13:06:44,501 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4fadc462]
2021-03-12 13:06:44,605 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:44,607 [main:117] - GENERATED CALL = (sum).toDouble().compareTo(40)
2021-03-12 13:06:44,607 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@8196ff1]]
2021-03-12 13:06:44,607 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99]
2021-03-12 13:06:44,607 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@8196ff1]
2021-03-12 13:06:44,705 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:44,706 [main:117] - GENERATED CALL = (sum).toByte().div(-33)
2021-03-12 13:06:44,707 [main:61] - replacement of 10 of type Int is (sum).rotateRight(511271386)
2021-03-12 13:06:44,801 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:06:44,802 [main:66] - Compilation checking started
2021-03-12 13:06:45,370 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * (sum).rotateRight(511271386) + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}
2021-03-12 13:06:45,372 [main:53] - replacing (1, Int)
2021-03-12 13:06:45,372 [main:50] - replacing 1 Int
2021-03-12 13:06:45,372 [main:54] - Getting value of type Int
2021-03-12 13:06:45,490 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:45,491 [main:58] - GENERATED VALUE OF TYPE Int = 107610605
2021-03-12 13:06:45,491 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:45,854 [main:67] - randomType = Array<ULong>
2021-03-12 13:06:45,971 [main:302] - generating value of type = Array<ULong> false depth = 0
2021-03-12 13:06:46,090 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: ULong): Array<ULong> = TODO()
2021-03-12 13:06:46,093 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: ULong): Array<ULong> = TODO()
2021-03-12 13:06:46,221 [main:302] - generating value of type = ULong true depth = 3
2021-03-12 13:06:46,222 [main:95] - GENERATED = arrayOf<ULong>(6779351401739523462.toULong())
2021-03-12 13:06:46,254 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@20aec74f]
2021-03-12 13:06:46,256 [main:78] - Generated call from random type = (arrayOf<ULong>(6779351401739523462.toULong())).size.takeHighestOneBit()
2021-03-12 13:06:46,259 [main:106] - GETTING Int from IntArray
2021-03-12 13:06:46,285 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@d5196fc]]
2021-03-12 13:06:46,286 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@d5196fc]
2021-03-12 13:06:46,391 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:46,392 [main:117] - GENERATED CALL = (arr).size.minus(0)
2021-03-12 13:06:46,392 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4f1c0bfe]]
2021-03-12 13:06:46,392 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4f1c0bfe]
2021-03-12 13:06:46,496 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:46,497 [main:117] - GENERATED CALL = (arr).size.xor(2116127062)
2021-03-12 13:06:46,498 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component4(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ed0e7c9]]
2021-03-12 13:06:46,498 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component4(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ed0e7c9]
2021-03-12 13:06:46,499 [main:117] - GENERATED CALL = (arr).component4()
2021-03-12 13:06:46,499 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component3(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@293e6c5d]]
2021-03-12 13:06:46,499 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component3(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@293e6c5d]
2021-03-12 13:06:46,500 [main:117] - GENERATED CALL = (arr).component3()
2021-03-12 13:06:46,500 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6191721a]]
2021-03-12 13:06:46,500 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6191721a]
2021-03-12 13:06:46,599 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:46,601 [main:117] - GENERATED CALL = (arr).size.rem(-40)
2021-03-12 13:06:46,601 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]]
2021-03-12 13:06:46,601 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]
2021-03-12 13:06:46,718 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:46,720 [main:117] - GENERATED CALL = (arr).size.compareTo(58)
2021-03-12 13:06:46,720 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609]]
2021-03-12 13:06:46,721 [main:117] - GENERATED CALL = (arr).size
2021-03-12 13:06:46,721 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component2(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ea3f373]]
2021-03-12 13:06:46,721 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component2(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ea3f373]
2021-03-12 13:06:46,722 [main:117] - GENERATED CALL = (arr).component2()
2021-03-12 13:06:46,724 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.IntArray.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3365c413]]
2021-03-12 13:06:46,724 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3365c413]
2021-03-12 13:06:46,833 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:46,943 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-12 13:06:46,943 [main:302] - generating value of type = Int true depth = 1
2021-03-12 13:06:46,947 [main:117] - GENERATED CALL = (arr).elementAtOrElse(-422295830, {a: Int -> -725548198})
2021-03-12 13:06:46,948 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@378f69ab]]
2021-03-12 13:06:46,948 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@378f69ab]
2021-03-12 13:06:46,949 [main:117] - GENERATED CALL = (arr).size.countLeadingZeroBits()
2021-03-12 13:06:46,949 [main:61] - replacement of 1 of type Int is (arr).component2()
2021-03-12 13:06:47,061 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:06:47,061 [main:66] - Compilation checking started
2021-03-12 13:06:47,444 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, (arr).component2(), 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * (sum).rotateRight(511271386) + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}


2021-03-12 13:06:47,445 [main:53] - replacing (10, Int)
2021-03-12 13:06:47,445 [main:50] - replacing 10 Int
2021-03-12 13:06:47,445 [main:54] - Getting value of type Int
2021-03-12 13:06:47,598 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:47,599 [main:58] - GENERATED VALUE OF TYPE Int = -1718253129
2021-03-12 13:06:47,599 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:47,839 [main:67] - randomType = UByte?
2021-03-12 13:06:47,933 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 13:06:47,992 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@36a750d4]
2021-03-12 13:06:48,088 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 13:06:48,088 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7d63b66b]
2021-03-12 13:06:48,180 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:48,181 [main:78] - Generated call from random type = (101.toUByte())?.compareTo(41.toUByte()).plus(87)
2021-03-12 13:06:48,181 [main:61] - replacement of 10 of type Int is (101.toUByte())?.compareTo(41.toUByte()).plus(87)
2021-03-12 13:06:48,303 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:06:48,304 [main:53] - replacing (10, Int)
2021-03-12 13:06:48,304 [main:50] - replacing 10 Int
2021-03-12 13:06:48,304 [main:54] - Getting value of type Int
2021-03-12 13:06:48,429 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:48,429 [main:58] - GENERATED VALUE OF TYPE Int = -538821653
2021-03-12 13:06:48,430 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:48,530 [main:67] - randomType = Int?
2021-03-12 13:06:48,627 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:48,702 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:06:48,808 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:48,809 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71886642]
2021-03-12 13:06:48,919 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:48,921 [main:78] - Generated call from random type = (-1604654023)?.compareTo(911836566).div(20)
2021-03-12 13:06:48,921 [main:61] - replacement of 10 of type Int is (-1604654023)?.compareTo(911836566).div(20)
2021-03-12 13:06:49,012 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:06:49,013 [main:53] - replacing (arr.indices.reversed(), IntProgression)
2021-03-12 13:06:49,013 [main:50] - replacing arr.indices.reversed() IntProgression
2021-03-12 13:06:49,013 [main:54] - Getting value of type IntProgression
2021-03-12 13:06:49,103 [main:302] - generating value of type = IntProgression false depth = 0
2021-03-12 13:06:49,203 [main:43] - GENERATING CALL OF fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntProgression = TODO()
2021-03-12 13:06:49,206 [main:61] - WITHOUT TYPE PARAMS = fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntProgression = TODO()
2021-03-12 13:06:49,503 [main:302] - generating value of type = Int true depth = 3
2021-03-12 13:06:49,504 [main:302] - generating value of type = Int true depth = 3
2021-03-12 13:06:49,504 [main:95] - GENERATED = IntRange(-1845099484, 153823381)
2021-03-12 13:06:49,505 [main:58] - GENERATED VALUE OF TYPE IntProgression = IntRange(-1845099484, 153823381)
2021-03-12 13:06:49,505 [main:61] - GENERATED IS CALL =true
2021-03-12 13:06:49,594 [main:67] - randomType = Long
2021-03-12 13:06:49,674 [main:302] - generating value of type = Long true depth = 0
2021-03-12 13:06:49,729 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1fbb2a97]
2021-03-12 13:06:49,838 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:49,839 [main:149] - GENERATING call of type public infix fun kotlin.Int.downTo(to: kotlin.Byte): kotlin.ranges.IntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@75319fd4]
2021-03-12 13:06:49,924 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:49,925 [main:78] - Generated call from random type = (-6946107639964062599).compareTo(66).downTo(-122)
2021-03-12 13:06:49,929 [main:106] - GETTING IntProgression from IntArray
2021-03-12 13:06:49,941 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public infix fun kotlin.Int.downTo(to: kotlin.Byte): kotlin.ranges.IntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@75319fd4]]
2021-03-12 13:06:49,942 [main:149] - GENERATING call of type public infix fun kotlin.Int.downTo(to: kotlin.Byte): kotlin.ranges.IntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@75319fd4]
2021-03-12 13:06:50,029 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:50,030 [main:117] - GENERATED CALL = (arr).size.downTo(61)
2021-03-12 13:06:50,030 [main:61] - replacement of arr.indices.reversed() of type IntProgression is IntRange(-1845099484, 153823381)
2021-03-12 13:06:50,114 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 13:06:50,115 [main:66] - Compilation checking started
2021-03-12 13:06:50,517 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        sum = sum * (sum).rotateRight(511271386) + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}


2021-03-12 13:06:50,519 [main:53] - replacing (0, Int)
2021-03-12 13:06:50,519 [main:50] - replacing 0 Int
2021-03-12 13:06:50,519 [main:54] - Getting value of type Int
2021-03-12 13:06:50,637 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:50,638 [main:58] - GENERATED VALUE OF TYPE Int = 74479432
2021-03-12 13:06:50,639 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:50,762 [main:67] - randomType = Sequence<String>
2021-03-12 13:06:50,763 [main:106] - GETTING Int from Int
2021-03-12 13:06:50,818 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e317103], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@209592d7]]
2021-03-12 13:06:50,818 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e317103]
2021-03-12 13:06:50,819 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@209592d7]
2021-03-12 13:06:50,819 [main:117] - GENERATED CALL = (sum).toShort().countLeadingZeroBits()
2021-03-12 13:06:50,819 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3f72b182], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4e844e9f]]
2021-03-12 13:06:50,819 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3f72b182]
2021-03-12 13:06:50,819 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4e844e9f]
2021-03-12 13:06:50,820 [main:117] - GENERATED CALL = (sum).toLong().toInt()
2021-03-12 13:06:50,820 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e317103], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@abc1e05]]
2021-03-12 13:06:50,820 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e317103]
2021-03-12 13:06:50,820 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@abc1e05]
2021-03-12 13:06:50,903 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:50,904 [main:117] - GENERATED CALL = (sum).toShort().div(-36)
2021-03-12 13:06:50,904 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@a0d8640], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@770f78cc]]
2021-03-12 13:06:50,904 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@a0d8640]
2021-03-12 13:06:50,985 [main:302] - generating value of type = Long true depth = 0
2021-03-12 13:06:50,985 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@770f78cc]
2021-03-12 13:06:50,986 [main:117] - GENERATED CALL = (sum).div(-5022699115854703108).countOneBits()
2021-03-12 13:06:50,986 [main:113] - Case = [public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bb070b7]]
2021-03-12 13:06:50,986 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bb070b7]
2021-03-12 13:06:50,987 [main:117] - GENERATED CALL = (sum).inv()
2021-03-12 13:06:50,987 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1f9ca08e]]
2021-03-12 13:06:50,987 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:06:50,987 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1f9ca08e]
2021-03-12 13:06:51,068 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:51,068 [main:117] - GENERATED CALL = (sum).compareTo(sum).coerceAtLeast(-1659780072)
2021-03-12 13:06:51,069 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@20aec74f]]
2021-03-12 13:06:51,069 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@20aec74f]
2021-03-12 13:06:51,069 [main:117] - GENERATED CALL = (sum).takeHighestOneBit()
2021-03-12 13:06:51,069 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bb070b7]]
2021-03-12 13:06:51,069 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:06:51,069 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bb070b7]
2021-03-12 13:06:51,070 [main:117] - GENERATED CALL = (sum).compareTo(sum).inv()
2021-03-12 13:06:51,070 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1feb4e09]]
2021-03-12 13:06:51,070 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:06:51,070 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1feb4e09]
2021-03-12 13:06:51,071 [main:117] - GENERATED CALL = (sum).toInt().unaryPlus()
2021-03-12 13:06:51,071 [main:113] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1c293dea], public final val first: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@5f4f7f1a]]
2021-03-12 13:06:51,071 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1c293dea]
2021-03-12 13:06:51,188 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:51,189 [main:117] - GENERATED CALL = (sum).rangeTo(-121).first
2021-03-12 13:06:51,190 [main:61] - replacement of 0 of type Int is (sum).toShort().countLeadingZeroBits()
2021-03-12 13:06:51,299 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:06:51,299 [main:66] - Compilation checking started
2021-03-12 13:06:51,574 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = (sum).toShort().countLeadingZeroBits()
    for (i in IntRange(-1845099484, 153823381)) {
        sum = sum * (sum).rotateRight(511271386) + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}


2021-03-12 13:06:51,576 [main:53] - replacing (arr[i], Int)
2021-03-12 13:06:51,576 [main:50] - replacing arr[i] Int
2021-03-12 13:06:51,576 [main:54] - Getting value of type Int
2021-03-12 13:06:51,679 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:51,679 [main:58] - GENERATED VALUE OF TYPE Int = 1209763259
2021-03-12 13:06:51,679 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:51,991 [main:67] - randomType = Array<ArrayDeque<Int>>
2021-03-12 13:06:52,078 [main:302] - generating value of type = Array<ArrayDeque<Int>> false depth = 0
2021-03-12 13:06:52,180 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: ArrayDeque<Int>): Array<ArrayDeque<Int>> = TODO()
2021-03-12 13:06:52,182 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: ArrayDeque<Int>): Array<ArrayDeque<Int>> = TODO()
2021-03-12 13:06:52,263 [main:302] - generating value of type = ArrayDeque<Int> false depth = 3
2021-03-12 13:06:52,350 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Int>): ArrayDeque<Int> = TODO()
2021-03-12 13:06:52,352 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Int>): ArrayDeque<Int> = TODO()
2021-03-12 13:06:52,518 [main:302] - generating value of type = Collection<Int> false depth = 6
2021-03-12 13:06:52,638 [main:43] - GENERATING CALL OF fun <E> buildList(builderAction: kotlin.collections.MutableList<Int>.()->kotlin.Unit): Collection<Int> = TODO()
2021-03-12 13:06:52,640 [main:61] - WITHOUT TYPE PARAMS = fun <E> buildList(builderAction: kotlin.collections.MutableList<Int>.()->kotlin.Unit): Collection<Int> = TODO()
2021-03-12 13:06:52,836 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<MutableList<Int>, Unit> false depth = 9
2021-03-12 13:06:52,837 [main:302] - generating value of type = Unit false depth = 10
2021-03-12 13:06:52,938 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 13:06:52,939 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-12 13:06:53,111 [main:302] - generating value of type = Boolean true depth = 13
2021-03-12 13:06:53,112 [main:95] - GENERATED = check(false)
2021-03-12 13:06:53,112 [main:95] - GENERATED = buildList<Int>({ check(false)})
2021-03-12 13:06:53,113 [main:95] - GENERATED = ArrayDeque<Int>(buildList<Int>({ check(false)}))
2021-03-12 13:06:53,113 [main:95] - GENERATED = arrayOf<ArrayDeque<Int>>(ArrayDeque<Int>(buildList<Int>({ check(false)})))
2021-03-12 13:06:53,145 [main:149] - GENERATING call of type public inline fun <T> kotlin.Array<out T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3fc04336]
2021-03-12 13:06:53,269 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 13:06:53,270 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 13:06:53,271 [main:78] - Generated call from random type = (arrayOf<ArrayDeque<Int>>(ArrayDeque<Int>(buildList<Int>({ check(false)})))).indexOfFirst({a: T -> false})
2021-03-12 13:06:53,271 [main:106] - GETTING Int from Int
2021-03-12 13:06:53,364 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@37899405]]
2021-03-12 13:06:53,364 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:06:53,365 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@37899405]
2021-03-12 13:06:53,455 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:53,457 [main:117] - GENERATED CALL = (sum).compareTo(sum).rotateLeft(1661240229)
2021-03-12 13:06:53,457 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3f72b182], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4e844e9f]]
2021-03-12 13:06:53,457 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3f72b182]
2021-03-12 13:06:53,457 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4e844e9f]
2021-03-12 13:06:53,458 [main:117] - GENERATED CALL = (sum).toLong().toInt()
2021-03-12 13:06:53,458 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4ef5094d]]
2021-03-12 13:06:53,458 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014]
2021-03-12 13:06:53,458 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4ef5094d]
2021-03-12 13:06:53,459 [main:117] - GENERATED CALL = (sum).toFloat().toRawBits()
2021-03-12 13:06:53,459 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1feb4e09]]
2021-03-12 13:06:53,459 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:06:53,459 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1feb4e09]
2021-03-12 13:06:53,460 [main:117] - GENERATED CALL = (sum).compareTo(sum).unaryPlus()
2021-03-12 13:06:53,460 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@38d7e9ec]]
2021-03-12 13:06:53,460 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:06:53,543 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:53,544 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@38d7e9ec]
2021-03-12 13:06:53,544 [main:117] - GENERATED CALL = (sum).compareTo(2069977275).and(sum)
2021-03-12 13:06:53,544 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1f9ca08e]]
2021-03-12 13:06:53,544 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:06:53,628 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:53,629 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1f9ca08e]
2021-03-12 13:06:53,629 [main:117] - GENERATED CALL = (sum).compareTo(1230006234).coerceAtLeast(sum)
2021-03-12 13:06:53,629 [main:113] - Case = [public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4084d6b4]]
2021-03-12 13:06:53,629 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4084d6b4]
2021-03-12 13:06:53,630 [main:117] - GENERATED CALL = (sum).unaryMinus()
2021-03-12 13:06:53,630 [main:113] - Case = [@kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6191721a]]
2021-03-12 13:06:53,630 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6191721a]
2021-03-12 13:06:53,710 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:53,711 [main:117] - GENERATED CALL = (sum).rem(-26)
2021-03-12 13:06:53,711 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@29114a3]]
2021-03-12 13:06:53,711 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:06:53,711 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@29114a3]
2021-03-12 13:06:53,712 [main:117] - GENERATED CALL = (sum).toInt().countTrailingZeroBits()
2021-03-12 13:06:53,712 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e317103], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@209592d7]]
2021-03-12 13:06:53,712 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e317103]
2021-03-12 13:06:53,712 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@209592d7]
2021-03-12 13:06:53,712 [main:117] - GENERATED CALL = (sum).toShort().countLeadingZeroBits()
2021-03-12 13:06:53,712 [main:61] - replacement of arr[i] of type Int is (sum).compareTo(2069977275).and(sum)
2021-03-12 13:06:53,816 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:06:53,817 [main:66] - Compilation checking started
2021-03-12 13:06:54,242 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        sum = sum * (sum).rotateRight(511271386) + i + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return "OK"
}


2021-03-12 13:06:54,244 [main:53] - replacing (sum, Int)
2021-03-12 13:06:54,244 [main:50] - replacing sum Int
2021-03-12 13:06:54,244 [main:54] - Getting value of type Int
2021-03-12 13:06:54,356 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:54,356 [main:58] - GENERATED VALUE OF TYPE Int = 512050030
2021-03-12 13:06:54,357 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:54,357 [main:67] - randomType = String
2021-03-12 13:06:54,447 [main:302] - generating value of type = String true depth = 0
2021-03-12 13:06:54,481 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3b334425]
2021-03-12 13:06:54,482 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.count(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59707ffd]
2021-03-12 13:06:54,482 [main:78] - Generated call from random type = ("buqzf").subSequence(sum, sum).count()
2021-03-12 13:06:54,484 [main:106] - GETTING Int from IntArray
2021-03-12 13:06:54,499 [main:113] - Case = [public fun kotlin.IntArray.elementAt(index: kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ea7b4ab]]
2021-03-12 13:06:54,499 [main:149] - GENERATING call of type public fun kotlin.IntArray.elementAt(index: kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ea7b4ab]
2021-03-12 13:06:54,499 [main:117] - GENERATED CALL = (arr).elementAt(sum)
2021-03-12 13:06:54,499 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@31d90af9]]
2021-03-12 13:06:54,500 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@31d90af9]
2021-03-12 13:06:54,500 [main:117] - GENERATED CALL = (arr).size.toInt()
2021-03-12 13:06:54,500 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d80cec3]]
2021-03-12 13:06:54,500 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d80cec3]
2021-03-12 13:06:54,500 [main:117] - GENERATED CALL = (arr).size.inc()
2021-03-12 13:06:54,501 [main:113] - Case = [public inline fun kotlin.IntArray.reduceIndexed(operation: (index: kotlin.Int, acc: kotlin.Int, kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1337e769]]
2021-03-12 13:06:54,501 [main:149] - GENERATING call of type public inline fun kotlin.IntArray.reduceIndexed(operation: (index: kotlin.Int, acc: kotlin.Int, kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1337e769]
2021-03-12 13:06:54,594 [main:302] - generating value of type = Function3<[@kotlin.ParameterName] Int, [@kotlin.ParameterName] Int, Int, Int> false depth = 0
2021-03-12 13:06:54,594 [main:302] - generating value of type = Int true depth = 1
2021-03-12 13:06:54,595 [main:117] - GENERATED CALL = (arr).reduceIndexed({a: Int, b: Int, c: Int -> 1742475801})
2021-03-12 13:06:54,596 [main:113] - Case = [public fun kotlin.IntArray.lastIndexOf(element: kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@23c3f94b]]
2021-03-12 13:06:54,596 [main:149] - GENERATING call of type public fun kotlin.IntArray.lastIndexOf(element: kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@23c3f94b]
2021-03-12 13:06:54,701 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:54,702 [main:117] - GENERATED CALL = (arr).lastIndexOf(373006904)
2021-03-12 13:06:54,702 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]]
2021-03-12 13:06:54,702 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]
2021-03-12 13:06:54,794 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:54,794 [main:117] - GENERATED CALL = (arr).size.compareTo(-87)
2021-03-12 13:06:54,795 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4b45f781]]
2021-03-12 13:06:54,795 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4b45f781]
2021-03-12 13:06:54,795 [main:117] - GENERATED CALL = (arr).size.takeLowestOneBit()
2021-03-12 13:06:54,795 [main:113] - Case = [public fun kotlin.IntArray.last(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d9831e4]]
2021-03-12 13:06:54,795 [main:149] - GENERATING call of type public fun kotlin.IntArray.last(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d9831e4]
2021-03-12 13:06:54,796 [main:117] - GENERATED CALL = (arr).last()
2021-03-12 13:06:54,796 [main:113] - Case = [public inline fun kotlin.IntArray.sumBy(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c57ad81]]
2021-03-12 13:06:54,796 [main:149] - GENERATING call of type public inline fun kotlin.IntArray.sumBy(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c57ad81]
2021-03-12 13:06:54,878 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-12 13:06:54,879 [main:302] - generating value of type = Int true depth = 1
2021-03-12 13:06:54,880 [main:117] - GENERATED CALL = (arr).sumBy({a: Int -> -1281648060})
2021-03-12 13:06:54,881 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609]]
2021-03-12 13:06:54,881 [main:117] - GENERATED CALL = (arr).size
2021-03-12 13:06:54,881 [main:61] - replacement of sum of type Int is 512050030
2021-03-12 13:06:54,965 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-12 13:06:54,966 [main:66] - Compilation checking started
2021-03-12 13:06:55,192 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        512050030 = sum * (sum).rotateRight(511271386) + i + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return "OK"
}


2021-03-12 13:06:55,193 [main:53] - replacing (1, Int)
2021-03-12 13:06:55,193 [main:50] - replacing 1 Int
2021-03-12 13:06:55,193 [main:54] - Getting value of type Int
2021-03-12 13:06:55,277 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:55,277 [main:58] - GENERATED VALUE OF TYPE Int = 835500755
2021-03-12 13:06:55,278 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:55,369 [main:67] - randomType = Float
2021-03-12 13:06:55,479 [main:302] - generating value of type = Float true depth = 0
2021-03-12 13:06:55,540 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@79237865]
2021-03-12 13:06:55,649 [main:302] - generating value of type = Double true depth = 0
2021-03-12 13:06:55,650 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@75a3f143]
2021-03-12 13:06:55,650 [main:78] - Generated call from random type = (0.4883712f).div(0.8196303981268405).roundToInt()
2021-03-12 13:06:55,652 [main:106] - GETTING Int from IntArray
2021-03-12 13:06:55,668 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component2(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ea3f373]]
2021-03-12 13:06:55,668 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component2(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5ea3f373]
2021-03-12 13:06:55,669 [main:117] - GENERATED CALL = (arr).component2()
2021-03-12 13:06:55,669 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component4(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ed0e7c9]]
2021-03-12 13:06:55,669 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component4(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ed0e7c9]
2021-03-12 13:06:55,669 [main:117] - GENERATED CALL = (arr).component4()
2021-03-12 13:06:55,670 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.IntArray.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3634bc73]]
2021-03-12 13:06:55,670 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3634bc73]
2021-03-12 13:06:55,670 [main:117] - GENERATED CALL = (arr).count()
2021-03-12 13:06:55,670 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d9edbad]]
2021-03-12 13:06:55,670 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d9edbad]
2021-03-12 13:06:55,779 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:55,780 [main:117] - GENERATED CALL = (arr).size.or(206511479)
2021-03-12 13:06:55,780 [main:113] - Case = [public inline fun kotlin.IntArray.indexOfFirst(predicate: (kotlin.Int) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5a2e288d]]
2021-03-12 13:06:55,780 [main:149] - GENERATING call of type public inline fun kotlin.IntArray.indexOfFirst(predicate: (kotlin.Int) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5a2e288d]
2021-03-12 13:06:55,868 [main:302] - generating value of type = Function1<Int, Boolean> false depth = 0
2021-03-12 13:06:55,868 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 13:06:55,869 [main:117] - GENERATED CALL = (arr).indexOfFirst({a: Int -> false})
2021-03-12 13:06:55,869 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67ab93c4]]
2021-03-12 13:06:55,869 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67ab93c4]
2021-03-12 13:06:55,951 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:55,952 [main:117] - GENERATED CALL = (arr).size.shl(1319213058)
2021-03-12 13:06:55,952 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71886642]]
2021-03-12 13:06:55,952 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71886642]
2021-03-12 13:06:56,038 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:56,039 [main:117] - GENERATED CALL = (arr).size.div(8)
2021-03-12 13:06:56,039 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@48d37d0a]]
2021-03-12 13:06:56,040 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@48d37d0a]
2021-03-12 13:06:56,119 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:56,212 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:56,213 [main:117] - GENERATED CALL = (arr).size.coerceIn(-809252456, -647564091)
2021-03-12 13:06:56,216 [main:113] - Case = [public inline fun kotlin.IntArray.sumBy(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c57ad81]]
2021-03-12 13:06:56,217 [main:149] - GENERATING call of type public inline fun kotlin.IntArray.sumBy(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c57ad81]
2021-03-12 13:06:56,321 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-12 13:06:56,321 [main:302] - generating value of type = Int true depth = 1
2021-03-12 13:06:56,322 [main:117] - GENERATED CALL = (arr).sumBy({a: Int -> -1108248053})
2021-03-12 13:06:56,322 [main:113] - Case = [public final operator fun iterator(): kotlin.collections.IntIterator defined in kotlin.IntArray[DeserializedSimpleFunctionDescriptor@7abbc708], public final fun next(): kotlin.Int defined in kotlin.collections.IntIterator[DeserializedSimpleFunctionDescriptor@12c7fb07]]
2021-03-12 13:06:56,322 [main:149] - GENERATING call of type public final operator fun iterator(): kotlin.collections.IntIterator defined in kotlin.IntArray[DeserializedSimpleFunctionDescriptor@7abbc708]
2021-03-12 13:06:56,322 [main:149] - GENERATING call of type public final fun next(): kotlin.Int defined in kotlin.collections.IntIterator[DeserializedSimpleFunctionDescriptor@12c7fb07]
2021-03-12 13:06:56,322 [main:117] - GENERATED CALL = (arr).iterator().next()
2021-03-12 13:06:56,322 [main:61] - replacement of 1 of type Int is (arr).component4()
2021-03-12 13:06:56,403 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:06:56,404 [main:66] - Compilation checking started
2021-03-12 13:06:56,657 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, (arr).component4())
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        sum = sum * (sum).rotateRight(511271386) + i + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return "OK"
}


2021-03-12 13:06:56,658 [main:53] - replacing (sum, Int)
2021-03-12 13:06:56,659 [main:50] - replacing sum Int
2021-03-12 13:06:56,659 [main:54] - Getting value of type Int
2021-03-12 13:06:56,742 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:56,742 [main:58] - GENERATED VALUE OF TYPE Int = -1974137219
2021-03-12 13:06:56,742 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:56,833 [main:67] - randomType = UInt
2021-03-12 13:06:56,930 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 13:06:56,981 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@fd0e8be]
2021-03-12 13:06:57,063 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 13:06:57,064 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3980c6b5]
2021-03-12 13:06:57,144 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 13:06:57,145 [main:78] - Generated call from random type = (369996804.toUInt()).div(3088781597689986564.toULong()).compareTo(101.toUByte())
2021-03-12 13:06:57,145 [main:61] - replacement of sum of type Int is (369996804.toUInt()).div(3088781597689986564.toULong()).compareTo(101.toUByte())
2021-03-12 13:06:57,223 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:06:57,224 [main:66] - Compilation checking started
2021-03-12 13:06:57,455 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        (369996804.toUInt()).div(3088781597689986564.toULong()).compareTo(101.toUByte()) = sum * (sum).rotateRight(511271386) + i + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return "OK"
}


2021-03-12 13:06:57,456 [main:53] - replacing ("OK", String)
2021-03-12 13:06:57,456 [main:50] - replacing "OK" String
2021-03-12 13:06:57,456 [main:54] - Getting value of type String
2021-03-12 13:06:57,539 [main:302] - generating value of type = String true depth = 0
2021-03-12 13:06:57,540 [main:58] - GENERATED VALUE OF TYPE String = "avvxw"
2021-03-12 13:06:57,540 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:57,628 [main:67] - randomType = Short
2021-03-12 13:06:57,715 [main:302] - generating value of type = Short true depth = 0
2021-03-12 13:06:57,770 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@514c684d]
2021-03-12 13:06:57,850 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:06:57,851 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1325b0ef]
2021-03-12 13:06:57,929 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:57,930 [main:78] - Generated call from random type = (17855).compareTo(105).toString(901010085)
2021-03-12 13:06:57,931 [main:106] - GETTING String from IntArray
2021-03-12 13:06:57,945 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1325b0ef]]
2021-03-12 13:06:57,945 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1325b0ef]
2021-03-12 13:06:57,946 [main:117] - GENERATED CALL = (arr).size.toString(sum)
2021-03-12 13:06:57,946 [main:113] - Case = [public fun kotlin.IntArray.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((kotlin.Int) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fc5910a]]
2021-03-12 13:06:57,946 [main:149] - GENERATING call of type public fun kotlin.IntArray.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((kotlin.Int) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fc5910a]
2021-03-12 13:06:58,028 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 13:06:58,113 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 13:06:58,210 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 13:06:58,212 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 13:06:58,394 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 13:06:58,400 [main:95] - GENERATED = StringBuilder("qvmdc")
2021-03-12 13:06:58,496 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 13:06:58,578 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 13:06:58,579 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 13:06:58,740 [main:302] - generating value of type = Int true depth = 3
2021-03-12 13:06:58,741 [main:95] - GENERATED = StringBuilder(1058240702)
2021-03-12 13:06:58,818 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 13:06:58,913 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 13:06:58,914 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 13:06:59,092 [main:302] - generating value of type = String true depth = 3
2021-03-12 13:06:59,092 [main:95] - GENERATED = StringBuilder("gxukl")
2021-03-12 13:06:59,172 [main:302] - generating value of type = Function1<Int, CharSequence> false depth = 0
2021-03-12 13:06:59,172 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 13:06:59,177 [main:117] - GENERATED CALL = (arr).joinToString("glnpb", StringBuilder("qvmdc"), StringBuilder(1058240702), sum, StringBuilder("gxukl"), {a: Int -> "pgmwh"})
2021-03-12 13:06:59,177 [main:113] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.IntArray.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@26a159a3]]
2021-03-12 13:06:59,177 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.IntArray.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@26a159a3]
2021-03-12 13:06:59,177 [main:117] - GENERATED CALL = (arr).contentToString()
2021-03-12 13:06:59,177 [main:61] - replacement of "OK" of type String is (arr).size.toString(sum)
2021-03-12 13:06:59,257 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:06:59,257 [main:66] - Compilation checking started
2021-03-12 13:06:59,579 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        sum = sum * (sum).rotateRight(511271386) + i + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:06:59,581 [main:53] - replacing (sum, Int)
2021-03-12 13:06:59,581 [main:50] - replacing sum Int
2021-03-12 13:06:59,581 [main:54] - Getting value of type Int
2021-03-12 13:06:59,660 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:59,661 [main:58] - GENERATED VALUE OF TYPE Int = 1543317773
2021-03-12 13:06:59,661 [main:61] - GENERATED IS CALL =false
2021-03-12 13:06:59,758 [main:67] - randomType = Float
2021-03-12 13:06:59,839 [main:302] - generating value of type = Float true depth = 0
2021-03-12 13:06:59,886 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:06:59,886 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1f9ca08e]
2021-03-12 13:06:59,887 [main:78] - Generated call from random type = (0.3004765f).toInt().coerceAtLeast(sum)
2021-03-12 13:06:59,888 [main:106] - GETTING Int from IntArray
2021-03-12 13:06:59,899 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@15ef9a70]]
2021-03-12 13:06:59,899 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@15ef9a70]
2021-03-12 13:06:59,977 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:06:59,978 [main:117] - GENERATED CALL = (arr).size.shr(-1431052244)
2021-03-12 13:06:59,978 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d80cec3]]
2021-03-12 13:06:59,978 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d80cec3]
2021-03-12 13:06:59,978 [main:117] - GENERATED CALL = (arr).size.inc()
2021-03-12 13:06:59,978 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7e03d053]]
2021-03-12 13:06:59,978 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7e03d053]
2021-03-12 13:06:59,979 [main:117] - GENERATED CALL = (arr).size.coerceAtMost(sum)
2021-03-12 13:06:59,979 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4b45f781]]
2021-03-12 13:06:59,979 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4b45f781]
2021-03-12 13:06:59,979 [main:117] - GENERATED CALL = (arr).size.takeLowestOneBit()
2021-03-12 13:06:59,979 [main:113] - Case = [public fun kotlin.IntArray.indexOf(element: kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46ef5990]]
2021-03-12 13:06:59,979 [main:149] - GENERATING call of type public fun kotlin.IntArray.indexOf(element: kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46ef5990]
2021-03-12 13:06:59,979 [main:117] - GENERATED CALL = (arr).indexOf(sum)
2021-03-12 13:06:59,979 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4084d6b4]]
2021-03-12 13:06:59,980 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4084d6b4]
2021-03-12 13:06:59,980 [main:117] - GENERATED CALL = (arr).size.unaryMinus()
2021-03-12 13:06:59,980 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4f1c0bfe]]
2021-03-12 13:06:59,980 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4f1c0bfe]
2021-03-12 13:06:59,980 [main:117] - GENERATED CALL = (arr).size.xor(sum)
2021-03-12 13:06:59,980 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@d5196fc]]
2021-03-12 13:06:59,980 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@d5196fc]
2021-03-12 13:07:00,059 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:00,059 [main:117] - GENERATED CALL = (arr).size.minus(-26)
2021-03-12 13:07:00,060 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@154c1e08]]
2021-03-12 13:07:00,060 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@154c1e08]
2021-03-12 13:07:00,060 [main:117] - GENERATED CALL = (arr).size.countOneBits()
2021-03-12 13:07:00,060 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component1(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]]
2021-03-12 13:07:00,060 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component1(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]
2021-03-12 13:07:00,060 [main:117] - GENERATED CALL = (arr).component1()
2021-03-12 13:07:00,060 [main:61] - replacement of sum of type Int is (0.3004765f).toInt().coerceAtLeast(sum)
2021-03-12 13:07:00,138 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:00,138 [main:66] - Compilation checking started
2021-03-12 13:07:00,355 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        (0.3004765f).toInt().coerceAtLeast(sum) = sum * (sum).rotateRight(511271386) + i + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:07:00,355 [main:53] - replacing (arr[i], Int)
2021-03-12 13:07:00,355 [main:50] - replacing arr[i] Int
2021-03-12 13:07:00,355 [main:54] - Getting value of type Int
2021-03-12 13:07:00,436 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:00,436 [main:58] - GENERATED VALUE OF TYPE Int = -772798671
2021-03-12 13:07:00,436 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:00,534 [main:67] - randomType = ULong
2021-03-12 13:07:00,612 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 13:07:00,653 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2be0836]
2021-03-12 13:07:00,730 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 13:07:00,731 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@31d90af9]
2021-03-12 13:07:00,731 [main:78] - Generated call from random type = (8880783272528650455.toULong()).compareTo(57.toUByte()).toInt()
2021-03-12 13:07:00,731 [main:61] - replacement of arr[i] of type Int is -772798671
2021-03-12 13:07:00,808 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-12 13:07:00,809 [main:53] - replacing ("OK", String)
2021-03-12 13:07:00,809 [main:50] - replacing "OK" String
2021-03-12 13:07:00,809 [main:54] - Getting value of type String
2021-03-12 13:07:00,887 [main:302] - generating value of type = String true depth = 0
2021-03-12 13:07:00,887 [main:58] - GENERATED VALUE OF TYPE String = "rmndg"
2021-03-12 13:07:00,888 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:00,970 [main:67] - randomType = UInt
2021-03-12 13:07:01,050 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 13:07:01,089 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5c7bf8e6]
2021-03-12 13:07:01,089 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@469ddb57]
2021-03-12 13:07:01,170 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:01,171 [main:78] - Generated call from random type = (1801847646.toUInt()).toByte().toString(-2035375495)
2021-03-12 13:07:01,171 [main:61] - replacement of "OK" of type String is "rmndg"
2021-03-12 13:07:01,293 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 13:07:01,295 [main:53] - replacing (sum * (sum).rotateRight(511271386) + i, Int)
2021-03-12 13:07:01,295 [main:50] - replacing sum * (sum).rotateRight(511271386) + i Int
2021-03-12 13:07:01,296 [main:54] - Getting value of type Int
2021-03-12 13:07:01,421 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:01,421 [main:58] - GENERATED VALUE OF TYPE Int = 851113178
2021-03-12 13:07:01,421 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:01,422 [main:67] - randomType = Int
2021-03-12 13:07:01,497 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:01,542 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:07:01,542 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5ecfa2a4]
2021-03-12 13:07:01,542 [main:78] - Generated call from random type = (-919491639).toInt().rotateRight(sum)
2021-03-12 13:07:01,543 [main:106] - GETTING Int from Int
2021-03-12 13:07:01,574 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1feb4e09]]
2021-03-12 13:07:01,574 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:07:01,574 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1feb4e09]
2021-03-12 13:07:01,574 [main:117] - GENERATED CALL = (sum).compareTo(sum).unaryPlus()
2021-03-12 13:07:01,575 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@36542e6d]]
2021-03-12 13:07:01,575 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99]
2021-03-12 13:07:01,575 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@36542e6d]
2021-03-12 13:07:01,653 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:01,654 [main:117] - GENERATED CALL = (sum).toByte().minus(-123)
2021-03-12 13:07:01,654 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@55ec97c6]]
2021-03-12 13:07:01,654 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014]
2021-03-12 13:07:01,655 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@55ec97c6]
2021-03-12 13:07:01,735 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:01,735 [main:117] - GENERATED CALL = (sum).toFloat().compareTo(51)
2021-03-12 13:07:01,735 [main:113] - Case = [public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@48d37d0a]]
2021-03-12 13:07:01,735 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@48d37d0a]
2021-03-12 13:07:01,736 [main:117] - GENERATED CALL = (sum).coerceIn(sum, sum)
2021-03-12 13:07:01,736 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6a279d9e]]
2021-03-12 13:07:01,736 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:07:01,736 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6a279d9e]
2021-03-12 13:07:01,736 [main:117] - GENERATED CALL = (sum).toInt().ushr(sum)
2021-03-12 13:07:01,736 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3f72b182], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2e1c0d3]]
2021-03-12 13:07:01,736 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@3f72b182]
2021-03-12 13:07:01,737 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2e1c0d3]
2021-03-12 13:07:01,737 [main:117] - GENERATED CALL = (sum).toLong().countLeadingZeroBits()
2021-03-12 13:07:01,737 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7e03d053]]
2021-03-12 13:07:01,737 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:07:01,737 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7e03d053]
2021-03-12 13:07:01,819 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:01,820 [main:117] - GENERATED CALL = (sum).toInt().coerceAtMost(1949927746)
2021-03-12 13:07:01,820 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@266745fc]]
2021-03-12 13:07:01,820 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99]
2021-03-12 13:07:01,821 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@266745fc]
2021-03-12 13:07:01,821 [main:117] - GENERATED CALL = (sum).toByte().countOneBits()
2021-03-12 13:07:01,821 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71886642]]
2021-03-12 13:07:01,821 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:07:01,821 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71886642]
2021-03-12 13:07:01,923 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:01,924 [main:117] - GENERATED CALL = (sum).compareTo(sum).div(102)
2021-03-12 13:07:01,924 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1aea51fe], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Char.code: kotlin.Int defined in kotlin[DeserializedPropertyDescriptor@23927f47]]
2021-03-12 13:07:01,924 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1aea51fe]
2021-03-12 13:07:01,925 [main:117] - GENERATED CALL = (sum).toChar().code
2021-03-12 13:07:01,925 [main:61] - replacement of sum * (sum).rotateRight(511271386) + i of type Int is (sum).toInt().coerceAtMost(1949927746)
2021-03-12 13:07:02,016 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:02,016 [main:66] - Compilation checking started
2021-03-12 13:07:02,340 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        sum = (sum).toInt().coerceAtMost(1949927746) + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:07:02,340 [main:53] - replacing ("OK", String)
2021-03-12 13:07:02,341 [main:50] - replacing "OK" String
2021-03-12 13:07:02,341 [main:54] - Getting value of type String
2021-03-12 13:07:02,442 [main:302] - generating value of type = String true depth = 0
2021-03-12 13:07:02,442 [main:58] - GENERATED VALUE OF TYPE String = "pznlc"
2021-03-12 13:07:02,443 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:02,541 [main:67] - randomType = UByte
2021-03-12 13:07:02,620 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 13:07:02,670 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@78584503]
2021-03-12 13:07:02,671 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@fb24deb]
2021-03-12 13:07:02,777 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:02,778 [main:78] - Generated call from random type = (64.toUByte()).toUShort().toString(-1057723523)
2021-03-12 13:07:02,778 [main:61] - replacement of "OK" of type String is (64.toUByte()).toUShort().toString(-1057723523)
2021-03-12 13:07:02,869 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:02,869 [main:53] - replacing (1, Int)
2021-03-12 13:07:02,870 [main:50] - replacing 1 Int
2021-03-12 13:07:02,870 [main:54] - Getting value of type Int
2021-03-12 13:07:02,956 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:02,956 [main:58] - GENERATED VALUE OF TYPE Int = 1465684726
2021-03-12 13:07:02,956 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:03,129 [main:67] - randomType = HashSet<UByte>
2021-03-12 13:07:03,210 [main:302] - generating value of type = HashSet<UByte> false depth = 0
2021-03-12 13:07:03,297 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): HashSet<UByte> = TODO()
2021-03-12 13:07:03,298 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): HashSet<UByte> = TODO()
2021-03-12 13:07:03,404 [main:95] - GENERATED = linkedSetOf<UByte>()
2021-03-12 13:07:03,555 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4f1c0bfe]
2021-03-12 13:07:03,637 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:03,638 [main:78] - Generated call from random type = (linkedSetOf<UByte>()).size.xor(1676409525)
2021-03-12 13:07:03,639 [main:106] - GETTING Int from IntArray
2021-03-12 13:07:03,651 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67ab93c4]]
2021-03-12 13:07:03,651 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67ab93c4]
2021-03-12 13:07:03,730 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:03,731 [main:117] - GENERATED CALL = (arr).size.shl(1287065595)
2021-03-12 13:07:03,731 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1f9ca08e]]
2021-03-12 13:07:03,731 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1f9ca08e]
2021-03-12 13:07:03,813 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:03,814 [main:117] - GENERATED CALL = (arr).size.coerceAtLeast(-325788917)
2021-03-12 13:07:03,814 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4f1c0bfe]]
2021-03-12 13:07:03,814 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4f1c0bfe]
2021-03-12 13:07:03,894 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:03,894 [main:117] - GENERATED CALL = (arr).size.xor(185474929)
2021-03-12 13:07:03,895 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.IntArray.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3634bc73]]
2021-03-12 13:07:03,895 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3634bc73]
2021-03-12 13:07:03,895 [main:117] - GENERATED CALL = (arr).count()
2021-03-12 13:07:03,895 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@378f69ab]]
2021-03-12 13:07:03,895 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@378f69ab]
2021-03-12 13:07:03,895 [main:117] - GENERATED CALL = (arr).size.countLeadingZeroBits()
2021-03-12 13:07:03,895 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component1(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]]
2021-03-12 13:07:03,896 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component1(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]
2021-03-12 13:07:03,896 [main:117] - GENERATED CALL = (arr).component1()
2021-03-12 13:07:03,896 [main:113] - Case = [public fun kotlin.IntArray.indexOf(element: kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46ef5990]]
2021-03-12 13:07:03,896 [main:149] - GENERATING call of type public fun kotlin.IntArray.indexOf(element: kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46ef5990]
2021-03-12 13:07:03,974 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:03,975 [main:117] - GENERATED CALL = (arr).indexOf(-1755939263)
2021-03-12 13:07:03,975 [main:113] - Case = [public inline fun kotlin.IntArray.reduceIndexed(operation: (index: kotlin.Int, acc: kotlin.Int, kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1337e769]]
2021-03-12 13:07:03,975 [main:149] - GENERATING call of type public inline fun kotlin.IntArray.reduceIndexed(operation: (index: kotlin.Int, acc: kotlin.Int, kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1337e769]
2021-03-12 13:07:04,075 [main:302] - generating value of type = Function3<[@kotlin.ParameterName] Int, [@kotlin.ParameterName] Int, Int, Int> false depth = 0
2021-03-12 13:07:04,075 [main:302] - generating value of type = Int true depth = 1
2021-03-12 13:07:04,076 [main:117] - GENERATED CALL = (arr).reduceIndexed({a: Int, b: Int, c: Int -> 434136091})
2021-03-12 13:07:04,076 [main:113] - Case = [public inline fun kotlin.IntArray.reduceRightIndexed(operation: (index: kotlin.Int, kotlin.Int, acc: kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@21d582fc]]
2021-03-12 13:07:04,076 [main:149] - GENERATING call of type public inline fun kotlin.IntArray.reduceRightIndexed(operation: (index: kotlin.Int, kotlin.Int, acc: kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@21d582fc]
2021-03-12 13:07:04,154 [main:302] - generating value of type = Function3<[@kotlin.ParameterName] Int, Int, [@kotlin.ParameterName] Int, Int> false depth = 0
2021-03-12 13:07:04,154 [main:302] - generating value of type = Int true depth = 1
2021-03-12 13:07:04,155 [main:117] - GENERATED CALL = (arr).reduceRightIndexed({a: Int, b: Int, c: Int -> 993107164})
2021-03-12 13:07:04,155 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.IntArray.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3365c413]]
2021-03-12 13:07:04,155 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3365c413]
2021-03-12 13:07:04,231 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:04,310 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-12 13:07:04,311 [main:302] - generating value of type = Int true depth = 1
2021-03-12 13:07:04,311 [main:117] - GENERATED CALL = (arr).elementAtOrElse(-1345727239, {a: Int -> -215336361})
2021-03-12 13:07:04,311 [main:61] - replacement of 1 of type Int is (arr).indexOf(-1755939263)
2021-03-12 13:07:04,389 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:04,389 [main:66] - Compilation checking started
2021-03-12 13:07:04,650 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf((arr).indexOf(-1755939263), 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        sum = (sum).toInt().coerceAtMost(1949927746) + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:07:04,651 [main:53] - replacing (1, Int)
2021-03-12 13:07:04,651 [main:50] - replacing 1 Int
2021-03-12 13:07:04,651 [main:54] - Getting value of type Int
2021-03-12 13:07:04,733 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:04,733 [main:58] - GENERATED VALUE OF TYPE Int = -915868720
2021-03-12 13:07:04,734 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:05,249 [main:67] - randomType = Pair<Pair<Double, UInt>, Sequence<Char>>
2021-03-12 13:07:05,327 [main:302] - generating value of type = Pair<Pair<Double, UInt>, Sequence<Char>> false depth = 0
2021-03-12 13:07:05,412 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Pair<Double, UInt>, second: Sequence<Char>): Pair<Pair<Double, UInt>, Sequence<Char>> = TODO()
2021-03-12 13:07:05,413 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Pair<Double, UInt>, second: Sequence<Char>): Pair<Pair<Double, UInt>, Sequence<Char>> = TODO()
2021-03-12 13:07:05,499 [main:302] - generating value of type = Pair<Double, UInt> false depth = 3
2021-03-12 13:07:05,609 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Double, second: UInt): Pair<Double, UInt> = TODO()
2021-03-12 13:07:05,610 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Double, second: UInt): Pair<Double, UInt> = TODO()
2021-03-12 13:07:05,705 [main:302] - generating value of type = Double true depth = 6
2021-03-12 13:07:05,705 [main:302] - generating value of type = UInt true depth = 6
2021-03-12 13:07:05,706 [main:95] - GENERATED = Pair<Double, UInt>(0.47912090655210005, 1672474007.toUInt())
2021-03-12 13:07:05,706 [main:302] - generating value of type = Sequence<Char> false depth = 3
2021-03-12 13:07:05,790 [main:43] - GENERATING CALL OF fun <T> sequenceOf(elements: Char): Sequence<Char> = TODO()
2021-03-12 13:07:05,791 [main:61] - WITHOUT TYPE PARAMS = fun <T> sequenceOf(elements: Char): Sequence<Char> = TODO()
2021-03-12 13:07:05,873 [main:302] - generating value of type = Char true depth = 6
2021-03-12 13:07:05,873 [main:95] - GENERATED = sequenceOf<Char>('牦')
2021-03-12 13:07:05,874 [main:95] - GENERATED = Pair<Pair<Double, UInt>, Sequence<Char>>(Pair<Double, UInt>(0.47912090655210005, 1672474007.toUInt()), sequenceOf<Char>('牦'))
2021-03-12 13:07:05,895 [main:149] - GENERATING call of type public inline fun <T> kotlin.sequences.Sequence<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.sequences[DeserializedSimpleFunctionDescriptor@61081fd5]
2021-03-12 13:07:05,979 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 13:07:05,979 [main:302] - generating value of type = Int true depth = 1
2021-03-12 13:07:05,981 [main:78] - Generated call from random type = (Pair<Pair<Double, UInt>, Sequence<Char>>(Pair<Double, UInt>(0.47912090655210005, 1672474007.toUInt()), sequenceOf<Char>('牦'))).second.sumBy({a: T -> -1706107458})
2021-03-12 13:07:05,982 [main:106] - GETTING Int from IntArray
2021-03-12 13:07:05,994 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Int defined in kotlin.IntArray[DeserializedSimpleFunctionDescriptor@4946dd4e]]
2021-03-12 13:07:05,994 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Int defined in kotlin.IntArray[DeserializedSimpleFunctionDescriptor@4946dd4e]
2021-03-12 13:07:06,073 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:06,074 [main:117] - GENERATED CALL = (arr).get(-213438474)
2021-03-12 13:07:06,074 [main:113] - Case = [public fun kotlin.IntArray.last(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d9831e4]]
2021-03-12 13:07:06,074 [main:149] - GENERATING call of type public fun kotlin.IntArray.last(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4d9831e4]
2021-03-12 13:07:06,074 [main:117] - GENERATED CALL = (arr).last()
2021-03-12 13:07:06,074 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4f1c0bfe]]
2021-03-12 13:07:06,074 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4f1c0bfe]
2021-03-12 13:07:06,156 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:06,157 [main:117] - GENERATED CALL = (arr).size.xor(609769990)
2021-03-12 13:07:06,157 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4b45f781]]
2021-03-12 13:07:06,157 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4b45f781]
2021-03-12 13:07:06,158 [main:117] - GENERATED CALL = (arr).size.takeLowestOneBit()
2021-03-12 13:07:06,158 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-12 13:07:06,158 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-12 13:07:06,158 [main:117] - GENERATED CALL = (arr).size.dec()
2021-03-12 13:07:06,158 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@37899405]]
2021-03-12 13:07:06,158 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@37899405]
2021-03-12 13:07:06,283 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:06,284 [main:117] - GENERATED CALL = (arr).size.rotateLeft(-784880429)
2021-03-12 13:07:06,284 [main:113] - Case = [public inline fun kotlin.IntArray.sumBy(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c57ad81]]
2021-03-12 13:07:06,284 [main:149] - GENERATING call of type public inline fun kotlin.IntArray.sumBy(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c57ad81]
2021-03-12 13:07:06,377 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-12 13:07:06,377 [main:302] - generating value of type = Int true depth = 1
2021-03-12 13:07:06,379 [main:117] - GENERATED CALL = (arr).sumBy({a: Int -> 2128546723})
2021-03-12 13:07:06,379 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d80cec3]]
2021-03-12 13:07:06,379 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d80cec3]
2021-03-12 13:07:06,379 [main:117] - GENERATED CALL = (arr).size.inc()
2021-03-12 13:07:06,380 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]]
2021-03-12 13:07:06,380 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]
2021-03-12 13:07:06,463 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:06,464 [main:117] - GENERATED CALL = (arr).size.compareTo(-46)
2021-03-12 13:07:06,464 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@147fc609]]
2021-03-12 13:07:06,464 [main:117] - GENERATED CALL = (arr).size
2021-03-12 13:07:06,464 [main:61] - replacement of 1 of type Int is -915868720
2021-03-12 13:07:06,542 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-12 13:07:06,543 [main:66] - Compilation checking started
2021-03-12 13:07:06,856 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(-915868720, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, 153823381)) {
        sum = (sum).toInt().coerceAtMost(1949927746) + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:07:06,938 [main:119] - TRYING TO REPLACE CONSTANT 153823381
2021-03-12 13:07:07,027 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:07,027 [main:66] - Compilation checking started
2021-03-12 13:07:07,397 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(-915868720, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, (sum).compareTo(2069977275).and(sum))) {
        sum = (sum).toInt().coerceAtMost(1949927746) + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:07:07,397 [main:119] - TRYING TO REPLACE CONSTANT 1845099484
2021-03-12 13:07:07,475 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 13:07:07,475 [main:66] - Compilation checking started
2021-03-12 13:07:07,691 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(-915868720, 1, 1, 1)
    var sum = 0
    for (i in IntRange(and(sum), (sum).compareTo(2069977275).and(sum))) {
        sum = (sum).toInt().coerceAtMost(1949927746) + (sum).compareTo(2069977275).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:07:07,691 [main:119] - TRYING TO REPLACE CONSTANT 2069977275
2021-03-12 13:07:07,770 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(REFERENCE_EXPRESSION)
2021-03-12 13:07:07,770 [main:66] - Compilation checking started
2021-03-12 13:07:08,054 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(-915868720, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, (sum).compareTo(2069977275).and(sum))) {
        sum = (sum).toInt().coerceAtMost(1949927746) + (sum).compareTo(sum).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:07:08,054 [main:119] - TRYING TO REPLACE CONSTANT 1949927746
2021-03-12 13:07:08,133 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:08,133 [main:66] - Compilation checking started
2021-03-12 13:07:08,437 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(-915868720, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, (sum).compareTo(2069977275).and(sum))) {
        sum = (sum).toInt().coerceAtMost((sum).compareTo(sum).and(sum)) + (sum).compareTo(sum).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:07:08,438 [main:119] - TRYING TO REPLACE CONSTANT 915868720
2021-03-12 13:07:08,516 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-12 13:07:08,517 [main:66] - Compilation checking started
2021-03-12 13:07:08,810 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1845099484, 1, 1, 1)
    var sum = 0
    for (i in IntRange(-1845099484, (sum).compareTo(2069977275).and(sum))) {
        sum = (sum).toInt().coerceAtMost((sum).compareTo(sum).and(sum)) + (sum).compareTo(sum).and(sum)
    }
    assertEquals(4321, sum)

    return (arr).size.toString(sum)
}


2021-03-12 13:07:08,833 [main:41] - AFTER TRY 0 res = import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * 10 + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}
2021-03-12 13:07:09,156 [main:43] - Try №0
2021-03-12 13:07:10,916 [main:70] - Trying to insert fun box716(): String {
  val prope1: ArrayList<String> = ArrayList<String>()
  prope1.add("Prague")
  prope1.add("St.Petersburg")
  prope1.add("Moscow")
  prope1.add("Munich")

  val prope2: ArrayList<String> = prope1.fu0<String>({ name: String -> name.startsWith("M")})
  return if (prope2.size == 2) "OK" else "fail"
}
2021-03-12 13:07:11,041 [main:66] - Compilation checking started
2021-03-12 13:07:11,709 [main:104] - Trying to change 44 nodes
2021-03-12 13:07:11,710 [main:108] - replacing (2, Int)
2021-03-12 13:07:11,713 [main:50] - replacing 2 Int
2021-03-12 13:07:11,713 [main:54] - Getting value of type Int
2021-03-12 13:07:11,820 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:11,821 [main:58] - GENERATED VALUE OF TYPE Int = -703381898
2021-03-12 13:07:11,821 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:12,202 [main:67] - randomType = Function1<UInt, ULong>
2021-03-12 13:07:12,202 [main:106] - GETTING Int from Int
2021-03-12 13:07:12,258 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@39ed8e6b]]
2021-03-12 13:07:12,258 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:07:12,258 [main:117] - GENERATED CALL = (sum * 10 + i).toInt().absoluteValue
2021-03-12 13:07:12,259 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7d63b66b]]
2021-03-12 13:07:12,259 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:07:12,259 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7d63b66b]
2021-03-12 13:07:12,366 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:12,367 [main:117] - GENERATED CALL = (sum * 10 + i).toInt().plus(92)
2021-03-12 13:07:12,367 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5ff762c1]]
2021-03-12 13:07:12,367 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014]
2021-03-12 13:07:12,368 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5ff762c1]
2021-03-12 13:07:12,368 [main:117] - GENERATED CALL = (sum * 10 + i).toFloat().toBits()
2021-03-12 13:07:12,368 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@272271e0]]
2021-03-12 13:07:12,368 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014]
2021-03-12 13:07:12,368 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@272271e0]
2021-03-12 13:07:12,368 [main:117] - GENERATED CALL = (sum * 10 + i).toFloat().toInt()
2021-03-12 13:07:12,368 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@51132760]]
2021-03-12 13:07:12,368 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99]
2021-03-12 13:07:12,368 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@51132760]
2021-03-12 13:07:12,369 [main:117] - GENERATED CALL = (sum * 10 + i).toByte().unaryPlus()
2021-03-12 13:07:12,369 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@20aec74f]]
2021-03-12 13:07:12,369 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:07:12,369 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@20aec74f]
2021-03-12 13:07:12,369 [main:117] - GENERATED CALL = (sum * 10 + i).compareTo(sum * 10 + i).takeHighestOneBit()
2021-03-12 13:07:12,369 [main:113] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@55f0e377], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@146a81e4]]
2021-03-12 13:07:12,369 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@55f0e377]
2021-03-12 13:07:12,369 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@146a81e4]
2021-03-12 13:07:12,370 [main:117] - GENERATED CALL = (sum * 10 + i).toDouble().toInt()
2021-03-12 13:07:12,370 [main:113] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2765f545], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@146a81e4]]
2021-03-12 13:07:12,370 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2765f545]
2021-03-12 13:07:12,479 [main:302] - generating value of type = Double true depth = 0
2021-03-12 13:07:12,480 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@146a81e4]
2021-03-12 13:07:12,480 [main:117] - GENERATED CALL = (sum * 10 + i).div(0.2522477188095398).toInt()
2021-03-12 13:07:12,480 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1f9ca08e]]
2021-03-12 13:07:12,480 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:07:12,481 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e317103], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@65474a7d]]
2021-03-12 13:07:12,481 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e317103]
2021-03-12 13:07:12,481 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@65474a7d]
2021-03-12 13:07:12,590 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:12,591 [main:117] - GENERATED CALL = (sum * 10 + i).toShort().rem(-28)
2021-03-12 13:07:12,591 [main:115] - replacement of 2 of type Int is (sum * 10 + i).toFloat().toBits()
2021-03-12 13:07:12,691 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:12,692 [main:66] - Compilation checking started
2021-03-12 13:07:13,062 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * 10 + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}

fun <Ty0> ArrayList<Ty0>.fu0(predicate:  (Ty0) -> Boolean): ArrayList<Ty0> {
  val prope0 = ArrayList<Ty0>()
  for(t in this) {
    if (predicate(t)) prope0.add(t)
  }
  return prope0
}

fun box716(): String {
  val arr = intArrayOf(1, 1, 1, 1)
var sum = 0
val prope1: ArrayList<String> = ArrayList<String>()
  prope1.add("Prague")
  prope1.add("St.Petersburg")
  prope1.add("Moscow")
  prope1.add("Munich")

  val prope2: ArrayList<String> = prope1.fu0<String>({ name: String -> name.startsWith("M")})
  return if (prope2.size == (sum * 10 + i).toFloat().toBits()) "OK" else "fail"
}


2021-03-12 13:07:13,063 [main:108] - replacing (prope2.size, Int)
2021-03-12 13:07:13,064 [main:50] - replacing prope2.size Int
2021-03-12 13:07:13,064 [main:54] - Getting value of type Int
2021-03-12 13:07:13,182 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:13,182 [main:58] - GENERATED VALUE OF TYPE Int = -1025543846
2021-03-12 13:07:13,183 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:13,422 [main:67] - randomType = UShort?
2021-03-12 13:07:13,528 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 13:07:13,594 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@2e3862b5]
2021-03-12 13:07:13,594 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@770f78cc]
2021-03-12 13:07:13,594 [main:78] - Generated call from random type = (4654.toUShort())?.toLong().countOneBits()
2021-03-12 13:07:13,595 [main:106] - GETTING Int from Int
2021-03-12 13:07:13,646 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@55ec97c6]]
2021-03-12 13:07:13,646 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@45547014]
2021-03-12 13:07:13,646 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@55ec97c6]
2021-03-12 13:07:13,743 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:13,744 [main:117] - GENERATED CALL = (sum * 10).toFloat().compareTo(123)
2021-03-12 13:07:13,744 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4084d6b4]]
2021-03-12 13:07:13,744 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:07:13,744 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4084d6b4]
2021-03-12 13:07:13,744 [main:117] - GENERATED CALL = (sum * 10).toInt().unaryMinus()
2021-03-12 13:07:13,744 [main:113] - Case = [public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@15ef9a70]]
2021-03-12 13:07:13,744 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@15ef9a70]
2021-03-12 13:07:13,745 [main:117] - GENERATED CALL = (sum * 10).shr(sum * 10)
2021-03-12 13:07:13,745 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@36542e6d]]
2021-03-12 13:07:13,745 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50f53c99]
2021-03-12 13:07:13,745 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@36542e6d]
2021-03-12 13:07:13,840 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:13,841 [main:117] - GENERATED CALL = (sum * 10).toByte().minus(-41)
2021-03-12 13:07:13,841 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4b45f781]]
2021-03-12 13:07:13,841 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:07:13,934 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:13,935 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4b45f781]
2021-03-12 13:07:13,935 [main:117] - GENERATED CALL = (sum * 10).compareTo(1885766162).takeLowestOneBit()
2021-03-12 13:07:13,935 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@49dba891]]
2021-03-12 13:07:13,935 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@481c80d9]
2021-03-12 13:07:13,935 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@49dba891]
2021-03-12 13:07:13,935 [main:117] - GENERATED CALL = (sum * 10).toInt().dec()
2021-03-12 13:07:13,936 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d80cec3]]
2021-03-12 13:07:13,936 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:07:14,059 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:14,059 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d80cec3]
2021-03-12 13:07:14,060 [main:117] - GENERATED CALL = (sum * 10).compareTo(853924873).inc()
2021-03-12 13:07:14,060 [main:113] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]]
2021-03-12 13:07:14,060 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b14192c]
2021-03-12 13:07:14,154 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:14,155 [main:117] - GENERATED CALL = (sum * 10).compareTo(7)
2021-03-12 13:07:14,155 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@d5196fc]]
2021-03-12 13:07:14,155 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:07:14,253 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:14,254 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@d5196fc]
2021-03-12 13:07:14,358 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 13:07:14,359 [main:117] - GENERATED CALL = (sum * 10).compareTo(-1769912698).minus(-103)
2021-03-12 13:07:14,359 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@631852a5]]
2021-03-12 13:07:14,359 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@495b3de0]
2021-03-12 13:07:14,360 [main:117] - GENERATED CALL = (sum * 10).compareTo(sum * 10).sign
2021-03-12 13:07:14,360 [main:115] - replacement of prope2.size of type Int is (4654.toUShort())?.toLong().countOneBits()
2021-03-12 13:07:14,459 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:14,459 [main:66] - Compilation checking started
2021-03-12 13:07:14,922 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * 10 + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}

fun <Ty0> ArrayList<Ty0>.fu0(predicate:  (Ty0) -> Boolean): ArrayList<Ty0> {
  val prope0 = ArrayList<Ty0>()
  for(t in this) {
    if (predicate(t)) prope0.add(t)
  }
  return prope0
}

fun box716(): String {
  val arr = intArrayOf(1, 1, 1, 1)
var sum = 0
val prope1: ArrayList<String> = ArrayList<String>()
  prope1.add("Prague")
  prope1.add("St.Petersburg")
  prope1.add("Moscow")
  prope1.add("Munich")

  val prope2: ArrayList<String> = prope1.fu0<String>({ name: String -> name.startsWith("M")})
  return if ((4654.toUShort())?.toLong().countOneBits() == 2) "OK" else "fail"
}


2021-03-12 13:07:14,922 [main:108] - replacing (prope1.add("Moscow"), Boolean)
2021-03-12 13:07:14,922 [main:50] - replacing prope1.add("Moscow") Boolean
2021-03-12 13:07:14,922 [main:54] - Getting value of type Boolean
2021-03-12 13:07:15,018 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 13:07:15,018 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 13:07:15,019 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:15,118 [main:67] - randomType = UShort
2021-03-12 13:07:15,247 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 13:07:15,288 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@11b217ec]
2021-03-12 13:07:15,382 [main:302] - generating value of type = Any false depth = 0
2021-03-12 13:07:15,382 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1564d9cc]
2021-03-12 13:07:15,480 [main:302] - generating value of type = Any false depth = 0
2021-03-12 13:07:15,480 [main:78] - Generated call from random type = (3859.toUShort()).equals("hizwy").equals("qoome")
2021-03-12 13:07:15,480 [main:115] - replacement of prope1.add("Moscow") of type Boolean is (3859.toUShort()).equals("hizwy").equals("qoome")
2021-03-12 13:07:15,574 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:15,575 [main:66] - Compilation checking started
2021-03-12 13:07:15,971 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * 10 + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}

fun <Ty0> ArrayList<Ty0>.fu0(predicate:  (Ty0) -> Boolean): ArrayList<Ty0> {
  val prope0 = ArrayList<Ty0>()
  for(t in this) {
    if (predicate(t)) prope0.add(t)
  }
  return prope0
}

fun box716(): String {
  val arr = intArrayOf(1, 1, 1, 1)
var sum = 0
val prope1: ArrayList<String> = ArrayList<String>()
  prope1.add("Prague")
  prope1.add("St.Petersburg")
  (3859.toUShort()).equals("hizwy").equals("qoome")
  prope1.add("Munich")

  val prope2: ArrayList<String> = prope1.fu0<String>({ name: String -> name.startsWith("M")})
  return if ((4654.toUShort())?.toLong().countOneBits() == 2) "OK" else "fail"
}


2021-03-12 13:07:15,971 [main:108] - replacing (add("Munich"), Boolean)
2021-03-12 13:07:15,972 [main:50] - replacing add("Munich") Boolean
2021-03-12 13:07:15,972 [main:54] - Getting value of type Boolean
2021-03-12 13:07:16,067 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 13:07:16,067 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 13:07:16,067 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:16,168 [main:67] - randomType = UInt
2021-03-12 13:07:16,264 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 13:07:16,303 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UInt): kotlin.ranges.UIntRange defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7d8cd630]
2021-03-12 13:07:16,397 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 13:07:16,398 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntRange[DeserializedSimpleFunctionDescriptor@6bc9660b]
2021-03-12 13:07:16,398 [main:78] - Generated call from random type = (1682500512.toUInt()).rangeTo(1283676128.toUInt()).isEmpty()
2021-03-12 13:07:16,399 [main:106] - GETTING Boolean from IntRange
2021-03-12 13:07:16,452 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@55a9a0ba], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@244a60a0]]
2021-03-12 13:07:16,452 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@55a9a0ba]
2021-03-12 13:07:16,552 [main:302] - generating value of type = Any false depth = 0
2021-03-12 13:07:16,553 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@244a60a0]
2021-03-12 13:07:16,553 [main:117] - GENERATED CALL = (arr.indices).equals("uhgea").not()
2021-03-12 13:07:16,553 [main:113] - Case = [public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@a74a9b0], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1564d9cc]]
2021-03-12 13:07:16,553 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@a74a9b0]
2021-03-12 13:07:16,554 [main:113] - Case = [public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@a74a9b0], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@244a60a0]]
2021-03-12 13:07:16,554 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@a74a9b0]
2021-03-12 13:07:16,554 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@244a60a0]
2021-03-12 13:07:16,554 [main:117] - GENERATED CALL = (arr.indices).contains(sum * 10).not()
2021-03-12 13:07:16,554 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@584c289b]]
2021-03-12 13:07:16,554 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@584c289b]
2021-03-12 13:07:16,555 [main:117] - GENERATED CALL = (arr.indices).none()
2021-03-12 13:07:16,555 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@55a9a0ba], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6c15cde9]]
2021-03-12 13:07:16,555 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@55a9a0ba]
2021-03-12 13:07:16,657 [main:302] - generating value of type = Any false depth = 0
2021-03-12 13:07:16,658 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6c15cde9]
2021-03-12 13:07:16,760 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 13:07:16,761 [main:117] - GENERATED CALL = (arr.indices).equals("ccefy").and(false)
2021-03-12 13:07:16,761 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline operator fun kotlin.ranges.IntRange.contains(element: kotlin.Int?): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7e2bd4e2]]
2021-03-12 13:07:16,761 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline operator fun kotlin.ranges.IntRange.contains(element: kotlin.Int?): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7e2bd4e2]
2021-03-12 13:07:16,855 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:16,856 [main:117] - GENERATED CALL = (arr.indices).contains(-1030940627)
2021-03-12 13:07:16,856 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@55a9a0ba], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1c0e1290]]
2021-03-12 13:07:16,856 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@55a9a0ba]
2021-03-12 13:07:16,954 [main:302] - generating value of type = Any false depth = 0
2021-03-12 13:07:16,954 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1c0e1290]
2021-03-12 13:07:17,045 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 13:07:17,046 [main:117] - GENERATED CALL = (arr.indices).equals("ggzye").xor(true)
2021-03-12 13:07:17,046 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c0d43bb]]
2021-03-12 13:07:17,046 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.any(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c0d43bb]
2021-03-12 13:07:17,046 [main:117] - GENERATED CALL = (arr.indices).any()
2021-03-12 13:07:17,046 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c8c09e7]]
2021-03-12 13:07:17,046 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.all(predicate: (T) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c8c09e7]
2021-03-12 13:07:17,144 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 13:07:17,144 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 13:07:17,145 [main:117] - GENERATED CALL = (arr.indices).all({a: T -> false})
2021-03-12 13:07:17,145 [main:113] - Case = [public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@a74a9b0], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6c15cde9]]
2021-03-12 13:07:17,145 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@a74a9b0]
2021-03-12 13:07:17,241 [main:302] - generating value of type = Int true depth = 0
2021-03-12 13:07:17,242 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6c15cde9]
2021-03-12 13:07:17,368 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 13:07:17,369 [main:117] - GENERATED CALL = (arr.indices).contains(1976704241).and(true)
2021-03-12 13:07:17,369 [main:115] - replacement of add("Munich") of type Boolean is (arr.indices).equals("uhgea").not()
2021-03-12 13:07:17,507 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 13:07:17,508 [main:66] - Compilation checking started
2021-03-12 13:07:17,802 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * 10 + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}

fun <Ty0> ArrayList<Ty0>.fu0(predicate:  (Ty0) -> Boolean): ArrayList<Ty0> {
  val prope0 = ArrayList<Ty0>()
  for(t in this) {
    if (predicate(t)) prope0.add(t)
  }
  return prope0
}

fun box716(): String {
  val arr = intArrayOf(1, 1, 1, 1)
var sum = 0
val prope1: ArrayList<String> = ArrayList<String>()
  prope1.add("Prague")
  prope1.add("St.Petersburg")
  (3859.toUShort()).equals("hizwy").equals("qoome")
  prope1.(arr.indices).equals("uhgea").not()

  val prope2: ArrayList<String> = prope1.fu0<String>({ name: String -> name.startsWith("M")})
  return if ((4654.toUShort())?.toLong().countOneBits() == 2) "OK" else "fail"
}


2021-03-12 13:07:17,803 [main:108] - replacing (prope1, ArrayList<String>)
2021-03-12 13:07:17,804 [main:50] - replacing prope1 ArrayList<String>
2021-03-12 13:07:17,804 [main:54] - Getting value of type ArrayList<String>
2021-03-12 13:07:17,906 [main:302] - generating value of type = ArrayList<String> false depth = 0
2021-03-12 13:07:18,006 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): ArrayList<Strg> = TODO()
2021-03-12 13:07:18,008 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): ArrayList<Strg> = TODO()
2021-03-12 13:07:18,108 [main:95] - GENERATED = arrayListOf<String>()
2021-03-12 13:07:18,108 [main:58] - GENERATED VALUE OF TYPE ArrayList<String> = arrayListOf<String>()
2021-03-12 13:07:18,109 [main:61] - GENERATED IS CALL =true
2021-03-12 13:07:18,428 [main:67] - randomType = List<ArrayList<Char>>
2021-03-12 13:07:18,519 [main:106] - GETTING ArrayList<String> from Int
2021-03-12 13:07:18,575 [main:106] - GETTING ArrayList<String> from IntRange
2021-03-12 13:07:18,609 [main:106] - GETTING ArrayList<String> from IntArray
2021-03-12 13:07:18,622 [main:106] - GETTING ArrayList<String> from Int
2021-03-12 13:07:18,622 [main:115] - replacement of prope1 of type ArrayList<String> is arrayListOf<String>()
2021-03-12 13:07:18,710 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 13:07:18,710 [main:66] - Compilation checking started
2021-03-12 13:07:19,099 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * 10 + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}

fun <Ty0> ArrayList<Ty0>.fu0(predicate:  (Ty0) -> Boolean): ArrayList<Ty0> {
  val prope0 = ArrayList<Ty0>()
  for(t in this) {
    if (predicate(t)) prope0.add(t)
  }
  return prope0
}

fun box716(): String {
  val arr = intArrayOf(1, 1, 1, 1)
var sum = 0
val prope1: ArrayList<String> = ArrayList<String>()
  arrayListOf<String>().add("Prague")
  prope1.add("St.Petersburg")
  (3859.toUShort()).equals("hizwy").equals("qoome")
  prope1.add("Munich")

  val prope2: ArrayList<String> = prope1.fu0<String>({ name: String -> name.startsWith("M")})
  return if ((4654.toUShort())?.toLong().countOneBits() == 2) "OK" else "fail"
}


2021-03-12 13:07:19,099 [main:108] - replacing (prope0, ArrayList<Ty0>)
2021-03-12 13:07:19,101 [main:50] - replacing prope0 ArrayList<Ty0>
2021-03-12 13:07:19,101 [main:54] - Getting value of type ArrayList<Ty0>
2021-03-12 13:07:19,207 [main:302] - generating value of type = ArrayList<Ty0> false depth = 0
2021-03-12 13:07:19,310 [main:43] - GENERATING CALL OF fun <E> ArrayList(): ArrayList<Ty0> = TODO()
2021-03-12 13:07:19,313 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): ArrayList<Ty0> = TODO()
2021-03-12 13:07:19,408 [main:95] - GENERATED = ArrayList<Ty0>()
2021-03-12 13:07:19,408 [main:58] - GENERATED VALUE OF TYPE ArrayList<Ty0> = ArrayList<Ty0>()
2021-03-12 13:07:19,408 [main:61] - GENERATED IS CALL =true
2021-03-12 13:07:19,509 [main:67] - randomType = Char
2021-03-12 13:07:19,603 [main:302] - generating value of type = Char true depth = 0
2021-03-12 13:07:19,632 [main:106] - GETTING ArrayList<Ty0> from IntArray
2021-03-12 13:07:19,644 [main:106] - GETTING ArrayList<Ty0> from IntRange
2021-03-12 13:07:19,670 [main:106] - GETTING ArrayList<Ty0> from Int
2021-03-12 13:07:19,704 [main:106] - GETTING ArrayList<Ty0> from Int
2021-03-12 13:07:19,704 [main:115] - replacement of prope0 of type ArrayList<Ty0> is ArrayList<Ty0>()
2021-03-12 13:07:19,816 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 13:07:19,816 [main:66] - Compilation checking started
2021-03-12 13:07:20,233 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * 10 + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}

fun <Ty0> ArrayList<Ty0>.fu0(predicate:  (Ty0) -> Boolean): ArrayList<Ty0> {
  val arr = intArrayOf(1, 1, 1, 1)
var sum = 0
val prope0 = ArrayList<Ty0>()
  for(t in this) {
    if (predicate(t)) prope0.add(t)
  }
  return ArrayList<Ty0>()
}

fun box716(): String {
  val arr = intArrayOf(1, 1, 1, 1)
var sum = 0
val prope1: ArrayList<String> = ArrayList<String>()
  arrayListOf<String>().add("Prague")
  prope1.add("St.Petersburg")
  (3859.toUShort()).equals("hizwy").equals("qoome")
  prope1.add("Munich")

  val prope2: ArrayList<String> = prope1.fu0<String>({ name: String -> name.startsWith("M")})
  return if ((4654.toUShort())?.toLong().countOneBits() == 2) "OK" else "fail"
}


2021-03-12 13:07:20,234 [main:108] - replacing (prope0, ArrayList<Ty0>)
2021-03-12 13:07:20,234 [main:50] - replacing prope0 ArrayList<Ty0>
2021-03-12 13:07:20,235 [main:54] - Getting value of type ArrayList<Ty0>
2021-03-12 13:07:20,352 [main:302] - generating value of type = ArrayList<Ty0> false depth = 0
2021-03-12 13:07:20,460 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): ArrayList<Ty0> = TODO()
2021-03-12 13:07:20,462 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): ArrayList<Ty0> = TODO()
2021-03-12 13:07:20,557 [main:95] - GENERATED = arrayListOf<Ty0>()
2021-03-12 13:07:20,557 [main:58] - GENERATED VALUE OF TYPE ArrayList<Ty0> = arrayListOf<Ty0>()
2021-03-12 13:07:20,558 [main:61] - GENERATED IS CALL =true
2021-03-12 13:07:20,873 [main:67] - randomType = Pair<Char, String>
2021-03-12 13:07:20,963 [main:302] - generating value of type = Pair<Char, String> false depth = 0
2021-03-12 13:07:21,064 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Char, second: String): Pair<Char, String> = TODO()
2021-03-12 13:07:21,066 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Char, second: String): Pair<Char, String> = TODO()
2021-03-12 13:07:21,194 [main:302] - generating value of type = Char true depth = 3
2021-03-12 13:07:21,194 [main:302] - generating value of type = String true depth = 3
2021-03-12 13:07:21,195 [main:95] - GENERATED = Pair<Char, String>('퀐', "femha")
2021-03-12 13:07:21,209 [main:106] - GETTING ArrayList<Ty0> from Int
2021-03-12 13:07:21,245 [main:106] - GETTING ArrayList<Ty0> from IntRange
2021-03-12 13:07:21,279 [main:106] - GETTING ArrayList<Ty0> from IntArray
2021-03-12 13:07:21,295 [main:106] - GETTING ArrayList<Ty0> from Int
2021-03-12 13:07:21,295 [main:115] - replacement of prope0 of type ArrayList<Ty0> is arrayListOf<Ty0>()
2021-03-12 13:07:21,386 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 13:07:21,386 [main:66] - Compilation checking started
2021-03-12 13:07:21,795 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val arr = intArrayOf(1, 1, 1, 1)
    var sum = 0
    for (i in arr.indices.reversed()) {
        sum = sum * 10 + i + arr[i]
    }
    assertEquals(4321, sum)

    return "OK"
}

fun <Ty0> ArrayList<Ty0>.fu0(predicate:  (Ty0) -> Boolean): ArrayList<Ty0> {
  val arr = intArrayOf(1, 1, 1, 1)
var sum = 0
val prope0 = ArrayList<Ty0>()
  for(t in this) {
    if (predicate(t)) arrayListOf<Ty0>().add(t)
  }
  return ArrayList<Ty0>()
}

fun box716(): String {
  val arr = intArrayOf(1, 1, 1, 1)
var sum = 0
val prope1: ArrayList<String> = ArrayList<String>()
  arrayListOf<String>().add("Prague")
  prope1.add("St.Petersburg")
  (3859.toUShort()).equals("hizwy").equals("qoome")
  prope1.add("Munich")

  val prope2: ArrayList<String> = prope1.fu0<String>({ name: String -> name.startsWith("M")})
  return if ((4654.toUShort())?.toLong().countOneBits() == 2) "OK" else "fail"
}


2021-03-12 13:07:21,796 [main:108] - replacing ("Prague", String)
2021-03-12 13:07:21,796 [main:50] - replacing "Prague" String
2021-03-12 13:07:21,796 [main:54] - Getting value of type String
2021-03-12 13:07:21,886 [main:302] - generating value of type = String true depth = 0
2021-03-12 13:07:21,887 [main:58] - GENERATED VALUE OF TYPE String = "kwycx"
2021-03-12 13:07:21,887 [main:61] - GENERATED IS CALL =false
2021-03-12 13:07:22,178 [main:67] - randomType = Sequence<Char?>
2021-03-12 13:07:22,179 [main:106] - GETTING String from IntArray
2021-03-12 13:07:22,190 [main:113] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.IntArray.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@26a159a3]]
2021-03-12 13:07:22,190 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.IntArray.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@26a159a3]
2021-03-12 13:07:22,191 [main:117] - GENERATED CALL = (arr).contentToString()
2021-03-12 13:07:22,191 [main:113] - Case = [public fun kotlin.IntArray.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((kotlin.Int) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fc5910a]]
2021-03-12 13:07:22,191 [main:149] - GENERATING call of type public fun kotlin.IntArray.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((kotlin.Int) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fc5910a]
2021-03-12 13:07:22,286 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 13:07:22,383 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 13:07:22,386 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 13:07:22,598 [main:302] - generating value of type = String true depth = 3
2021-03-12 13:07:22,599 [main:95] - GENERATED = StringBuilder("kozko")
2021-03-12 13:07:22,688 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 13:07:22,781 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 13:07:22,879 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 13:07:22,881 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 13:07:23,078 [main:302] - generating value of type = Int true depth = 3
2021-03-12 13:07:23,079 [main:95] - GENERATED = StringBuilder(-1694902593)
2021-03-12 13:07:23,169 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 13:07:23,262 [main:302] - generating value of type = Function1<Int, CharSequence> false depth = 0
2021-03-12 13:07:23,263 [main:302] - generating value of type = CharSequence false depth = 1
