2021-03-12 00:12:57,861 [main:66] - Compilation checking started
2021-03-12 00:13:00,434 [main:45] - Trying to change 52 nodes
2021-03-12 00:13:00,439 [main:53] - replacing (2L, Long)
2021-03-12 00:13:00,439 [main:50] - replacing 2L Long
2021-03-12 00:13:00,440 [main:54] - Getting value of type Long
2021-03-12 00:13:00,613 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:00,615 [main:58] - GENERATED VALUE OF TYPE Long = 7026660395596211362
2021-03-12 00:13:00,616 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:00,618 [main:67] - randomType = Int
2021-03-12 00:13:00,790 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:01,252 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54793fdd]
2021-03-12 00:13:01,253 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1a3ffd70]
2021-03-12 00:13:01,404 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:01,406 [main:78] - Generated call from random type = (900310464).toByte().rem(-8937763693994716688)
2021-03-12 00:13:01,421 [main:106] - GETTING Long from IntRange
2021-03-12 00:13:01,472 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@34841b9c]]
2021-03-12 00:13:01,472 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@34841b9c]
2021-03-12 00:13:01,610 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:01,612 [main:117] - GENERATED CALL = (intProgression).first.rem(5529575209723031228)
2021-03-12 00:13:01,612 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76bc765d]]
2021-03-12 00:13:01,612 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76bc765d]
2021-03-12 00:13:01,613 [main:117] - GENERATED CALL = (intProgression).endInclusive.toLong()
2021-03-12 00:13:01,614 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9d7f34a]]
2021-03-12 00:13:01,614 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9d7f34a]
2021-03-12 00:13:01,615 [main:117] - GENERATED CALL = (intProgression).sum()
2021-03-12 00:13:01,615 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3c83b2b4]]
2021-03-12 00:13:01,616 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3c83b2b4]
2021-03-12 00:13:01,781 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:01,783 [main:117] - GENERATED CALL = (intProgression).endInclusive.times(7404823789062411707)
2021-03-12 00:13:01,783 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3c83b2b4]]
2021-03-12 00:13:01,783 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3c83b2b4]
2021-03-12 00:13:01,988 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:01,989 [main:117] - GENERATED CALL = (intProgression).first.times(7995128306252524414)
2021-03-12 00:13:01,990 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ee8afd0]]
2021-03-12 00:13:01,990 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ee8afd0]
2021-03-12 00:13:02,139 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:02,140 [main:117] - GENERATED CALL = (intProgression).endInclusive.minus(-2712631364368463463)
2021-03-12 00:13:02,140 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@738132d6]]
2021-03-12 00:13:02,141 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@738132d6]
2021-03-12 00:13:02,284 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:02,285 [main:117] - GENERATED CALL = (intProgression).endInclusive.plus(631213803181767518)
2021-03-12 00:13:02,285 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ee8afd0]]
2021-03-12 00:13:02,285 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ee8afd0]
2021-03-12 00:13:02,441 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:02,442 [main:117] - GENERATED CALL = (intProgression).first.minus(-8032652630074017492)
2021-03-12 00:13:02,442 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76bc765d]]
2021-03-12 00:13:02,443 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76bc765d]
2021-03-12 00:13:02,443 [main:117] - GENERATED CALL = (intProgression).first.toLong()
2021-03-12 00:13:02,443 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6db1e92d]]
2021-03-12 00:13:02,444 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6db1e92d]
2021-03-12 00:13:02,570 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:02,571 [main:117] - GENERATED CALL = (intProgression).endInclusive.div(7854895309396285394)
2021-03-12 00:13:02,571 [main:61] - replacement of 2L of type Long is (intProgression).endInclusive.div(7854895309396285394)
2021-03-12 00:13:02,687 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:02,697 [main:66] - Compilation checking started
2021-03-12 00:13:03,419 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += i
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}
2021-03-12 00:13:03,423 [main:53] - replacing (i, Int)
2021-03-12 00:13:03,423 [main:50] - replacing i Int
2021-03-12 00:13:03,423 [main:54] - Getting value of type Int
2021-03-12 00:13:03,580 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:03,581 [main:58] - GENERATED VALUE OF TYPE Int = 1132843956
2021-03-12 00:13:03,581 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:05,769 [main:67] - randomType = Function2<Triple<UByte, Float, Function1<UByte, ULong>>, MutableMap<LinkedHashSet<Byte>, UByte?>, UByte>
2021-03-12 00:13:05,773 [main:106] - GETTING Int from IntRange
2021-03-12 00:13:05,816 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@fe619cb]]
2021-03-12 00:13:05,816 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@fe619cb]
2021-03-12 00:13:05,928 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:05,929 [main:117] - GENERATED CALL = (intProgression).endInclusive.times(125)
2021-03-12 00:13:05,929 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@70ad46e9]]
2021-03-12 00:13:05,929 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@70ad46e9]
2021-03-12 00:13:06,134 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:06,135 [main:117] - GENERATED CALL = (intProgression).first.or(1798138191)
2021-03-12 00:13:06,135 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff]]
2021-03-12 00:13:06,136 [main:117] - GENERATED CALL = (intProgression).endInclusive
2021-03-12 00:13:06,136 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4636c7ee]]
2021-03-12 00:13:06,137 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4636c7ee]
2021-03-12 00:13:06,137 [main:117] - GENERATED CALL = (intProgression).endInclusive.takeHighestOneBit()
2021-03-12 00:13:06,137 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7eeef604]]
2021-03-12 00:13:06,137 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7eeef604]
2021-03-12 00:13:06,138 [main:117] - GENERATED CALL = (intProgression).endInclusive.inv()
2021-03-12 00:13:06,138 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b2aa9c9]]
2021-03-12 00:13:06,138 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b2aa9c9]
2021-03-12 00:13:06,282 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:06,283 [main:117] - GENERATED CALL = (intProgression).first.shr(-1483853396)
2021-03-12 00:13:06,283 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1639f9ae]]
2021-03-12 00:13:06,283 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1639f9ae]
2021-03-12 00:13:06,284 [main:117] - GENERATED CALL = (intProgression).sum()
2021-03-12 00:13:06,284 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@171e4495]]
2021-03-12 00:13:06,284 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@171e4495]
2021-03-12 00:13:06,284 [main:117] - GENERATED CALL = (intProgression).endInclusive.countTrailingZeroBits()
2021-03-12 00:13:06,285 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@17977d1]]
2021-03-12 00:13:06,285 [main:117] - GENERATED CALL = (intProgression).first.absoluteValue
2021-03-12 00:13:06,285 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3dbadc3c]]
2021-03-12 00:13:06,286 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3dbadc3c]
2021-03-12 00:13:06,399 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:06,400 [main:117] - GENERATED CALL = (intProgression).first.minus(8)
2021-03-12 00:13:06,400 [main:61] - replacement of i of type Int is (intProgression).endInclusive.countTrailingZeroBits()
2021-03-12 00:13:06,515 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:06,515 [main:66] - Compilation checking started
2021-03-12 00:13:07,148 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}
2021-03-12 00:13:07,150 [main:53] - replacing ("OK", String)
2021-03-12 00:13:07,151 [main:50] - replacing "OK" String
2021-03-12 00:13:07,151 [main:54] - Getting value of type String
2021-03-12 00:13:07,271 [main:302] - generating value of type = String true depth = 0
2021-03-12 00:13:07,273 [main:58] - GENERATED VALUE OF TYPE String = "qgjvs"
2021-03-12 00:13:07,273 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:07,274 [main:67] - randomType = Char
2021-03-12 00:13:07,382 [main:302] - generating value of type = Char true depth = 0
2021-03-12 00:13:07,414 [main:149] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@64a65c71]
2021-03-12 00:13:07,415 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@cea66f3]
2021-03-12 00:13:07,522 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:07,523 [main:78] - Generated call from random type = ('䜩').toLong().toString(-629836830)
2021-03-12 00:13:07,526 [main:106] - GETTING String from LongRange
2021-03-12 00:13:07,557 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@cea66f3]]
2021-03-12 00:13:07,557 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@cea66f3]
2021-03-12 00:13:07,661 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:07,662 [main:117] - GENERATED CALL = (longProgression).first.toString(-272997962)
2021-03-12 00:13:07,662 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@cea66f3]]
2021-03-12 00:13:07,662 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@cea66f3]
2021-03-12 00:13:07,819 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:07,820 [main:117] - GENERATED CALL = (longProgression).endInclusive.toString(749002298)
2021-03-12 00:13:07,824 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1a1d9a9d]]
2021-03-12 00:13:07,824 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1a1d9a9d]
2021-03-12 00:13:07,936 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:13:08,048 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 00:13:08,051 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 00:13:08,321 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 00:13:08,330 [main:95] - GENERATED = StringBuilder("yfucb")
2021-03-12 00:13:08,453 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:13:08,559 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:13:08,669 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:08,805 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:13:08,912 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 00:13:08,914 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 00:13:09,130 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 00:13:09,135 [main:95] - GENERATED = StringBuilder("mkpex")
2021-03-12 00:13:09,275 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 00:13:09,275 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 00:13:09,394 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 00:13:09,396 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 00:13:09,601 [main:302] - generating value of type = CharSequence false depth = 4
2021-03-12 00:13:09,605 [main:95] - GENERATED = StringBuilder("iucdp")
2021-03-12 00:13:09,607 [main:117] - GENERATED CALL = (longProgression).joinToString(StringBuilder("yfucb"), StringBuilder(), StringBuilder(), -1834288110, StringBuilder("mkpex"), {a: T -> StringBuilder("iucdp")})
2021-03-12 00:13:09,607 [main:61] - replacement of "OK" of type String is (longProgression).endInclusive.toString(749002298)
2021-03-12 00:13:09,722 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:09,722 [main:66] - Compilation checking started
2021-03-12 00:13:10,233 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:10,234 [main:53] - replacing (mutableListOf<Long>(), MutableList<Long>)
2021-03-12 00:13:10,235 [main:50] - replacing mutableListOf<Long>() MutableList<Long>
2021-03-12 00:13:10,235 [main:54] - Getting value of type MutableList<Long>
2021-03-12 00:13:10,341 [main:302] - generating value of type = MutableList<Long> false depth = 0
2021-03-12 00:13:10,451 [main:43] - GENERATING CALL OF fun <E> ArrayList(): MutableList<Long> = TODO()
2021-03-12 00:13:10,453 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): MutableList<Long> = TODO()
2021-03-12 00:13:10,568 [main:95] - GENERATED = ArrayList<Long>()
2021-03-12 00:13:10,569 [main:58] - GENERATED VALUE OF TYPE MutableList<Long> = ArrayList<Long>()
2021-03-12 00:13:10,569 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:10,570 [main:67] - randomType = Long
2021-03-12 00:13:10,678 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:10,814 [main:106] - GETTING MutableList<Long> from IntRange
2021-03-12 00:13:10,852 [main:106] - GETTING MutableList<Long> from MutableList<Long>
2021-03-12 00:13:10,920 [main:113] - Case = [public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@d024531]]
2021-03-12 00:13:10,920 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@d024531]
2021-03-12 00:13:10,921 [main:117] - GENERATED CALL = (longList).toMutableList()
2021-03-12 00:13:10,921 [main:113] - Case = [public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.Long> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@427940a5]]
2021-03-12 00:13:10,921 [main:149] - GENERATING call of type public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.Long> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@427940a5]
2021-03-12 00:13:11,034 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:11,167 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:11,168 [main:117] - GENERATED CALL = (longList).subList(483022420, 1362569422)
2021-03-12 00:13:11,168 [main:113] - Case = [@kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@8ea6dac]]
2021-03-12 00:13:11,168 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@8ea6dac]
2021-03-12 00:13:11,169 [main:117] - GENERATED CALL = (longList).asReversed()
2021-03-12 00:13:11,169 [main:61] - replacement of mutableListOf<Long>() of type MutableList<Long> is (longList).subList(483022420, 1362569422)
2021-03-12 00:13:11,293 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:11,293 [main:66] - Compilation checking started
2021-03-12 00:13:11,642 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = (longList).subList(483022420, 1362569422)
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:11,644 [main:53] - replacing (intProgression.reversed() step 2, IntProgression)
2021-03-12 00:13:11,644 [main:50] - replacing intProgression.reversed() step 2 IntProgression
2021-03-12 00:13:11,644 [main:54] - Getting value of type IntProgression
2021-03-12 00:13:11,748 [main:302] - generating value of type = IntProgression false depth = 0
2021-03-12 00:13:11,853 [main:43] - GENERATING CALL OF fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntProgression = TODO()
2021-03-12 00:13:11,854 [main:61] - WITHOUT TYPE PARAMS = fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntProgression = TODO()
2021-03-12 00:13:12,241 [main:302] - generating value of type = Int true depth = 3
2021-03-12 00:13:12,242 [main:302] - generating value of type = Int true depth = 3
2021-03-12 00:13:12,242 [main:95] - GENERATED = IntRange(1312721905, 1510823937)
2021-03-12 00:13:12,242 [main:58] - GENERATED VALUE OF TYPE IntProgression = IntRange(1312721905, 1510823937)
2021-03-12 00:13:12,243 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:12,627 [main:67] - randomType = LinkedHashMap<Double, Int>
2021-03-12 00:13:12,726 [main:302] - generating value of type = LinkedHashMap<Double, Int> false depth = 0
2021-03-12 00:13:12,833 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): LkedHashMap<Double, Int> = TODO()
2021-03-12 00:13:12,835 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): LkedHashMap<Double, Int> = TODO()
2021-03-12 00:13:12,961 [main:95] - GENERATED = linkedMapOf<Double, Int>()
2021-03-12 00:13:13,221 [main:149] - GENERATING call of type public infix fun kotlin.Int.downTo(to: kotlin.Byte): kotlin.ranges.IntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@643c5b25]
2021-03-12 00:13:13,341 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:13,341 [main:78] - Generated call from random type = (linkedMapOf<Double, Int>()).size.downTo(123)
2021-03-12 00:13:13,346 [main:106] - GETTING IntProgression from MutableList<Int>
2021-03-12 00:13:13,422 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public infix fun kotlin.Int.downTo(to: kotlin.Byte): kotlin.ranges.IntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@643c5b25]]
2021-03-12 00:13:13,423 [main:149] - GENERATING call of type public infix fun kotlin.Int.downTo(to: kotlin.Byte): kotlin.ranges.IntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@643c5b25]
2021-03-12 00:13:13,522 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:13,523 [main:117] - GENERATED CALL = (intList).size.downTo(110)
2021-03-12 00:13:13,523 [main:61] - replacement of intProgression.reversed() step 2 of type IntProgression is (intList).size.downTo(110)
2021-03-12 00:13:13,622 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:13,622 [main:66] - Compilation checking started
2021-03-12 00:13:14,172 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:14,174 [main:53] - replacing ((longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed(), LongProgression)
2021-03-12 00:13:14,174 [main:50] - replacing (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() LongProgression
2021-03-12 00:13:14,175 [main:54] - Getting value of type LongProgression
2021-03-12 00:13:14,305 [main:302] - generating value of type = LongProgression false depth = 0
2021-03-12 00:13:14,417 [main:43] - GENERATING CALL OF fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:14,420 [main:61] - WITHOUT TYPE PARAMS = fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:14,769 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:14,769 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:14,770 [main:95] - GENERATED = LongRange(4026235969591299353, -349702633955351349)
2021-03-12 00:13:14,770 [main:58] - GENERATED VALUE OF TYPE LongProgression = LongRange(4026235969591299353, -349702633955351349)
2021-03-12 00:13:14,770 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:15,239 [main:67] - randomType = LinkedHashMap<Boolean, Double>
2021-03-12 00:13:15,332 [main:302] - generating value of type = LinkedHashMap<Boolean, Double> false depth = 0
2021-03-12 00:13:15,448 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): LkedHashMap<Boolean, Double> = TODO()
2021-03-12 00:13:15,450 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): LkedHashMap<Boolean, Double> = TODO()
2021-03-12 00:13:15,562 [main:95] - GENERATED = linkedMapOf<Boolean, Double>()
2021-03-12 00:13:15,728 [main:149] - GENERATING call of type public infix fun kotlin.Int.downTo(to: kotlin.Long): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@45d46151]
2021-03-12 00:13:15,837 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:15,837 [main:78] - Generated call from random type = (linkedMapOf<Boolean, Double>()).size.downTo(-8655006067596848396)
2021-03-12 00:13:15,839 [main:106] - GETTING LongProgression from LongRange
2021-03-12 00:13:15,879 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], public infix fun kotlin.Long.downTo(to: kotlin.Byte): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@798f8f25]]
2021-03-12 00:13:15,879 [main:149] - GENERATING call of type public infix fun kotlin.Long.downTo(to: kotlin.Byte): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@798f8f25]
2021-03-12 00:13:15,980 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:15,981 [main:117] - GENERATED CALL = (longProgression).first.downTo(-99)
2021-03-12 00:13:15,981 [main:113] - Case = [public fun kotlin.ranges.LongProgression.reversed(): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ec6b7b6]]
2021-03-12 00:13:15,981 [main:149] - GENERATING call of type public fun kotlin.ranges.LongProgression.reversed(): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ec6b7b6]
2021-03-12 00:13:15,982 [main:117] - GENERATED CALL = (longProgression).reversed()
2021-03-12 00:13:15,982 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], public infix fun kotlin.Long.downTo(to: kotlin.Byte): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@798f8f25]]
2021-03-12 00:13:15,982 [main:149] - GENERATING call of type public infix fun kotlin.Long.downTo(to: kotlin.Byte): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@798f8f25]
2021-03-12 00:13:16,091 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:16,092 [main:117] - GENERATED CALL = (longProgression).endInclusive.downTo(118)
2021-03-12 00:13:16,092 [main:113] - Case = [public infix fun kotlin.ranges.LongProgression.step(step: kotlin.Long): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@27b6b0de]]
2021-03-12 00:13:16,093 [main:149] - GENERATING call of type public infix fun kotlin.ranges.LongProgression.step(step: kotlin.Long): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@27b6b0de]
2021-03-12 00:13:16,213 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:16,213 [main:117] - GENERATED CALL = (longProgression).step(-2536303651533519369)
2021-03-12 00:13:16,214 [main:61] - replacement of (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() of type LongProgression is LongRange(4026235969591299353, -349702633955351349)
2021-03-12 00:13:16,320 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 00:13:16,321 [main:66] - Compilation checking started
2021-03-12 00:13:16,767 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:16,769 [main:53] - replacing (charList, MutableList<Char>)
2021-03-12 00:13:16,769 [main:50] - replacing charList MutableList<Char>
2021-03-12 00:13:16,769 [main:54] - Getting value of type MutableList<Char>
2021-03-12 00:13:16,864 [main:302] - generating value of type = MutableList<Char> false depth = 0
2021-03-12 00:13:16,965 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: Char): MutableList<Char> = TODO()
2021-03-12 00:13:16,967 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: Char): MutableList<Char> = TODO()
2021-03-12 00:13:17,083 [main:302] - generating value of type = Char true depth = 3
2021-03-12 00:13:17,085 [main:95] - GENERATED = arrayListOf<Char>('枩')
2021-03-12 00:13:17,085 [main:58] - GENERATED VALUE OF TYPE MutableList<Char> = arrayListOf<Char>('枩')
2021-03-12 00:13:17,085 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:17,380 [main:67] - randomType = Function1<Short, UByte>
2021-03-12 00:13:17,384 [main:106] - GETTING MutableList<Char> from CharRange
2021-03-12 00:13:17,408 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4178ef21]]
2021-03-12 00:13:17,408 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4178ef21]
2021-03-12 00:13:17,408 [main:117] - GENERATED CALL = (charProgression).toMutableList()
2021-03-12 00:13:17,408 [main:61] - replacement of charList of type MutableList<Char> is (charProgression).toMutableList()
2021-03-12 00:13:17,502 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:17,502 [main:66] - Compilation checking started
2021-03-12 00:13:17,925 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:17,926 [main:53] - replacing (listOf(2, 5, 8), List<Int>)
2021-03-12 00:13:17,926 [main:50] - replacing listOf(2, 5, 8) List<Int>
2021-03-12 00:13:17,926 [main:54] - Getting value of type List<Int>
2021-03-12 00:13:18,042 [main:302] - generating value of type = List<Int> false depth = 0
2021-03-12 00:13:18,141 [main:43] - GENERATING CALL OF fun <T> mutableListOf(): List<Int> = TODO()
2021-03-12 00:13:18,143 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(): List<Int> = TODO()
2021-03-12 00:13:18,289 [main:95] - GENERATED = mutableListOf<Int>()
2021-03-12 00:13:18,289 [main:58] - GENERATED VALUE OF TYPE List<Int> = mutableListOf<Int>()
2021-03-12 00:13:18,289 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:18,406 [main:67] - randomType = Char?
2021-03-12 00:13:18,522 [main:302] - generating value of type = Char true depth = 0
2021-03-12 00:13:18,563 [main:106] - GETTING List<Int> from MutableList<Int>
2021-03-12 00:13:18,632 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.drop(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@62c74f24]]
2021-03-12 00:13:18,633 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.drop(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@62c74f24]
2021-03-12 00:13:18,740 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:18,740 [main:117] - GENERATED CALL = (intList).drop(1512482769)
2021-03-12 00:13:18,741 [main:113] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@79c61956]]
2021-03-12 00:13:18,741 [main:149] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@79c61956]
2021-03-12 00:13:18,741 [main:117] - GENERATED CALL = (intList).sorted()
2021-03-12 00:13:18,741 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.take(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5b3ab554]]
2021-03-12 00:13:18,741 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.take(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5b3ab554]
2021-03-12 00:13:18,844 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:18,845 [main:117] - GENERATED CALL = (intList).take(-373427390)
2021-03-12 00:13:18,845 [main:113] - Case = [public inline fun <T, K> kotlin.collections.Iterable<T>.distinctBy(selector: (T) -> K): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@d5cbec0]]
2021-03-12 00:13:18,846 [main:149] - GENERATING call of type public inline fun <T, K> kotlin.collections.Iterable<T>.distinctBy(selector: (T) -> K): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@d5cbec0]
2021-03-12 00:13:18,939 [main:302] - generating value of type = Function1<T, K> false depth = 0
2021-03-12 00:13:18,939 [main:302] - generating value of type = K false depth = 1
2021-03-12 00:13:18,944 [main:117] - GENERATED CALL = (intList).distinctBy({a: T -> })
2021-03-12 00:13:18,944 [main:113] - Case = [public inline fun <T> kotlin.collections.List<T>.dropLastWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7467b8ee]]
2021-03-12 00:13:18,944 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.dropLastWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7467b8ee]
2021-03-12 00:13:19,043 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 00:13:19,043 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 00:13:19,045 [main:117] - GENERATED CALL = (intList).dropLastWhile({a: T -> false})
2021-03-12 00:13:19,045 [main:113] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6a87f190]]
2021-03-12 00:13:19,045 [main:149] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sortedDescending(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6a87f190]
2021-03-12 00:13:19,046 [main:117] - GENERATED CALL = (intList).sortedDescending()
2021-03-12 00:13:19,046 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.takeLast(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@42b2eb48]]
2021-03-12 00:13:19,046 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.takeLast(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@42b2eb48]
2021-03-12 00:13:19,154 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:19,155 [main:117] - GENERATED CALL = (intList).takeLast(-980100116)
2021-03-12 00:13:19,155 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filter(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2130eec1]]
2021-03-12 00:13:19,155 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filter(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2130eec1]
2021-03-12 00:13:19,253 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 00:13:19,254 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 00:13:19,254 [main:117] - GENERATED CALL = (intList).filter({a: T -> false})
2021-03-12 00:13:19,255 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.asReversed(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@74b4931d]]
2021-03-12 00:13:19,255 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.asReversed(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@74b4931d]
2021-03-12 00:13:19,255 [main:117] - GENERATED CALL = (intList).asReversed()
2021-03-12 00:13:19,255 [main:113] - Case = [public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.List<kotlin.Int> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6c9f153]]
2021-03-12 00:13:19,255 [main:149] - GENERATING call of type public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.List<kotlin.Int> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@6c9f153]
2021-03-12 00:13:19,364 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:19,464 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:19,465 [main:117] - GENERATED CALL = (intList).subList(400202624, -1043224769)
2021-03-12 00:13:19,465 [main:61] - replacement of listOf(2, 5, 8) of type List<Int> is (intList).filter({a: T -> false})
2021-03-12 00:13:19,585 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:19,585 [main:66] - Compilation checking started
2021-03-12 00:13:19,893 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals((intList).filter({a: T -> false}), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:19,895 [main:53] - replacing ('a', Char)
2021-03-12 00:13:19,895 [main:50] - replacing 'a' Char
2021-03-12 00:13:19,896 [main:54] - Getting value of type Char
2021-03-12 00:13:20,002 [main:302] - generating value of type = Char true depth = 0
2021-03-12 00:13:20,003 [main:58] - GENERATED VALUE OF TYPE Char = '팛'
2021-03-12 00:13:20,003 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:20,115 [main:67] - randomType = Short
2021-03-12 00:13:20,213 [main:302] - generating value of type = Short true depth = 0
2021-03-12 00:13:20,258 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@26e729ea]
2021-03-12 00:13:20,259 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercaseChar(): kotlin.Char defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5b5acb43]
2021-03-12 00:13:20,259 [main:78] - Generated call from random type = (-22038).toChar().lowercaseChar()
2021-03-12 00:13:20,259 [main:61] - replacement of 'a' of type Char is (-22038).toChar().lowercaseChar()
2021-03-12 00:13:20,353 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:20,353 [main:66] - Compilation checking started
2021-03-12 00:13:20,758 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:20,760 [main:53] - replacing (5L, Long)
2021-03-12 00:13:20,761 [main:50] - replacing 5L Long
2021-03-12 00:13:20,761 [main:54] - Getting value of type Long
2021-03-12 00:13:20,860 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:20,860 [main:58] - GENERATED VALUE OF TYPE Long = 498801683961808330
2021-03-12 00:13:20,861 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:21,341 [main:67] - randomType = List<LinkedHashSet<Byte>>?
2021-03-12 00:13:21,342 [main:106] - GETTING Long from LongRange
2021-03-12 00:13:21,380 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@73591246]]
2021-03-12 00:13:21,380 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@73591246]
2021-03-12 00:13:21,477 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:21,478 [main:117] - GENERATED CALL = (longProgression).endInclusive.rem(10)
2021-03-12 00:13:21,479 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f4f7f1a]]
2021-03-12 00:13:21,479 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f4f7f1a]
2021-03-12 00:13:21,571 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 00:13:21,672 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<Char>, selector: (T)->Char): Comparator<T> = TODO()
2021-03-12 00:13:21,673 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<Char>, selector: (T)->Char): Comparator<T> = TODO()
2021-03-12 00:13:22,024 [main:302] - generating value of type = Comparator<Char> false depth = 3
2021-03-12 00:13:22,126 [main:43] - GENERATING CALL OF fun <T> nullsLast(comparator: kotlin.Comparator<Char>): Comparator<Char> = TODO()
2021-03-12 00:13:22,127 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(comparator: kotlin.Comparator<Char>): Comparator<Char> = TODO()
2021-03-12 00:13:22,319 [main:302] - generating value of type = Comparator<Char> false depth = 6
2021-03-12 00:13:22,643 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<UByte?>, selector: (Char)->UByte?): Comparator<Char> = TODO()
2021-03-12 00:13:22,645 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<UByte?>, selector: (Char)->UByte?): Comparator<Char> = TODO()
2021-03-12 00:13:22,925 [main:302] - generating value of type = Comparator<UByte?> false depth = 9
2021-03-12 00:13:23,017 [main:43] - GENERATING CALL OF fun <T> nullsLast(comparator: kotlin.Comparator<UByte?>): Comparator<UByte?> = TODO()
2021-03-12 00:13:23,019 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(comparator: kotlin.Comparator<UByte?>): Comparator<UByte?> = TODO()
2021-03-12 00:13:23,253 [main:302] - generating value of type = Comparator<UByte?> false depth = 12
2021-03-12 00:13:23,354 [main:43] - GENERATING CALL OF fun <T> naturalOrder(): Comparator<UByte?> = TODO()
2021-03-12 00:13:23,355 [main:61] - WITHOUT TYPE PARAMS = fun <T> naturalOrder(): Comparator<UByte?> = TODO()
2021-03-12 00:13:23,453 [main:95] - GENERATED = naturalOrder<UByte?>()
2021-03-12 00:13:23,453 [main:95] - GENERATED = nullsLast<UByte?>(naturalOrder<UByte?>())
2021-03-12 00:13:23,453 [main:302] - generating value of type = Function1<Char, UByte?> false depth = 9
2021-03-12 00:13:23,454 [main:302] - generating value of type = UByte true depth = 10
2021-03-12 00:13:23,454 [main:95] - GENERATED = compareByDescending<Char, UByte?>(nullsLast<UByte?>(naturalOrder<UByte?>()), {a: Char -> 126.toUByte()})
2021-03-12 00:13:23,455 [main:95] - GENERATED = nullsLast<Char>(compareByDescending<Char, UByte?>(nullsLast<UByte?>(naturalOrder<UByte?>()), {a: Char -> 126.toUByte()}))
2021-03-12 00:13:23,455 [main:385] - Cant generate call of fun <T, K> compareByDescending(comparator: kotlin.Comparator<Char>, selector: (T)->Char): Comparator<T> = TODO()
2021-03-12 00:13:23,455 [main:158] - CANT GENERATE PARAMS FOR @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f4f7f1a]
2021-03-12 00:13:23,455 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1d4fdc5d]]
2021-03-12 00:13:23,455 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1d4fdc5d]
2021-03-12 00:13:23,549 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-12 00:13:23,550 [main:302] - generating value of type = R false depth = 1
2021-03-12 00:13:23,761 [main:43] - GENERATING CALL OF fun <R> run(block: ()->UShort): R = TODO()
2021-03-12 00:13:23,763 [main:61] - WITHOUT TYPE PARAMS = fun <R> run(block: ()->UShort): R = TODO()
2021-03-12 00:13:23,966 [main:302] - generating value of type = Function0<UShort> false depth = 4
2021-03-12 00:13:23,966 [main:302] - generating value of type = UShort true depth = 5
2021-03-12 00:13:23,967 [main:95] - GENERATED = run<UShort>({ 9655.toUShort()})
2021-03-12 00:13:23,967 [main:117] - GENERATED CALL = (longProgression).maxByOrNull({a: T -> run<UShort>({ 9655.toUShort()})})
2021-03-12 00:13:23,968 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5c646f35]]
2021-03-12 00:13:23,968 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5c646f35]
2021-03-12 00:13:24,058 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:24,059 [main:117] - GENERATED CALL = (longProgression).endInclusive.shl(-1627780401)
2021-03-12 00:13:24,059 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52e3b39b]]
2021-03-12 00:13:24,059 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 00:13:24,159 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 00:13:24,277 [main:43] - GENERATING CALL OF fun <T> compareBy(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 00:13:24,279 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 00:13:24,461 [main:385] - Cant generate call of fun <T> compareBy(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 00:13:24,461 [main:158] - CANT GENERATE PARAMS FOR @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@52e3b39b]
2021-03-12 00:13:24,461 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3d2a90af]]
2021-03-12 00:13:24,461 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3d2a90af]
2021-03-12 00:13:24,552 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:24,553 [main:117] - GENERATED CALL = (longProgression).first.xor(811377006920922008)
2021-03-12 00:13:24,553 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], public open fun toLong(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7a87183a]]
2021-03-12 00:13:24,553 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7a87183a]
2021-03-12 00:13:24,553 [main:117] - GENERATED CALL = (longProgression).endInclusive.toLong()
2021-03-12 00:13:24,553 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801]]
2021-03-12 00:13:24,553 [main:117] - GENERATED CALL = (longProgression).endInclusive
2021-03-12 00:13:24,553 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4e187926]]
2021-03-12 00:13:24,553 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4e187926]
2021-03-12 00:13:24,554 [main:117] - GENERATED CALL = (longProgression).first.unaryPlus()
2021-03-12 00:13:24,554 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.min(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@503c6c4d]]
2021-03-12 00:13:24,554 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.min(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@503c6c4d]
2021-03-12 00:13:24,554 [main:117] - GENERATED CALL = (longProgression).min()
2021-03-12 00:13:24,554 [main:61] - replacement of 5L of type Long is (longProgression).endInclusive.shl(-1627780401)
2021-03-12 00:13:24,656 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:24,657 [main:66] - Compilation checking started
2021-03-12 00:13:25,058 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:25,061 [main:53] - replacing (10L, Long)
2021-03-12 00:13:25,062 [main:50] - replacing 10L Long
2021-03-12 00:13:25,062 [main:54] - Getting value of type Long
2021-03-12 00:13:25,148 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:25,149 [main:58] - GENERATED VALUE OF TYPE Long = 3033015060654851249
2021-03-12 00:13:25,149 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:25,239 [main:67] - randomType = Long?
2021-03-12 00:13:25,336 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:25,406 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3d8e94e0]
2021-03-12 00:13:25,497 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:25,498 [main:78] - Generated call from random type = (-5226784442900366449)?.plus(-87)
2021-03-12 00:13:25,499 [main:106] - GETTING Long from MutableList<Int>
2021-03-12 00:13:25,559 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ee8afd0]]
2021-03-12 00:13:25,559 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ee8afd0]
2021-03-12 00:13:25,647 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:25,648 [main:117] - GENERATED CALL = (intList).size.minus(-8791135312765900285)
2021-03-12 00:13:25,648 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@364b80c1]]
2021-03-12 00:13:25,648 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@364b80c1]
2021-03-12 00:13:25,735 [main:302] - generating value of type = Function1<T, Long> false depth = 0
2021-03-12 00:13:25,736 [main:302] - generating value of type = Long true depth = 1
2021-03-12 00:13:25,736 [main:117] - GENERATED CALL = (intList).sumOf({a: T -> -296043735938208432})
2021-03-12 00:13:25,737 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@738132d6]]
2021-03-12 00:13:25,737 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@738132d6]
2021-03-12 00:13:25,824 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:25,824 [main:117] - GENERATED CALL = (intList).size.plus(8794491791224694818)
2021-03-12 00:13:25,824 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76bc765d]]
2021-03-12 00:13:25,824 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76bc765d]
2021-03-12 00:13:25,825 [main:117] - GENERATED CALL = (intList).size.toLong()
2021-03-12 00:13:25,825 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9d7f34a]]
2021-03-12 00:13:25,825 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9d7f34a]
2021-03-12 00:13:25,825 [main:117] - GENERATED CALL = (intList).sum()
2021-03-12 00:13:25,825 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3c83b2b4]]
2021-03-12 00:13:25,825 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3c83b2b4]
2021-03-12 00:13:25,912 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:25,912 [main:117] - GENERATED CALL = (intList).size.times(8149947561715865121)
2021-03-12 00:13:25,912 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@34841b9c]]
2021-03-12 00:13:25,912 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@34841b9c]
2021-03-12 00:13:25,999 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:26,000 [main:117] - GENERATED CALL = (intList).size.rem(-8785462696793704837)
2021-03-12 00:13:26,000 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6db1e92d]]
2021-03-12 00:13:26,000 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6db1e92d]
2021-03-12 00:13:26,101 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:26,102 [main:117] - GENERATED CALL = (intList).size.div(-8574171832897053738)
2021-03-12 00:13:26,102 [main:61] - replacement of 10L of type Long is (-5226784442900366449)?.plus(-87)
2021-03-12 00:13:26,203 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(SAFE_ACCESS_EXPRESSION)
2021-03-12 00:13:26,204 [main:66] - Compilation checking started
2021-03-12 00:13:26,640 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:26,642 [main:53] - replacing (listOf('b', 'e', 'h'), List<Char>)
2021-03-12 00:13:26,642 [main:50] - replacing listOf('b', 'e', 'h') List<Char>
2021-03-12 00:13:26,643 [main:54] - Getting value of type List<Char>
2021-03-12 00:13:26,732 [main:302] - generating value of type = List<Char> false depth = 0
2021-03-12 00:13:26,837 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(): List<Char> = TODO()
2021-03-12 00:13:26,838 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(): List<Char> = TODO()
2021-03-12 00:13:26,941 [main:95] - GENERATED = ArrayDeque<Char>()
2021-03-12 00:13:26,941 [main:58] - GENERATED VALUE OF TYPE List<Char> = ArrayDeque<Char>()
2021-03-12 00:13:26,941 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:27,155 [main:67] - randomType = Function2<Long, UShort, Long>
2021-03-12 00:13:27,160 [main:106] - GETTING List<Char> from MutableList<Int>
2021-03-12 00:13:27,204 [main:61] - replacement of listOf('b', 'e', 'h') of type List<Char> is ArrayDeque<Char>()
2021-03-12 00:13:27,290 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 00:13:27,291 [main:66] - Compilation checking started
2021-03-12 00:13:27,702 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:27,702 [main:53] - replacing (intProgression.reversed(), IntProgression)
2021-03-12 00:13:27,702 [main:50] - replacing intProgression.reversed() IntProgression
2021-03-12 00:13:27,702 [main:54] - Getting value of type IntProgression
2021-03-12 00:13:27,820 [main:302] - generating value of type = IntProgression false depth = 0
2021-03-12 00:13:27,931 [main:43] - GENERATING CALL OF fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntProgression = TODO()
2021-03-12 00:13:27,933 [main:61] - WITHOUT TYPE PARAMS = fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntProgression = TODO()
2021-03-12 00:13:28,229 [main:302] - generating value of type = Int true depth = 3
2021-03-12 00:13:28,229 [main:302] - generating value of type = Int true depth = 3
2021-03-12 00:13:28,230 [main:95] - GENERATED = IntRange(463580549, -414241372)
2021-03-12 00:13:28,230 [main:58] - GENERATED VALUE OF TYPE IntProgression = IntRange(463580549, -414241372)
2021-03-12 00:13:28,230 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:28,232 [main:67] - randomType = Long
2021-03-12 00:13:28,319 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:28,370 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e2a1d9]
2021-03-12 00:13:28,460 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:28,461 [main:149] - GENERATING call of type public infix fun kotlin.Int.downTo(to: kotlin.Byte): kotlin.ranges.IntProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@643c5b25]
2021-03-12 00:13:28,549 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:28,550 [main:78] - Generated call from random type = (5037780485495242182).compareTo(29).downTo(-96)
2021-03-12 00:13:28,550 [main:61] - replacement of intProgression.reversed() of type IntProgression is IntRange(463580549, -414241372)
2021-03-12 00:13:28,640 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 00:13:28,642 [main:53] - replacing (2, Int)
2021-03-12 00:13:28,642 [main:50] - replacing 2 Int
2021-03-12 00:13:28,642 [main:54] - Getting value of type Int
2021-03-12 00:13:28,746 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:28,746 [main:58] - GENERATED VALUE OF TYPE Int = -1990146518
2021-03-12 00:13:28,746 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:28,944 [main:67] - randomType = MutableMap<Long?, Char>
2021-03-12 00:13:28,945 [main:106] - GETTING Int from LongRange
2021-03-12 00:13:28,973 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1639f9ae]]
2021-03-12 00:13:28,973 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1639f9ae]
2021-03-12 00:13:28,974 [main:117] - GENERATED CALL = (longProgression).sum()
2021-03-12 00:13:28,974 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbb2f6d]]
2021-03-12 00:13:28,974 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3fbb2f6d]
2021-03-12 00:13:28,974 [main:117] - GENERATED CALL = (longProgression).endInclusive.countLeadingZeroBits()
2021-03-12 00:13:28,974 [main:113] - Case = [public open fun contains(value: kotlin.Long): kotlin.Boolean defined in kotlin.ranges.LongRange[DeserializedSimpleFunctionDescriptor@2a946570], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5de22b8c]]
2021-03-12 00:13:28,974 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Long): kotlin.Boolean defined in kotlin.ranges.LongRange[DeserializedSimpleFunctionDescriptor@2a946570]
2021-03-12 00:13:29,069 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:29,070 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5de22b8c]
2021-03-12 00:13:29,161 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:13:29,162 [main:117] - GENERATED CALL = (longProgression).contains(-4104932385632348166).compareTo(false)
2021-03-12 00:13:29,162 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@59daf355]]
2021-03-12 00:13:29,162 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@59daf355]
2021-03-12 00:13:29,162 [main:117] - GENERATED CALL = (longProgression).first.toInt()
2021-03-12 00:13:29,162 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@e8b0e73]]
2021-03-12 00:13:29,162 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@e8b0e73]
2021-03-12 00:13:29,163 [main:117] - GENERATED CALL = (longProgression).endInclusive.countTrailingZeroBits()
2021-03-12 00:13:29,163 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@287607d9]]
2021-03-12 00:13:29,163 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@287607d9]
2021-03-12 00:13:29,254 [main:302] - generating value of type = T false depth = 0
2021-03-12 00:13:29,500 [main:43] - GENERATING CALL OF fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<UInt>)->kotlin.Unit): T = TODO()
2021-03-12 00:13:29,501 [main:61] - WITHOUT TYPE PARAMS = fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<UInt>)->kotlin.Unit): T = TODO()
2021-03-12 00:13:29,694 [main:302] - generating value of type = Function1<Continuation<UInt>, Unit> false depth = 3
2021-03-12 00:13:29,694 [main:302] - generating value of type = Unit false depth = 4
2021-03-12 00:13:29,789 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 00:13:29,790 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 00:13:30,008 [main:302] - generating value of type = Any false depth = 7
2021-03-12 00:13:30,008 [main:95] - GENERATED = print("wfvwq")
2021-03-12 00:13:30,008 [main:95] - GENERATED = suspendCoroutine<UInt>({a: Continuation<UInt> -> print("wfvwq")})
2021-03-12 00:13:30,009 [main:117] - GENERATED CALL = (longProgression).lastIndexOf(suspendCoroutine<UInt>({a: Continuation<UInt> -> print("wfvwq")}))
2021-03-12 00:13:30,009 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.LongProgression[DeserializedSimpleFunctionDescriptor@68c440aa], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5de22b8c]]
2021-03-12 00:13:30,009 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.LongProgression[DeserializedSimpleFunctionDescriptor@68c440aa]
2021-03-12 00:13:30,111 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:13:30,111 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5de22b8c]
2021-03-12 00:13:30,202 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:13:30,203 [main:117] - GENERATED CALL = (longProgression).equals("jitgb").compareTo(true)
2021-03-12 00:13:30,203 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e2a1d9]]
2021-03-12 00:13:30,203 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e2a1d9]
2021-03-12 00:13:30,290 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:30,290 [main:117] - GENERATED CALL = (longProgression).first.compareTo(-48)
2021-03-12 00:13:30,290 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5d43405f]]
2021-03-12 00:13:30,290 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5d43405f]
2021-03-12 00:13:30,291 [main:117] - GENERATED CALL = (longProgression).endInclusive.countOneBits()
2021-03-12 00:13:30,291 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@196f80ab]]
2021-03-12 00:13:30,291 [main:117] - GENERATED CALL = (longProgression).endInclusive.sign
2021-03-12 00:13:30,291 [main:61] - replacement of 2 of type Int is -1990146518
2021-03-12 00:13:30,378 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-12 00:13:30,378 [main:66] - Compilation checking started
2021-03-12 00:13:30,739 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += i
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:30,740 [main:53] - replacing (i, Char)
2021-03-12 00:13:30,741 [main:50] - replacing i Char
2021-03-12 00:13:30,741 [main:54] - Getting value of type Char
2021-03-12 00:13:30,842 [main:302] - generating value of type = Char true depth = 0
2021-03-12 00:13:30,842 [main:58] - GENERATED VALUE OF TYPE Char = '྇'
2021-03-12 00:13:30,842 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:30,933 [main:67] - randomType = UShort
2021-03-12 00:13:31,018 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 00:13:31,061 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@27ec64cf]
2021-03-12 00:13:31,158 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 00:13:31,158 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@719240b5]
2021-03-12 00:13:31,159 [main:78] - Generated call from random type = (7734.toUShort()).compareTo(1.toUByte()).toChar()
2021-03-12 00:13:31,160 [main:106] - GETTING Char from IntRange
2021-03-12 00:13:31,195 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Int.digitToChar(): kotlin.Char defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a00f83c]]
2021-03-12 00:13:31,195 [main:149] - GENERATING call of type @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Int.digitToChar(): kotlin.Char defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a00f83c]
2021-03-12 00:13:31,195 [main:117] - GENERATED CALL = (intProgression).first.digitToChar()
2021-03-12 00:13:31,196 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Int.digitToChar(): kotlin.Char defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a00f83c]]
2021-03-12 00:13:31,196 [main:149] - GENERATING call of type @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Int.digitToChar(): kotlin.Char defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a00f83c]
2021-03-12 00:13:31,196 [main:117] - GENERATED CALL = (intProgression).endInclusive.digitToChar()
2021-03-12 00:13:31,196 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@719240b5]]
2021-03-12 00:13:31,196 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@719240b5]
2021-03-12 00:13:31,196 [main:117] - GENERATED CALL = (intProgression).first.toChar()
2021-03-12 00:13:31,196 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@719240b5]]
2021-03-12 00:13:31,196 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@719240b5]
2021-03-12 00:13:31,197 [main:117] - GENERATED CALL = (intProgression).endInclusive.toChar()
2021-03-12 00:13:31,197 [main:61] - replacement of i of type Char is '྇'
2021-03-12 00:13:31,288 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CHARACTER_CONSTANT)
2021-03-12 00:13:31,289 [main:66] - Compilation checking started
2021-03-12 00:13:31,684 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:31,685 [main:53] - replacing (mutableListOf<Int>(), MutableList<Int>)
2021-03-12 00:13:31,685 [main:50] - replacing mutableListOf<Int>() MutableList<Int>
2021-03-12 00:13:31,685 [main:54] - Getting value of type MutableList<Int>
2021-03-12 00:13:31,773 [main:302] - generating value of type = MutableList<Int> false depth = 0
2021-03-12 00:13:31,871 [main:43] - GENERATING CALL OF fun <T> mutableListOf(): MutableList<Int> = TODO()
2021-03-12 00:13:31,872 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(): MutableList<Int> = TODO()
2021-03-12 00:13:31,978 [main:95] - GENERATED = mutableListOf<Int>()
2021-03-12 00:13:31,978 [main:58] - GENERATED VALUE OF TYPE MutableList<Int> = mutableListOf<Int>()
2021-03-12 00:13:31,978 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:32,259 [main:67] - randomType = Function1<Double, Float>
2021-03-12 00:13:32,259 [main:106] - GETTING MutableList<Int> from MutableList<Int>
2021-03-12 00:13:32,303 [main:113] - Case = [public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.Int> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@759decd4]]
2021-03-12 00:13:32,303 [main:149] - GENERATING call of type public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.Int> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@759decd4]
2021-03-12 00:13:32,389 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:32,506 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:32,507 [main:117] - GENERATED CALL = (intList).subList(-1089081315, -776727649)
2021-03-12 00:13:32,507 [main:113] - Case = [@kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@8ea6dac]]
2021-03-12 00:13:32,507 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@8ea6dac]
2021-03-12 00:13:32,507 [main:117] - GENERATED CALL = (intList).asReversed()
2021-03-12 00:13:32,507 [main:113] - Case = [public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@d024531]]
2021-03-12 00:13:32,507 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@d024531]
2021-03-12 00:13:32,507 [main:117] - GENERATED CALL = (intList).toMutableList()
2021-03-12 00:13:32,507 [main:61] - replacement of mutableListOf<Int>() of type MutableList<Int> is (intList).subList(-1089081315, -776727649)
2021-03-12 00:13:32,609 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:32,610 [main:66] - Compilation checking started
2021-03-12 00:13:32,846 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val intList = (intList).subList(-1089081315, -776727649)
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:32,846 [main:53] - replacing ('h', Char)
2021-03-12 00:13:32,846 [main:50] - replacing 'h' Char
2021-03-12 00:13:32,846 [main:54] - Getting value of type Char
2021-03-12 00:13:32,932 [main:302] - generating value of type = Char true depth = 0
2021-03-12 00:13:32,932 [main:58] - GENERATED VALUE OF TYPE Char = '×'
2021-03-12 00:13:32,932 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:33,027 [main:67] - randomType = Boolean
2021-03-12 00:13:33,116 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:13:33,125 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5de22b8c]
2021-03-12 00:13:33,210 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:13:33,211 [main:149] - GENERATING call of type @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Int.digitToChar(): kotlin.Char defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3a00f83c]
2021-03-12 00:13:33,211 [main:78] - Generated call from random type = (false).compareTo(false).digitToChar()
2021-03-12 00:13:33,211 [main:61] - replacement of 'h' of type Char is (false).compareTo(false).digitToChar()
2021-03-12 00:13:33,305 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:33,306 [main:53] - replacing (listOf('b', 'e', (false).compareTo(false).digitToChar()), List<Char>)
2021-03-12 00:13:33,306 [main:50] - replacing listOf('b', 'e', (false).compareTo(false).digitToChar()) List<Char>
2021-03-12 00:13:33,306 [main:54] - Getting value of type List<Char>
2021-03-12 00:13:33,391 [main:302] - generating value of type = List<Char> false depth = 0
2021-03-12 00:13:33,480 [main:43] - GENERATING CALL OF fun <T> listOf(): List<Char> = TODO()
2021-03-12 00:13:33,481 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOf(): List<Char> = TODO()
2021-03-12 00:13:33,570 [main:95] - GENERATED = listOf<Char>()
2021-03-12 00:13:33,570 [main:58] - GENERATED VALUE OF TYPE List<Char> = listOf<Char>()
2021-03-12 00:13:33,570 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:33,570 [main:67] - randomType = Int
2021-03-12 00:13:33,660 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:33,702 [main:61] - replacement of listOf('b', 'e', (false).compareTo(false).digitToChar()) of type List<Char> is listOf<Char>()
2021-03-12 00:13:33,790 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 00:13:33,791 [main:53] - replacing (8, Int)
2021-03-12 00:13:33,791 [main:50] - replacing 8 Int
2021-03-12 00:13:33,791 [main:54] - Getting value of type Int
2021-03-12 00:13:33,886 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:33,886 [main:58] - GENERATED VALUE OF TYPE Int = 159185836
2021-03-12 00:13:33,886 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:33,990 [main:67] - randomType = Long?
2021-03-12 00:13:34,092 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:34,146 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@15c98765]
2021-03-12 00:13:34,146 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e2a1d9]
2021-03-12 00:13:34,240 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:34,241 [main:78] - Generated call from random type = (7689009298846426938)?.toLong().compareTo(-80)
2021-03-12 00:13:34,242 [main:106] - GETTING Int from IntRange
2021-03-12 00:13:34,272 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@77600663]]
2021-03-12 00:13:34,272 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@77600663]
2021-03-12 00:13:34,361 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:34,361 [main:117] - GENERATED CALL = (intProgression).first.and(-600225541)
2021-03-12 00:13:34,361 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff]]
2021-03-12 00:13:34,361 [main:117] - GENERATED CALL = (intProgression).endInclusive
2021-03-12 00:13:34,362 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@17977d1]]
2021-03-12 00:13:34,362 [main:117] - GENERATED CALL = (intProgression).endInclusive.absoluteValue
2021-03-12 00:13:34,362 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b17b5cb]]
2021-03-12 00:13:34,362 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b17b5cb]
2021-03-12 00:13:34,447 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-12 00:13:34,448 [main:302] - generating value of type = R false depth = 1
2021-03-12 00:13:34,826 [main:43] - GENERATING CALL OF fun <T, R> with(receiver: ArrayList<Byte>, block: T.()->UShort): R = TODO()
2021-03-12 00:13:34,827 [main:61] - WITHOUT TYPE PARAMS = fun <T, R> with(receiver: ArrayList<Byte>, block: T.()->UShort): R = TODO()
2021-03-12 00:13:35,036 [main:302] - generating value of type = ArrayList<Byte> false depth = 4
2021-03-12 00:13:35,129 [main:43] - GENERATING CALL OF fun <E> ArrayList(): ArrayList<Byte> = TODO()
2021-03-12 00:13:35,130 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): ArrayList<Byte> = TODO()
2021-03-12 00:13:35,218 [main:95] - GENERATED = ArrayList<Byte>()
2021-03-12 00:13:35,218 [main:385] - Cant generate call of fun <T, R> with(receiver: ArrayList<Byte>, block: T.()->UShort): R = TODO()
2021-03-12 00:13:35,219 [main:117] - GENERATED CALL = (intProgression).maxBy({a: T -> })
2021-03-12 00:13:35,219 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@26b16a2b]]
2021-03-12 00:13:35,219 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@26b16a2b]
2021-03-12 00:13:35,318 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:35,319 [main:117] - GENERATED CALL = (intProgression).elementAtOrNull(1209111076)
2021-03-12 00:13:35,319 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@fe619cb]]
2021-03-12 00:13:35,319 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@fe619cb]
2021-03-12 00:13:35,415 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:35,416 [main:117] - GENERATED CALL = (intProgression).first.times(-77)
2021-03-12 00:13:35,416 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64c82a3b]]
2021-03-12 00:13:35,416 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64c82a3b]
2021-03-12 00:13:35,416 [main:117] - GENERATED CALL = (intProgression).count()
2021-03-12 00:13:35,416 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5e3a8ffc]]
2021-03-12 00:13:35,416 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5e3a8ffc]
2021-03-12 00:13:35,504 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:35,505 [main:117] - GENERATED CALL = (intProgression).endInclusive.rotateRight(2131388242)
2021-03-12 00:13:35,505 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5f389d8f]]
2021-03-12 00:13:35,505 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5f389d8f]
2021-03-12 00:13:35,505 [main:117] - GENERATED CALL = (intProgression).first.countOneBits()
2021-03-12 00:13:35,505 [main:113] - Case = [public open fun iterator(): kotlin.collections.IntIterator defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@2b254e2e], public abstract fun nextInt(): kotlin.Int defined in kotlin.collections.IntIterator[DeserializedSimpleFunctionDescriptor@98474c2]]
2021-03-12 00:13:35,505 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.IntIterator defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@2b254e2e]
2021-03-12 00:13:35,506 [main:149] - GENERATING call of type public abstract fun nextInt(): kotlin.Int defined in kotlin.collections.IntIterator[DeserializedSimpleFunctionDescriptor@98474c2]
2021-03-12 00:13:35,506 [main:117] - GENERATED CALL = (intProgression).iterator().nextInt()
2021-03-12 00:13:35,506 [main:61] - replacement of 8 of type Int is 159185836
2021-03-12 00:13:35,593 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 00:13:35,593 [main:66] - Compilation checking started
2021-03-12 00:13:35,954 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:35,955 [main:53] - replacing (i, Char)
2021-03-12 00:13:35,955 [main:50] - replacing i Char
2021-03-12 00:13:35,955 [main:54] - Getting value of type Char
2021-03-12 00:13:36,040 [main:302] - generating value of type = Char true depth = 0
2021-03-12 00:13:36,040 [main:58] - GENERATED VALUE OF TYPE Char = '쮃'
2021-03-12 00:13:36,040 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:36,670 [main:67] - randomType = Function2<Short, LinkedHashMap<UShort, Int?>, Double?>
2021-03-12 00:13:36,670 [main:61] - replacement of i of type Char is '쮃'
2021-03-12 00:13:36,754 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CHARACTER_CONSTANT)
2021-03-12 00:13:36,755 [main:53] - replacing ((longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed(), LongProgression)
2021-03-12 00:13:36,755 [main:50] - replacing (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() LongProgression
2021-03-12 00:13:36,755 [main:54] - Getting value of type LongProgression
2021-03-12 00:13:36,841 [main:302] - generating value of type = LongProgression false depth = 0
2021-03-12 00:13:36,948 [main:43] - GENERATING CALL OF fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:36,949 [main:61] - WITHOUT TYPE PARAMS = fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:37,232 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:37,233 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:37,233 [main:95] - GENERATED = LongRange(16608570072027254, -7491842857738033104)
2021-03-12 00:13:37,233 [main:58] - GENERATED VALUE OF TYPE LongProgression = LongRange(16608570072027254, -7491842857738033104)
2021-03-12 00:13:37,233 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:37,502 [main:67] - randomType = Map<Float, Boolean>
2021-03-12 00:13:37,502 [main:61] - replacement of (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() of type LongProgression is LongRange(16608570072027254, -7491842857738033104)
2021-03-12 00:13:37,600 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 00:13:37,601 [main:53] - replacing (10, Int)
2021-03-12 00:13:37,602 [main:50] - replacing 10 Int
2021-03-12 00:13:37,602 [main:54] - Getting value of type Int
2021-03-12 00:13:37,694 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:37,694 [main:58] - GENERATED VALUE OF TYPE Int = 1157738333
2021-03-12 00:13:37,695 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:37,873 [main:67] - randomType = ULong?
2021-03-12 00:13:37,960 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 00:13:37,995 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@7ee6bf1c]
2021-03-12 00:13:38,082 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 00:13:38,083 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@799ac0ef]
2021-03-12 00:13:38,167 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:38,168 [main:78] - Generated call from random type = (1351137514211238610.toULong())?.compareTo(18.toUByte()).coerceAtLeast(-637217295)
2021-03-12 00:13:38,169 [main:106] - GETTING Int from IntRange
2021-03-12 00:13:38,190 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e22e204]]
2021-03-12 00:13:38,191 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.find(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e22e204]
2021-03-12 00:13:38,304 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 00:13:38,304 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 00:13:38,305 [main:117] - GENERATED CALL = (intProgression).find({a: T -> false})
2021-03-12 00:13:38,305 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@33f54307]]
2021-03-12 00:13:38,305 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@33f54307]
2021-03-12 00:13:38,414 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:38,415 [main:117] - GENERATED CALL = (intProgression).endInclusive.plus(102)
2021-03-12 00:13:38,415 [main:113] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2cc70f6e]]
2021-03-12 00:13:38,415 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2cc70f6e]
2021-03-12 00:13:38,501 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 00:13:38,589 [main:43] - GENERATING CALL OF fun <T> nullsLast(): Comparator<T> = TODO()
2021-03-12 00:13:38,591 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(): Comparator<T> = TODO()
2021-03-12 00:13:38,678 [main:95] - GENERATED = nullsLast<T>()
2021-03-12 00:13:38,678 [main:117] - GENERATED CALL = (intProgression).maxWithOrNull(nullsLast<T>())
2021-03-12 00:13:38,678 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5e3a8ffc]]
2021-03-12 00:13:38,678 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5e3a8ffc]
2021-03-12 00:13:38,762 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:38,763 [main:117] - GENERATED CALL = (intProgression).first.rotateRight(716666935)
2021-03-12 00:13:38,763 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5daed7fe]]
2021-03-12 00:13:38,763 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5daed7fe]
2021-03-12 00:13:38,763 [main:117] - GENERATED CALL = (intProgression).first.dec()
2021-03-12 00:13:38,763 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5e3a8ffc]]
2021-03-12 00:13:38,763 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5e3a8ffc]
2021-03-12 00:13:38,847 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:38,848 [main:117] - GENERATED CALL = (intProgression).endInclusive.rotateRight(875388911)
2021-03-12 00:13:38,848 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5daed7fe]]
2021-03-12 00:13:38,848 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5daed7fe]
2021-03-12 00:13:38,848 [main:117] - GENERATED CALL = (intProgression).endInclusive.dec()
2021-03-12 00:13:38,848 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@97392fb]]
2021-03-12 00:13:38,848 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@97392fb]
2021-03-12 00:13:38,961 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 00:13:38,962 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 00:13:38,963 [main:117] - GENERATED CALL = (intProgression).indexOfFirst({a: T -> false})
2021-03-12 00:13:38,963 [main:113] - Case = [@kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.maxOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73dd61ca]]
2021-03-12 00:13:38,963 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.maxOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73dd61ca]
2021-03-12 00:13:38,963 [main:117] - GENERATED CALL = (intProgression).maxOrNull()
2021-03-12 00:13:38,963 [main:113] - Case = [public open val start: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@56a25472]]
2021-03-12 00:13:38,963 [main:117] - GENERATED CALL = (intProgression).start
2021-03-12 00:13:38,963 [main:61] - replacement of 10 of type Int is (intProgression).maxOrNull()
2021-03-12 00:13:39,056 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:39,057 [main:66] - Compilation checking started
2021-03-12 00:13:39,281 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..(intProgression).maxOrNull()
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in LongRange(4026235969591299353, -349702633955351349) step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:39,281 [main:53] - replacing ('h', Char)
2021-03-12 00:13:39,281 [main:50] - replacing 'h' Char
2021-03-12 00:13:39,281 [main:54] - Getting value of type Char
2021-03-12 00:13:39,368 [main:302] - generating value of type = Char true depth = 0
2021-03-12 00:13:39,369 [main:58] - GENERATED VALUE OF TYPE Char = 'ꏌ'
2021-03-12 00:13:39,369 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:39,551 [main:67] - randomType = Double?
2021-03-12 00:13:39,638 [main:302] - generating value of type = Double true depth = 0
2021-03-12 00:13:39,674 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@6ab8b279]
2021-03-12 00:13:39,674 [main:78] - Generated call from random type = (0.1173518217625793)?.toChar()
2021-03-12 00:13:39,674 [main:61] - replacement of 'h' of type Char is 'ꏌ'
2021-03-12 00:13:39,771 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(CHARACTER_CONSTANT)
2021-03-12 00:13:39,772 [main:53] - replacing (LongRange(4026235969591299353, -349702633955351349) step 3L, LongProgression)
2021-03-12 00:13:39,772 [main:50] - replacing LongRange(4026235969591299353, -349702633955351349) step 3L LongProgression
2021-03-12 00:13:39,772 [main:54] - Getting value of type LongProgression
2021-03-12 00:13:39,856 [main:302] - generating value of type = LongProgression false depth = 0
2021-03-12 00:13:39,953 [main:43] - GENERATING CALL OF fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:39,954 [main:61] - WITHOUT TYPE PARAMS = fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:40,220 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:40,220 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:40,221 [main:95] - GENERATED = LongRange(-6262748730262536512, 1999201310319915899)
2021-03-12 00:13:40,221 [main:58] - GENERATED VALUE OF TYPE LongProgression = LongRange(-6262748730262536512, 1999201310319915899)
2021-03-12 00:13:40,221 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:40,221 [main:67] - randomType = Long
2021-03-12 00:13:40,305 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:40,341 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@45d34ddc]
2021-03-12 00:13:40,341 [main:149] - GENERATING call of type public infix fun kotlin.Byte.downTo(to: kotlin.Long): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@214f37df]
2021-03-12 00:13:40,424 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:40,425 [main:78] - Generated call from random type = (-5158116548210488550).toByte().downTo(-2283880044158454714)
2021-03-12 00:13:40,426 [main:106] - GETTING LongProgression from MutableList<Long>
2021-03-12 00:13:40,479 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@55a5cea8], public infix fun kotlin.Long.downTo(to: kotlin.Byte): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@798f8f25]]
2021-03-12 00:13:40,479 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@55a5cea8]
2021-03-12 00:13:40,593 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:40,594 [main:149] - GENERATING call of type public infix fun kotlin.Long.downTo(to: kotlin.Byte): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@798f8f25]
2021-03-12 00:13:40,686 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:40,687 [main:117] - GENERATED CALL = (longList).get(847814824).downTo(-74)
2021-03-12 00:13:40,687 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@406ddbd5], public infix fun kotlin.Int.downTo(to: kotlin.Long): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@45d46151]]
2021-03-12 00:13:40,687 [main:149] - GENERATING call of type public infix fun kotlin.Int.downTo(to: kotlin.Long): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@45d46151]
2021-03-12 00:13:40,771 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:40,772 [main:117] - GENERATED CALL = (longList).size.downTo(-2240847369719484100)
2021-03-12 00:13:40,772 [main:61] - replacement of LongRange(4026235969591299353, -349702633955351349) step 3L of type LongProgression is (longList).size.downTo(-2240847369719484100)
2021-03-12 00:13:40,856 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:40,856 [main:66] - Compilation checking started
2021-03-12 00:13:41,208 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:41,209 [main:53] - replacing (1..10, IntRange)
2021-03-12 00:13:41,210 [main:50] - replacing 1..10 IntRange
2021-03-12 00:13:41,210 [main:54] - Getting value of type IntRange
2021-03-12 00:13:41,297 [main:302] - generating value of type = IntRange false depth = 0
2021-03-12 00:13:41,385 [main:43] - GENERATING CALL OF fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntRange = TODO()
2021-03-12 00:13:41,386 [main:61] - WITHOUT TYPE PARAMS = fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntRange = TODO()
2021-03-12 00:13:41,670 [main:302] - generating value of type = Int true depth = 3
2021-03-12 00:13:41,670 [main:302] - generating value of type = Int true depth = 3
2021-03-12 00:13:41,670 [main:95] - GENERATED = IntRange(-744353684, 814979592)
2021-03-12 00:13:41,671 [main:58] - GENERATED VALUE OF TYPE IntRange = IntRange(-744353684, 814979592)
2021-03-12 00:13:41,671 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:41,943 [main:67] - randomType = Map<Float, Boolean>
2021-03-12 00:13:41,944 [main:106] - GETTING IntRange from MutableList<Int>
2021-03-12 00:13:42,011 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@ba43f59]]
2021-03-12 00:13:42,011 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@ba43f59]
2021-03-12 00:13:42,098 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:42,098 [main:117] - GENERATED CALL = (intList).size.rangeTo(96)
2021-03-12 00:13:42,098 [main:113] - Case = [public val kotlin.collections.Collection<*>.indices: kotlin.ranges.IntRange defined in kotlin.collections[DeserializedPropertyDescriptor@58c9fcbf]]
2021-03-12 00:13:42,098 [main:117] - GENERATED CALL = (intList).indices
2021-03-12 00:13:42,099 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3f9f11e6]]
2021-03-12 00:13:42,099 [main:149] - GENERATING call of type public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3f9f11e6]
2021-03-12 00:13:42,182 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:42,183 [main:117] - GENERATED CALL = (intList).size.until(52)
2021-03-12 00:13:42,183 [main:61] - replacement of 1..10 of type IntRange is (intList).size.until(52)
2021-03-12 00:13:42,267 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:42,267 [main:66] - Compilation checking started
2021-03-12 00:13:42,633 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += i
    }
    assertEquals(listOf(2L, (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:42,634 [main:53] - replacing (2L, Long)
2021-03-12 00:13:42,635 [main:50] - replacing 2L Long
2021-03-12 00:13:42,635 [main:54] - Getting value of type Long
2021-03-12 00:13:42,735 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:42,735 [main:58] - GENERATED VALUE OF TYPE Long = -6189889238678679426
2021-03-12 00:13:42,735 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:42,824 [main:67] - randomType = Boolean
2021-03-12 00:13:42,908 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:13:42,917 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5de22b8c]
2021-03-12 00:13:43,001 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:13:43,001 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ee8afd0]
2021-03-12 00:13:43,088 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:43,088 [main:78] - Generated call from random type = (false).compareTo(true).minus(-2863617555655235801)
2021-03-12 00:13:43,089 [main:106] - GETTING Long from LongRange
2021-03-12 00:13:43,110 [main:113] - Case = [@kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.minOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cd42516]]
2021-03-12 00:13:43,110 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.minOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6cd42516]
2021-03-12 00:13:43,110 [main:117] - GENERATED CALL = (longProgression).minOrNull()
2021-03-12 00:13:43,110 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], public final operator fun dec(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7e9804fc]]
2021-03-12 00:13:43,110 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7e9804fc]
2021-03-12 00:13:43,111 [main:117] - GENERATED CALL = (longProgression).endInclusive.dec()
2021-03-12 00:13:43,111 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5c646f35]]
2021-03-12 00:13:43,111 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5c646f35]
2021-03-12 00:13:43,194 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:43,194 [main:117] - GENERATED CALL = (longProgression).first.shl(-502418268)
2021-03-12 00:13:43,194 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@8f03cfc]]
2021-03-12 00:13:43,194 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@8f03cfc]
2021-03-12 00:13:43,195 [main:117] - GENERATED CALL = (longProgression).first.takeHighestOneBit()
2021-03-12 00:13:43,195 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@161dca1d]]
2021-03-12 00:13:43,195 [main:149] - GENERATING call of type public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@161dca1d]
2021-03-12 00:13:43,195 [main:117] - GENERATED CALL = (longProgression).first.inv()
2021-03-12 00:13:43,195 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], public final operator fun inc(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@c32d8f1]]
2021-03-12 00:13:43,195 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@c32d8f1]
2021-03-12 00:13:43,195 [main:117] - GENERATED CALL = (longProgression).first.inc()
2021-03-12 00:13:43,195 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2c18bd39]]
2021-03-12 00:13:43,195 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2c18bd39]
2021-03-12 00:13:43,279 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:43,279 [main:117] - GENERATED CALL = (longProgression).first.minus(15)
2021-03-12 00:13:43,279 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.lastOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17752474]]
2021-03-12 00:13:43,279 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.lastOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@17752474]
2021-03-12 00:13:43,279 [main:117] - GENERATED CALL = (longProgression).lastOrNull()
2021-03-12 00:13:43,279 [main:113] - Case = [public final val first: kotlin.Long defined in kotlin.ranges.LongProgression[DeserializedPropertyDescriptor@6205f02b], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Long.absoluteValue: kotlin.Long defined in kotlin.math[DeserializedPropertyDescriptor@62f27951]]
2021-03-12 00:13:43,280 [main:117] - GENERATED CALL = (longProgression).first.absoluteValue
2021-03-12 00:13:43,280 [main:113] - Case = [public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@530d7801], public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@44807113]]
2021-03-12 00:13:43,280 [main:149] - GENERATING call of type public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@44807113]
2021-03-12 00:13:43,364 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:43,364 [main:117] - GENERATED CALL = (longProgression).endInclusive.coerceAtLeast(-8196301465531748505)
2021-03-12 00:13:43,364 [main:61] - replacement of 2L of type Long is (longProgression).lastOrNull()
2021-03-12 00:13:43,463 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:43,463 [main:66] - Compilation checking started
2021-03-12 00:13:43,841 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += i
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:43,842 [main:53] - replacing (intList, MutableList<Int>)
2021-03-12 00:13:43,843 [main:50] - replacing intList MutableList<Int>
2021-03-12 00:13:43,843 [main:54] - Getting value of type MutableList<Int>
2021-03-12 00:13:43,943 [main:302] - generating value of type = MutableList<Int> false depth = 0
2021-03-12 00:13:44,039 [main:43] - GENERATING CALL OF fun <T> mutableListOf(): MutableList<Int> = TODO()
2021-03-12 00:13:44,040 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(): MutableList<Int> = TODO()
2021-03-12 00:13:44,157 [main:95] - GENERATED = mutableListOf<Int>()
2021-03-12 00:13:44,157 [main:58] - GENERATED VALUE OF TYPE MutableList<Int> = mutableListOf<Int>()
2021-03-12 00:13:44,157 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:44,253 [main:67] - randomType = UInt
2021-03-12 00:13:44,350 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 00:13:44,384 [main:106] - GETTING MutableList<Int> from MutableList<Int>
2021-03-12 00:13:44,424 [main:113] - Case = [public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@d024531]]
2021-03-12 00:13:44,425 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Collection<T>.toMutableList(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@d024531]
2021-03-12 00:13:44,425 [main:117] - GENERATED CALL = (intList).toMutableList()
2021-03-12 00:13:44,425 [main:113] - Case = [@kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@8ea6dac]]
2021-03-12 00:13:44,425 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun <T> kotlin.collections.MutableList<T>.asReversed(): kotlin.collections.MutableList<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@8ea6dac]
2021-03-12 00:13:44,425 [main:117] - GENERATED CALL = (intList).asReversed()
2021-03-12 00:13:44,425 [main:113] - Case = [public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.Int> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@759decd4]]
2021-03-12 00:13:44,425 [main:149] - GENERATING call of type public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.Int> defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@759decd4]
2021-03-12 00:13:44,528 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:44,669 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:44,670 [main:117] - GENERATED CALL = (intList).subList(1083295305, 1236858336)
2021-03-12 00:13:44,670 [main:61] - replacement of intList of type MutableList<Int> is (intList).toMutableList()
2021-03-12 00:13:44,763 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:44,763 [main:66] - Compilation checking started
2021-03-12 00:13:45,127 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = 1L..(-5226784442900366449)?.plus(-87)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += i
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:45,128 [main:53] - replacing (1L..(-5226784442900366449)?.plus(-87), LongRange)
2021-03-12 00:13:45,129 [main:50] - replacing 1L..(-5226784442900366449)?.plus(-87) LongRange
2021-03-12 00:13:45,129 [main:54] - Getting value of type LongRange
2021-03-12 00:13:45,237 [main:302] - generating value of type = LongRange false depth = 0
2021-03-12 00:13:45,330 [main:43] - GENERATING CALL OF fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongRange = TODO()
2021-03-12 00:13:45,331 [main:61] - WITHOUT TYPE PARAMS = fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongRange = TODO()
2021-03-12 00:13:45,619 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:45,619 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:45,620 [main:95] - GENERATED = LongRange(2082853870990882458, -6975315078709116416)
2021-03-12 00:13:45,620 [main:58] - GENERATED VALUE OF TYPE LongRange = LongRange(2082853870990882458, -6975315078709116416)
2021-03-12 00:13:45,620 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:45,714 [main:67] - randomType = ULong
2021-03-12 00:13:45,822 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 00:13:45,859 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@45c7e2c4]
2021-03-12 00:13:45,860 [main:149] - GENERATING call of type public infix fun kotlin.Byte.until(to: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@30cce2bb]
2021-03-12 00:13:45,945 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:45,946 [main:78] - Generated call from random type = (8134481719876728552.toULong()).toByte().until(4877316389519211909)
2021-03-12 00:13:45,947 [main:106] - GETTING LongRange from MutableList<Long>
2021-03-12 00:13:46,008 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@406ddbd5], public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4eee43a]]
2021-03-12 00:13:46,008 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4eee43a]
2021-03-12 00:13:46,099 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:46,100 [main:117] - GENERATED CALL = (longList).size.rangeTo(5851727305719711089)
2021-03-12 00:13:46,100 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@55a5cea8], public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.LongRange defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@269d1f84]]
2021-03-12 00:13:46,100 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@55a5cea8]
2021-03-12 00:13:46,187 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:46,187 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.LongRange defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@269d1f84]
2021-03-12 00:13:46,275 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:46,275 [main:117] - GENERATED CALL = (longList).get(-1156882324).rangeTo(-91)
2021-03-12 00:13:46,275 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@406ddbd5], public infix fun kotlin.Int.until(to: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e4ef465]]
2021-03-12 00:13:46,276 [main:149] - GENERATING call of type public infix fun kotlin.Int.until(to: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e4ef465]
2021-03-12 00:13:46,366 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:46,366 [main:117] - GENERATED CALL = (longList).size.until(777394127778125707)
2021-03-12 00:13:46,366 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@55a5cea8], public infix fun kotlin.Long.until(to: kotlin.Byte): kotlin.ranges.LongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725017d7]]
2021-03-12 00:13:46,366 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@55a5cea8]
2021-03-12 00:13:46,455 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:46,455 [main:149] - GENERATING call of type public infix fun kotlin.Long.until(to: kotlin.Byte): kotlin.ranges.LongRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725017d7]
2021-03-12 00:13:46,541 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:46,541 [main:117] - GENERATED CALL = (longList).get(714734296).until(-23)
2021-03-12 00:13:46,541 [main:61] - replacement of 1L..(-5226784442900366449)?.plus(-87) of type LongRange is (longList).size.until(777394127778125707)
2021-03-12 00:13:46,627 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:46,627 [main:66] - Compilation checking started
2021-03-12 00:13:46,987 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += i
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl(-1627780401), 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:46,987 [main:53] - replacing (2L, Long)
2021-03-12 00:13:46,987 [main:50] - replacing 2L Long
2021-03-12 00:13:46,987 [main:54] - Getting value of type Long
2021-03-12 00:13:47,091 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:47,092 [main:58] - GENERATED VALUE OF TYPE Long = 6099025582103070309
2021-03-12 00:13:47,092 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:47,093 [main:67] - randomType = String
2021-03-12 00:13:47,179 [main:302] - generating value of type = String true depth = 0
2021-03-12 00:13:47,205 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.sumOf(selector: (kotlin.Char) -> kotlin.Long): kotlin.Long defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53171ac3]
2021-03-12 00:13:47,295 [main:302] - generating value of type = Function1<Char, Long> false depth = 0
2021-03-12 00:13:47,296 [main:302] - generating value of type = Long true depth = 1
2021-03-12 00:13:47,296 [main:78] - Generated call from random type = ("qdxsj").sumOf({a: Char -> 3341021525550141374})
2021-03-12 00:13:47,297 [main:61] - replacement of 2L of type Long is ("qdxsj").sumOf({a: Char -> 3341021525550141374})
2021-03-12 00:13:47,382 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:47,384 [main:53] - replacing (8L, Long)
2021-03-12 00:13:47,384 [main:50] - replacing 8L Long
2021-03-12 00:13:47,384 [main:54] - Getting value of type Long
2021-03-12 00:13:47,469 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:47,469 [main:58] - GENERATED VALUE OF TYPE Long = -8115703841960575187
2021-03-12 00:13:47,469 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:47,560 [main:67] - randomType = UShort
2021-03-12 00:13:47,646 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 00:13:47,682 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7cd0396b]
2021-03-12 00:13:47,683 [main:149] - GENERATING call of type public fun kotlin.Long.coerceIn(minimumValue: kotlin.Long, maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4eba05c0]
2021-03-12 00:13:47,768 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:47,853 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:47,854 [main:78] - Generated call from random type = (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)
2021-03-12 00:13:47,854 [main:61] - replacement of 8L of type Long is (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)
2021-03-12 00:13:47,938 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:47,939 [main:66] - Compilation checking started
2021-03-12 00:13:48,352 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += i
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl(-1627780401), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:48,353 [main:53] - replacing (10, Int)
2021-03-12 00:13:48,353 [main:50] - replacing 10 Int
2021-03-12 00:13:48,353 [main:54] - Getting value of type Int
2021-03-12 00:13:48,494 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:48,494 [main:58] - GENERATED VALUE OF TYPE Int = 359877926
2021-03-12 00:13:48,494 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:48,611 [main:67] - randomType = Char?
2021-03-12 00:13:48,706 [main:302] - generating value of type = Char true depth = 0
2021-03-12 00:13:48,739 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@504dda01]
2021-03-12 00:13:48,835 [main:302] - generating value of type = Char true depth = 0
2021-03-12 00:13:48,835 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@43ef0e6b]
2021-03-12 00:13:48,836 [main:78] - Generated call from random type = ('㴙')?.compareTo('亯').unaryMinus()
2021-03-12 00:13:48,836 [main:61] - replacement of 10 of type Int is 359877926
2021-03-12 00:13:48,929 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 00:13:48,929 [main:53] - replacing (LongRange(4026235969591299353, -349702633955351349) step 3L, LongProgression)
2021-03-12 00:13:48,929 [main:50] - replacing LongRange(4026235969591299353, -349702633955351349) step 3L LongProgression
2021-03-12 00:13:48,929 [main:54] - Getting value of type LongProgression
2021-03-12 00:13:49,019 [main:302] - generating value of type = LongProgression false depth = 0
2021-03-12 00:13:49,133 [main:43] - GENERATING CALL OF fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:49,134 [main:61] - WITHOUT TYPE PARAMS = fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:49,438 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:49,438 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:49,438 [main:95] - GENERATED = LongRange(-4778097293810835923, -689343100101882052)
2021-03-12 00:13:49,439 [main:58] - GENERATED VALUE OF TYPE LongProgression = LongRange(-4778097293810835923, -689343100101882052)
2021-03-12 00:13:49,439 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:49,439 [main:67] - randomType = Int
2021-03-12 00:13:49,529 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:49,559 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@2780186d]
2021-03-12 00:13:49,647 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:49,647 [main:149] - GENERATING call of type public infix fun kotlin.Int.downTo(to: kotlin.Long): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@45d46151]
2021-03-12 00:13:49,736 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:49,736 [main:78] - Generated call from random type = (-788752174).compareTo(2070597293).downTo(-7999162652989135750)
2021-03-12 00:13:49,736 [main:61] - replacement of LongRange(4026235969591299353, -349702633955351349) step 3L of type LongProgression is (-788752174).compareTo(2070597293).downTo(-7999162652989135750)
2021-03-12 00:13:49,832 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:49,833 [main:53] - replacing (i, Long)
2021-03-12 00:13:49,833 [main:50] - replacing i Long
2021-03-12 00:13:49,833 [main:54] - Getting value of type Long
2021-03-12 00:13:49,921 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:49,922 [main:58] - GENERATED VALUE OF TYPE Long = 3764358325937475218
2021-03-12 00:13:49,922 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:49,923 [main:67] - randomType = Long
2021-03-12 00:13:50,012 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:50,048 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4334b9fd]
2021-03-12 00:13:50,049 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2ab90dd4]
2021-03-12 00:13:50,138 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:50,138 [main:78] - Generated call from random type = (-4983270005904112716).toShort().plus(-6644192304126442502)
2021-03-12 00:13:50,139 [main:106] - GETTING Long from MutableList<Int>
2021-03-12 00:13:50,189 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9d7f34a]]
2021-03-12 00:13:50,189 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9d7f34a]
2021-03-12 00:13:50,189 [main:117] - GENERATED CALL = (intList).sum()
2021-03-12 00:13:50,190 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@34841b9c]]
2021-03-12 00:13:50,190 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@34841b9c]
2021-03-12 00:13:50,278 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:50,278 [main:117] - GENERATED CALL = (intList).size.rem(-8948948039378456662)
2021-03-12 00:13:50,278 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@738132d6]]
2021-03-12 00:13:50,278 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@738132d6]
2021-03-12 00:13:50,367 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:50,368 [main:117] - GENERATED CALL = (intList).size.plus(-4889499081144866673)
2021-03-12 00:13:50,368 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76bc765d]]
2021-03-12 00:13:50,368 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76bc765d]
2021-03-12 00:13:50,368 [main:117] - GENERATED CALL = (intList).size.toLong()
2021-03-12 00:13:50,368 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6db1e92d]]
2021-03-12 00:13:50,368 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6db1e92d]
2021-03-12 00:13:50,458 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:50,458 [main:117] - GENERATED CALL = (intList).size.div(-1979564544550762094)
2021-03-12 00:13:50,458 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ee8afd0]]
2021-03-12 00:13:50,458 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ee8afd0]
2021-03-12 00:13:50,564 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:50,564 [main:117] - GENERATED CALL = (intList).size.minus(-6802808247811400312)
2021-03-12 00:13:50,564 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3c83b2b4]]
2021-03-12 00:13:50,564 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3c83b2b4]
2021-03-12 00:13:50,654 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:50,654 [main:117] - GENERATED CALL = (intList).size.times(-2096699442595032981)
2021-03-12 00:13:50,654 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@364b80c1]]
2021-03-12 00:13:50,654 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@364b80c1]
2021-03-12 00:13:50,745 [main:302] - generating value of type = Function1<T, Long> false depth = 0
2021-03-12 00:13:50,745 [main:302] - generating value of type = Long true depth = 1
2021-03-12 00:13:50,746 [main:117] - GENERATED CALL = (intList).sumOf({a: T -> 730161820990084222})
2021-03-12 00:13:50,746 [main:61] - replacement of i of type Long is (intList).size.minus(-6802808247811400312)
2021-03-12 00:13:50,836 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:50,836 [main:66] - Compilation checking started
2021-03-12 00:13:51,184 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step 3) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl(-1627780401), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:51,185 [main:53] - replacing (3, Int)
2021-03-12 00:13:51,185 [main:50] - replacing 3 Int
2021-03-12 00:13:51,185 [main:54] - Getting value of type Int
2021-03-12 00:13:51,281 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:51,281 [main:58] - GENERATED VALUE OF TYPE Int = 20835881
2021-03-12 00:13:51,281 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:51,282 [main:67] - randomType = Int
2021-03-12 00:13:51,377 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:51,410 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@732cfe49]
2021-03-12 00:13:51,411 [main:78] - Generated call from random type = (267500513).toInt().absoluteValue
2021-03-12 00:13:51,411 [main:106] - GETTING Int from MutableList<Int>
2021-03-12 00:13:51,459 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component5(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@301576db]]
2021-03-12 00:13:51,459 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component5(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@301576db]
2021-03-12 00:13:51,459 [main:117] - GENERATED CALL = (intList).component5()
2021-03-12 00:13:51,459 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAt(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@347c2a1a]]
2021-03-12 00:13:51,459 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAt(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@347c2a1a]
2021-03-12 00:13:51,548 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:51,549 [main:117] - GENERATED CALL = (intList).elementAt(-1017628095)
2021-03-12 00:13:51,549 [main:113] - Case = [public abstract fun get(index: kotlin.Int): kotlin.Int defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@27d3d403]]
2021-03-12 00:13:51,549 [main:149] - GENERATING call of type public abstract fun get(index: kotlin.Int): kotlin.Int defined in kotlin.collections.MutableList[DeserializedSimpleFunctionDescriptor@27d3d403]
2021-03-12 00:13:51,641 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:51,641 [main:117] - GENERATED CALL = (intList).get(834075859)
2021-03-12 00:13:51,641 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f4f7f1a]]
2021-03-12 00:13:51,641 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f4f7f1a]
2021-03-12 00:13:51,731 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 00:13:51,824 [main:43] - GENERATING CALL OF fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 00:13:51,826 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 00:13:52,028 [main:385] - Cant generate call of fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 00:13:52,028 [main:158] - CANT GENERATE PARAMS FOR @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5f4f7f1a]
2021-03-12 00:13:52,028 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@70ad46e9]]
2021-03-12 00:13:52,028 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@70ad46e9]
2021-03-12 00:13:52,119 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:52,119 [main:117] - GENERATED CALL = (intList).size.or(-1914275544)
2021-03-12 00:13:52,119 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@699d8618]]
2021-03-12 00:13:52,120 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@699d8618]
2021-03-12 00:13:52,120 [main:117] - GENERATED CALL = (intList).single()
2021-03-12 00:13:52,120 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.random(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@33e159a5]]
2021-03-12 00:13:52,120 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.random(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@33e159a5]
2021-03-12 00:13:52,120 [main:117] - GENERATED CALL = (intList).random()
2021-03-12 00:13:52,120 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.MutableList[DeserializedPropertyDescriptor@50ac584f], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@38c607b2]]
2021-03-12 00:13:52,120 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@38c607b2]
2021-03-12 00:13:52,209 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:52,209 [main:117] - GENERATED CALL = (intList).size.coerceAtMost(1467802941)
2021-03-12 00:13:52,209 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@44eb735c]]
2021-03-12 00:13:52,209 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@44eb735c]
2021-03-12 00:13:52,298 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:52,298 [main:117] - GENERATED CALL = (intList).elementAtOrNull(1832430656)
2021-03-12 00:13:52,298 [main:113] - Case = [public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@4d9e293c]]
2021-03-12 00:13:52,298 [main:117] - GENERATED CALL = (intList).lastIndex
2021-03-12 00:13:52,298 [main:61] - replacement of 3 of type Int is (intList).single()
2021-03-12 00:13:52,387 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:52,387 [main:66] - Compilation checking started
2021-03-12 00:13:52,741 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl(-1627780401), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(749002298)
}


2021-03-12 00:13:52,742 [main:53] - replacing (10, Int)
2021-03-12 00:13:52,742 [main:50] - replacing 10 Int
2021-03-12 00:13:52,742 [main:54] - Getting value of type Int
2021-03-12 00:13:52,835 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:52,835 [main:58] - GENERATED VALUE OF TYPE Int = -1378097806
2021-03-12 00:13:52,836 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:53,023 [main:67] - randomType = Byte?
2021-03-12 00:13:53,115 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:53,146 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@25b4d4f7]
2021-03-12 00:13:53,147 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@29f827c1]
2021-03-12 00:13:53,235 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 00:13:53,236 [main:78] - Generated call from random type = (-12)?.dec().plus(-28)
2021-03-12 00:13:53,236 [main:61] - replacement of 10 of type Int is (-12)?.dec().plus(-28)
2021-03-12 00:13:53,342 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:53,342 [main:53] - replacing ((longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed(), LongProgression)
2021-03-12 00:13:53,342 [main:50] - replacing (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() LongProgression
2021-03-12 00:13:53,342 [main:54] - Getting value of type LongProgression
2021-03-12 00:13:53,433 [main:302] - generating value of type = LongProgression false depth = 0
2021-03-12 00:13:53,526 [main:43] - GENERATING CALL OF fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:53,527 [main:61] - WITHOUT TYPE PARAMS = fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): LongProgression = TODO()
2021-03-12 00:13:53,808 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:53,809 [main:302] - generating value of type = Long true depth = 3
2021-03-12 00:13:53,809 [main:95] - GENERATED = LongRange(2666821862520069139, 1375219548215281307)
2021-03-12 00:13:53,809 [main:58] - GENERATED VALUE OF TYPE LongProgression = LongRange(2666821862520069139, 1375219548215281307)
2021-03-12 00:13:53,809 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:53,902 [main:67] - randomType = Boolean
2021-03-12 00:13:53,991 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:13:54,000 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5de22b8c]
2021-03-12 00:13:54,092 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:13:54,093 [main:149] - GENERATING call of type public infix fun kotlin.Int.downTo(to: kotlin.Long): kotlin.ranges.LongProgression defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@45d46151]
2021-03-12 00:13:54,183 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:54,183 [main:78] - Generated call from random type = (false).compareTo(true).downTo(8277795140525280155)
2021-03-12 00:13:54,183 [main:61] - replacement of (longProgression.reversed() step (intProgression).endInclusive.div(7854895309396285394)).reversed() of type LongProgression is (false).compareTo(true).downTo(8277795140525280155)
2021-03-12 00:13:54,273 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:54,273 [main:53] - replacing (charList, MutableList<Char>)
2021-03-12 00:13:54,273 [main:50] - replacing charList MutableList<Char>
2021-03-12 00:13:54,273 [main:54] - Getting value of type MutableList<Char>
2021-03-12 00:13:54,363 [main:302] - generating value of type = MutableList<Char> false depth = 0
2021-03-12 00:13:54,478 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Char>): MutableList<Char> = TODO()
2021-03-12 00:13:54,480 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Char>): MutableList<Char> = TODO()
2021-03-12 00:13:54,689 [main:302] - generating value of type = Collection<Char> false depth = 3
2021-03-12 00:13:54,783 [main:43] - GENERATING CALL OF fun <T> setOfNotNull(elements: Char): Collection<Char> = TODO()
2021-03-12 00:13:54,784 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOfNotNull(elements: Char): Collection<Char> = TODO()
2021-03-12 00:13:54,876 [main:302] - generating value of type = Char true depth = 6
2021-03-12 00:13:54,877 [main:95] - GENERATED = setOfNotNull<Char>('삫')
2021-03-12 00:13:54,877 [main:95] - GENERATED = ArrayDeque<Char>(setOfNotNull<Char>('삫'))
2021-03-12 00:13:54,877 [main:58] - GENERATED VALUE OF TYPE MutableList<Char> = ArrayDeque<Char>(setOfNotNull<Char>('삫'))
2021-03-12 00:13:54,877 [main:61] - GENERATED IS CALL =true
2021-03-12 00:13:55,477 [main:67] - randomType = Pair<Float, Function1<HashSet<Boolean>, ULong>>
2021-03-12 00:13:55,576 [main:302] - generating value of type = Pair<Float, Function1<HashSet<Boolean>, ULong>> false depth = 0
2021-03-12 00:13:55,675 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Float, second: Function1<HashSet<Boolean>, ULong>): Pair<Float, Function1<HashSet<Boolean>, ULong>> = TODO()
2021-03-12 00:13:55,677 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Float, second: Function1<HashSet<Boolean>, ULong>): Pair<Float, Function1<HashSet<Boolean>, ULong>> = TODO()
2021-03-12 00:13:55,771 [main:302] - generating value of type = Float true depth = 3
2021-03-12 00:13:55,771 [main:302] - generating value of type = Function1<HashSet<Boolean>, ULong> false depth = 3
2021-03-12 00:13:55,772 [main:302] - generating value of type = ULong true depth = 4
2021-03-12 00:13:55,772 [main:95] - GENERATED = Pair<Float, Function1<HashSet<Boolean>, ULong>>(0.8105306f, {a: HashSet<Boolean> -> 2167955171768154664.toULong()})
2021-03-12 00:13:55,792 [main:61] - replacement of charList of type MutableList<Char> is ArrayDeque<Char>(setOfNotNull<Char>('삫'))
2021-03-12 00:13:55,890 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 00:13:55,891 [main:53] - replacing (10, Int)
2021-03-12 00:13:55,891 [main:50] - replacing 10 Int
2021-03-12 00:13:55,891 [main:54] - Getting value of type Int
2021-03-12 00:13:55,979 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:13:55,979 [main:58] - GENERATED VALUE OF TYPE Int = -55199848
2021-03-12 00:13:55,979 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:57,141 [main:67] - randomType = Function2<Short?, Short, Function2<Set<Short>, Function2<UShort, Float, UByte?>, Float>>
2021-03-12 00:13:57,141 [main:61] - replacement of 10 of type Int is -55199848
2021-03-12 00:13:57,230 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-12 00:13:57,230 [main:53] - replacing (i, Long)
2021-03-12 00:13:57,230 [main:50] - replacing i Long
2021-03-12 00:13:57,230 [main:54] - Getting value of type Long
2021-03-12 00:13:57,318 [main:302] - generating value of type = Long true depth = 0
2021-03-12 00:13:57,318 [main:58] - GENERATED VALUE OF TYPE Long = 1965524159397910622
2021-03-12 00:13:57,318 [main:61] - GENERATED IS CALL =false
2021-03-12 00:13:57,637 [main:67] - randomType = Function2<Int?, Short, Char>
2021-03-12 00:13:57,637 [main:61] - replacement of i of type Long is 1965524159397910622
2021-03-12 00:13:57,725 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-12 00:13:57,822 [main:119] - TRYING TO REPLACE CONSTANT 749002298
2021-03-12 00:13:57,910 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 00:13:57,910 [main:66] - Compilation checking started
2021-03-12 00:13:58,305 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl(-1627780401), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:13:58,305 [main:119] - TRYING TO REPLACE CONSTANT 110
2021-03-12 00:13:58,424 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:58,424 [main:66] - Compilation checking started
2021-03-12 00:13:58,699 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo((longList).size)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl(-1627780401), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:13:58,699 [main:119] - TRYING TO REPLACE CONSTANT 22038
2021-03-12 00:13:58,791 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-12 00:13:58,791 [main:66] - Compilation checking started
2021-03-12 00:13:59,013 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl(-1627780401), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (size).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:13:59,013 [main:119] - TRYING TO REPLACE CONSTANT 1627780401
2021-03-12 00:13:59,122 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:13:59,122 [main:66] - Compilation checking started
2021-03-12 00:13:59,481 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl((intList).single()), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step -1990146518).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:13:59,481 [main:119] - TRYING TO REPLACE CONSTANT 1990146518
2021-03-12 00:13:59,576 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-12 00:13:59,577 [main:66] - Compilation checking started
2021-03-12 00:13:59,992 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl((intList).single()), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 159185836).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:13:59,992 [main:119] - TRYING TO REPLACE CONSTANT 2240847369719484100
2021-03-12 00:14:00,095 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-12 00:14:00,096 [main:66] - Compilation checking started
2021-03-12 00:14:00,366 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(endInclusive)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl((intList).single()), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 159185836).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:14:00,367 [main:119] - TRYING TO REPLACE CONSTANT 52
2021-03-12 00:14:00,462 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:14:00,462 [main:66] - Compilation checking started
2021-03-12 00:14:00,703 [main:49] - Result = false
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until((intProgression).endInclusive)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(777394127778125707)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl((intList).single()), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 159185836).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:14:00,704 [main:119] - TRYING TO REPLACE CONSTANT 777394127778125707
2021-03-12 00:14:00,793 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 00:14:00,794 [main:66] - Compilation checking started
2021-03-12 00:14:01,160 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(2240847369719484100)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl((intList).single()), (6641.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 159185836).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:14:01,160 [main:119] - TRYING TO REPLACE CONSTANT 6641
2021-03-12 00:14:01,267 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 00:14:01,268 [main:66] - Compilation checking started
2021-03-12 00:14:01,614 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(2240847369719484100)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus(-6802808247811400312)
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl((intList).single()), (22038.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 159185836).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:14:01,614 [main:119] - TRYING TO REPLACE CONSTANT 8034038611556034569
2021-03-12 00:14:01,703 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 00:14:01,703 [main:66] - Compilation checking started
2021-03-12 00:14:02,048 [main:119] - TRYING TO REPLACE CONSTANT 5497212246683873184
2021-03-12 00:14:02,148 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 00:14:02,148 [main:66] - Compilation checking started
2021-03-12 00:14:02,505 [main:119] - TRYING TO REPLACE CONSTANT 6802808247811400312
2021-03-12 00:14:02,619 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:14:02,619 [main:66] - Compilation checking started
2021-03-12 00:14:02,947 [main:53] - Result = true
Text:
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = (intList).size.until(52)
    for (i in ((intList).size.downTo(110)).reversed() step (intList).single()) {
        intList += (intProgression).endInclusive.countTrailingZeroBits()
    }
    assertEquals(listOf(2, 5, 159185836), (intList).toMutableList())

    val longList = mutableListOf<Long>()
    val longProgression = (longList).size.until(2240847369719484100)
    for (i in (longList).size.downTo(-2240847369719484100)) {
        longList += (intList).size.minus((intList).size.minus(-6802808247811400312))
    }
    assertEquals(listOf((longProgression).lastOrNull(), (longProgression).endInclusive.shl((intList).single()), (22038.toUShort()).toLong().coerceIn(8034038611556034569, 5497212246683873184)), longList)

    val charList = mutableListOf<Char>()
    val charProgression = (-22038).toChar().lowercaseChar()..'j'
    for (i in (charProgression.reversed() step 159185836).reversed() step 3) {
        charList += '྇'
    }
    assertEquals(ArrayDeque<Char>(), (charProgression).toMutableList())

    return (longProgression).endInclusive.toString(110)
}


2021-03-12 00:14:02,967 [main:41] - AFTER TRY 0 res = import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += i
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step 2L).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}
2021-03-12 00:14:03,286 [main:43] - Try №0
2021-03-12 00:14:17,109 [main:48] - Already checked
2021-03-12 00:14:20,499 [main:69] - Trying to insert override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
2021-03-12 00:14:20,751 [main:66] - Compilation checking started
2021-03-12 00:14:21,857 [main:103] - Trying to change 219 nodes
2021-03-12 00:14:21,858 [main:107] - replacing (0, Int)
2021-03-12 00:14:21,861 [main:50] - replacing 0 Int
2021-03-12 00:14:21,861 [main:54] - Getting value of type Int
2021-03-12 00:14:22,040 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:14:22,042 [main:58] - GENERATED VALUE OF TYPE Int = 1194968729
2021-03-12 00:14:22,043 [main:61] - GENERATED IS CALL =false
2021-03-12 00:14:22,423 [main:67] - randomType = LinkedHashSet<UShort>
2021-03-12 00:14:22,618 [main:302] - generating value of type = LinkedHashSet<UShort> false depth = 0
2021-03-12 00:14:22,789 [main:43] - GENERATING CALL OF fun <E> LinkedHashSet(elements: kotlin.collections.Collection<UShort>): LinkedHashSet<UShort> = TODO()
2021-03-12 00:14:22,792 [main:61] - WITHOUT TYPE PARAMS = fun <E> LinkedHashSet(elements: kotlin.collections.Collection<UShort>): LinkedHashSet<UShort> = TODO()
2021-03-12 00:14:23,145 [main:302] - generating value of type = Collection<UShort> false depth = 3
2021-03-12 00:14:23,314 [main:43] - GENERATING CALL OF fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->UShort): Collection<UShort> = TODO()
2021-03-12 00:14:23,317 [main:61] - WITHOUT TYPE PARAMS = fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->UShort): Collection<UShort> = TODO()
2021-03-12 00:14:23,835 [main:302] - generating value of type = Int true depth = 6
2021-03-12 00:14:23,837 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, UShort> false depth = 6
2021-03-12 00:14:23,840 [main:302] - generating value of type = UShort true depth = 7
2021-03-12 00:14:23,842 [main:95] - GENERATED = List<UShort>(-789570345, {a: Int -> 8636.toUShort()})
2021-03-12 00:14:23,843 [main:95] - GENERATED = LinkedHashSet<UShort>(List<UShort>(-789570345, {a: Int -> 8636.toUShort()}))
2021-03-12 00:14:24,008 [main:149] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.LinkedHashSet[DeserializedSimpleFunctionDescriptor@4fd56af2]
2021-03-12 00:14:24,009 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b6be6fc]
2021-03-12 00:14:24,160 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 00:14:24,163 [main:302] - generating value of type = Int true depth = 1
2021-03-12 00:14:24,165 [main:78] - Generated call from random type = (LinkedHashSet<UShort>(List<UShort>(-789570345, {a: Int -> 8636.toUShort()}))).toArray().sumOf({a: T -> 386784040})
2021-03-12 00:14:24,165 [main:114] - replacement of 0 of type Int is (LinkedHashSet<UShort>(List<UShort>(-789570345, {a: Int -> 8636.toUShort()}))).toArray().sumOf({a: T -> 386784040})
2021-03-12 00:14:24,337 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:14:24,338 [main:66] - Compilation checking started
2021-03-12 00:14:24,905 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += i
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step 2L).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}

class Kla0 {
    var prope2: Continuation<String>? = null
    var prope3 = "fail"
    suspend fun fu5(): String = suspendCoroutineUninterceptedOrReturn { prope6 ->
        prope2 = prope6
        COROUTINE_SUSPENDED
    }

    fun fu6() = prope2 != null
    fun fu7() {
        val prope6 = prope2!!
        prope2 = null
        prope6.resume("56")
    }
}

fun fu0(c: suspend Kla0.() -> Unit) {
    val prope4 = Kla0()
    val prope5 = Kla0()

    c.startCoroutine(prope4, Kla1)
    c.startCoroutine(prope5, Kla1)

    fu1(prope4, prope5)
}

private fun fu1(prope4: Kla0, prope5: Kla0) {
    while (prope4.fu6()) {
        if (!prope5.fu6()) throw RuntimeException("fail 1")

        if (prope4.prope2 === prope5.prope2) throw RuntimeException("equal references")

        prope4.fu7()
        prope5.fu7()
    }

    if (prope5.fu6()) throw RuntimeException("fail 2")

    if (prope4.prope3 != "OK") throw RuntimeException("fail 3")
    if (prope5.prope3 != "OK") throw RuntimeException("fail 4")
}

inline fun fu2(b: () -> Unit) {
    b()
}

fun box927(): String {
    // with capture and params

    var prope6 = "O"
    var prope7 = "K"

    // inlined
    fu2 {
        // no suspension
        fu0 {
            prope3 = prope6 + prope7
        }

        // 1 suspension
        fu0 {
            if (fu5() != "56") return@fu0
            prope3 = prope6 + prope7
        }

        // 2 suspensions
        fu0 {
            if (fu5() != "56") return@fu0
            fu5()
            prope3 = prope6 + prope7
        }
    }

    return "OK"
}

fun <Ty0> fu3(prope6: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        prope6(prope3.getOrThrow())
    }
}

fun fu4(prope6: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(prope6)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu8(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu8(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope8 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope8.clear()
        var prope12: CoroutineStackFrame? = c
        while (prope12 != null) {
            prope8.add(prope12.getStackTraceElement())
            prope12 = prope12.callerFrame
        }
    }

    fun fu11(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope8.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope8.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope9 = 0
    var prope10 = false

    var prope11: () -> Unit = {}

    fun fu13() {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
prope9 = (LinkedHashSet<UShort>(List<UShort>(-789570345, {a: Int -> 8636.toUShort()}))).toArray().sumOf({a: T -> 386784040})
        prope10 = false
        prope11 = {}
    }

    suspend fun fu5() = suspendCoroutine<Unit> { c ->
        prope9++
        prope11 = { c.resume(Unit) }
    }

    fun fu14(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope9 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope9)
            prope11()
        }
        if (prope9 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope9)
        if (prope10) error("Wrong state-machine generated: it is finished early")
        prope11()
        if (checkFinished && !prope10) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope11 = {
            prope1.prope10 = true
        }
    }

    override fun fu8(exception: Throwable) {
        throw exception
    }
}


2021-03-12 00:14:24,908 [main:107] - replacing (prope12 != null, Boolean)
2021-03-12 00:14:24,911 [main:50] - replacing prope12 != null Boolean
2021-03-12 00:14:24,911 [main:54] - Getting value of type Boolean
2021-03-12 00:14:25,091 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:14:25,094 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 00:14:25,094 [main:61] - GENERATED IS CALL =false
2021-03-12 00:14:25,710 [main:67] - randomType = LinkedHashSet<Kla3<UShort>>
2021-03-12 00:14:25,867 [main:302] - generating value of type = LinkedHashSet<Kla3<UShort>> false depth = 0
2021-03-12 00:14:26,038 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Kla3<UShort>): LkedHashSet<Kla3<UShort>> = TODO()
2021-03-12 00:14:26,041 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Kla3<UShort>): LkedHashSet<Kla3<UShort>> = TODO()
2021-03-12 00:14:26,205 [main:302] - generating value of type = Kla3<UShort> false depth = 3
2021-03-12 00:14:26,207 [main:112] - generating klass Kla3 text = abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu8(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu8(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-12 00:14:26,724 [main:302] - generating value of type = Kla6 false depth = 5
2021-03-12 00:14:26,726 [main:112] - generating klass Kla6 text = object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope11 = {
            prope1.prope10 = true
        }
    }

    override fun fu8(exception: Throwable) {
        throw exception
    }
}
2021-03-12 00:14:26,727 [main:95] - GENERATED = linkedSetOf<Kla3<UShort>>(Kla6)
2021-03-12 00:14:26,906 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@7d32ec44]
2021-03-12 00:14:27,050 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:14:27,050 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5bb37521]
2021-03-12 00:14:27,242 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:14:27,244 [main:78] - Generated call from random type = (linkedSetOf<Kla3<UShort>>(Kla6)).equals("dhknc").and(true)
2021-03-12 00:14:27,246 [main:106] - GETTING Boolean from IntRange
2021-03-12 00:14:27,284 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@259a3d8c], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1176578f]]
2021-03-12 00:14:27,284 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@259a3d8c]
2021-03-12 00:14:27,458 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:14:27,458 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1176578f]
2021-03-12 00:14:27,619 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:14:27,621 [main:117] - GENERATED CALL = (intProgression).equals("qtwcb").or(false)
2021-03-12 00:14:27,622 [main:113] - Case = [public open fun iterator(): kotlin.collections.IntIterator defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@2b254e2e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.IntIterator[DeserializedSimpleFunctionDescriptor@3f8bc992]]
2021-03-12 00:14:27,622 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.IntIterator defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@2b254e2e]
2021-03-12 00:14:27,622 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.IntIterator[DeserializedSimpleFunctionDescriptor@3f8bc992]
2021-03-12 00:14:27,768 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:14:27,768 [main:117] - GENERATED CALL = (intProgression).iterator().equals("okzzu")
2021-03-12 00:14:27,769 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@259a3d8c], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@34246777]]
2021-03-12 00:14:27,769 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@259a3d8c]
2021-03-12 00:14:27,915 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:14:27,915 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@34246777]
2021-03-12 00:14:28,071 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:14:28,071 [main:117] - GENERATED CALL = (intProgression).equals("ibxvk").equals("hjkpj")
2021-03-12 00:14:28,071 [main:113] - Case = [public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@283187ff], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6bc50a57]]
2021-03-12 00:14:28,071 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6bc50a57]
2021-03-12 00:14:28,255 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:14:28,256 [main:117] - GENERATED CALL = (intProgression).endInclusive.equals("mecyw")
2021-03-12 00:14:28,256 [main:113] - Case = [public open fun iterator(): kotlin.collections.IntIterator defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@2b254e2e], public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.IntIterator[DeserializedSimpleFunctionDescriptor@67360a68]]
2021-03-12 00:14:28,256 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.IntIterator defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@2b254e2e]
2021-03-12 00:14:28,256 [main:149] - GENERATING call of type public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.IntIterator[DeserializedSimpleFunctionDescriptor@67360a68]
2021-03-12 00:14:28,256 [main:117] - GENERATED CALL = (intProgression).iterator().hasNext()
2021-03-12 00:14:28,257 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@2172104e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6bc50a57]]
2021-03-12 00:14:28,257 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6bc50a57]
2021-03-12 00:14:28,426 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:14:28,426 [main:117] - GENERATED CALL = (intProgression).first.equals("jlmlm")
2021-03-12 00:14:28,426 [main:113] - Case = [public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@1dab4e01], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6d2316ec]]
2021-03-12 00:14:28,426 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@1dab4e01]
2021-03-12 00:14:28,573 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:14:28,575 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6d2316ec]
2021-03-12 00:14:28,717 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:14:28,720 [main:117] - GENERATED CALL = (intProgression).contains(-1721079718).xor(true)
2021-03-12 00:14:28,720 [main:113] - Case = [public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@1dab4e01], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@34246777]]
2021-03-12 00:14:28,720 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Int): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@1dab4e01]
2021-03-12 00:14:28,874 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:14:28,876 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@34246777]
2021-03-12 00:14:29,017 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:14:29,017 [main:117] - GENERATED CALL = (intProgression).contains(461803091).equals("vpwcy")
2021-03-12 00:14:29,017 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@259a3d8c], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6d2316ec]]
2021-03-12 00:14:29,018 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntProgression[DeserializedSimpleFunctionDescriptor@259a3d8c]
2021-03-12 00:14:29,161 [main:302] - generating value of type = Any false depth = 0
2021-03-12 00:14:29,162 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6d2316ec]
2021-03-12 00:14:29,466 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 00:14:29,468 [main:117] - GENERATED CALL = (intProgression).equals("ilnxa").xor(false)
2021-03-12 00:14:29,469 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline operator fun kotlin.ranges.IntRange.contains(element: kotlin.Int?): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1641ee27]]
2021-03-12 00:14:29,469 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline operator fun kotlin.ranges.IntRange.contains(element: kotlin.Int?): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1641ee27]
2021-03-12 00:14:29,606 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:14:29,608 [main:117] - GENERATED CALL = (intProgression).contains(-1870143941)
2021-03-12 00:14:29,608 [main:114] - replacement of prope12 != null of type Boolean is (intProgression).endInclusive.equals("mecyw")
2021-03-12 00:14:29,745 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:14:29,745 [main:66] - Compilation checking started
2021-03-12 00:14:30,156 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += i
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step 2L).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}

class Kla0 {
    var prope2: Continuation<String>? = null
    var prope3 = "fail"
    suspend fun fu5(): String = suspendCoroutineUninterceptedOrReturn { prope6 ->
        prope2 = prope6
        COROUTINE_SUSPENDED
    }

    fun fu6() = prope2 != null
    fun fu7() {
        val prope6 = prope2!!
        prope2 = null
        prope6.resume("56")
    }
}

fun fu0(c: suspend Kla0.() -> Unit) {
    val prope4 = Kla0()
    val prope5 = Kla0()

    c.startCoroutine(prope4, Kla1)
    c.startCoroutine(prope5, Kla1)

    fu1(prope4, prope5)
}

private fun fu1(prope4: Kla0, prope5: Kla0) {
    while (prope4.fu6()) {
        if (!prope5.fu6()) throw RuntimeException("fail 1")

        if (prope4.prope2 === prope5.prope2) throw RuntimeException("equal references")

        prope4.fu7()
        prope5.fu7()
    }

    if (prope5.fu6()) throw RuntimeException("fail 2")

    if (prope4.prope3 != "OK") throw RuntimeException("fail 3")
    if (prope5.prope3 != "OK") throw RuntimeException("fail 4")
}

inline fun fu2(b: () -> Unit) {
    b()
}

fun box927(): String {
    // with capture and params

    var prope6 = "O"
    var prope7 = "K"

    // inlined
    fu2 {
        // no suspension
        fu0 {
            prope3 = prope6 + prope7
        }

        // 1 suspension
        fu0 {
            if (fu5() != "56") return@fu0
            prope3 = prope6 + prope7
        }

        // 2 suspensions
        fu0 {
            if (fu5() != "56") return@fu0
            fu5()
            prope3 = prope6 + prope7
        }
    }

    return "OK"
}

fun <Ty0> fu3(prope6: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        prope6(prope3.getOrThrow())
    }
}

fun fu4(prope6: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(prope6)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu8(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu8(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope8 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(c: Continuation<*>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope8.clear()
        var prope12: CoroutineStackFrame? = c
        while ((intProgression).endInclusive.equals("mecyw")) {
            prope8.add(prope12.getStackTraceElement())
            prope12 = prope12.callerFrame
        }
    }

    fun fu11(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope8.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope8.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope9 = 0
    var prope10 = false

    var prope11: () -> Unit = {}

    fun fu13() {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
prope9 = 0
        prope10 = false
        prope11 = {}
    }

    suspend fun fu5() = suspendCoroutine<Unit> { c ->
        prope9++
        prope11 = { c.resume(Unit) }
    }

    fun fu14(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope9 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope9)
            prope11()
        }
        if (prope9 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope9)
        if (prope10) error("Wrong state-machine generated: it is finished early")
        prope11()
        if (checkFinished && !prope10) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope11 = {
            prope1.prope10 = true
        }
    }

    override fun fu8(exception: Throwable) {
        throw exception
    }
}


2021-03-12 00:14:30,158 [main:107] - replacing (prope3.exceptionOrNull(), Throwable?)
2021-03-12 00:14:30,160 [main:50] - replacing prope3.exceptionOrNull() Throwable?
2021-03-12 00:14:30,160 [main:54] - Getting value of type Throwable?
2021-03-12 00:14:30,340 [main:302] - generating value of type = Throwable false depth = 0
2021-03-12 00:14:30,506 [main:43] - GENERATING CALL OF fun NumberFormatException(message: kotlin.String?): Throwable = TODO()
2021-03-12 00:14:30,510 [main:61] - WITHOUT TYPE PARAMS = fun NumberFormatException(message: kotlin.String?): Throwable = TODO()
2021-03-12 00:14:30,844 [main:302] - generating value of type = String true depth = 3
2021-03-12 00:14:30,847 [main:95] - GENERATED = NumberFormatException("xhqfl")
2021-03-12 00:14:30,847 [main:58] - GENERATED VALUE OF TYPE Throwable? = NumberFormatException("xhqfl")
2021-03-12 00:14:30,847 [main:61] - GENERATED IS CALL =true
2021-03-12 00:14:31,175 [main:67] - randomType = HashSet<UShort>
2021-03-12 00:14:31,330 [main:302] - generating value of type = HashSet<UShort> false depth = 0
2021-03-12 00:14:31,480 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: UShort): HashSet<UShort> = TODO()
2021-03-12 00:14:31,484 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: UShort): HashSet<UShort> = TODO()
2021-03-12 00:14:31,634 [main:302] - generating value of type = UShort true depth = 3
2021-03-12 00:14:31,636 [main:95] - GENERATED = linkedSetOf<UShort>(3193.toUShort())
2021-03-12 00:14:31,789 [main:106] - GETTING Throwable? from LongRange
2021-03-12 00:14:31,820 [main:106] - GETTING Throwable? from IntProgression
2021-03-12 00:14:31,833 [main:106] - GETTING Throwable? from LongProgression
2021-03-12 00:14:31,844 [main:106] - GETTING Throwable? from CharProgression
2021-03-12 00:14:31,859 [main:106] - GETTING Throwable? from IntProgression
2021-03-12 00:14:31,860 [main:106] - GETTING Throwable? from CharProgression
2021-03-12 00:14:31,860 [main:106] - GETTING Throwable? from LongProgression
2021-03-12 00:14:31,861 [main:106] - GETTING Throwable? from LongProgression
2021-03-12 00:14:31,862 [main:106] - GETTING Throwable? from CharRange
2021-03-12 00:14:31,887 [main:106] - GETTING Throwable? from IntProgression
2021-03-12 00:14:31,888 [main:106] - GETTING Throwable? from IntProgression
2021-03-12 00:14:31,889 [main:106] - GETTING Throwable? from CharProgression
2021-03-12 00:14:31,890 [main:106] - GETTING Throwable? from LongProgression
2021-03-12 00:14:31,890 [main:106] - GETTING Throwable? from IntRange
2021-03-12 00:14:31,916 [main:106] - GETTING Throwable? from CharProgression
2021-03-12 00:14:31,916 [main:114] - replacement of prope3.exceptionOrNull() of type Throwable? is NumberFormatException("xhqfl")
2021-03-12 00:14:32,065 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 00:14:32,066 [main:66] - Compilation checking started
2021-03-12 00:14:32,787 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += i
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step 2L).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}

class Kla0 {
    var prope2: Continuation<String>? = null
    var prope3 = "fail"
    suspend fun fu5(): String = suspendCoroutineUninterceptedOrReturn { prope6 ->
        prope2 = prope6
        COROUTINE_SUSPENDED
    }

    fun fu6() = prope2 != null
    fun fu7() {
        val prope6 = prope2!!
        prope2 = null
        prope6.resume("56")
    }
}

fun fu0(c: suspend Kla0.() -> Unit) {
    val prope4 = Kla0()
    val prope5 = Kla0()

    c.startCoroutine(prope4, Kla1)
    c.startCoroutine(prope5, Kla1)

    fu1(prope4, prope5)
}

private fun fu1(prope4: Kla0, prope5: Kla0) {
    while (prope4.fu6()) {
        if (!prope5.fu6()) throw RuntimeException("fail 1")

        if (prope4.prope2 === prope5.prope2) throw RuntimeException("equal references")

        prope4.fu7()
        prope5.fu7()
    }

    if (prope5.fu6()) throw RuntimeException("fail 2")

    if (prope4.prope3 != "OK") throw RuntimeException("fail 3")
    if (prope5.prope3 != "OK") throw RuntimeException("fail 4")
}

inline fun fu2(b: () -> Unit) {
    b()
}

fun box927(): String {
    // with capture and params

    var prope6 = "O"
    var prope7 = "K"

    // inlined
    fu2 {
        // no suspension
        fu0 {
            prope3 = prope6 + prope7
        }

        // 1 suspension
        fu0 {
            if (fu5() != "56") return@fu0
            prope3 = prope6 + prope7
        }

        // 2 suspensions
        fu0 {
            if (fu5() != "56") return@fu0
            fu5()
            prope3 = prope6 + prope7
        }
    }

    return "OK"
}

fun <Ty0> fu3(prope6: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        prope6(prope3.getOrThrow())
    }
}

fun fu4(prope6: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
NumberFormatException("xhqfl")?.let(prope6)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu8(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu8(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope8 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(c: Continuation<*>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope8.clear()
        var prope12: CoroutineStackFrame? = c
        while (prope12 != null) {
            prope8.add(prope12.getStackTraceElement())
            prope12 = prope12.callerFrame
        }
    }

    fun fu11(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope8.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope8.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope9 = 0
    var prope10 = false

    var prope11: () -> Unit = {}

    fun fu13() {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
prope9 = 0
        prope10 = false
        prope11 = {}
    }

    suspend fun fu5() = suspendCoroutine<Unit> { c ->
        prope9++
        prope11 = { c.resume(Unit) }
    }

    fun fu14(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope9 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope9)
            prope11()
        }
        if (prope9 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope9)
        if (prope10) error("Wrong state-machine generated: it is finished early")
        prope11()
        if (checkFinished && !prope10) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope11 = {
            prope1.prope10 = true
        }
    }

    override fun fu8(exception: Throwable) {
        throw exception
    }
}


2021-03-12 00:14:32,790 [main:107] - replacing (prope3, String)
2021-03-12 00:14:32,792 [main:50] - replacing prope3 String
2021-03-12 00:14:32,792 [main:54] - Getting value of type String
2021-03-12 00:14:32,944 [main:302] - generating value of type = String true depth = 0
2021-03-12 00:14:32,947 [main:58] - GENERATED VALUE OF TYPE String = "blhcb"
2021-03-12 00:14:32,947 [main:61] - GENERATED IS CALL =false
2021-03-12 00:14:33,294 [main:67] - randomType = List<Kla6>
2021-03-12 00:14:33,295 [main:106] - GETTING String from CharProgression
2021-03-12 00:14:33,310 [main:113] - Case = [public final val first: kotlin.Char defined in kotlin.ranges.CharProgression[DeserializedPropertyDescriptor@1850a4e9], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a76f224]]
2021-03-12 00:14:33,310 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6a76f224]
2021-03-12 00:14:33,452 [main:302] - generating value of type = String true depth = 0
2021-03-12 00:14:33,455 [main:117] - GENERATED CALL = (charProgression.reversed() step 2).first.plus("gjaes")
2021-03-12 00:14:33,455 [main:113] - Case = [public final val first: kotlin.Char defined in kotlin.ranges.CharProgression[DeserializedPropertyDescriptor@1850a4e9], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@18f7f18e]]
2021-03-12 00:14:33,455 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@18f7f18e]
2021-03-12 00:14:33,455 [main:117] - GENERATED CALL = (charProgression.reversed() step 2).first.titlecase()
2021-03-12 00:14:33,455 [main:113] - Case = [public final val first: kotlin.Char defined in kotlin.ranges.CharProgression[DeserializedPropertyDescriptor@1850a4e9], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@61c541d2]]
2021-03-12 00:14:33,455 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@61c541d2]
2021-03-12 00:14:33,456 [main:117] - GENERATED CALL = (charProgression.reversed() step 2).first.uppercase()
2021-03-12 00:14:33,456 [main:113] - Case = [public final val step: kotlin.Int defined in kotlin.ranges.CharProgression[DeserializedPropertyDescriptor@6d6b127], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4f3ef4e2]]
2021-03-12 00:14:33,456 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4f3ef4e2]
2021-03-12 00:14:33,597 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:14:33,600 [main:117] - GENERATED CALL = (charProgression.reversed() step 2).step.toString(898109602)
2021-03-12 00:14:33,600 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1a1d9a9d]]
2021-03-12 00:14:33,600 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1a1d9a9d]
2021-03-12 00:14:33,744 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:14:33,893 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 00:14:33,896 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 00:14:34,201 [main:302] - generating value of type = String true depth = 3
2021-03-12 00:14:34,203 [main:95] - GENERATED = StringBuilder("gkltm")
2021-03-12 00:14:34,364 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:14:34,511 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:14:34,660 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:14:34,808 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:14:34,955 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 00:14:34,958 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 00:14:35,109 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 00:14:35,113 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 00:14:35,422 [main:302] - generating value of type = String true depth = 4
2021-03-12 00:14:35,425 [main:95] - GENERATED = StringBuilder("pwhgw")
2021-03-12 00:14:35,425 [main:117] - GENERATED CALL = (charProgression.reversed() step 2).joinToString(StringBuilder("gkltm"), "ugttq", "yahdg", -989721454, "flugr", {a: T -> StringBuilder("pwhgw")})
2021-03-12 00:14:35,425 [main:113] - Case = [public final val first: kotlin.Char defined in kotlin.ranges.CharProgression[DeserializedPropertyDescriptor@1850a4e9], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b87180e]]
2021-03-12 00:14:35,425 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b87180e]
2021-03-12 00:14:35,426 [main:117] - GENERATED CALL = (charProgression.reversed() step 2).first.lowercase()
2021-03-12 00:14:35,426 [main:114] - replacement of prope3 of type String is (charProgression.reversed() step 2).step.toString(898109602)
2021-03-12 00:14:35,566 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:14:35,567 [main:66] - Compilation checking started
2021-03-12 00:14:35,995 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += i
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step 2L).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}

class Kla0 {
    var prope2: Continuation<String>? = null
    var prope3 = "fail"
    suspend fun fu5(): String = suspendCoroutineUninterceptedOrReturn { prope6 ->
        prope2 = prope6
        COROUTINE_SUSPENDED
    }

    fun fu6() = prope2 != null
    fun fu7() {
        val prope6 = prope2!!
        prope2 = null
        prope6.resume("56")
    }
}

fun fu0(c: suspend Kla0.() -> Unit) {
    val prope4 = Kla0()
    val prope5 = Kla0()

    c.startCoroutine(prope4, Kla1)
    c.startCoroutine(prope5, Kla1)

    fu1(prope4, prope5)
}

private fun fu1(prope4: Kla0, prope5: Kla0) {
    while (prope4.fu6()) {
        if (!prope5.fu6()) throw RuntimeException("fail 1")

        if (prope4.prope2 === prope5.prope2) throw RuntimeException("equal references")

        prope4.fu7()
        prope5.fu7()
    }

    if (prope5.fu6()) throw RuntimeException("fail 2")

    if (prope4.prope3 != "OK") throw RuntimeException("fail 3")
    if (prope5.prope3 != "OK") throw RuntimeException("fail 4")
}

inline fun fu2(b: () -> Unit) {
    b()
}

fun box927(): String {
    // with capture and params

    val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
var prope6 = "O"
    var prope7 = "K"

    // inlined
    fu2 {
        // no suspension
        fu0 {
            (charProgression.reversed() step 2).step.toString(898109602) = prope6 + prope7
        }

        // 1 suspension
        fu0 {
            if (fu5() != "56") return@fu0
            prope3 = prope6 + prope7
        }

        // 2 suspensions
        fu0 {
            if (fu5() != "56") return@fu0
            fu5()
            prope3 = prope6 + prope7
        }
    }

    return "OK"
}

fun <Ty0> fu3(prope6: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        prope6(prope3.getOrThrow())
    }
}

fun fu4(prope6: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
NumberFormatException("xhqfl")?.let(prope6)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu8(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu8(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope8 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(c: Continuation<*>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope8.clear()
        var prope12: CoroutineStackFrame? = c
        while (prope12 != null) {
            prope8.add(prope12.getStackTraceElement())
            prope12 = prope12.callerFrame
        }
    }

    fun fu11(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope8.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope8.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope9 = 0
    var prope10 = false

    var prope11: () -> Unit = {}

    fun fu13() {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
prope9 = 0
        prope10 = false
        prope11 = {}
    }

    suspend fun fu5() = suspendCoroutine<Unit> { c ->
        prope9++
        prope11 = { c.resume(Unit) }
    }

    fun fu14(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope9 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope9)
            prope11()
        }
        if (prope9 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope9)
        if (prope10) error("Wrong state-machine generated: it is finished early")
        prope11()
        if (checkFinished && !prope10) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope11 = {
            prope1.prope10 = true
        }
    }

    override fun fu8(exception: Throwable) {
        throw exception
    }
}


2021-03-12 00:14:35,999 [main:107] - replacing (prope3, Result<Any?>)
2021-03-12 00:14:36,002 [main:50] - replacing prope3 Result<Any?>
2021-03-12 00:14:36,002 [main:54] - Getting value of type Result<Any?>
2021-03-12 00:14:36,159 [main:302] - generating value of type = Result<Any?> false depth = 0
2021-03-12 00:14:36,339 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-12 00:14:36,342 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-12 00:14:36,730 [main:302] - generating value of type = Function0<Any?> false depth = 3
2021-03-12 00:14:36,734 [main:302] - generating value of type = Any false depth = 4
2021-03-12 00:14:36,735 [main:95] - GENERATED = runCatching<Any?>({ "kemqw"})
2021-03-12 00:14:36,735 [main:58] - GENERATED VALUE OF TYPE Result<Any?> = runCatching<Any?>({ "kemqw"})
2021-03-12 00:14:36,736 [main:61] - GENERATED IS CALL =true
2021-03-12 00:14:37,251 [main:67] - randomType = Pair<Kla5, UInt?>
2021-03-12 00:14:37,397 [main:302] - generating value of type = Pair<Kla5, UInt?> false depth = 0
2021-03-12 00:14:37,548 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Kla5, second: UInt?): Pair<Kla5, UInt?> = TODO()
2021-03-12 00:14:37,551 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Kla5, second: UInt?): Pair<Kla5, UInt?> = TODO()
2021-03-12 00:14:37,702 [main:302] - generating value of type = Kla5 false depth = 3
2021-03-12 00:14:37,705 [main:112] - generating klass Kla5 text = class Kla5 {
    private var prope9 = 0
    var prope10 = false

    var prope11: () -> Unit = {}

    fun fu13() {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
prope9 = 0
        prope10 = false
        prope11 = {}
    }

    suspend fun fu5() = suspendCoroutine<Unit> { c ->
        prope9++
        prope11 = { c.resume(Unit) }
    }

    fun fu14(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope9 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope9)
            prope11()
        }
        if (prope9 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope9)
        if (prope10) error("Wrong state-machine generated: it is finished early")
        prope11()
        if (checkFinished && !prope10) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-12 00:14:37,705 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 00:14:37,708 [main:95] - GENERATED = Pair<Kla5, UInt?>(Kla5(), 2122070769.toUInt())
2021-03-12 00:14:37,727 [main:106] - GETTING Result<Any?> from IntRange
2021-03-12 00:14:37,757 [main:106] - GETTING Result<Any?> from CharProgression
2021-03-12 00:14:37,775 [main:106] - GETTING Result<Any?> from LongProgression
2021-03-12 00:14:37,792 [main:106] - GETTING Result<Any?> from IntProgression
2021-03-12 00:14:37,807 [main:106] - GETTING Result<Any?> from IntProgression
2021-03-12 00:14:37,808 [main:106] - GETTING Result<Any?> from CharProgression
2021-03-12 00:14:37,809 [main:106] - GETTING Result<Any?> from CharRange
2021-03-12 00:14:37,841 [main:106] - GETTING Result<Any?> from LongProgression
2021-03-12 00:14:37,842 [main:106] - GETTING Result<Any?> from CharProgression
2021-03-12 00:14:37,843 [main:106] - GETTING Result<Any?> from LongProgression
2021-03-12 00:14:37,845 [main:106] - GETTING Result<Any?> from LongRange
2021-03-12 00:14:37,878 [main:106] - GETTING Result<Any?> from IntProgression
2021-03-12 00:14:37,880 [main:106] - GETTING Result<Any?> from CharProgression
2021-03-12 00:14:37,881 [main:106] - GETTING Result<Any?> from IntProgression
2021-03-12 00:14:37,882 [main:106] - GETTING Result<Any?> from LongProgression
2021-03-12 00:14:37,882 [main:114] - replacement of prope3 of type Result<Any?> is runCatching<Any?>({ "kemqw"})
2021-03-12 00:14:38,029 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 00:14:38,030 [main:66] - Compilation checking started
2021-03-12 00:14:38,801 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += i
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step 2L).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}

class Kla0 {
    var prope2: Continuation<String>? = null
    var prope3 = "fail"
    suspend fun fu5(): String = suspendCoroutineUninterceptedOrReturn { prope6 ->
        prope2 = prope6
        COROUTINE_SUSPENDED
    }

    fun fu6() = prope2 != null
    fun fu7() {
        val prope6 = prope2!!
        prope2 = null
        prope6.resume("56")
    }
}

fun fu0(c: suspend Kla0.() -> Unit) {
    val prope4 = Kla0()
    val prope5 = Kla0()

    c.startCoroutine(prope4, Kla1)
    c.startCoroutine(prope5, Kla1)

    fu1(prope4, prope5)
}

private fun fu1(prope4: Kla0, prope5: Kla0) {
    while (prope4.fu6()) {
        if (!prope5.fu6()) throw RuntimeException("fail 1")

        if (prope4.prope2 === prope5.prope2) throw RuntimeException("equal references")

        prope4.fu7()
        prope5.fu7()
    }

    if (prope5.fu6()) throw RuntimeException("fail 2")

    if (prope4.prope3 != "OK") throw RuntimeException("fail 3")
    if (prope5.prope3 != "OK") throw RuntimeException("fail 4")
}

inline fun fu2(b: () -> Unit) {
    b()
}

fun box927(): String {
    // with capture and params

    val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
var prope6 = "O"
    var prope7 = "K"

    // inlined
    fu2 {
        // no suspension
        fu0 {
            prope3 = prope6 + prope7
        }

        // 1 suspension
        fu0 {
            if (fu5() != "56") return@fu0
            prope3 = prope6 + prope7
        }

        // 2 suspensions
        fu0 {
            if (fu5() != "56") return@fu0
            fu5()
            prope3 = prope6 + prope7
        }
    }

    return "OK"
}

fun <Ty0> fu3(prope6: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        prope6(prope3.getOrThrow())
    }
}

fun fu4(prope6: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
NumberFormatException("xhqfl")?.let(prope6)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
this.prope3 = runCatching<Any?>({ "kemqw"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu8(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu8(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope8 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(c: Continuation<*>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope8.clear()
        var prope12: CoroutineStackFrame? = c
        while (prope12 != null) {
            prope8.add(prope12.getStackTraceElement())
            prope12 = prope12.callerFrame
        }
    }

    fun fu11(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope8.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope8.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope9 = 0
    var prope10 = false

    var prope11: () -> Unit = {}

    fun fu13() {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
prope9 = 0
        prope10 = false
        prope11 = {}
    }

    suspend fun fu5() = suspendCoroutine<Unit> { c ->
        prope9++
        prope11 = { c.resume(Unit) }
    }

    fun fu14(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope9 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope9)
            prope11()
        }
        if (prope9 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope9)
        if (prope10) error("Wrong state-machine generated: it is finished early")
        prope11()
        if (checkFinished && !prope10) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope11 = {
            prope1.prope10 = true
        }
    }

    override fun fu8(exception: Throwable) {
        throw exception
    }
}


2021-03-12 00:14:38,805 [main:107] - replacing (prope7, String)
2021-03-12 00:14:38,805 [main:50] - replacing prope7 String
2021-03-12 00:14:38,805 [main:54] - Getting value of type String
2021-03-12 00:14:38,967 [main:302] - generating value of type = String true depth = 0
2021-03-12 00:14:38,969 [main:58] - GENERATED VALUE OF TYPE String = "meymu"
2021-03-12 00:14:38,969 [main:61] - GENERATED IS CALL =false
2021-03-12 00:14:40,849 [main:67] - randomType = Function2<Kla4, Function1<Kla1, String?>, Function2<Function2<Byte?, String, UInt>, Boolean?, Set<Double>>>
2021-03-12 00:14:40,850 [main:106] - GETTING String from IntProgression
2021-03-12 00:14:40,861 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1a1d9a9d]]
2021-03-12 00:14:40,861 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1a1d9a9d]
2021-03-12 00:14:40,999 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:14:41,143 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 00:14:41,147 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 00:14:41,447 [main:302] - generating value of type = Int true depth = 3
2021-03-12 00:14:41,450 [main:95] - GENERATED = StringBuilder(970656834)
2021-03-12 00:14:41,590 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:14:41,737 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:14:41,881 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:14:42,025 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 00:14:42,170 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 00:14:42,172 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 00:14:42,329 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 00:14:42,333 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 00:14:42,633 [main:302] - generating value of type = String true depth = 4
2021-03-12 00:14:42,636 [main:95] - GENERATED = StringBuilder("eagdv")
2021-03-12 00:14:42,636 [main:117] - GENERATED CALL = (intProgression.reversed()).joinToString(StringBuilder(970656834), StringBuilder(), "egkol", 1634733835, StringBuilder(), {a: T -> StringBuilder("eagdv")})
2021-03-12 00:14:42,636 [main:113] - Case = [public final val first: kotlin.Int defined in kotlin.ranges.IntProgression[DeserializedPropertyDescriptor@11b2f804], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4f3ef4e2]]
2021-03-12 00:14:42,636 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4f3ef4e2]
2021-03-12 00:14:42,800 [main:302] - generating value of type = Int true depth = 0
2021-03-12 00:14:42,802 [main:117] - GENERATED CALL = (intProgression.reversed()).first.toString(-1518644774)
2021-03-12 00:14:42,803 [main:114] - replacement of prope7 of type String is (intProgression.reversed()).joinToString(StringBuilder(970656834), StringBuilder(), "egkol", 1634733835, StringBuilder(), {a: T -> StringBuilder("eagdv")})
2021-03-12 00:14:42,954 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 00:14:42,954 [main:66] - Compilation checking started
2021-03-12 00:14:43,387 [main:49] - Result = false
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += i
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step 2L).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}

class Kla0 {
    var prope2: Continuation<String>? = null
    var prope3 = "fail"
    suspend fun fu5(): String = suspendCoroutineUninterceptedOrReturn { prope6 ->
        prope2 = prope6
        COROUTINE_SUSPENDED
    }

    fun fu6() = prope2 != null
    fun fu7() {
        val prope6 = prope2!!
        prope2 = null
        prope6.resume("56")
    }
}

fun fu0(c: suspend Kla0.() -> Unit) {
    val prope4 = Kla0()
    val prope5 = Kla0()

    c.startCoroutine(prope4, Kla1)
    c.startCoroutine(prope5, Kla1)

    fu1(prope4, prope5)
}

private fun fu1(prope4: Kla0, prope5: Kla0) {
    while (prope4.fu6()) {
        if (!prope5.fu6()) throw RuntimeException("fail 1")

        if (prope4.prope2 === prope5.prope2) throw RuntimeException("equal references")

        prope4.fu7()
        prope5.fu7()
    }

    if (prope5.fu6()) throw RuntimeException("fail 2")

    if (prope4.prope3 != "OK") throw RuntimeException("fail 3")
    if (prope5.prope3 != "OK") throw RuntimeException("fail 4")
}

inline fun fu2(b: () -> Unit) {
    b()
}

fun box927(): String {
    // with capture and params

    val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
var prope6 = "O"
    var prope7 = "K"

    // inlined
    fu2 {
        // no suspension
        fu0 {
            prope3 = prope6 + prope7
        }

        // 1 suspension
        fu0 {
            if (fu5() != "56") return@fu0
            prope3 = prope6 + prope7
        }

        // 2 suspensions
        fu0 {
            if (fu5() != "56") return@fu0
            fu5()
            prope3 = prope6 + (intProgression.reversed()).joinToString(StringBuilder(970656834), StringBuilder(), "egkol", 1634733835, StringBuilder(), {a: T -> StringBuilder("eagdv")})
        }
    }

    return "OK"
}

fun <Ty0> fu3(prope6: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        prope6(prope3.getOrThrow())
    }
}

fun fu4(prope6: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
NumberFormatException("xhqfl")?.let(prope6)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
this.prope3 = runCatching<Any?>({ "kemqw"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu8(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu8(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope8 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(c: Continuation<*>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope8.clear()
        var prope12: CoroutineStackFrame? = c
        while (prope12 != null) {
            prope8.add(prope12.getStackTraceElement())
            prope12 = prope12.callerFrame
        }
    }

    fun fu11(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope8.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope8.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope9 = 0
    var prope10 = false

    var prope11: () -> Unit = {}

    fun fu13() {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
prope9 = 0
        prope10 = false
        prope11 = {}
    }

    suspend fun fu5() = suspendCoroutine<Unit> { c ->
        prope9++
        prope11 = { c.resume(Unit) }
    }

    fun fu14(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope9 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope9)
            prope11()
        }
        if (prope9 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope9)
        if (prope10) error("Wrong state-machine generated: it is finished early")
        prope11()
        if (checkFinished && !prope10) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope11 = {
            prope1.prope10 = true
        }
    }

    override fun fu8(exception: Throwable) {
        throw exception
    }
}


2021-03-12 00:14:43,391 [main:107] - replacing (this, Kla2)
2021-03-12 00:14:43,391 [main:50] - replacing this Kla2
2021-03-12 00:14:43,391 [main:54] - Getting value of type Kla2
2021-03-12 00:14:43,539 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-12 00:14:43,541 [main:112] - generating klass Kla2 text = class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
this.prope3 = runCatching<Any?>({ "kemqw"}).getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-12 00:14:43,541 [main:58] - GENERATED VALUE OF TYPE Kla2 = Kla2()
2021-03-12 00:14:43,541 [main:61] - GENERATED IS CALL =true
2021-03-12 00:14:43,706 [main:67] - randomType = Kla1?
2021-03-12 00:14:43,852 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-12 00:14:43,854 [main:112] - generating klass Kla1 text = open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}
2021-03-12 00:14:44,001 [main:194] - Type params = []
2021-03-12 00:14:44,145 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-12 00:14:44,290 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 00:14:44,293 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 00:14:44,638 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-12 00:14:44,815 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 00:14:44,819 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 00:14:45,398 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 00:14:45,398 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 00:14:45,421 [main:106] - GETTING Kla2 from IntRange
2021-03-12 00:14:45,461 [main:106] - GETTING Kla2 from IntProgression
2021-03-12 00:14:45,482 [main:106] - GETTING Kla2 from LongRange
2021-03-12 00:14:45,514 [main:106] - GETTING Kla2 from LongProgression
2021-03-12 00:14:45,530 [main:106] - GETTING Kla2 from CharProgression
2021-03-12 00:14:45,544 [main:106] - GETTING Kla2 from IntProgression
2021-03-12 00:14:45,545 [main:106] - GETTING Kla2 from CharProgression
2021-03-12 00:14:45,546 [main:106] - GETTING Kla2 from CharProgression
2021-03-12 00:14:45,546 [main:106] - GETTING Kla2 from LongProgression
2021-03-12 00:14:45,547 [main:106] - GETTING Kla2 from IntProgression
2021-03-12 00:14:45,548 [main:106] - GETTING Kla2 from CharProgression
2021-03-12 00:14:45,548 [main:106] - GETTING Kla2 from LongProgression
2021-03-12 00:14:45,549 [main:106] - GETTING Kla2 from CharRange
2021-03-12 00:14:45,574 [main:106] - GETTING Kla2 from LongProgression
2021-03-12 00:14:45,574 [main:106] - GETTING Kla2 from IntProgression
2021-03-12 00:14:45,574 [main:114] - replacement of this of type Kla2 is Kla2()
2021-03-12 00:14:45,718 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 00:14:45,719 [main:66] - Compilation checking started
2021-03-12 00:14:46,511 [main:53] - Result = true
Text:
import kotlin.test.*
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame


fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..10
    for (i in (intProgression.reversed() step 2).reversed() step 3) {
        intList += i
    }
    assertEquals(listOf(2, 5, 8), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..10L
    for (i in (longProgression.reversed() step 2L).reversed() step 3L) {
        longList += i
    }
    assertEquals(listOf(2L, 5L, 8L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'j'
    for (i in (charProgression.reversed() step 2).reversed() step 3) {
        charList += i
    }
    assertEquals(listOf('b', 'e', 'h'), charList)

    return "OK"
}

class Kla0 {
    var prope2: Continuation<String>? = null
    var prope3 = "fail"
    suspend fun fu5(): String = suspendCoroutineUninterceptedOrReturn { prope6 ->
        prope2 = prope6
        COROUTINE_SUSPENDED
    }

    fun fu6() = prope2 != null
    fun fu7() {
        val prope6 = prope2!!
        prope2 = null
        prope6.resume("56")
    }
}

fun fu0(c: suspend Kla0.() -> Unit) {
    val prope4 = Kla0()
    val prope5 = Kla0()

    c.startCoroutine(prope4, Kla1)
    c.startCoroutine(prope5, Kla1)

    fu1(prope4, prope5)
}

private fun fu1(prope4: Kla0, prope5: Kla0) {
    while (prope4.fu6()) {
        if (!prope5.fu6()) throw RuntimeException("fail 1")

        if (prope4.prope2 === prope5.prope2) throw RuntimeException("equal references")

        prope4.fu7()
        prope5.fu7()
    }

    if (prope5.fu6()) throw RuntimeException("fail 2")

    if (prope4.prope3 != "OK") throw RuntimeException("fail 3")
    if (prope5.prope3 != "OK") throw RuntimeException("fail 4")
}

inline fun fu2(b: () -> Unit) {
    b()
}

fun box927(): String {
    // with capture and params

    val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
var prope6 = "O"
    var prope7 = "K"

    // inlined
    fu2 {
        // no suspension
        fu0 {
            prope3 = prope6 + prope7
        }

        // 1 suspension
        fu0 {
            if (fu5() != "56") return@fu0
            prope3 = prope6 + prope7
        }

        // 2 suspensions
        fu0 {
            if (fu5() != "56") return@fu0
            fu5()
            prope3 = prope6 + prope7
        }
    }

    return "OK"
}

fun <Ty0> fu3(prope6: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        prope6(prope3.getOrThrow())
    }
}

fun fu4(prope6: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
NumberFormatException("xhqfl")?.let(prope6)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
Kla2().prope3 = runCatching<Any?>({ "kemqw"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu8(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu8(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope8 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(c: Continuation<*>) {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope8.clear()
        var prope12: CoroutineStackFrame? = c
        while (prope12 != null) {
            prope8.add(prope12.getStackTraceElement())
            prope12 = prope12.callerFrame
        }
    }

    fun fu11(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope8.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope8.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope8.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope9 = 0
    var prope10 = false

    var prope11: () -> Unit = {}

    fun fu13() {
        val intList = mutableListOf<Int>()
val intProgression = 1..10
val longList = mutableListOf<Long>()
val longProgression = 1L..10L
val charList = mutableListOf<Char>()
val charProgression = 'a'..'j'
prope9 = 0
        prope10 = false
        prope11 = {}
    }

    suspend fun fu5() = suspendCoroutine<Unit> { c ->
        prope9++
        prope11 = { c.resume(Unit) }
    }

    fun fu14(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope9 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope9)
            prope11()
        }
        if (prope9 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope9)
        if (prope10) error("Wrong state-machine generated: it is finished early")
        prope11()
        if (checkFinished && !prope10) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope11 = {
            prope1.prope10 = true
        }
    }

    override fun fu8(exception: Throwable) {
        throw exception
    }
}


2021-03-12 00:14:46,515 [main:107] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got ", String)
2021-03-12 00:14:46,519 [main:50] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " String
2021-03-12 00:14:46,519 [main:54] - Getting value of type String
