2021-03-11 11:26:52,499 [main:66] - Compilation checking started
2021-03-11 11:26:54,896 [main:52] - Trying to change 57 nodes
2021-03-11 11:26:54,896 [main:56] - replacing ("method: $enclosingMethod", String)
2021-03-11 11:26:54,918 [main:38] - replacing "method: $enclosingMethod" String
2021-03-11 11:26:54,918 [main:42] - Getting value of type String
2021-03-11 11:26:55,054 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:26:55,058 [main:46] - GENERATED VALUE OF TYPE String = "wzgaa"
2021-03-11 11:26:55,059 [main:49] - GENERATED IS CALL =false
2021-03-11 11:26:55,682 [main:55] - randomType = Byte
2021-03-11 11:26:55,825 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:26:56,009 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@59acd373]
2021-03-11 11:26:56,012 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]
2021-03-11 11:26:56,150 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:26:56,152 [main:66] - Generated call from random type = (-59).toChar().plus("tcwii")
2021-03-11 11:26:56,171 [main:94] - GETTING String from Any
2021-03-11 11:26:56,180 [main:63] - replacement of "method: $enclosingMethod" of type String is (-59).toChar().plus("tcwii")
2021-03-11 11:26:56,300 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:26:56,301 [main:66] - Compilation checking started
2021-03-11 11:26:56,939 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return (-59).toChar().plus("tcwii")

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}
2021-03-11 11:26:56,941 [main:56] - replacing ("OK", String)
2021-03-11 11:26:56,942 [main:38] - replacing "OK" String
2021-03-11 11:26:56,942 [main:42] - Getting value of type String
2021-03-11 11:26:57,064 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:26:57,064 [main:46] - GENERATED VALUE OF TYPE String = "gtiaq"
2021-03-11 11:26:57,065 [main:49] - GENERATED IS CALL =false
2021-03-11 11:26:57,201 [main:55] - randomType = Char
2021-03-11 11:26:57,335 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:26:57,398 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@3835302c]
2021-03-11 11:26:57,521 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:26:57,522 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:26:57,636 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:26:57,637 [main:66] - Generated call from random type = ('耂').compareTo('껏').toString(429928469)
2021-03-11 11:26:57,641 [main:94] - GETTING String from Any
2021-03-11 11:26:57,648 [main:63] - replacement of "OK" of type String is ('耂').compareTo('껏').toString(429928469)
2021-03-11 11:26:57,772 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:26:57,773 [main:66] - Compilation checking started
2021-03-11 11:26:58,183 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return ('耂').compareTo('껏').toString(429928469)
}
2021-03-11 11:26:58,186 [main:56] - replacing ({}, Function0<Unit>)
2021-03-11 11:26:58,186 [main:38] - replacing {} Function0<Unit>
2021-03-11 11:26:58,186 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:26:58,300 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:26:58,300 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:26:58,407 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:26:58,410 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:26:58,617 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:26:58,618 [main:95] - GENERATED = print("yborc")
2021-03-11 11:26:58,618 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { print("yborc")}
2021-03-11 11:26:58,618 [main:49] - GENERATED IS CALL =false
2021-03-11 11:26:58,736 [main:55] - randomType = Byte
2021-03-11 11:26:58,848 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:26:58,911 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:26:58,916 [main:63] - replacement of {} of type Function0<Unit> is { print("yborc")}
2021-03-11 11:26:59,008 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:26:59,008 [main:66] - Compilation checking started
2021-03-11 11:26:59,376 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = { print("yborc")}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:26:59,377 [main:56] - replacing ("LambdaInPropertySetterKt", String)
2021-03-11 11:26:59,377 [main:38] - replacing "LambdaInPropertySetterKt" String
2021-03-11 11:26:59,377 [main:42] - Getting value of type String
2021-03-11 11:26:59,494 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:26:59,494 [main:46] - GENERATED VALUE OF TYPE String = "ngonh"
2021-03-11 11:26:59,494 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:00,412 [main:55] - randomType = Function2<Collection<UShort>, UByte, ArrayList<Double?>>
2021-03-11 11:27:00,414 [main:94] - GETTING String from Any
2021-03-11 11:27:00,420 [main:63] - replacement of "LambdaInPropertySetterKt" of type String is "ngonh"
2021-03-11 11:27:00,532 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:00,533 [main:66] - Compilation checking started
2021-03-11 11:27:00,883 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "ngonh") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:00,885 [main:56] - replacing ("anonymous function has a declaring class: $declaringClass", String)
2021-03-11 11:27:00,885 [main:38] - replacing "anonymous function has a declaring class: $declaringClass" String
2021-03-11 11:27:00,885 [main:42] - Getting value of type String
2021-03-11 11:27:00,972 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:00,972 [main:46] - GENERATED VALUE OF TYPE String = "ancbb"
2021-03-11 11:27:00,973 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:01,069 [main:55] - randomType = Byte
2021-03-11 11:27:01,168 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:27:01,239 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4fc3ac1]
2021-03-11 11:27:01,240 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:27:01,346 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:01,348 [main:66] - Generated call from random type = (55).toShort().toString(875775462)
2021-03-11 11:27:01,350 [main:94] - GETTING String from Any
2021-03-11 11:27:01,356 [main:63] - replacement of "anonymous function has a declaring class: $declaringClass" of type String is "ancbb"
2021-03-11 11:27:01,447 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:01,447 [main:66] - Compilation checking started
2021-03-11 11:27:01,692 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "ancbb"

    return "OK"
}


2021-03-11 11:27:01,694 [main:56] - replacing ("setL", String)
2021-03-11 11:27:01,694 [main:38] - replacing "setL" String
2021-03-11 11:27:01,694 [main:42] - Getting value of type String
2021-03-11 11:27:01,789 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:01,789 [main:46] - GENERATED VALUE OF TYPE String = "xgcxl"
2021-03-11 11:27:01,790 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:01,883 [main:55] - randomType = UShort
2021-03-11 11:27:01,987 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 11:27:02,041 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:27:02,129 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:02,130 [main:66] - Generated call from random type = (8973.toUShort()).toString(-157421093)
2021-03-11 11:27:02,131 [main:94] - GETTING String from Any
2021-03-11 11:27:02,136 [main:63] - replacement of "setL" of type String is (8973.toUShort()).toString(-157421093)
2021-03-11 11:27:02,221 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:02,222 [main:66] - Compilation checking started
2021-03-11 11:27:02,478 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != (8973.toUShort()).toString(-157421093)) return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:02,479 [main:56] - replacing ("setL", String)
2021-03-11 11:27:02,479 [main:38] - replacing "setL" String
2021-03-11 11:27:02,479 [main:42] - Getting value of type String
2021-03-11 11:27:02,558 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:02,558 [main:46] - GENERATED VALUE OF TYPE String = "jzsso"
2021-03-11 11:27:02,558 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:02,765 [main:55] - randomType = List<Byte>
2021-03-11 11:27:02,767 [main:94] - GETTING String from Any
2021-03-11 11:27:02,771 [main:63] - replacement of "setL" of type String is "jzsso"
2021-03-11 11:27:02,853 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:02,853 [main:66] - Compilation checking started
2021-03-11 11:27:03,088 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "jzsso") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:03,090 [main:56] - replacing ("LambdaInPropertySetterKt", String)
2021-03-11 11:27:03,090 [main:38] - replacing "LambdaInPropertySetterKt" String
2021-03-11 11:27:03,090 [main:42] - Getting value of type String
2021-03-11 11:27:03,189 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:03,189 [main:46] - GENERATED VALUE OF TYPE String = "vpscg"
2021-03-11 11:27:03,190 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:03,942 [main:55] - randomType = Function2<Pair<Char, UInt?>, ULong, Int?>
2021-03-11 11:27:03,943 [main:94] - GETTING String from Any
2021-03-11 11:27:03,948 [main:63] - replacement of "LambdaInPropertySetterKt" of type String is "vpscg"
2021-03-11 11:27:04,027 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:04,027 [main:66] - Compilation checking started
2021-03-11 11:27:04,277 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "vpscg") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:04,278 [main:56] - replacing (declaringClass != null, Boolean)
2021-03-11 11:27:04,278 [main:38] - replacing declaringClass != null Boolean
2021-03-11 11:27:04,278 [main:42] - Getting value of type Boolean
2021-03-11 11:27:04,359 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:04,359 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:27:04,360 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:04,533 [main:55] - randomType = Double?
2021-03-11 11:27:04,622 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:27:04,704 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]
2021-03-11 11:27:04,783 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:27:04,784 [main:66] - Generated call from random type = (0.4093069408135003)?.equals(null).not()
2021-03-11 11:27:04,784 [main:63] - replacement of declaringClass != null of type Boolean is (0.4093069408135003)?.equals(null).not()
2021-03-11 11:27:04,875 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:04,875 [main:66] - Compilation checking started
2021-03-11 11:27:05,155 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if ((0.4093069408135003)?.equals(null).not()) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:05,156 [main:56] - replacing ("method: $enclosingMethod", String)
2021-03-11 11:27:05,156 [main:38] - replacing "method: $enclosingMethod" String
2021-03-11 11:27:05,156 [main:42] - Getting value of type String
2021-03-11 11:27:05,247 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:05,248 [main:46] - GENERATED VALUE OF TYPE String = "nmjsn"
2021-03-11 11:27:05,248 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:05,428 [main:55] - randomType = UByte?
2021-03-11 11:27:05,505 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:27:05,553 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@620574ab]
2021-03-11 11:27:05,553 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:27:05,630 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:05,631 [main:66] - Generated call from random type = (92.toUByte())?.toShort().toString(-227902628)
2021-03-11 11:27:05,631 [main:63] - replacement of "method: $enclosingMethod" of type String is (92.toUByte())?.toShort().toString(-227902628)
2021-03-11 11:27:05,709 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:05,709 [main:66] - Compilation checking started
2021-03-11 11:27:05,994 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return (92.toUByte())?.toShort().toString(-227902628)

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:05,995 [main:56] - replacing (enclosingMethod?.getName() != "setL", Boolean)
2021-03-11 11:27:05,995 [main:38] - replacing enclosingMethod?.getName() != "setL" Boolean
2021-03-11 11:27:05,995 [main:42] - Getting value of type Boolean
2021-03-11 11:27:06,095 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:06,096 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:27:06,096 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:06,206 [main:55] - randomType = Char
2021-03-11 11:27:06,289 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:27:06,324 [main:137] - GENERATING call of type public fun kotlin.Char.isWhitespace(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d2ffe0c]
2021-03-11 11:27:06,324 [main:66] - Generated call from random type = ('⌋').isWhitespace()
2021-03-11 11:27:06,325 [main:94] - GETTING Boolean from Any
2021-03-11 11:27:06,330 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:27:06,330 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:06,406 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:27:06,407 [main:105] - GENERATED CALL = (l).equals(null).not()
2021-03-11 11:27:06,407 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:27:06,407 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:06,483 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:06,484 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:27:06,560 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:06,560 [main:105] - GENERATED CALL = (l).equals("iioni").and(false)
2021-03-11 11:27:06,561 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:27:06,561 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:06,638 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:06,638 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:27:06,716 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:06,717 [main:105] - GENERATED CALL = (l).equals("uopyo").or(false)
2021-03-11 11:27:06,717 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:27:06,718 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:06,820 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:06,821 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:27:06,912 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:06,913 [main:105] - GENERATED CALL = (l).equals("uraqk").equals("jiucl")
2021-03-11 11:27:06,913 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:27:06,913 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:06,997 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:06,997 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:27:07,084 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:07,085 [main:105] - GENERATED CALL = (l).equals("zmumg").xor(true)
2021-03-11 11:27:07,085 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]]
2021-03-11 11:27:07,085 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:07,177 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:07,178 [main:105] - GENERATED CALL = (l).equals("lmizu")
2021-03-11 11:27:07,178 [main:63] - replacement of enclosingMethod?.getName() != "setL" of type Boolean is (l).equals("uraqk").equals("jiucl")
2021-03-11 11:27:07,265 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:07,265 [main:66] - Compilation checking started
2021-03-11 11:27:07,515 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if ((l).equals("uraqk").equals("jiucl")) return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:07,516 [main:56] - replacing ("enclosing class: $enclosingClass", String)
2021-03-11 11:27:07,517 [main:38] - replacing "enclosing class: $enclosingClass" String
2021-03-11 11:27:07,517 [main:42] - Getting value of type String
2021-03-11 11:27:07,594 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:07,594 [main:46] - GENERATED VALUE OF TYPE String = "oahvc"
2021-03-11 11:27:07,594 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:07,595 [main:55] - randomType = String
2021-03-11 11:27:07,670 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:07,696 [main:137] - GENERATING call of type public fun kotlin.CharSequence.repeat(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20f36d19]
2021-03-11 11:27:07,775 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:07,776 [main:66] - Generated call from random type = ("rtkqj").repeat(-882849767)
2021-03-11 11:27:07,776 [main:63] - replacement of "enclosing class: $enclosingClass" of type String is ("rtkqj").repeat(-882849767)
2021-03-11 11:27:07,863 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:07,864 [main:66] - Compilation checking started
2021-03-11 11:27:08,091 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return ("rtkqj").repeat(-882849767)

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:08,092 [main:56] - replacing (_l, Any)
2021-03-11 11:27:08,092 [main:38] - replacing _l Any
2021-03-11 11:27:08,092 [main:42] - Getting value of type Any
2021-03-11 11:27:08,171 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:08,171 [main:46] - GENERATED VALUE OF TYPE Any = "pwari"
2021-03-11 11:27:08,171 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:08,561 [main:55] - randomType = MutableMap<ArrayList<Char>, Byte>
2021-03-11 11:27:08,561 [main:94] - GETTING Any from Any
2021-03-11 11:27:08,565 [main:63] - replacement of _l of type Any is l
2021-03-11 11:27:08,645 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 11:27:08,645 [main:66] - Compilation checking started
2021-03-11 11:27:08,858 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:08,859 [main:56] - replacing ("setL", String)
2021-03-11 11:27:08,859 [main:38] - replacing "setL" String
2021-03-11 11:27:08,859 [main:42] - Getting value of type String
2021-03-11 11:27:08,948 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:08,948 [main:46] - GENERATED VALUE OF TYPE String = "wniiu"
2021-03-11 11:27:08,948 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:09,033 [main:55] - randomType = Int
2021-03-11 11:27:09,108 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:09,163 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b17b5ba]
2021-03-11 11:27:09,244 [main:302] - generating value of type = Long true depth = 0
2021-03-11 11:27:09,244 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:27:09,322 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:09,323 [main:66] - Generated call from random type = (438451274).div(-1537406221100090290).toString(-1569326763)
2021-03-11 11:27:09,324 [main:94] - GETTING String from Any
2021-03-11 11:27:09,329 [main:63] - replacement of "setL" of type String is (438451274).div(-1537406221100090290).toString(-1569326763)
2021-03-11 11:27:09,413 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:09,413 [main:66] - Compilation checking started
2021-03-11 11:27:09,665 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != (438451274).div(-1537406221100090290).toString(-1569326763)) return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:09,666 [main:56] - replacing ("setL", String)
2021-03-11 11:27:09,666 [main:38] - replacing "setL" String
2021-03-11 11:27:09,666 [main:42] - Getting value of type String
2021-03-11 11:27:09,745 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:09,745 [main:46] - GENERATED VALUE OF TYPE String = "cuudj"
2021-03-11 11:27:09,746 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:09,826 [main:55] - randomType = Float
2021-03-11 11:27:09,900 [main:302] - generating value of type = Float true depth = 0
2021-03-11 11:27:09,960 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@79dcfb0d]
2021-03-11 11:27:09,961 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]
2021-03-11 11:27:10,044 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:10,045 [main:66] - Generated call from random type = (0.48055118f).toChar().plus("paeth")
2021-03-11 11:27:10,047 [main:94] - GETTING String from Any
2021-03-11 11:27:10,053 [main:63] - replacement of "setL" of type String is (0.48055118f).toChar().plus("paeth")
2021-03-11 11:27:10,140 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:10,140 [main:66] - Compilation checking started
2021-03-11 11:27:10,399 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != (0.48055118f).toChar().plus("paeth")) return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:10,400 [main:56] - replacing (_l, Any)
2021-03-11 11:27:10,400 [main:38] - replacing _l Any
2021-03-11 11:27:10,400 [main:42] - Getting value of type Any
2021-03-11 11:27:10,477 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:10,477 [main:46] - GENERATED VALUE OF TYPE Any = "ullxr"
2021-03-11 11:27:10,477 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:10,559 [main:55] - randomType = Float
2021-03-11 11:27:10,634 [main:302] - generating value of type = Float true depth = 0
2021-03-11 11:27:10,680 [main:94] - GETTING Any from Any
2021-03-11 11:27:10,684 [main:63] - replacement of _l of type Any is l
2021-03-11 11:27:10,759 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 11:27:10,760 [main:66] - Compilation checking started
2021-03-11 11:27:10,963 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:10,964 [main:56] - replacing ("anonymous function has a declaring class: $declaringClass", String)
2021-03-11 11:27:10,964 [main:38] - replacing "anonymous function has a declaring class: $declaringClass" String
2021-03-11 11:27:10,964 [main:42] - Getting value of type String
2021-03-11 11:27:11,050 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:11,050 [main:46] - GENERATED VALUE OF TYPE String = "fyxsy"
2021-03-11 11:27:11,050 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:11,133 [main:55] - randomType = Char
2021-03-11 11:27:11,207 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:27:11,229 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e78f136]
2021-03-11 11:27:11,229 [main:66] - Generated call from random type = ('㩖').uppercase()
2021-03-11 11:27:11,229 [main:63] - replacement of "anonymous function has a declaring class: $declaringClass" of type String is ('㩖').uppercase()
2021-03-11 11:27:11,303 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:11,303 [main:66] - Compilation checking started
2021-03-11 11:27:11,511 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return ('㩖').uppercase()

    return "OK"
}


2021-03-11 11:27:11,512 [main:56] - replacing ({}, Function0<Unit>)
2021-03-11 11:27:11,512 [main:38] - replacing {} Function0<Unit>
2021-03-11 11:27:11,512 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:27:11,592 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:27:11,592 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:27:11,680 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:27:11,683 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:27:11,858 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-11 11:27:11,858 [main:302] - generating value of type = Unit false depth = 5
2021-03-11 11:27:11,970 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:27:11,971 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:27:12,154 [main:302] - generating value of type = Boolean true depth = 8
2021-03-11 11:27:12,155 [main:95] - GENERATED = require(false)
2021-03-11 11:27:12,156 [main:95] - GENERATED = contract({ require(false)})
2021-03-11 11:27:12,156 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { contract({ require(false)})}
2021-03-11 11:27:12,156 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:12,267 [main:55] - randomType = Byte
2021-03-11 11:27:12,356 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:27:12,419 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:27:12,425 [main:63] - replacement of {} of type Function0<Unit> is { contract({ require(false)})}
2021-03-11 11:27:12,518 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:27:12,519 [main:66] - Compilation checking started
2021-03-11 11:27:12,743 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = { contract({ require(false)})}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:12,744 [main:56] - replacing (_l, Any)
2021-03-11 11:27:12,744 [main:38] - replacing _l Any
2021-03-11 11:27:12,744 [main:42] - Getting value of type Any
2021-03-11 11:27:12,823 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:12,824 [main:46] - GENERATED VALUE OF TYPE Any = "vepfn"
2021-03-11 11:27:12,824 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:13,145 [main:55] - randomType = HashMap<UShort, UShort>
2021-03-11 11:27:13,227 [main:302] - generating value of type = HashMap<UShort, UShort> false depth = 0
2021-03-11 11:27:13,325 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(pairs: Pair<UShort, UShort>): HashMap<UShort, UShort> = TODO()
2021-03-11 11:27:13,327 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(pairs: Pair<UShort, UShort>): HashMap<UShort, UShort> = TODO()
2021-03-11 11:27:13,447 [main:302] - generating value of type = Pair<UShort, UShort> false depth = 3
2021-03-11 11:27:13,528 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: UShort, second: UShort): Pair<UShort, UShort> = TODO()
2021-03-11 11:27:13,529 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: UShort, second: UShort): Pair<UShort, UShort> = TODO()
2021-03-11 11:27:13,612 [main:302] - generating value of type = UShort true depth = 6
2021-03-11 11:27:13,612 [main:302] - generating value of type = UShort true depth = 6
2021-03-11 11:27:13,613 [main:95] - GENERATED = Pair<UShort, UShort>(22279.toUShort(), 11043.toUShort())
2021-03-11 11:27:13,613 [main:95] - GENERATED = hashMapOf<UShort, UShort>(Pair<UShort, UShort>(22279.toUShort(), 11043.toUShort()))
2021-03-11 11:27:13,783 [main:94] - GETTING Any from Any
2021-03-11 11:27:13,788 [main:63] - replacement of _l of type Any is l
2021-03-11 11:27:13,868 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 11:27:13,869 [main:66] - Compilation checking started
2021-03-11 11:27:14,072 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:14,073 [main:56] - replacing ("", String)
2021-03-11 11:27:14,073 [main:38] - replacing "" String
2021-03-11 11:27:14,073 [main:42] - Getting value of type String
2021-03-11 11:27:14,148 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:14,148 [main:46] - GENERATED VALUE OF TYPE String = "mcjuz"
2021-03-11 11:27:14,148 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:14,228 [main:55] - randomType = Double
2021-03-11 11:27:14,317 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:27:14,369 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4fd9603f]
2021-03-11 11:27:14,370 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:27:14,444 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:14,445 [main:66] - Generated call from random type = (0.5064500187501247).toInt().toString(-1511352000)
2021-03-11 11:27:14,446 [main:94] - GETTING String from Any
2021-03-11 11:27:14,450 [main:63] - replacement of "" of type String is (0.5064500187501247).toInt().toString(-1511352000)
2021-03-11 11:27:14,523 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:14,523 [main:66] - Compilation checking started
2021-03-11 11:27:14,765 [main:49] - Result = false
Text:
var _l: Any = (0.5064500187501247).toInt().toString(-1511352000)

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:14,767 [main:56] - replacing ("", String)
2021-03-11 11:27:14,767 [main:38] - replacing "" String
2021-03-11 11:27:14,767 [main:42] - Getting value of type String
2021-03-11 11:27:14,855 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:14,855 [main:46] - GENERATED VALUE OF TYPE String = "ydhey"
2021-03-11 11:27:14,856 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:14,939 [main:55] - randomType = Float
2021-03-11 11:27:15,011 [main:302] - generating value of type = Float true depth = 0
2021-03-11 11:27:15,058 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@5b04d06a]
2021-03-11 11:27:15,059 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:27:15,133 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:15,134 [main:66] - Generated call from random type = (0.85099024f).toLong().toString(-1136399639)
2021-03-11 11:27:15,135 [main:94] - GETTING String from Any
2021-03-11 11:27:15,140 [main:63] - replacement of "" of type String is (0.85099024f).toLong().toString(-1136399639)
2021-03-11 11:27:15,214 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:15,215 [main:66] - Compilation checking started
2021-03-11 11:27:15,444 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = (0.85099024f).toLong().toString(-1136399639) // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:15,444 [main:56] - replacing (_l, Any)
2021-03-11 11:27:15,445 [main:38] - replacing _l Any
2021-03-11 11:27:15,445 [main:42] - Getting value of type Any
2021-03-11 11:27:15,532 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:15,532 [main:46] - GENERATED VALUE OF TYPE Any = "wydck"
2021-03-11 11:27:15,532 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:16,032 [main:55] - randomType = LinkedHashMap<Char?, Function1<Byte, UShort>>
2021-03-11 11:27:16,103 [main:302] - generating value of type = LinkedHashMap<Char?, Function1<Byte, UShort>> false depth = 0
2021-03-11 11:27:16,181 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<Char?, Function1<Byte, UShort>>): LkedHashMap<Char?, Function1<Byte, UShort>> = TODO()
2021-03-11 11:27:16,182 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<Char?, Function1<Byte, UShort>>): LkedHashMap<Char?, Function1<Byte, UShort>> = TODO()
2021-03-11 11:27:16,266 [main:302] - generating value of type = Pair<Char?, Function1<Byte, UShort>> false depth = 3
2021-03-11 11:27:16,351 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Char?, second: Function1<Byte, UShort>): Pair<Char?, Function1<Byte, UShort>> = TODO()
2021-03-11 11:27:16,352 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Char?, second: Function1<Byte, UShort>): Pair<Char?, Function1<Byte, UShort>> = TODO()
2021-03-11 11:27:16,459 [main:302] - generating value of type = Char true depth = 6
2021-03-11 11:27:16,459 [main:302] - generating value of type = Function1<Byte, UShort> false depth = 6
2021-03-11 11:27:16,460 [main:302] - generating value of type = UShort true depth = 7
2021-03-11 11:27:16,460 [main:95] - GENERATED = Pair<Char?, Function1<Byte, UShort>>('鈅', {a: Byte -> 30552.toUShort()})
2021-03-11 11:27:16,461 [main:95] - GENERATED = linkedMapOf<Char?, Function1<Byte, UShort>>(Pair<Char?, Function1<Byte, UShort>>('鈅', {a: Byte -> 30552.toUShort()}))
2021-03-11 11:27:16,764 [main:94] - GETTING Any from Any
2021-03-11 11:27:16,769 [main:63] - replacement of _l of type Any is "wydck"
2021-03-11 11:27:16,848 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:27:16,848 [main:66] - Compilation checking started
2021-03-11 11:27:17,070 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        "wydck" = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:17,071 [main:56] - replacing (declaringClass != null, Boolean)
2021-03-11 11:27:17,071 [main:38] - replacing declaringClass != null Boolean
2021-03-11 11:27:17,071 [main:42] - Getting value of type Boolean
2021-03-11 11:27:17,185 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:17,186 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:27:17,186 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:17,187 [main:55] - randomType = String
2021-03-11 11:27:17,267 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:17,319 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:27:17,391 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:17,392 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]
2021-03-11 11:27:17,463 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:17,463 [main:66] - Generated call from random type = ("kotck").compareTo("hvxbm").equals("xbyby")
2021-03-11 11:27:17,464 [main:94] - GETTING Boolean from Any
2021-03-11 11:27:17,468 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:27:17,468 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:17,542 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:17,542 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:27:17,614 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:17,615 [main:105] - GENERATED CALL = (l).equals("nzcbw").xor(false)
2021-03-11 11:27:17,615 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:27:17,615 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:17,686 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:17,687 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:27:17,758 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:17,759 [main:105] - GENERATED CALL = (l).equals("ogfpx").and(true)
2021-03-11 11:27:17,759 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]]
2021-03-11 11:27:17,759 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:17,854 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:17,854 [main:105] - GENERATED CALL = (l).equals("pknib")
2021-03-11 11:27:17,854 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:27:17,855 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:17,956 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:17,957 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:27:18,046 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:18,046 [main:105] - GENERATED CALL = (l).equals("ssnia").equals("wpwcc")
2021-03-11 11:27:18,047 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:27:18,047 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:18,126 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:18,126 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:27:18,126 [main:105] - GENERATED CALL = (l).equals("dtpls").not()
2021-03-11 11:27:18,127 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:27:18,127 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:18,202 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:18,202 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:27:18,276 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:18,277 [main:105] - GENERATED CALL = (l).equals("flehu").or(false)
2021-03-11 11:27:18,277 [main:63] - replacement of declaringClass != null of type Boolean is (l).equals("flehu").or(false)
2021-03-11 11:27:18,376 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:18,376 [main:66] - Compilation checking started
2021-03-11 11:27:18,598 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if ((l).equals("flehu").or(false)) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:18,599 [main:56] - replacing ("enclosing class: $enclosingClass", String)
2021-03-11 11:27:18,599 [main:38] - replacing "enclosing class: $enclosingClass" String
2021-03-11 11:27:18,599 [main:42] - Getting value of type String
2021-03-11 11:27:18,671 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:18,672 [main:46] - GENERATED VALUE OF TYPE String = "hzkpn"
2021-03-11 11:27:18,672 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:18,985 [main:55] - randomType = Function1<UInt?, Int>
2021-03-11 11:27:18,987 [main:94] - GETTING String from Any
2021-03-11 11:27:18,992 [main:63] - replacement of "enclosing class: $enclosingClass" of type String is "hzkpn"
2021-03-11 11:27:19,082 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:19,082 [main:66] - Compilation checking started
2021-03-11 11:27:19,270 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "hzkpn"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:19,271 [main:56] - replacing ("anonymous function has a declaring class: $declaringClass", String)
2021-03-11 11:27:19,271 [main:38] - replacing "anonymous function has a declaring class: $declaringClass" String
2021-03-11 11:27:19,271 [main:42] - Getting value of type String
2021-03-11 11:27:19,343 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:19,344 [main:46] - GENERATED VALUE OF TYPE String = "okuwq"
2021-03-11 11:27:19,344 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:19,422 [main:55] - randomType = Float
2021-03-11 11:27:19,494 [main:302] - generating value of type = Float true depth = 0
2021-03-11 11:27:19,528 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]
2021-03-11 11:27:19,599 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:27:19,599 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:27:19,670 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:19,670 [main:66] - Generated call from random type = (0.97545177f).compareTo(-38).toString(261735776)
2021-03-11 11:27:19,671 [main:94] - GETTING String from Any
2021-03-11 11:27:19,675 [main:63] - replacement of "anonymous function has a declaring class: $declaringClass" of type String is "okuwq"
2021-03-11 11:27:19,760 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:19,760 [main:66] - Compilation checking started
2021-03-11 11:27:19,960 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "okuwq"

    return "OK"
}


2021-03-11 11:27:19,961 [main:56] - replacing ("method: $enclosingMethod", String)
2021-03-11 11:27:19,961 [main:38] - replacing "method: $enclosingMethod" String
2021-03-11 11:27:19,961 [main:42] - Getting value of type String
2021-03-11 11:27:20,048 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:20,048 [main:46] - GENERATED VALUE OF TYPE String = "chnax"
2021-03-11 11:27:20,049 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:20,139 [main:55] - randomType = UInt
2021-03-11 11:27:20,225 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:27:20,275 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2398ea3d]
2021-03-11 11:27:20,357 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:27:20,358 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:27:20,431 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:20,432 [main:66] - Generated call from random type = (1409051479.toUInt()).compareTo(15.toUByte()).toString(-678826134)
2021-03-11 11:27:20,432 [main:94] - GETTING String from Any
2021-03-11 11:27:20,436 [main:63] - replacement of "method: $enclosingMethod" of type String is "chnax"
2021-03-11 11:27:20,509 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:20,510 [main:66] - Compilation checking started
2021-03-11 11:27:20,702 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "chnax"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:20,702 [main:56] - replacing (enclosingMethod?.getName() != "setL", Boolean)
2021-03-11 11:27:20,703 [main:38] - replacing enclosingMethod?.getName() != "setL" Boolean
2021-03-11 11:27:20,703 [main:42] - Getting value of type Boolean
2021-03-11 11:27:20,776 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:20,776 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:27:20,776 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:20,854 [main:55] - randomType = UByte
2021-03-11 11:27:20,924 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:27:20,960 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@5a51f508]
2021-03-11 11:27:21,031 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:21,032 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:27:21,103 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:21,104 [main:66] - Generated call from random type = (69.toUByte()).equals("geffe").or(false)
2021-03-11 11:27:21,105 [main:94] - GETTING Boolean from Any
2021-03-11 11:27:21,109 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:27:21,109 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:21,184 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:21,184 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:27:21,280 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:21,280 [main:105] - GENERATED CALL = (l).equals("boddz").xor(false)
2021-03-11 11:27:21,280 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:27:21,280 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:21,360 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:21,360 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:27:21,439 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:21,439 [main:105] - GENERATED CALL = (l).equals("fvbpo").or(false)
2021-03-11 11:27:21,439 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]]
2021-03-11 11:27:21,439 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:21,516 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:21,517 [main:105] - GENERATED CALL = (l).equals("zpixn")
2021-03-11 11:27:21,517 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:27:21,517 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:21,598 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:21,598 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:27:21,674 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:21,674 [main:105] - GENERATED CALL = (l).equals("mmsml").and(true)
2021-03-11 11:27:21,674 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:27:21,675 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:21,750 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:21,751 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:27:21,825 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:21,825 [main:105] - GENERATED CALL = (l).equals("fslql").equals("wvhjc")
2021-03-11 11:27:21,826 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:27:21,826 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:21,898 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:21,899 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:27:21,899 [main:105] - GENERATED CALL = (l).equals("icnwi").not()
2021-03-11 11:27:21,899 [main:63] - replacement of enclosingMethod?.getName() != "setL" of type Boolean is (l).equals("boddz").xor(false)
2021-03-11 11:27:22,000 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:22,001 [main:66] - Compilation checking started
2021-03-11 11:27:22,207 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if ((l).equals("boddz").xor(false)) return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:22,208 [main:56] - replacing ("method: $enclosingMethod", String)
2021-03-11 11:27:22,209 [main:38] - replacing "method: $enclosingMethod" String
2021-03-11 11:27:22,209 [main:42] - Getting value of type String
2021-03-11 11:27:22,283 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:22,283 [main:46] - GENERATED VALUE OF TYPE String = "olvpg"
2021-03-11 11:27:22,283 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:22,438 [main:55] - randomType = Int?
2021-03-11 11:27:22,509 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:22,559 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@568bac83]
2021-03-11 11:27:22,559 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:27:22,632 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:22,632 [main:66] - Generated call from random type = (-1149384365)?.toShort().toString(182369387)
2021-03-11 11:27:22,632 [main:63] - replacement of "method: $enclosingMethod" of type String is (-1149384365)?.toShort().toString(182369387)
2021-03-11 11:27:22,715 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:22,715 [main:66] - Compilation checking started
2021-03-11 11:27:22,927 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return (-1149384365)?.toShort().toString(182369387)

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:22,928 [main:56] - replacing ("anonymous function has a declaring class: $declaringClass", String)
2021-03-11 11:27:22,928 [main:38] - replacing "anonymous function has a declaring class: $declaringClass" String
2021-03-11 11:27:22,928 [main:42] - Getting value of type String
2021-03-11 11:27:23,003 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:23,003 [main:46] - GENERATED VALUE OF TYPE String = "ymohq"
2021-03-11 11:27:23,003 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:23,083 [main:55] - randomType = Int
2021-03-11 11:27:23,154 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:23,197 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1a8f644c]
2021-03-11 11:27:23,198 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:27:23,271 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:23,272 [main:66] - Generated call from random type = (2950241).toLong().toString(1578490553)
2021-03-11 11:27:23,273 [main:94] - GETTING String from Any
2021-03-11 11:27:23,276 [main:63] - replacement of "anonymous function has a declaring class: $declaringClass" of type String is (2950241).toLong().toString(1578490553)
2021-03-11 11:27:23,350 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:23,350 [main:66] - Compilation checking started
2021-03-11 11:27:23,562 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return (2950241).toLong().toString(1578490553)

    return "OK"
}


2021-03-11 11:27:23,563 [main:56] - replacing (l, Any)
2021-03-11 11:27:23,563 [main:38] - replacing l Any
2021-03-11 11:27:23,563 [main:42] - Getting value of type Any
2021-03-11 11:27:23,643 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:23,643 [main:46] - GENERATED VALUE OF TYPE Any = "ykpxe"
2021-03-11 11:27:23,643 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:24,005 [main:55] - randomType = Function2<Long, Short, Long>
2021-03-11 11:27:24,005 [main:94] - GETTING Any from Any
2021-03-11 11:27:24,011 [main:63] - replacement of l of type Any is "ykpxe"
2021-03-11 11:27:24,092 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:27:24,093 [main:66] - Compilation checking started
2021-03-11 11:27:24,285 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
"ykpxe" = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:24,286 [main:56] - replacing ({}, Function0<Unit>)
2021-03-11 11:27:24,286 [main:38] - replacing {} Function0<Unit>
2021-03-11 11:27:24,286 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:27:24,375 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:27:24,376 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:27:24,454 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:27:24,455 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:27:24,615 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:27:24,616 [main:95] - GENERATED = print("clqzt")
2021-03-11 11:27:24,616 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { print("clqzt")}
2021-03-11 11:27:24,616 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:24,707 [main:55] - randomType = Long
2021-03-11 11:27:24,781 [main:302] - generating value of type = Long true depth = 0
2021-03-11 11:27:24,824 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:27:24,828 [main:63] - replacement of {} of type Function0<Unit> is { print("clqzt")}
2021-03-11 11:27:24,902 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:27:24,902 [main:66] - Compilation checking started
2021-03-11 11:27:25,099 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = { print("clqzt")}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:25,100 [main:56] - replacing (enclosingMethod?.getName() != "setL", Boolean)
2021-03-11 11:27:25,101 [main:38] - replacing enclosingMethod?.getName() != "setL" Boolean
2021-03-11 11:27:25,101 [main:42] - Getting value of type Boolean
2021-03-11 11:27:25,206 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:25,206 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:27:25,206 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:25,288 [main:55] - randomType = Long
2021-03-11 11:27:25,364 [main:302] - generating value of type = Long true depth = 0
2021-03-11 11:27:25,406 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4fd9603f]
2021-03-11 11:27:25,407 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]
2021-03-11 11:27:25,480 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:25,480 [main:66] - Generated call from random type = (-7622917266885786873).toInt().equals("ljfda")
2021-03-11 11:27:25,481 [main:94] - GETTING Boolean from Any
2021-03-11 11:27:25,486 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:27:25,486 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:25,559 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:25,559 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:27:25,633 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:25,633 [main:105] - GENERATED CALL = (l).equals("vplll").equals("heisr")
2021-03-11 11:27:25,633 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:27:25,633 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:25,714 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:25,715 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:27:25,797 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:25,798 [main:105] - GENERATED CALL = (l).equals("yatfb").xor(false)
2021-03-11 11:27:25,798 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]]
2021-03-11 11:27:25,798 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:25,879 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:25,880 [main:105] - GENERATED CALL = (l).equals("kstxa")
2021-03-11 11:27:25,880 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:27:25,880 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:25,987 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:25,987 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:27:26,078 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:26,079 [main:105] - GENERATED CALL = (l).equals("ijiba").and(false)
2021-03-11 11:27:26,079 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:27:26,079 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:26,165 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:26,165 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:27:26,165 [main:105] - GENERATED CALL = (l).equals("fcers").not()
2021-03-11 11:27:26,166 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:27:26,166 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:26,242 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:27:26,314 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:26,314 [main:105] - GENERATED CALL = (l).equals(null).or(false)
2021-03-11 11:27:26,314 [main:63] - replacement of enclosingMethod?.getName() != "setL" of type Boolean is (l).equals(null).or(false)
2021-03-11 11:27:26,387 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:26,387 [main:66] - Compilation checking started
2021-03-11 11:27:26,563 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if ((l).equals(null).or(false)) return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:26,564 [main:56] - replacing ("OK", String)
2021-03-11 11:27:26,564 [main:38] - replacing "OK" String
2021-03-11 11:27:26,564 [main:42] - Getting value of type String
2021-03-11 11:27:26,638 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:26,638 [main:46] - GENERATED VALUE OF TYPE String = "mdiur"
2021-03-11 11:27:26,638 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:26,809 [main:55] - randomType = ArrayDeque<ULong>
2021-03-11 11:27:26,880 [main:302] - generating value of type = ArrayDeque<ULong> false depth = 0
2021-03-11 11:27:26,955 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<ULong>): ArrayDeque<ULong> = TODO()
2021-03-11 11:27:26,956 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<ULong>): ArrayDeque<ULong> = TODO()
2021-03-11 11:27:27,118 [main:302] - generating value of type = Collection<ULong> false depth = 3
2021-03-11 11:27:27,195 [main:43] - GENERATING CALL OF fun <T> listOfNotNull(elements: ULong): Collection<ULong> = TODO()
2021-03-11 11:27:27,196 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOfNotNull(elements: ULong): Collection<ULong> = TODO()
2021-03-11 11:27:27,274 [main:302] - generating value of type = ULong true depth = 6
2021-03-11 11:27:27,274 [main:95] - GENERATED = listOfNotNull<ULong>(3313514899766692200.toULong())
2021-03-11 11:27:27,275 [main:95] - GENERATED = ArrayDeque<ULong>(listOfNotNull<ULong>(3313514899766692200.toULong()))
2021-03-11 11:27:27,451 [main:137] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.ArrayDeque[DeserializedSimpleFunctionDescriptor@24a3d744]
2021-03-11 11:27:27,451 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@726ff63d]
2021-03-11 11:27:27,451 [main:66] - Generated call from random type = (ArrayDeque<ULong>(listOfNotNull<ULong>(3313514899766692200.toULong()))).toArray().contentDeepToString()
2021-03-11 11:27:27,451 [main:63] - replacement of "OK" of type String is (ArrayDeque<ULong>(listOfNotNull<ULong>(3313514899766692200.toULong()))).toArray().contentDeepToString()
2021-03-11 11:27:27,536 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:27,537 [main:66] - Compilation checking started
2021-03-11 11:27:27,842 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return (ArrayDeque<ULong>(listOfNotNull<ULong>(3313514899766692200.toULong()))).toArray().contentDeepToString()
}


2021-03-11 11:27:27,844 [main:56] - replacing ({}, Function0<Unit>)
2021-03-11 11:27:27,844 [main:38] - replacing {} Function0<Unit>
2021-03-11 11:27:27,844 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:27:27,932 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:27:27,932 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:27:28,014 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:27:28,015 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:27:28,184 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:27:28,185 [main:95] - GENERATED = println("khvhi")
2021-03-11 11:27:28,185 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { println("khvhi")}
2021-03-11 11:27:28,185 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:28,263 [main:55] - randomType = Char
2021-03-11 11:27:28,334 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:27:28,363 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:27:28,367 [main:63] - replacement of {} of type Function0<Unit> is { println("khvhi")}
2021-03-11 11:27:28,439 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:27:28,439 [main:66] - Compilation checking started
2021-03-11 11:27:28,664 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = { println("khvhi")}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:28,665 [main:56] - replacing ("enclosing class: $enclosingClass", String)
2021-03-11 11:27:28,665 [main:38] - replacing "enclosing class: $enclosingClass" String
2021-03-11 11:27:28,665 [main:42] - Getting value of type String
2021-03-11 11:27:28,756 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:28,756 [main:46] - GENERATED VALUE OF TYPE String = "ckjli"
2021-03-11 11:27:28,757 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:28,757 [main:55] - randomType = String
2021-03-11 11:27:28,852 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:28,880 [main:137] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a3a113f]
2021-03-11 11:27:28,955 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:27:29,026 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:29,097 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:29,097 [main:66] - Generated call from random type = ("bcpkl").replaceBefore('筲', "abnux", "pmdzx")
2021-03-11 11:27:29,098 [main:94] - GETTING String from Any
2021-03-11 11:27:29,102 [main:63] - replacement of "enclosing class: $enclosingClass" of type String is "ckjli"
2021-03-11 11:27:29,172 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:29,172 [main:66] - Compilation checking started
2021-03-11 11:27:29,346 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "ckjli"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:29,347 [main:56] - replacing ({}, Function0<Unit>)
2021-03-11 11:27:29,347 [main:38] - replacing {} Function0<Unit>
2021-03-11 11:27:29,347 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:27:29,431 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:27:29,431 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:27:29,517 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:27:29,518 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:27:29,679 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:27:29,679 [main:95] - GENERATED = print("vrxde")
2021-03-11 11:27:29,679 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { print("vrxde")}
2021-03-11 11:27:29,680 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:29,786 [main:55] - randomType = Int
2021-03-11 11:27:29,882 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:29,944 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:27:29,948 [main:63] - replacement of {} of type Function0<Unit> is { print("vrxde")}
2021-03-11 11:27:30,019 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:27:30,019 [main:66] - Compilation checking started
2021-03-11 11:27:30,240 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = { print("vrxde")}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:30,241 [main:56] - replacing (_l, Any)
2021-03-11 11:27:30,241 [main:38] - replacing _l Any
2021-03-11 11:27:30,241 [main:42] - Getting value of type Any
2021-03-11 11:27:30,312 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:30,313 [main:46] - GENERATED VALUE OF TYPE Any = "lgrvp"
2021-03-11 11:27:30,313 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:30,497 [main:55] - randomType = UByte?
2021-03-11 11:27:30,574 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:27:30,612 [main:94] - GETTING Any from Any
2021-03-11 11:27:30,615 [main:63] - replacement of _l of type Any is "lgrvp"
2021-03-11 11:27:30,685 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:27:30,685 [main:66] - Compilation checking started
2021-03-11 11:27:30,857 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        "lgrvp" = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:30,858 [main:56] - replacing ("", String)
2021-03-11 11:27:30,858 [main:38] - replacing "" String
2021-03-11 11:27:30,858 [main:42] - Getting value of type String
2021-03-11 11:27:30,927 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:30,928 [main:46] - GENERATED VALUE OF TYPE String = "twmnt"
2021-03-11 11:27:30,929 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:31,158 [main:55] - randomType = LinkedHashSet<Double?>
2021-03-11 11:27:31,228 [main:302] - generating value of type = LinkedHashSet<Double?> false depth = 0
2021-03-11 11:27:31,305 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): LkedHashSet<Double?> = TODO()
2021-03-11 11:27:31,306 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): LkedHashSet<Double?> = TODO()
2021-03-11 11:27:31,403 [main:95] - GENERATED = linkedSetOf<Double?>()
2021-03-11 11:27:31,581 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:27:31,655 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:31,655 [main:66] - Generated call from random type = (linkedSetOf<Double?>()).size.toString(-1239830877)
2021-03-11 11:27:31,655 [main:63] - replacement of "" of type String is (linkedSetOf<Double?>()).size.toString(-1239830877)
2021-03-11 11:27:31,725 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:31,725 [main:66] - Compilation checking started
2021-03-11 11:27:31,958 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = (linkedSetOf<Double?>()).size.toString(-1239830877) // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:31,959 [main:56] - replacing (_l, Any)
2021-03-11 11:27:31,959 [main:38] - replacing _l Any
2021-03-11 11:27:31,959 [main:42] - Getting value of type Any
2021-03-11 11:27:32,033 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:32,033 [main:46] - GENERATED VALUE OF TYPE Any = "zqkye"
2021-03-11 11:27:32,033 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:32,112 [main:55] - randomType = String?
2021-03-11 11:27:32,184 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:32,206 [main:94] - GETTING Any from Any
2021-03-11 11:27:32,208 [main:63] - replacement of _l of type Any is "zqkye"
2021-03-11 11:27:32,278 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:27:32,278 [main:66] - Compilation checking started
2021-03-11 11:27:32,471 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = "zqkye"
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:32,471 [main:56] - replacing ("LambdaInPropertySetterKt", String)
2021-03-11 11:27:32,471 [main:38] - replacing "LambdaInPropertySetterKt" String
2021-03-11 11:27:32,471 [main:42] - Getting value of type String
2021-03-11 11:27:32,543 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:32,544 [main:46] - GENERATED VALUE OF TYPE String = "ugqvl"
2021-03-11 11:27:32,544 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:32,544 [main:55] - randomType = String
2021-03-11 11:27:32,615 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:32,636 [main:137] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]
2021-03-11 11:27:32,706 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:27:32,706 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:27:32,707 [main:66] - Generated call from random type = ("drbok").takeWhile({a: Char -> true})
2021-03-11 11:27:32,708 [main:94] - GETTING String from Any
2021-03-11 11:27:32,712 [main:63] - replacement of "LambdaInPropertySetterKt" of type String is ("drbok").takeWhile({a: Char -> true})
2021-03-11 11:27:32,782 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:32,782 [main:66] - Compilation checking started
2021-03-11 11:27:32,982 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != ("drbok").takeWhile({a: Char -> true})) return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:32,983 [main:56] - replacing ({}, Function0<Unit>)
2021-03-11 11:27:32,983 [main:38] - replacing {} Function0<Unit>
2021-03-11 11:27:32,983 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:27:33,060 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:27:33,061 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:27:33,147 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:27:33,148 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:27:33,298 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:27:33,299 [main:95] - GENERATED = require(false)
2021-03-11 11:27:33,299 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { require(false)}
2021-03-11 11:27:33,299 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:33,390 [main:55] - randomType = UByte
2021-03-11 11:27:33,462 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:27:33,500 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:27:33,505 [main:63] - replacement of {} of type Function0<Unit> is { require(false)}
2021-03-11 11:27:33,577 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:27:33,578 [main:66] - Compilation checking started
2021-03-11 11:27:33,767 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = { require(false)}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:33,767 [main:56] - replacing (enclosingClass != "LambdaInPropertySetterKt", Boolean)
2021-03-11 11:27:33,768 [main:38] - replacing enclosingClass != "LambdaInPropertySetterKt" Boolean
2021-03-11 11:27:33,768 [main:42] - Getting value of type Boolean
2021-03-11 11:27:33,839 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:33,839 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:27:33,839 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:33,918 [main:55] - randomType = Short
2021-03-11 11:27:33,987 [main:302] - generating value of type = Short true depth = 0
2021-03-11 11:27:34,021 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1944391c]
2021-03-11 11:27:34,021 [main:137] - GENERATING call of type public fun kotlin.Char.isHighSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4648ebe2]
2021-03-11 11:27:34,021 [main:66] - Generated call from random type = (5874).toChar().isHighSurrogate()
2021-03-11 11:27:34,022 [main:94] - GETTING Boolean from Any
2021-03-11 11:27:34,025 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:27:34,025 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:34,095 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:34,095 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:27:34,165 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:34,166 [main:105] - GENERATED CALL = (l).equals("rltpr").and(false)
2021-03-11 11:27:34,166 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:27:34,166 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:34,235 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:34,236 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:27:34,236 [main:105] - GENERATED CALL = (l).equals("iwusq").not()
2021-03-11 11:27:34,236 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:27:34,236 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:34,307 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:34,307 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:27:34,395 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:34,396 [main:105] - GENERATED CALL = (l).equals("bxzgr").equals("ixfid")
2021-03-11 11:27:34,396 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]]
2021-03-11 11:27:34,396 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:34,467 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:34,467 [main:105] - GENERATED CALL = (l).equals("cxmir")
2021-03-11 11:27:34,468 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:27:34,468 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:34,540 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:34,540 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:27:34,614 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:34,614 [main:105] - GENERATED CALL = (l).equals("zovfg").or(true)
2021-03-11 11:27:34,615 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:27:34,615 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:27:34,688 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:27:34,688 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:27:34,758 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:34,759 [main:105] - GENERATED CALL = (l).equals("fytdn").xor(false)
2021-03-11 11:27:34,759 [main:63] - replacement of enclosingClass != "LambdaInPropertySetterKt" of type Boolean is (l).equals("zovfg").or(true)
2021-03-11 11:27:34,828 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:34,828 [main:66] - Compilation checking started
2021-03-11 11:27:35,003 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if ((l).equals("zovfg").or(true)) return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:35,004 [main:56] - replacing ("LambdaInPropertySetterKt", String)
2021-03-11 11:27:35,004 [main:38] - replacing "LambdaInPropertySetterKt" String
2021-03-11 11:27:35,004 [main:42] - Getting value of type String
2021-03-11 11:27:35,102 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:35,102 [main:46] - GENERATED VALUE OF TYPE String = "uaxeq"
2021-03-11 11:27:35,102 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:35,183 [main:55] - randomType = Short
2021-03-11 11:27:35,252 [main:302] - generating value of type = Short true depth = 0
2021-03-11 11:27:35,283 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1944391c]
2021-03-11 11:27:35,284 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]
2021-03-11 11:27:35,371 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:35,371 [main:66] - Generated call from random type = (-32722).toChar().plus("pwjdc")
2021-03-11 11:27:35,372 [main:94] - GETTING String from Any
2021-03-11 11:27:35,376 [main:63] - replacement of "LambdaInPropertySetterKt" of type String is (-32722).toChar().plus("pwjdc")
2021-03-11 11:27:35,447 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:35,448 [main:66] - Compilation checking started
2021-03-11 11:27:35,653 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != (-32722).toChar().plus("pwjdc")) return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:35,653 [main:56] - replacing (declaringClass != null, Boolean)
2021-03-11 11:27:35,653 [main:38] - replacing declaringClass != null Boolean
2021-03-11 11:27:35,654 [main:42] - Getting value of type Boolean
2021-03-11 11:27:35,727 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:27:35,727 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:27:35,727 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:35,880 [main:55] - randomType = Float?
2021-03-11 11:27:35,948 [main:302] - generating value of type = Float true depth = 0
2021-03-11 11:27:35,983 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@79dcfb0d]
2021-03-11 11:27:35,983 [main:137] - GENERATING call of type public fun kotlin.Char.isHighSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4648ebe2]
2021-03-11 11:27:35,983 [main:66] - Generated call from random type = (0.81173587f)?.toChar().isHighSurrogate()
2021-03-11 11:27:35,983 [main:63] - replacement of declaringClass != null of type Boolean is (0.81173587f)?.toChar().isHighSurrogate()
2021-03-11 11:27:36,055 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:36,056 [main:66] - Compilation checking started
2021-03-11 11:27:36,247 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if ((0.81173587f)?.toChar().isHighSurrogate()) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:36,248 [main:56] - replacing ("", String)
2021-03-11 11:27:36,248 [main:38] - replacing "" String
2021-03-11 11:27:36,248 [main:42] - Getting value of type String
2021-03-11 11:27:36,318 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:36,318 [main:46] - GENERATED VALUE OF TYPE String = "aduke"
2021-03-11 11:27:36,318 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:36,485 [main:55] - randomType = UInt?
2021-03-11 11:27:36,565 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:27:36,606 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@20c204e9]
2021-03-11 11:27:36,677 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:27:36,677 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:27:36,746 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:36,747 [main:66] - Generated call from random type = (1590953926.toUInt())?.compareTo(78.toUByte()).toString(198116268)
2021-03-11 11:27:36,748 [main:94] - GETTING String from Any
2021-03-11 11:27:36,754 [main:63] - replacement of "" of type String is "aduke"
2021-03-11 11:27:36,824 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:36,824 [main:66] - Compilation checking started
2021-03-11 11:27:37,000 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
l = "aduke" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}


2021-03-11 11:27:37,091 [main:46] - AFTER TRY 0 res = var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}
2021-03-11 11:27:37,368 [main:48] - Try №0
2021-03-11 11:27:38,427 [main:71] - Trying to insert fun box432(): String =
        Kla1().Kla2().callback()
2021-03-11 11:27:38,530 [main:66] - Compilation checking started
2021-03-11 11:27:39,053 [main:99] - Trying to change 9 nodes
2021-03-11 11:27:39,053 [main:103] - replacing ("OK", String)
2021-03-11 11:27:39,053 [main:38] - replacing "OK" String
2021-03-11 11:27:39,053 [main:42] - Getting value of type String
2021-03-11 11:27:39,157 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:39,157 [main:46] - GENERATED VALUE OF TYPE String = "lyrno"
2021-03-11 11:27:39,158 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:39,424 [main:55] - randomType = Set<Float?>
2021-03-11 11:27:39,426 [main:94] - GETTING String from Any
2021-03-11 11:27:39,431 [main:110] - replacement of "OK" of type String is "lyrno"
2021-03-11 11:27:39,508 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 11:27:39,508 [main:66] - Compilation checking started
2021-03-11 11:27:39,863 [main:53] - Result = true
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ prope0 })
    }
}

fun box432(): String =
        Kla1().Kla2().callback()


2021-03-11 11:27:39,864 [main:103] - replacing (callback(), String)
2021-03-11 11:27:39,864 [main:38] - replacing callback() String
2021-03-11 11:27:39,864 [main:42] - Getting value of type String
2021-03-11 11:27:39,947 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:39,947 [main:46] - GENERATED VALUE OF TYPE String = "hekfi"
2021-03-11 11:27:39,947 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:40,441 [main:55] - randomType = Map<UByte, Function2<Double, Array<Kla1>, Long>>
2021-03-11 11:27:40,442 [main:94] - GETTING String from Any
2021-03-11 11:27:40,445 [main:110] - replacement of callback() of type String is "hekfi"
2021-03-11 11:27:40,542 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:27:40,542 [main:66] - Compilation checking started
2021-03-11 11:27:40,712 [main:49] - Result = false
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ prope0 })
    }
}

fun box432(): String =
        Kla1().Kla2()."hekfi"


2021-03-11 11:27:40,713 [main:103] - replacing (Kla1().Kla2(), Kla2)
2021-03-11 11:27:40,713 [main:38] - replacing Kla1().Kla2() Kla2
2021-03-11 11:27:40,713 [main:42] - Getting value of type Kla2
2021-03-11 11:27:40,789 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 11:27:40,790 [main:112] - generating klass Kla2 text = inner class Kla2 : Kla0 {
        constructor() : super({ prope0 })
    }
2021-03-11 11:27:40,790 [main:46] - GENERATED VALUE OF TYPE Kla2 = 
2021-03-11 11:27:40,791 [main:55] - randomType = Kla0
2021-03-11 11:27:40,874 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 11:27:40,875 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:27:40,959 [main:194] - Type params = []
2021-03-11 11:27:41,039 [main:302] - generating value of type = Function0<String> false depth = 2
2021-03-11 11:27:41,039 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:27:41,050 [main:94] - GETTING Kla2 from Any
2021-03-11 11:27:41,055 [main:107] - Cant find and generate replacement for Kla1().Kla2() type Kla2
2021-03-11 11:27:41,055 [main:103] - replacing (Kla1().Kla2().callback(), String)
2021-03-11 11:27:41,055 [main:38] - replacing Kla1().Kla2().callback() String
2021-03-11 11:27:41,055 [main:42] - Getting value of type String
2021-03-11 11:27:41,133 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:27:41,133 [main:46] - GENERATED VALUE OF TYPE String = "xqueg"
2021-03-11 11:27:41,134 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:41,219 [main:55] - randomType = ULong
2021-03-11 11:27:41,316 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:27:41,382 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@14fcc96b]
2021-03-11 11:27:41,382 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:27:41,481 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:27:41,481 [main:66] - Generated call from random type = (6516632970651683513.toULong()).toUByte().toString(-593387985)
2021-03-11 11:27:41,481 [main:110] - replacement of Kla1().Kla2().callback() of type String is (6516632970651683513.toULong()).toUByte().toString(-593387985)
2021-03-11 11:27:41,556 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:27:41,556 [main:66] - Compilation checking started
2021-03-11 11:27:41,994 [main:53] - Result = true
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ prope0 })
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)


2021-03-11 11:27:41,994 [main:103] - replacing ({ prope0 }, Function0<String>)
2021-03-11 11:27:41,994 [main:38] - replacing { prope0 } Function0<String>
2021-03-11 11:27:41,994 [main:42] - Getting value of type Function0<String>
2021-03-11 11:27:42,083 [main:302] - generating value of type = Function0<String> false depth = 0
2021-03-11 11:27:42,084 [main:302] - generating value of type = String true depth = 1
2021-03-11 11:27:42,084 [main:46] - GENERATED VALUE OF TYPE Function0<String> = { "wuhns"}
2021-03-11 11:27:42,084 [main:49] - GENERATED IS CALL =false
2021-03-11 11:27:42,436 [main:55] - randomType = Array<Map<Kla0, Float>>
2021-03-11 11:27:42,518 [main:302] - generating value of type = Array<Map<Kla0, Float>> false depth = 0
2021-03-11 11:27:42,617 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Map<Kla0, Float>> = TODO()
2021-03-11 11:27:42,618 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Map<Kla0, Float>> = TODO()
2021-03-11 11:27:42,700 [main:95] - GENERATED = enumValues<Map<Kla0, Float>>()
2021-03-11 11:27:42,722 [main:94] - GETTING Function0<String> from Any
2021-03-11 11:27:42,726 [main:110] - replacement of { prope0 } of type Function0<String> is { "wuhns"}
2021-03-11 11:27:42,804 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:27:42,804 [main:66] - Compilation checking started
2021-03-11 11:27:43,113 [main:53] - Result = true
Text:
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)


2021-03-11 11:27:43,194 [main:137] - TRYING TO REPLACE CONSTANT 6516632970651683513
2021-03-11 11:27:43,272 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 11:27:43,272 [main:66] - Compilation checking started
2021-03-11 11:27:43,626 [main:137] - TRYING TO REPLACE CONSTANT 593387985
2021-03-11 11:27:43,728 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 11:27:43,728 [main:66] - Compilation checking started
2021-03-11 11:27:44,080 [main:46] - AFTER TRY 1 res = var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)


2021-03-11 11:27:44,234 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:27:44,309 [main:194] - Type params = []
2021-03-11 11:27:44,384 [main:302] - generating value of type = Function0<String> false depth = 1
2021-03-11 11:27:44,385 [main:302] - generating value of type = String true depth = 2
2021-03-11 11:27:44,385 [main:112] - generating klass Kla1 text = class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}
2021-03-11 11:27:44,386 [main:112] - generating klass Kla2 text = inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
2021-03-11 11:27:44,542 [main:48] - Try №1
2021-03-11 11:27:55,680 [main:48] - Already checked
2021-03-11 11:27:59,721 [main:71] - Trying to insert abstract fun fu4(exception: Throwable)
2021-03-11 11:27:59,861 [main:66] - Compilation checking started
2021-03-11 11:28:00,990 [main:99] - Trying to change 281 nodes
2021-03-11 11:28:00,991 [main:103] - replacing (COROUTINE_SUSPENDED, Any)
2021-03-11 11:28:00,991 [main:38] - replacing COROUTINE_SUSPENDED Any
2021-03-11 11:28:00,991 [main:42] - Getting value of type Any
2021-03-11 11:28:01,155 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:01,155 [main:46] - GENERATED VALUE OF TYPE Any = "rwvui"
2021-03-11 11:28:01,155 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:01,349 [main:55] - randomType = Kla9
2021-03-11 11:28:01,488 [main:302] - generating value of type = Kla9 false depth = 0
2021-03-11 11:28:01,494 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}
2021-03-11 11:28:01,521 [main:94] - GETTING Any from ULong
2021-03-11 11:28:01,557 [main:110] - replacement of COROUTINE_SUSPENDED of type Any is "rwvui"
2021-03-11 11:28:01,698 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:28:01,698 [main:66] - Compilation checking started
2021-03-11 11:28:02,482 [main:53] - Result = true
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:02,487 [main:103] - replacing (true, Boolean)
2021-03-11 11:28:02,489 [main:38] - replacing true Boolean
2021-03-11 11:28:02,489 [main:42] - Getting value of type Boolean
2021-03-11 11:28:02,656 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:02,661 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:28:02,661 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:03,075 [main:55] - randomType = LinkedHashSet<Long>
2021-03-11 11:28:03,220 [main:302] - generating value of type = LinkedHashSet<Long> false depth = 0
2021-03-11 11:28:03,415 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Long): LkedHashSet<Long> = TODO()
2021-03-11 11:28:03,423 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Long): LkedHashSet<Long> = TODO()
2021-03-11 11:28:03,578 [main:302] - generating value of type = Long true depth = 3
2021-03-11 11:28:03,583 [main:95] - GENERATED = linkedSetOf<Long>(160623468033343450)
2021-03-11 11:28:03,740 [main:137] - GENERATING call of type public open fun contains(element: kotlin.Long): kotlin.Boolean defined in kotlin.collections.AbstractCollection[DeserializedSimpleFunctionDescriptor@7cb7e139]
2021-03-11 11:28:03,881 [main:302] - generating value of type = Long true depth = 0
2021-03-11 11:28:03,886 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:28:04,046 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:04,054 [main:66] - Generated call from random type = (linkedSetOf<Long>(160623468033343450)).contains(-3344412476052325876).and(true)
2021-03-11 11:28:04,055 [main:94] - GETTING Boolean from ULong
2021-03-11 11:28:04,109 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]]
2021-03-11 11:28:04,109 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:28:04,109 [main:137] - GENERATING call of type public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]
2021-03-11 11:28:04,109 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().isNaN()
2021-03-11 11:28:04,109 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:28:04,109 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:28:04,295 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:04,295 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:28:04,481 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:04,487 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("ivtdi").or(true)
2021-03-11 11:28:04,487 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:28:04,487 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:28:04,726 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:04,727 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:28:04,727 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("exppf").not()
2021-03-11 11:28:04,727 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]]
2021-03-11 11:28:04,727 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:28:04,727 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]
2021-03-11 11:28:04,728 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().isFinite()
2021-03-11 11:28:04,728 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]]
2021-03-11 11:28:04,728 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:28:04,728 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:28:04,950 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:04,951 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().equals("hsbdj")
2021-03-11 11:28:04,951 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]]
2021-03-11 11:28:04,951 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:28:05,181 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:05,182 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("mbpdv")
2021-03-11 11:28:05,182 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:28:05,182 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:28:05,376 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:28:05,550 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:05,557 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals(null).xor(true)
2021-03-11 11:28:05,557 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:28:05,557 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:28:05,762 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:05,762 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:28:06,005 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:06,006 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("ttgrg").equals("aukgr")
2021-03-11 11:28:06,006 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]]
2021-03-11 11:28:06,006 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:28:06,006 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]
2021-03-11 11:28:06,208 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:06,208 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().equals("ctsut")
2021-03-11 11:28:06,209 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]]
2021-03-11 11:28:06,209 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:28:06,209 [main:137] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]
2021-03-11 11:28:06,209 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().isInfinite()
2021-03-11 11:28:06,209 [main:110] - replacement of true of type Boolean is ((6516632970651683513.toULong())).toUByte().equals("hsbdj")
2021-03-11 11:28:06,369 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:06,370 [main:66] - Compilation checking started
2021-03-11 11:28:06,881 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == ((6516632970651683513.toULong())).toUByte().equals("hsbdj") }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:06,884 [main:103] - replacing (1, Int)
2021-03-11 11:28:06,884 [main:38] - replacing 1 Int
2021-03-11 11:28:06,884 [main:42] - Getting value of type Int
2021-03-11 11:28:07,032 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:07,040 [main:46] - GENERATED VALUE OF TYPE Int = 1297266565
2021-03-11 11:28:07,040 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:07,442 [main:55] - randomType = Kla9?
2021-03-11 11:28:07,608 [main:302] - generating value of type = Kla9 false depth = 0
2021-03-11 11:28:07,614 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}
2021-03-11 11:28:07,644 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla9[DeserializedSimpleFunctionDescriptor@7cb3d4f6]
2021-03-11 11:28:07,798 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:07,799 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:28:07,938 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:07,944 [main:66] - Generated call from random type = (Kla9)?.equals("rudwt").compareTo(true)
2021-03-11 11:28:07,944 [main:110] - replacement of 1 of type Int is (Kla9)?.equals("rudwt").compareTo(true)
2021-03-11 11:28:08,145 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:08,145 [main:66] - Compilation checking started
2021-03-11 11:28:08,640 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = (Kla9)?.equals("rudwt").compareTo(true),
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:08,643 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7, Int)
2021-03-11 11:28:08,643 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 Int
2021-03-11 11:28:08,643 [main:42] - Getting value of type Int
2021-03-11 11:28:08,792 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:08,800 [main:46] - GENERATED VALUE OF TYPE Int = 1032723323
2021-03-11 11:28:08,800 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:08,812 [main:55] - randomType = String
2021-03-11 11:28:08,968 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:09,009 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:28:09,167 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:09,176 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:28:09,176 [main:66] - Generated call from random type = ("uuqtp").compareTo("ypplp").countTrailingZeroBits()
2021-03-11 11:28:09,178 [main:94] - GETTING Int from UByte
2021-03-11 11:28:09,234 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]]
2021-03-11 11:28:09,234 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:28:09,234 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]
2021-03-11 11:28:09,394 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:09,402 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().compareTo(-93)
2021-03-11 11:28:09,402 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@535dafcd]]
2021-03-11 11:28:09,402 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:28:09,584 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:09,589 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@535dafcd]
2021-03-11 11:28:09,731 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:09,741 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(108.toUByte()).compareTo(96.toUByte())
2021-03-11 11:28:09,741 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@16a81431]]
2021-03-11 11:28:09,741 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:28:09,741 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@16a81431]
2021-03-11 11:28:09,741 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().toInt()
2021-03-11 11:28:09,741 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@257ec110]]
2021-03-11 11:28:09,742 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:28:09,915 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:09,920 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@257ec110]
2021-03-11 11:28:10,085 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:10,093 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(38.toUByte()).times(-47)
2021-03-11 11:28:10,094 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]]
2021-03-11 11:28:10,094 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:28:10,094 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]
2021-03-11 11:28:10,094 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().countTrailingZeroBits()
2021-03-11 11:28:10,094 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]]
2021-03-11 11:28:10,094 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:28:10,094 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]
2021-03-11 11:28:10,269 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:10,275 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().minus(89)
2021-03-11 11:28:10,275 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42411fed]]
2021-03-11 11:28:10,275 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:28:10,467 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:10,475 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42411fed]
2021-03-11 11:28:10,614 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:10,620 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(74.toUByte()).shr(206416573)
2021-03-11 11:28:10,620 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]]
2021-03-11 11:28:10,620 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:28:10,773 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:10,780 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]
2021-03-11 11:28:10,781 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(4.toUByte()).unaryPlus()
2021-03-11 11:28:10,781 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:28:10,781 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:28:10,958 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:10,966 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:28:10,967 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(75.toUByte()).countTrailingZeroBits()
2021-03-11 11:28:10,967 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3d9305eb]]
2021-03-11 11:28:10,967 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:28:10,967 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3d9305eb]
2021-03-11 11:28:10,967 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().unaryPlus()
2021-03-11 11:28:10,967 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 of type Int is ((6516632970651683513.toULong()).toUByte()).compareTo(74.toUByte()).shr(206416573)
2021-03-11 11:28:11,155 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:11,156 [main:66] - Compilation checking started
2021-03-11 11:28:11,613 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (((6516632970651683513.toULong()).toUByte()).compareTo(74.toUByte()).shr(206416573) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:11,617 [main:103] - replacing (i10, Int)
2021-03-11 11:28:11,617 [main:38] - replacing i10 Int
2021-03-11 11:28:11,617 [main:42] - Getting value of type Int
2021-03-11 11:28:11,761 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:11,766 [main:46] - GENERATED VALUE OF TYPE Int = -1462116134
2021-03-11 11:28:11,766 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:11,788 [main:55] - randomType = Kla4
2021-03-11 11:28:11,926 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 11:28:11,931 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}
2021-03-11 11:28:12,068 [main:194] - Type params = []
2021-03-11 11:28:12,207 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-11 11:28:12,367 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:28:12,374 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:28:12,749 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-11 11:28:12,903 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:28:12,914 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:28:13,511 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 8
2021-03-11 11:28:13,672 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:28:13,679 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:28:14,206 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 11
2021-03-11 11:28:14,364 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:28:14,370 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:28:14,993 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 14
2021-03-11 11:28:15,162 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:28:15,168 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:28:15,730 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 17
2021-03-11 11:28:15,731 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:28:15,731 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:28:15,731 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:28:15,731 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:28:15,731 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:28:15,752 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla4[DeserializedSimpleFunctionDescriptor@24f1ffb]
2021-03-11 11:28:15,896 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:15,896 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:28:16,029 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:16,037 [main:66] - Generated call from random type = (Kla4()).equals("ewtny").compareTo(true)
2021-03-11 11:28:16,039 [main:94] - GETTING Int from UByte
2021-03-11 11:28:16,071 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@65f973c0]]
2021-03-11 11:28:16,071 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:28:16,071 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().sign
2021-03-11 11:28:16,071 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5074f100]]
2021-03-11 11:28:16,071 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:28:16,072 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5074f100]
2021-03-11 11:28:16,072 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().toRawBits()
2021-03-11 11:28:16,072 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 11:28:16,072 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:28:16,216 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:16,222 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 11:28:16,222 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(65.toUByte()).countOneBits()
2021-03-11 11:28:16,222 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]]
2021-03-11 11:28:16,222 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:28:16,222 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]
2021-03-11 11:28:16,223 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().countOneBits()
2021-03-11 11:28:16,223 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:28:16,223 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:28:16,369 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:16,376 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:28:16,376 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(13.toUByte()).countTrailingZeroBits()
2021-03-11 11:28:16,376 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6b6a3486]]
2021-03-11 11:28:16,376 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:28:16,377 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6b6a3486]
2021-03-11 11:28:16,377 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().countLeadingZeroBits()
2021-03-11 11:28:16,377 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]]
2021-03-11 11:28:16,377 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:28:16,377 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]
2021-03-11 11:28:16,522 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:16,527 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().minus(40)
2021-03-11 11:28:16,527 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]]
2021-03-11 11:28:16,528 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:28:16,528 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]
2021-03-11 11:28:16,694 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:16,700 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().plus(-97)
2021-03-11 11:28:16,701 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3ba31af9]]
2021-03-11 11:28:16,701 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:28:16,701 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3ba31af9]
2021-03-11 11:28:16,701 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().toInt()
2021-03-11 11:28:16,701 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]]
2021-03-11 11:28:16,701 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:28:16,701 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]
2021-03-11 11:28:16,701 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().toInt()
2021-03-11 11:28:16,701 [main:110] - replacement of i10 of type Int is ((6516632970651683513.toULong()).toUByte()).compareTo(13.toUByte()).countTrailingZeroBits()
2021-03-11 11:28:16,835 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:16,836 [main:66] - Compilation checking started
2021-03-11 11:28:17,283 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + ((6516632970651683513.toULong()).toUByte()).compareTo(13.toUByte()).countTrailingZeroBits() + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:17,286 [main:103] - replacing (i15, Int)
2021-03-11 11:28:17,286 [main:38] - replacing i15 Int
2021-03-11 11:28:17,286 [main:42] - Getting value of type Int
2021-03-11 11:28:17,427 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:17,433 [main:46] - GENERATED VALUE OF TYPE Int = 1615423429
2021-03-11 11:28:17,433 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:17,642 [main:55] - randomType = ArrayList<Kla5>
2021-03-11 11:28:17,779 [main:302] - generating value of type = ArrayList<Kla5> false depth = 0
2021-03-11 11:28:17,930 [main:43] - GENERATING CALL OF fun <E> ArrayList(elements: kotlin.collections.Collection<Kla5>): ArrayList<Kla5> = TODO()
2021-03-11 11:28:17,936 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(elements: kotlin.collections.Collection<Kla5>): ArrayList<Kla5> = TODO()
2021-03-11 11:28:18,275 [main:302] - generating value of type = Collection<Kla5> false depth = 3
2021-03-11 11:28:18,426 [main:43] - GENERATING CALL OF fun ULongArray(size: kotlin.Int): Collection<Kla5> = TODO()
2021-03-11 11:28:18,432 [main:61] - WITHOUT TYPE PARAMS = fun ULongArray(size: kotlin.Int): Collection<Kla5> = TODO()
2021-03-11 11:28:18,756 [main:302] - generating value of type = Int true depth = 6
2021-03-11 11:28:18,762 [main:95] - GENERATED = ULongArray(-1384587135)
2021-03-11 11:28:18,762 [main:95] - GENERATED = ArrayList<Kla5>(ULongArray(-1384587135))
2021-03-11 11:28:18,974 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]
2021-03-11 11:28:18,974 [main:66] - Generated call from random type = (ArrayList<Kla5>(ULongArray(-1384587135))).size.toInt()
2021-03-11 11:28:18,975 [main:94] - GETTING Int from ULong
2021-03-11 11:28:19,013 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]]
2021-03-11 11:28:19,013 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:19,155 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:19,161 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]
2021-03-11 11:28:19,161 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(58.toUByte()).countLeadingZeroBits()
2021-03-11 11:28:19,161 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]]
2021-03-11 11:28:19,161 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:28:19,161 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]
2021-03-11 11:28:19,162 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().unaryPlus()
2021-03-11 11:28:19,162 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]]
2021-03-11 11:28:19,162 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:28:19,162 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]
2021-03-11 11:28:19,307 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:19,315 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().plus(-117)
2021-03-11 11:28:19,316 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]]
2021-03-11 11:28:19,316 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:28:19,316 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]
2021-03-11 11:28:19,453 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:19,459 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().minus(-117)
2021-03-11 11:28:19,459 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5a0be3d0]]
2021-03-11 11:28:19,459 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:28:19,459 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5a0be3d0]
2021-03-11 11:28:19,459 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().countTrailingZeroBits()
2021-03-11 11:28:19,459 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1fee26e7]]
2021-03-11 11:28:19,460 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:28:19,460 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1fee26e7]
2021-03-11 11:28:19,460 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().countOneBits()
2021-03-11 11:28:19,460 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]]
2021-03-11 11:28:19,460 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:28:19,460 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]
2021-03-11 11:28:19,460 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().toBits()
2021-03-11 11:28:19,460 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]]
2021-03-11 11:28:19,460 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:28:19,460 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]
2021-03-11 11:28:19,460 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toDouble().roundToInt()
2021-03-11 11:28:19,461 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@70fae96b]]
2021-03-11 11:28:19,461 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@70fae96b]
2021-03-11 11:28:19,461 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).countLeadingZeroBits()
2021-03-11 11:28:19,461 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]]
2021-03-11 11:28:19,461 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:28:19,461 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]
2021-03-11 11:28:19,597 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:19,602 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().compareTo(110.toUByte())
2021-03-11 11:28:19,603 [main:110] - replacement of i15 of type Int is (6516632970651683513.toULong()).toShort().unaryPlus()
2021-03-11 11:28:19,735 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:19,735 [main:66] - Compilation checking started
2021-03-11 11:28:20,170 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + (6516632970651683513.toULong()).toShort().unaryPlus() + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:20,173 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17, Int)
2021-03-11 11:28:20,173 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 Int
2021-03-11 11:28:20,173 [main:42] - Getting value of type Int
2021-03-11 11:28:20,310 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:20,315 [main:46] - GENERATED VALUE OF TYPE Int = 2054783134
2021-03-11 11:28:20,315 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:20,486 [main:55] - randomType = Short
2021-03-11 11:28:20,630 [main:302] - generating value of type = Short true depth = 0
2021-03-11 11:28:20,674 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7c4e22d8]
2021-03-11 11:28:20,675 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 11:28:20,675 [main:66] - Generated call from random type = (31590).toShort().countOneBits()
2021-03-11 11:28:20,676 [main:94] - GETTING Int from ULong
2021-03-11 11:28:20,710 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]]
2021-03-11 11:28:20,711 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:20,855 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:20,861 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]
2021-03-11 11:28:20,994 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:21,000 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(76.toUByte()).or(1613191209)
2021-03-11 11:28:21,000 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@25463407]]
2021-03-11 11:28:21,000 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:21,133 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:21,139 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@25463407]
2021-03-11 11:28:21,286 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:21,293 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(118.toUByte()).xor(369277942)
2021-03-11 11:28:21,294 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]]
2021-03-11 11:28:21,294 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:28:21,294 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]
2021-03-11 11:28:21,294 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().countTrailingZeroBits()
2021-03-11 11:28:21,294 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]]
2021-03-11 11:28:21,294 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:21,468 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:21,474 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]
2021-03-11 11:28:21,615 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:21,621 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(72.toUByte()).minus(54)
2021-03-11 11:28:21,621 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@1f61cfcf]]
2021-03-11 11:28:21,621 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:21,764 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:21,770 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(107.toUByte()).sign
2021-03-11 11:28:21,770 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]]
2021-03-11 11:28:21,770 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:28:21,770 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:28:21,921 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:21,929 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toDouble().compareTo(123)
2021-03-11 11:28:21,929 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4c83e101]]
2021-03-11 11:28:21,929 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:22,075 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:22,081 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(94.toUByte()).absoluteValue
2021-03-11 11:28:22,081 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]]
2021-03-11 11:28:22,081 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:28:22,081 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]
2021-03-11 11:28:22,216 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:22,222 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().times(-111)
2021-03-11 11:28:22,223 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]]
2021-03-11 11:28:22,223 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:22,357 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:22,364 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(22.toUByte())
2021-03-11 11:28:22,365 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]]
2021-03-11 11:28:22,365 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:28:22,365 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]
2021-03-11 11:28:22,504 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:22,509 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().compareTo(-19)
2021-03-11 11:28:22,510 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 of type Int is (6516632970651683513.toULong()).compareTo(22.toUByte())
2021-03-11 11:28:22,643 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:22,644 [main:66] - Compilation checking started
2021-03-11 11:28:23,053 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((6516632970651683513.toULong()).compareTo(22.toUByte()) + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:23,056 [main:103] - replacing (prope9, String)
2021-03-11 11:28:23,057 [main:38] - replacing prope9 String
2021-03-11 11:28:23,057 [main:42] - Getting value of type String
2021-03-11 11:28:23,202 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:23,209 [main:46] - GENERATED VALUE OF TYPE String = "micrr"
2021-03-11 11:28:23,209 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:23,386 [main:55] - randomType = Kla1
2021-03-11 11:28:23,557 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 11:28:23,566 [main:112] - generating klass Kla1 text = class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}
2021-03-11 11:28:23,577 [main:137] - GENERATING call of type public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5109e79f]
2021-03-11 11:28:23,577 [main:66] - Generated call from random type = (Kla1()).prope0.capitalize()
2021-03-11 11:28:23,578 [main:94] - GETTING String from ULong
2021-03-11 11:28:23,618 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:28:23,618 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:28:23,619 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:28:23,772 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:23,780 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toString(-953733353)
2021-03-11 11:28:23,780 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:28:23,780 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:28:23,939 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:23,946 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toString(1422681621)
2021-03-11 11:28:23,946 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:28:23,946 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:28:23,946 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:28:24,121 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:24,128 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toString(2030179398)
2021-03-11 11:28:24,128 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:28:24,128 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:28:24,129 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:28:24,284 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:24,290 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().toString(311158429)
2021-03-11 11:28:24,290 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:28:24,291 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:28:24,291 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:28:24,429 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:24,435 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().toString(401601999)
2021-03-11 11:28:24,435 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:28:24,435 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:28:24,436 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:28:24,574 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:24,580 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().toString(-349693501)
2021-03-11 11:28:24,580 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:28:24,580 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:28:24,580 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:28:24,713 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:24,719 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().toString(798553572)
2021-03-11 11:28:24,719 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:28:24,719 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:24,865 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:24,871 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:28:25,006 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:25,014 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(85.toUByte()).toString(-1188824667)
2021-03-11 11:28:25,014 [main:110] - replacement of prope9 of type String is "micrr"
2021-03-11 11:28:25,168 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:28:25,169 [main:66] - Compilation checking started
2021-03-11 11:28:25,562 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if ("micrr" != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:25,565 [main:103] - replacing (prope3, String)
2021-03-11 11:28:25,565 [main:38] - replacing prope3 String
2021-03-11 11:28:25,565 [main:42] - Getting value of type String
2021-03-11 11:28:25,688 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:25,693 [main:46] - GENERATED VALUE OF TYPE String = "zhapz"
2021-03-11 11:28:25,693 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:25,866 [main:55] - randomType = UShort
2021-03-11 11:28:25,992 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 11:28:26,036 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@47ef9c85]
2021-03-11 11:28:26,037 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:28:26,169 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:26,175 [main:66] - Generated call from random type = (585.toUShort()).toUByte().toString(951879970)
2021-03-11 11:28:26,175 [main:110] - replacement of prope3 of type String is (585.toUShort()).toUByte().toString(951879970)
2021-03-11 11:28:26,302 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:26,303 [main:66] - Compilation checking started
2021-03-11 11:28:26,703 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return (585.toUShort()).toUByte().toString(951879970)
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:26,706 [main:103] - replacing (1, Int)
2021-03-11 11:28:26,706 [main:38] - replacing 1 Int
2021-03-11 11:28:26,706 [main:42] - Getting value of type Int
2021-03-11 11:28:26,830 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:26,835 [main:46] - GENERATED VALUE OF TYPE Int = 1465669507
2021-03-11 11:28:26,835 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:26,857 [main:55] - randomType = Kla7
2021-03-11 11:28:26,983 [main:302] - generating value of type = Kla7 false depth = 0
2021-03-11 11:28:26,989 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}
2021-03-11 11:28:26,996 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla7[DeserializedSimpleFunctionDescriptor@448a3d08]
2021-03-11 11:28:27,121 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:27,121 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:28:27,245 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:27,251 [main:66] - Generated call from random type = (Kla7()).equals("uatus").compareTo(true)
2021-03-11 11:28:27,252 [main:94] - GETTING Int from UByte
2021-03-11 11:28:27,285 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]]
2021-03-11 11:28:27,285 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:28:27,416 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:27,422 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]
2021-03-11 11:28:27,569 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:27,576 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(123.toUByte()).and(218846291)
2021-03-11 11:28:27,576 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@15a75f79]]
2021-03-11 11:28:27,576 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:28:27,576 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@15a75f79]
2021-03-11 11:28:27,576 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().countTrailingZeroBits()
2021-03-11 11:28:27,576 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:28:27,576 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:28:27,732 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:27,738 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:28:27,897 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:27,903 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(10.toUByte()).ushr(-1316994967)
2021-03-11 11:28:27,903 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]]
2021-03-11 11:28:27,903 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:28:27,904 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]
2021-03-11 11:28:27,904 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().roundToInt()
2021-03-11 11:28:27,904 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54e1c058]]
2021-03-11 11:28:27,904 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:28:28,089 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:28,097 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54e1c058]
2021-03-11 11:28:28,247 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:28,253 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(123.toUByte()).compareTo(-35)
2021-03-11 11:28:28,253 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]]
2021-03-11 11:28:28,253 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:28:28,253 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]
2021-03-11 11:28:28,407 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:28,413 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().compareTo(84)
2021-03-11 11:28:28,413 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3fb6d686]]
2021-03-11 11:28:28,413 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:28:28,413 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3fb6d686]
2021-03-11 11:28:28,572 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:28,579 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().div(58)
2021-03-11 11:28:28,579 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4a0e3df6]]
2021-03-11 11:28:28,579 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:28:28,579 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4a0e3df6]
2021-03-11 11:28:28,579 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().countLeadingZeroBits()
2021-03-11 11:28:28,579 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]]
2021-03-11 11:28:28,579 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:28:28,579 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]
2021-03-11 11:28:28,729 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:28,735 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().plus(-8)
2021-03-11 11:28:28,735 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]]
2021-03-11 11:28:28,735 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:28:28,735 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:28:28,875 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:28,881 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().compareTo(69)
2021-03-11 11:28:28,881 [main:110] - replacement of 1 of type Int is ((6516632970651683513.toULong()).toUByte()).toByte().plus(-8)
2021-03-11 11:28:29,034 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:29,035 [main:66] - Compilation checking started
2021-03-11 11:28:29,479 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = ((6516632970651683513.toULong()).toUByte()).toByte().plus(-8)
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:29,482 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15, Int)
2021-03-11 11:28:29,482 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 Int
2021-03-11 11:28:29,482 [main:42] - Getting value of type Int
2021-03-11 11:28:29,622 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:29,629 [main:46] - GENERATED VALUE OF TYPE Int = 2023355967
2021-03-11 11:28:29,629 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:29,822 [main:55] - randomType = Byte
2021-03-11 11:28:29,990 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:30,036 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4fc3ac1]
2021-03-11 11:28:30,036 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]
2021-03-11 11:28:30,181 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:30,187 [main:66] - Generated call from random type = (-66).toShort().rem(89)
2021-03-11 11:28:30,187 [main:94] - GETTING Int from ULong
2021-03-11 11:28:30,237 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4a2654b1]]
2021-03-11 11:28:30,237 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4a2654b1]
2021-03-11 11:28:30,237 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toInt()
2021-03-11 11:28:30,238 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c250e82]]
2021-03-11 11:28:30,238 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:28:30,238 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c250e82]
2021-03-11 11:28:30,238 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().countLeadingZeroBits()
2021-03-11 11:28:30,238 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]]
2021-03-11 11:28:30,238 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:30,376 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:30,381 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]
2021-03-11 11:28:30,537 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:30,543 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(27.toUByte()).rem(-104)
2021-03-11 11:28:30,543 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]]
2021-03-11 11:28:30,543 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:30,676 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:30,682 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]
2021-03-11 11:28:30,822 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:30,831 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(56.toUByte()).or(-1447393865)
2021-03-11 11:28:30,831 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]]
2021-03-11 11:28:30,831 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:30,975 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:30,981 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]
2021-03-11 11:28:31,122 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:31,128 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(98.toUByte()).coerceAtLeast(2008913746)
2021-03-11 11:28:31,128 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4c83e101]]
2021-03-11 11:28:31,128 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:31,278 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:31,285 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(30.toUByte()).absoluteValue
2021-03-11 11:28:31,286 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]]
2021-03-11 11:28:31,286 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:28:31,286 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]
2021-03-11 11:28:31,286 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().roundToInt()
2021-03-11 11:28:31,286 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]]
2021-03-11 11:28:31,286 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:31,435 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:31,442 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:28:31,442 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(58.toUByte()).countOneBits()
2021-03-11 11:28:31,442 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]]
2021-03-11 11:28:31,442 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:28:31,442 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 11:28:31,442 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().countOneBits()
2021-03-11 11:28:31,443 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6b6a3486]]
2021-03-11 11:28:31,443 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:28:31,443 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6b6a3486]
2021-03-11 11:28:31,443 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().countLeadingZeroBits()
2021-03-11 11:28:31,443 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 of type Int is ((6516632970651683513.toULong())).compareTo(98.toUByte()).coerceAtLeast(2008913746)
2021-03-11 11:28:31,595 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:31,595 [main:66] - Compilation checking started
2021-03-11 11:28:32,036 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (((6516632970651683513.toULong())).compareTo(98.toUByte()).coerceAtLeast(2008913746) + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        throw exception
    }
}


2021-03-11 11:28:32,039 [main:103] - replacing (exception, Throwable)
2021-03-11 11:28:32,040 [main:38] - replacing exception Throwable
2021-03-11 11:28:32,040 [main:42] - Getting value of type Throwable
2021-03-11 11:28:32,198 [main:302] - generating value of type = Throwable false depth = 0
2021-03-11 11:28:32,365 [main:43] - GENERATING CALL OF fun Exception(message: kotlin.String?): Throwable = TODO()
2021-03-11 11:28:32,372 [main:61] - WITHOUT TYPE PARAMS = fun Exception(message: kotlin.String?): Throwable = TODO()
2021-03-11 11:28:32,716 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:28:32,722 [main:95] - GENERATED = Exception("uhqjx")
2021-03-11 11:28:32,722 [main:46] - GENERATED VALUE OF TYPE Throwable = Exception("uhqjx")
2021-03-11 11:28:32,722 [main:49] - GENERATED IS CALL =true
2021-03-11 11:28:33,136 [main:55] - randomType = UInt?
2021-03-11 11:28:33,292 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:28:33,353 [main:94] - GETTING Throwable from Function0<String>
2021-03-11 11:28:33,374 [main:94] - GETTING Throwable from ULong
2021-03-11 11:28:33,420 [main:94] - GETTING Throwable from Any
2021-03-11 11:28:33,427 [main:94] - GETTING Throwable from String
2021-03-11 11:28:33,461 [main:94] - GETTING Throwable from UByte
2021-03-11 11:28:33,502 [main:94] - GETTING Throwable from ULong
2021-03-11 11:28:33,502 [main:110] - replacement of exception of type Throwable is Exception("uhqjx")
2021-03-11 11:28:33,669 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:28:33,669 [main:66] - Compilation checking started
2021-03-11 11:28:34,228 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw Exception("uhqjx")
    }
}


2021-03-11 11:28:34,233 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7, Int)
2021-03-11 11:28:34,233 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 Int
2021-03-11 11:28:34,233 [main:42] - Getting value of type Int
2021-03-11 11:28:34,384 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:34,390 [main:46] - GENERATED VALUE OF TYPE Int = 1503100781
2021-03-11 11:28:34,390 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:34,413 [main:55] - randomType = Kla3
2021-03-11 11:28:34,562 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 11:28:34,570 [main:112] - generating klass Kla3 text = class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}
2021-03-11 11:28:34,580 [main:137] - GENERATING call of type public final suspend fun fu3(prope9: kotlin.String = ..., i1: kotlin.Int = ..., i2: kotlin.Int = ..., i3: kotlin.Int = ..., i4: kotlin.Int = ..., i5: kotlin.Int = ..., i6: kotlin.Int = ..., i7: kotlin.Int = ..., i8: kotlin.Int = ..., i9: kotlin.Int = ..., i10: kotlin.Int = ..., i11: kotlin.Int = ..., i12: kotlin.Int = ..., i13: kotlin.Int = ..., i14: kotlin.Int = ..., i15: kotlin.Int = ..., i16: kotlin.Int = ..., i17: kotlin.Int = ..., i18: kotlin.Int = ..., i19: kotlin.Int = ..., i20: kotlin.Int = ..., i21: kotlin.Int = ..., i22: kotlin.Int = ..., i23: kotlin.Int = ..., i24: kotlin.Int = ..., i25: kotlin.Int = ..., i26: kotlin.Int = ..., i27: kotlin.Int = ..., i28: kotlin.Int = ..., i29: kotlin.Int = ..., i30: kotlin.Int = ..., i31: kotlin.Int = ...): kotlin.String defined in Kla3[SimpleFunctionDescriptorImpl@25fc8fe2]
2021-03-11 11:28:34,733 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:34,908 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:35,064 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:35,209 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:35,381 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:35,529 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:35,702 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:35,861 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:36,035 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:36,206 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:36,389 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:36,568 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:36,734 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:36,943 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:37,136 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:37,283 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:37,418 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:37,595 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:37,750 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:37,885 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:38,025 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:38,180 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:38,313 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:38,446 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:38,582 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:38,719 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:38,852 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:39,000 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:39,145 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:39,282 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:39,417 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:39,562 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:39,570 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:28:39,706 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:39,835 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:39,841 [main:66] - Generated call from random type = (Kla3()).fu3("nuutm", -147896435, -810082358, 1617465748, 1542066530, 2100837903, 94215091, -605029365, -2114795075, -1807395213, -163392104, -2142259868, 2141594814, 429741543, -787418875, -1835072795, -1795245798, -1632879846, 748952316, -791415536, 1382764372, 1489848804, -1665948268, 1776187475, 300479114, 1738757869, -901444499, 344701117, 279921388, 51094511, 823536823, -448764902).compareTo("wctqo", false)
2021-03-11 11:28:39,842 [main:94] - GETTING Int from ULong
2021-03-11 11:28:39,867 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]]
2021-03-11 11:28:39,867 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:28:39,867 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]
2021-03-11 11:28:39,992 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:39,998 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().compareTo(6)
2021-03-11 11:28:39,998 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4a2654b1]]
2021-03-11 11:28:39,998 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4a2654b1]
2021-03-11 11:28:39,998 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toInt()
2021-03-11 11:28:39,998 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]]
2021-03-11 11:28:39,998 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:28:39,999 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]
2021-03-11 11:28:40,123 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:40,129 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().compareTo(15)
2021-03-11 11:28:40,129 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4305d2ec]]
2021-03-11 11:28:40,129 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:28:40,129 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4305d2ec]
2021-03-11 11:28:40,129 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toInt()
2021-03-11 11:28:40,129 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]]
2021-03-11 11:28:40,129 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:28:40,129 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]
2021-03-11 11:28:40,129 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().countLeadingZeroBits()
2021-03-11 11:28:40,129 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3983235]]
2021-03-11 11:28:40,129 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:28:40,129 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3983235]
2021-03-11 11:28:40,270 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:40,276 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().div(55)
2021-03-11 11:28:40,276 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34ff6543]]
2021-03-11 11:28:40,276 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:28:40,276 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34ff6543]
2021-03-11 11:28:40,276 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().countLeadingZeroBits()
2021-03-11 11:28:40,276 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:28:40,276 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:40,400 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:40,406 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:28:40,529 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:40,535 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(124.toUByte()).ushr(-659609226)
2021-03-11 11:28:40,535 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]]
2021-03-11 11:28:40,535 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:40,659 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:40,665 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]
2021-03-11 11:28:40,794 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:40,800 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(26.toUByte()).or(-550428447)
2021-03-11 11:28:40,800 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:28:40,800 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:28:40,923 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:40,929 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:28:40,929 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(81.toUByte()).countTrailingZeroBits()
2021-03-11 11:28:40,929 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 of type Int is (6516632970651683513.toULong()).compareTo(124.toUByte()).ushr(-659609226)
2021-03-11 11:28:41,052 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:41,052 [main:66] - Compilation checking started
2021-03-11 11:28:41,464 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((6516632970651683513.toULong()).compareTo(124.toUByte()).ushr(-659609226) + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:28:41,466 [main:103] - replacing (1..numberOfSuspensions, IntRange)
2021-03-11 11:28:41,467 [main:38] - replacing 1..numberOfSuspensions IntRange
2021-03-11 11:28:41,467 [main:42] - Getting value of type IntRange
2021-03-11 11:28:41,612 [main:302] - generating value of type = IntRange false depth = 0
2021-03-11 11:28:41,753 [main:43] - GENERATING CALL OF fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntRange = TODO()
2021-03-11 11:28:41,760 [main:61] - WITHOUT TYPE PARAMS = fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntRange = TODO()
2021-03-11 11:28:42,245 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:28:42,251 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:28:42,257 [main:95] - GENERATED = IntRange(991195617, 34145534)
2021-03-11 11:28:42,257 [main:46] - GENERATED VALUE OF TYPE IntRange = IntRange(991195617, 34145534)
2021-03-11 11:28:42,257 [main:49] - GENERATED IS CALL =true
2021-03-11 11:28:43,158 [main:55] - randomType = Kla6<ArrayList<Sequence<Kla0?>?>>
2021-03-11 11:28:43,284 [main:302] - generating value of type = Kla6<ArrayList<Sequence<Kla0?>?>> false depth = 0
2021-03-11 11:28:43,289 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-11 11:28:43,915 [main:302] - generating value of type = Kla9 false depth = 2
2021-03-11 11:28:43,921 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:28:43,944 [main:94] - GETTING IntRange from String
2021-03-11 11:28:43,967 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2553066a]]
2021-03-11 11:28:43,967 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:28:44,090 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:44,095 [main:137] - GENERATING call of type public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2553066a]
2021-03-11 11:28:44,217 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:44,223 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("vynzz").until(-4)
2021-03-11 11:28:44,223 [main:101] - Case = [public val kotlin.CharSequence.indices: kotlin.ranges.IntRange defined in kotlin.text[DeserializedPropertyDescriptor@70be37e3]]
2021-03-11 11:28:44,223 [main:105] - GENERATED CALL = (Kla1().prope0).indices
2021-03-11 11:28:44,223 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public val kotlin.CharSequence.indices: kotlin.ranges.IntRange defined in kotlin.text[DeserializedPropertyDescriptor@70be37e3]]
2021-03-11 11:28:44,223 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:28:44,347 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:44,480 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:44,486 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1905222715, 216428464).indices
2021-03-11 11:28:44,486 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2553066a]]
2021-03-11 11:28:44,486 [main:137] - GENERATING call of type public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2553066a]
2021-03-11 11:28:44,609 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:44,643 [main:105] - GENERATED CALL = (Kla1().prope0).length.until(79)
2021-03-11 11:28:44,643 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f88de11]]
2021-03-11 11:28:44,643 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f88de11]
2021-03-11 11:28:44,778 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:44,784 [main:105] - GENERATED CALL = (Kla1().prope0).length.rangeTo(-22)
2021-03-11 11:28:44,785 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f88de11]]
2021-03-11 11:28:44,785 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:28:44,910 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:44,916 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f88de11]
2021-03-11 11:28:45,040 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:28:45,046 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("ddzjf").rangeTo(85)
2021-03-11 11:28:45,046 [main:110] - replacement of 1..numberOfSuspensions of type IntRange is IntRange(991195617, 34145534)
2021-03-11 11:28:45,168 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:28:45,168 [main:66] - Compilation checking started
2021-03-11 11:28:45,562 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in IntRange(991195617, 34145534)) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:28:45,565 [main:103] - replacing (i1 + i2, Int)
2021-03-11 11:28:45,565 [main:38] - replacing i1 + i2 Int
2021-03-11 11:28:45,565 [main:42] - Getting value of type Int
2021-03-11 11:28:45,691 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:45,697 [main:46] - GENERATED VALUE OF TYPE Int = -484544793
2021-03-11 11:28:45,697 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:45,875 [main:55] - randomType = Kla9
2021-03-11 11:28:46,001 [main:302] - generating value of type = Kla9 false depth = 0
2021-03-11 11:28:46,006 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:28:46,026 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla9[DeserializedSimpleFunctionDescriptor@762e8c27]
2021-03-11 11:28:46,148 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:46,149 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:28:46,274 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:46,280 [main:66] - Generated call from random type = (Kla9).equals("wseya").compareTo(false)
2021-03-11 11:28:46,280 [main:110] - replacement of i1 + i2 of type Int is (Kla9).equals("wseya").compareTo(false)
2021-03-11 11:28:46,404 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:46,405 [main:66] - Compilation checking started
2021-03-11 11:28:46,797 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((Kla9).equals("wseya").compareTo(false) + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:28:46,799 [main:103] - replacing (this, Kla5)
2021-03-11 11:28:46,800 [main:38] - replacing this Kla5
2021-03-11 11:28:46,800 [main:42] - Getting value of type Kla5
2021-03-11 11:28:46,955 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-11 11:28:46,961 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:28:46,962 [main:46] - GENERATED VALUE OF TYPE Kla5 = Kla5()
2021-03-11 11:28:46,962 [main:49] - GENERATED IS CALL =true
2021-03-11 11:28:46,986 [main:55] - randomType = Kla0
2021-03-11 11:28:47,111 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 11:28:47,117 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:28:47,241 [main:194] - Type params = []
2021-03-11 11:28:47,363 [main:302] - generating value of type = Function0<String> false depth = 2
2021-03-11 11:28:47,369 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:28:47,382 [main:94] - GETTING Kla5 from Any
2021-03-11 11:28:47,386 [main:94] - GETTING Kla5 from ULong
2021-03-11 11:28:47,420 [main:94] - GETTING Kla5 from Function0<String>
2021-03-11 11:28:47,432 [main:94] - GETTING Kla5 from ULong
2021-03-11 11:28:47,433 [main:94] - GETTING Kla5 from UByte
2021-03-11 11:28:47,463 [main:94] - GETTING Kla5 from String
2021-03-11 11:28:47,491 [main:110] - replacement of this of type Kla5 is Kla5()
2021-03-11 11:28:47,655 [main:33] - Trying to replace Element(THIS_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:28:47,655 [main:66] - Compilation checking started
2021-03-11 11:28:48,179 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
Kla5().prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:28:48,181 [main:103] - replacing (prope3, Result<Ty0>)
2021-03-11 11:28:48,182 [main:38] - replacing prope3 Result<Ty0>
2021-03-11 11:28:48,182 [main:42] - Getting value of type Result<Ty0>
2021-03-11 11:28:48,313 [main:302] - generating value of type = Result<Ty0> false depth = 0
2021-03-11 11:28:48,453 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:28:48,460 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:28:48,771 [main:385] - Cant generate call of fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:28:48,772 [main:46] - GENERATED VALUE OF TYPE Result<Ty0> = 
2021-03-11 11:28:48,935 [main:55] - randomType = Char
2021-03-11 11:28:49,057 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:28:49,089 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:28:49,126 [main:94] - GETTING Result<Ty0> from Any
2021-03-11 11:28:49,131 [main:94] - GETTING Result<Ty0> from UByte
2021-03-11 11:28:49,169 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:28:49,171 [main:94] - GETTING Result<Ty0> from String
2021-03-11 11:28:49,201 [main:94] - GETTING Result<Ty0> from Function0<String>
2021-03-11 11:28:49,214 [main:107] - Cant find and generate replacement for prope3 type Result<Ty0>
2021-03-11 11:28:49,214 [main:103] - replacing (i18, Int)
2021-03-11 11:28:49,214 [main:38] - replacing i18 Int
2021-03-11 11:28:49,214 [main:42] - Getting value of type Int
2021-03-11 11:28:49,358 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:49,366 [main:46] - GENERATED VALUE OF TYPE Int = -1423393480
2021-03-11 11:28:49,367 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:49,537 [main:55] - randomType = UInt
2021-03-11 11:28:49,659 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:28:49,696 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5730d56a]
2021-03-11 11:28:49,696 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34ff6543]
2021-03-11 11:28:49,696 [main:66] - Generated call from random type = (227071577.toUInt()).toByte().countLeadingZeroBits()
2021-03-11 11:28:49,696 [main:110] - replacement of i18 of type Int is (227071577.toUInt()).toByte().countLeadingZeroBits()
2021-03-11 11:28:49,827 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:49,828 [main:66] - Compilation checking started
2021-03-11 11:28:50,245 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + (227071577.toUInt()).toByte().countLeadingZeroBits() + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:28:50,249 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26, Int)
2021-03-11 11:28:50,249 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 Int
2021-03-11 11:28:50,249 [main:42] - Getting value of type Int
2021-03-11 11:28:50,388 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:28:50,394 [main:46] - GENERATED VALUE OF TYPE Int = 1195312032
2021-03-11 11:28:50,394 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:50,417 [main:55] - randomType = Kla0
2021-03-11 11:28:50,539 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 11:28:50,544 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:28:50,665 [main:194] - Type params = []
2021-03-11 11:28:50,803 [main:302] - generating value of type = Function0<String> false depth = 2
2021-03-11 11:28:50,812 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:28:50,828 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla0[DeserializedSimpleFunctionDescriptor@3549678d]
2021-03-11 11:28:50,971 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:50,971 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:28:51,096 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:51,102 [main:66] - Generated call from random type = (Kla0({ "vjqrk"})).equals("udckt").compareTo(true)
2021-03-11 11:28:51,103 [main:94] - GETTING Int from Any
2021-03-11 11:28:51,107 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:28:51,107 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:28:51,233 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:51,233 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:28:51,367 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:51,373 [main:105] - GENERATED CALL = (l).equals("oavon").compareTo(true)
2021-03-11 11:28:51,374 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 of type Int is (l).equals("oavon").compareTo(true)
2021-03-11 11:28:51,502 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:51,503 [main:66] - Compilation checking started
2021-03-11 11:28:51,929 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((l).equals("oavon").compareTo(true) + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:28:51,932 [main:103] - replacing (prope9 != "abc#31", Boolean)
2021-03-11 11:28:51,933 [main:38] - replacing prope9 != "abc#31" Boolean
2021-03-11 11:28:51,933 [main:42] - Getting value of type Boolean
2021-03-11 11:28:52,072 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:52,079 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:28:52,079 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:52,094 [main:55] - randomType = String
2021-03-11 11:28:52,245 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:52,282 [main:137] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]
2021-03-11 11:28:52,412 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:52,545 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:52,551 [main:66] - Generated call from random type = ("lslir").startsWith("zqmsa", true)
2021-03-11 11:28:52,552 [main:94] - GETTING Boolean from Function0<String>
2021-03-11 11:28:52,565 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46e35a2]]
2021-03-11 11:28:52,565 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:28:52,565 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46e35a2]
2021-03-11 11:28:52,565 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toBoolean()
2021-03-11 11:28:52,565 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:28:52,565 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:28:52,690 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:52,691 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:28:52,817 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:52,823 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("lyjac").or(false)
2021-03-11 11:28:52,823 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cb69174]]
2021-03-11 11:28:52,823 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:28:52,823 [main:137] - GENERATING call of type public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cb69174]
2021-03-11 11:28:52,949 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:52,955 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().matches("irevu")
2021-03-11 11:28:52,956 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:28:52,956 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:28:53,081 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:53,081 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:28:53,082 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("vkiie").not()
2021-03-11 11:28:53,082 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]]
2021-03-11 11:28:53,082 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:28:53,082 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]
2021-03-11 11:28:53,206 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:53,207 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().equals("tnblc")
2021-03-11 11:28:53,207 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:28:53,207 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:28:53,335 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:53,335 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:28:53,458 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:53,464 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("gzhql").xor(false)
2021-03-11 11:28:53,464 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]]
2021-03-11 11:28:53,464 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:28:53,464 [main:137] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]
2021-03-11 11:28:53,586 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:53,715 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:53,721 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().startsWith("ycclt", false)
2021-03-11 11:28:53,721 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]]
2021-03-11 11:28:53,721 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:28:53,721 [main:137] - GENERATING call of type public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]
2021-03-11 11:28:53,842 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:54,003 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:54,009 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().endsWith("ziyfy", true)
2021-03-11 11:28:54,010 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:28:54,010 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:28:54,136 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:54,136 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:28:54,259 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:54,265 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("mzaql").and(true)
2021-03-11 11:28:54,265 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]]
2021-03-11 11:28:54,265 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:28:54,388 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals(null)
2021-03-11 11:28:54,388 [main:110] - replacement of prope9 != "abc#31" of type Boolean is (Kla0({ "hxtps"}).callback).invoke().toBoolean()
2021-03-11 11:28:54,513 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:54,513 [main:66] - Compilation checking started
2021-03-11 11:28:54,931 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if ((Kla0({ "hxtps"}).callback).invoke().toBoolean()) {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:28:54,934 [main:103] - replacing (prope7, Function0<Unit>)
2021-03-11 11:28:54,934 [main:38] - replacing prope7 Function0<Unit>
2021-03-11 11:28:54,934 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:28:55,065 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:28:55,070 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:28:55,205 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:28:55,212 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:28:55,536 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:28:55,542 [main:95] - GENERATED = check(true)
2021-03-11 11:28:55,542 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { check(true)}
2021-03-11 11:28:55,542 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:55,707 [main:55] - randomType = Short
2021-03-11 11:28:55,841 [main:302] - generating value of type = Short true depth = 0
2021-03-11 11:28:55,883 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:28:55,909 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:28:55,913 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:28:55,932 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:28:55,943 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:28:55,972 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:28:55,972 [main:110] - replacement of prope7 of type Function0<Unit> is { check(true)}
2021-03-11 11:28:56,096 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 11:28:56,096 [main:66] - Compilation checking started
2021-03-11 11:28:56,568 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            { check(true)}()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:28:56,571 [main:103] - replacing (checkFinished && !prope6, Boolean)
2021-03-11 11:28:56,571 [main:38] - replacing checkFinished && !prope6 Boolean
2021-03-11 11:28:56,571 [main:42] - Getting value of type Boolean
2021-03-11 11:28:56,707 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:28:56,713 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:28:56,713 [main:49] - GENERATED IS CALL =false
2021-03-11 11:28:56,886 [main:55] - randomType = Char
2021-03-11 11:28:57,024 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:28:57,052 [main:137] - GENERATING call of type public final fun toDouble(): kotlin.Double defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@317f3713]
2021-03-11 11:28:57,053 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]
2021-03-11 11:28:57,197 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:57,197 [main:66] - Generated call from random type = ('뻄').toDouble().equals("ytwkp")
2021-03-11 11:28:57,198 [main:94] - GETTING Boolean from ULong
2021-03-11 11:28:57,228 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]]
2021-03-11 11:28:57,228 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:28:57,228 [main:137] - GENERATING call of type public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]
2021-03-11 11:28:57,228 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().isInfinite()
2021-03-11 11:28:57,229 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]]
2021-03-11 11:28:57,229 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:28:57,229 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]
2021-03-11 11:28:57,362 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:57,363 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().equals("jkvkc")
2021-03-11 11:28:57,363 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]]
2021-03-11 11:28:57,363 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:28:57,363 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]
2021-03-11 11:28:57,488 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:57,489 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().equals("fjxym")
2021-03-11 11:28:57,489 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]]
2021-03-11 11:28:57,489 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:28:57,489 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]
2021-03-11 11:28:57,617 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:57,617 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().equals("fkrar")
2021-03-11 11:28:57,618 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]]
2021-03-11 11:28:57,618 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:28:57,618 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]
2021-03-11 11:28:57,745 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:57,745 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().equals("cflod")
2021-03-11 11:28:57,745 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]]
2021-03-11 11:28:57,745 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:28:57,872 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:57,872 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("fnqqp")
2021-03-11 11:28:57,872 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:28:57,872 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:28:58,002 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:58,002 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:28:58,002 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("ijvsw").not()
2021-03-11 11:28:58,002 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongRange[DeserializedSimpleFunctionDescriptor@595fbf51]]
2021-03-11 11:28:58,003 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54]
2021-03-11 11:28:58,141 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:28:58,147 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongRange[DeserializedSimpleFunctionDescriptor@595fbf51]
2021-03-11 11:28:58,278 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:28:58,278 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).rangeTo(6016464300448307359.toULong()).equals("wuwwv")
2021-03-11 11:28:58,279 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54], public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ULongRange[DeserializedSimpleFunctionDescriptor@2833ecfa]]
2021-03-11 11:28:58,279 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54]
2021-03-11 11:28:58,408 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:28:58,416 [main:137] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ULongRange[DeserializedSimpleFunctionDescriptor@2833ecfa]
2021-03-11 11:28:58,416 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).rangeTo(9036838167473838490.toULong()).isEmpty()
2021-03-11 11:28:58,416 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.ULongRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dd1b3c0]]
2021-03-11 11:28:58,416 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54]
2021-03-11 11:28:58,550 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:28:58,556 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.ULongRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dd1b3c0]
2021-03-11 11:28:58,693 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:28:58,727 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).rangeTo(4742540759444278151.toULong()).contains(55.toUByte())
2021-03-11 11:28:58,727 [main:110] - replacement of checkFinished && !prope6 of type Boolean is ((6516632970651683513.toULong())).equals("fnqqp")
2021-03-11 11:28:58,853 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:28:58,854 [main:66] - Compilation checking started
2021-03-11 11:28:59,260 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (((6516632970651683513.toULong())).equals("fnqqp")) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:28:59,263 [main:103] - replacing ("tail-call optimization hit: method " + method, String)
2021-03-11 11:28:59,264 [main:38] - replacing "tail-call optimization hit: method " + method String
2021-03-11 11:28:59,264 [main:42] - Getting value of type String
2021-03-11 11:28:59,388 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:28:59,393 [main:46] - GENERATED VALUE OF TYPE String = "jbwuj"
2021-03-11 11:28:59,394 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:00,535 [main:55] - randomType = MutableMap<Function1<Function2<Char, Double, Kla4>, UByte?>, UByte>
2021-03-11 11:29:00,536 [main:94] - GETTING String from ULong
2021-03-11 11:29:00,563 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:29:00,563 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:00,686 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:00,692 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:29:00,821 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:00,827 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(40.toUByte()).toString(-1995334589)
2021-03-11 11:29:00,827 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:29:00,827 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:00,827 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:29:00,958 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:00,964 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().toString(1625948529)
2021-03-11 11:29:00,965 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:29:00,965 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:29:00,965 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:29:01,087 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:01,094 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().toString(294626112)
2021-03-11 11:29:01,094 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:29:01,094 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:29:01,094 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:29:01,244 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:01,250 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().toString(-921700401)
2021-03-11 11:29:01,251 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:29:01,251 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:29:01,379 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:01,385 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toString(-2069991985)
2021-03-11 11:29:01,386 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:29:01,386 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:29:01,386 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:29:01,525 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:01,531 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toString(-372532955)
2021-03-11 11:29:01,531 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:29:01,531 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:01,532 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:29:01,667 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:01,674 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().toString(1659094828)
2021-03-11 11:29:01,674 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:29:01,674 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:29:01,674 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:29:01,805 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:01,811 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toString(85519139)
2021-03-11 11:29:01,811 [main:110] - replacement of "tail-call optimization hit: method " + method of type String is (6516632970651683513.toULong()).compareTo(40.toUByte()).toString(-1995334589)
2021-03-11 11:29:01,934 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:01,935 [main:66] - Compilation checking started
2021-03-11 11:29:02,340 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error((6516632970651683513.toULong()).compareTo(40.toUByte()).toString(-1995334589) + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:02,343 [main:103] - replacing (prope2.prope6, Boolean)
2021-03-11 11:29:02,343 [main:38] - replacing prope2.prope6 Boolean
2021-03-11 11:29:02,343 [main:42] - Getting value of type Boolean
2021-03-11 11:29:02,477 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:02,483 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:29:02,483 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:02,497 [main:55] - randomType = UByte
2021-03-11 11:29:02,623 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:02,659 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7ac5ee3d]
2021-03-11 11:29:02,660 [main:137] - GENERATING call of type public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]
2021-03-11 11:29:02,660 [main:66] - Generated call from random type = (110.toUByte()).toFloat().isFinite()
2021-03-11 11:29:02,660 [main:94] - GETTING Boolean from Any
2021-03-11 11:29:02,663 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:29:02,663 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:29:02,786 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:02,787 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:29:02,911 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:02,917 [main:105] - GENERATED CALL = (l).equals("ycqnz").or(false)
2021-03-11 11:29:02,917 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:29:02,917 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:29:03,042 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:03,042 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:29:03,042 [main:105] - GENERATED CALL = (l).equals("riubg").not()
2021-03-11 11:29:03,042 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:29:03,042 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:29:03,168 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:03,169 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:29:03,292 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:03,298 [main:105] - GENERATED CALL = (l).equals("ditti").and(false)
2021-03-11 11:29:03,298 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:29:03,298 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:29:03,424 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:03,425 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:29:03,548 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:03,554 [main:105] - GENERATED CALL = (l).equals("atzje").xor(false)
2021-03-11 11:29:03,555 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]]
2021-03-11 11:29:03,555 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:29:03,700 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:03,701 [main:105] - GENERATED CALL = (l).equals("fqtle")
2021-03-11 11:29:03,701 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:29:03,701 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:29:03,831 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:03,832 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:29:03,967 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:03,967 [main:105] - GENERATED CALL = (l).equals("ihysf").equals("egyvp")
2021-03-11 11:29:03,967 [main:110] - replacement of prope2.prope6 of type Boolean is (l).equals("atzje").xor(false)
2021-03-11 11:29:04,098 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:04,099 [main:66] - Compilation checking started
2021-03-11 11:29:04,521 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            (l).equals("atzje").xor(false) = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:04,524 [main:103] - replacing (1, Int)
2021-03-11 11:29:04,525 [main:38] - replacing 1 Int
2021-03-11 11:29:04,525 [main:42] - Getting value of type Int
2021-03-11 11:29:04,662 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:04,668 [main:46] - GENERATED VALUE OF TYPE Int = -1194369416
2021-03-11 11:29:04,668 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:05,028 [main:55] - randomType = LinkedHashSet<UInt>
2021-03-11 11:29:05,150 [main:302] - generating value of type = LinkedHashSet<UInt> false depth = 0
2021-03-11 11:29:05,285 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: UInt): LkedHashSet<UInt> = TODO()
2021-03-11 11:29:05,294 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: UInt): LkedHashSet<UInt> = TODO()
2021-03-11 11:29:05,438 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 11:29:05,444 [main:95] - GENERATED = linkedSetOf<UInt>(2029018490.toUInt())
2021-03-11 11:29:05,620 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]
2021-03-11 11:29:05,746 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:05,752 [main:66] - Generated call from random type = (linkedSetOf<UInt>(2029018490.toUInt())).size.and(-1868701076)
2021-03-11 11:29:05,753 [main:94] - GETTING Int from ULong
2021-03-11 11:29:05,785 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]]
2021-03-11 11:29:05,785 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:05,786 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]
2021-03-11 11:29:05,920 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:05,927 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().plus(48)
2021-03-11 11:29:05,927 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]]
2021-03-11 11:29:05,927 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:29:05,927 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]
2021-03-11 11:29:05,928 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().toInt()
2021-03-11 11:29:05,928 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]]
2021-03-11 11:29:05,928 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:06,064 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:06,070 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]
2021-03-11 11:29:06,240 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:06,246 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(103.toUByte()).and(-218714232)
2021-03-11 11:29:06,246 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42411fed]]
2021-03-11 11:29:06,246 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:06,369 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:06,375 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42411fed]
2021-03-11 11:29:06,500 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:06,506 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(110.toUByte()).shr(-1696189023)
2021-03-11 11:29:06,506 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@76b82e74]]
2021-03-11 11:29:06,506 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:29:06,506 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@76b82e74]
2021-03-11 11:29:06,506 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().toInt()
2021-03-11 11:29:06,506 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3bf4390d]]
2021-03-11 11:29:06,506 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:06,507 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3bf4390d]
2021-03-11 11:29:06,507 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().toInt()
2021-03-11 11:29:06,507 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7adb8d6f]]
2021-03-11 11:29:06,507 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:29:06,507 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7adb8d6f]
2021-03-11 11:29:06,507 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().toInt()
2021-03-11 11:29:06,507 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@835ccea]]
2021-03-11 11:29:06,507 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:29:06,507 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@835ccea]
2021-03-11 11:29:06,507 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().roundToInt()
2021-03-11 11:29:06,507 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@65f973c0]]
2021-03-11 11:29:06,507 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:29:06,508 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().sign
2021-03-11 11:29:06,508 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]]
2021-03-11 11:29:06,508 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:06,508 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]
2021-03-11 11:29:06,631 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:06,637 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().times(54)
2021-03-11 11:29:06,637 [main:110] - replacement of 1 of type Int is (6516632970651683513.toULong()).toUByte().toInt()
2021-03-11 11:29:06,758 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:06,759 [main:66] - Compilation checking started
2021-03-11 11:29:07,164 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = (6516632970651683513.toULong()).toUByte().toInt(),
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:07,167 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30, Int)
2021-03-11 11:29:07,167 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 Int
2021-03-11 11:29:07,167 [main:42] - Getting value of type Int
2021-03-11 11:29:07,290 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:07,296 [main:46] - GENERATED VALUE OF TYPE Int = -712547766
2021-03-11 11:29:07,296 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:07,320 [main:55] - randomType = Kla0
2021-03-11 11:29:07,462 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 11:29:07,468 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:29:07,629 [main:194] - Type params = []
2021-03-11 11:29:07,763 [main:302] - generating value of type = Function0<String> false depth = 2
2021-03-11 11:29:07,769 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:29:07,781 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla0[DeserializedSimpleFunctionDescriptor@2f5353a6]
2021-03-11 11:29:07,905 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:07,905 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:29:08,031 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:08,037 [main:66] - Generated call from random type = (Kla0({ "qmeqr"})).equals("awzam").compareTo(true)
2021-03-11 11:29:08,039 [main:94] - GETTING Int from String
2021-03-11 11:29:08,059 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]]
2021-03-11 11:29:08,060 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:29:08,185 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:08,191 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]
2021-03-11 11:29:08,326 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:08,332 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("rbejp").rotateRight(848411074)
2021-03-11 11:29:08,333 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:29:08,333 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:29:08,333 [main:105] - GENERATED CALL = (Kla1().prope0).length.inc()
2021-03-11 11:29:08,333 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]]
2021-03-11 11:29:08,333 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]
2021-03-11 11:29:08,463 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:08,469 [main:105] - GENERATED CALL = (Kla1().prope0).length.or(1310768964)
2021-03-11 11:29:08,469 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]]
2021-03-11 11:29:08,469 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]
2021-03-11 11:29:08,469 [main:105] - GENERATED CALL = (Kla1().prope0).length.unaryMinus()
2021-03-11 11:29:08,469 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public val kotlin.CharSequence.lastIndex: kotlin.Int defined in kotlin.text[DeserializedPropertyDescriptor@4fba6ff1]]
2021-03-11 11:29:08,469 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:29:08,628 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:08,761 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:08,767 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(1687184074, -1850397141).lastIndex
2021-03-11 11:29:08,767 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.count(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@341cd084]]
2021-03-11 11:29:08,767 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:29:08,892 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:09,021 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:09,028 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.count(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@341cd084]
2021-03-11 11:29:09,028 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(557458820, -1178052489).count()
2021-03-11 11:29:09,028 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]]
2021-03-11 11:29:09,028 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]
2021-03-11 11:29:09,150 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:09,157 [main:105] - GENERATED CALL = (Kla1().prope0).length.rem(124)
2021-03-11 11:29:09,157 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.indexOfAny(chars: kotlin.CharArray, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4136631b]]
2021-03-11 11:29:09,157 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:29:09,280 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:09,408 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:09,414 [main:137] - GENERATING call of type public fun kotlin.CharSequence.indexOfAny(chars: kotlin.CharArray, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4136631b]
2021-03-11 11:29:09,536 [main:302] - generating value of type = CharArray false depth = 0
2021-03-11 11:29:09,670 [main:43] - GENERATING CALL OF fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-11 11:29:09,677 [main:61] - WITHOUT TYPE PARAMS = fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-11 11:29:09,850 [main:302] - generating value of type = Char true depth = 3
2021-03-11 11:29:09,857 [main:95] - GENERATED = charArrayOf('')
2021-03-11 11:29:09,987 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:10,125 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:10,131 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(456815050, 881646913).indexOfAny(charArrayOf(''), -1124997314, false)
2021-03-11 11:29:10,131 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d9fa6ba]]
2021-03-11 11:29:10,131 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d9fa6ba]
2021-03-11 11:29:10,255 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:10,261 [main:105] - GENERATED CALL = (Kla1().prope0).length.plus(121)
2021-03-11 11:29:10,261 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]]
2021-03-11 11:29:10,261 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]
2021-03-11 11:29:10,382 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:10,388 [main:105] - GENERATED CALL = (Kla1().prope0).length.and(-1253263553)
2021-03-11 11:29:10,388 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 of type Int is (Kla1().prope0).length.inc()
2021-03-11 11:29:10,510 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:10,510 [main:66] - Compilation checking started
2021-03-11 11:29:10,919 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((Kla1().prope0).length.inc() + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:10,922 [main:103] - replacing (true, Boolean)
2021-03-11 11:29:10,922 [main:38] - replacing true Boolean
2021-03-11 11:29:10,923 [main:42] - Getting value of type Boolean
2021-03-11 11:29:11,062 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:11,069 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:29:11,069 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:11,121 [main:55] - randomType = Kla8
2021-03-11 11:29:11,250 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-11 11:29:11,256 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-11 11:29:11,264 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:29:11,388 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:11,394 [main:66] - Generated call from random type = (Kla8()).prope6.and(true)
2021-03-11 11:29:11,394 [main:110] - replacement of true of type Boolean is (Kla8()).prope6.and(true)
2021-03-11 11:29:11,526 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:11,527 [main:66] - Compilation checking started
2021-03-11 11:29:12,040 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = (Kla8()).prope6.and(true)
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:12,043 [main:103] - replacing (prope5, Int)
2021-03-11 11:29:12,043 [main:38] - replacing prope5 Int
2021-03-11 11:29:12,044 [main:42] - Getting value of type Int
2021-03-11 11:29:12,207 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:12,215 [main:46] - GENERATED VALUE OF TYPE Int = 1981831583
2021-03-11 11:29:12,215 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:12,424 [main:55] - randomType = Kla9
2021-03-11 11:29:12,619 [main:302] - generating value of type = Kla9 false depth = 0
2021-03-11 11:29:12,627 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:29:12,667 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla9[DeserializedSimpleFunctionDescriptor@612c87c6]
2021-03-11 11:29:12,797 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:12,797 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:29:12,953 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:12,960 [main:66] - Generated call from random type = (Kla9).equals("ptnbp").compareTo(true)
2021-03-11 11:29:12,961 [main:94] - GETTING Int from UByte
2021-03-11 11:29:13,017 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]]
2021-03-11 11:29:13,018 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:29:13,182 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:13,188 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(118.toUByte())
2021-03-11 11:29:13,188 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]]
2021-03-11 11:29:13,188 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:29:13,188 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]
2021-03-11 11:29:13,317 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:13,323 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().compareTo(110)
2021-03-11 11:29:13,324 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]]
2021-03-11 11:29:13,324 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:29:13,324 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]
2021-03-11 11:29:13,462 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:13,469 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().compareTo(1.toUByte())
2021-03-11 11:29:13,469 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]]
2021-03-11 11:29:13,469 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:29:13,469 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]
2021-03-11 11:29:13,469 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().countOneBits()
2021-03-11 11:29:13,469 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54e1c058]]
2021-03-11 11:29:13,469 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:29:13,598 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:13,604 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54e1c058]
2021-03-11 11:29:13,728 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:13,734 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(67.toUByte()).compareTo(32)
2021-03-11 11:29:13,734 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]]
2021-03-11 11:29:13,734 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:29:13,734 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 11:29:13,734 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().countOneBits()
2021-03-11 11:29:13,735 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]]
2021-03-11 11:29:13,735 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:29:13,856 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:13,862 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]
2021-03-11 11:29:14,015 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:14,021 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(5.toUByte()).div(-24)
2021-03-11 11:29:14,022 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a], public final val step: kotlin.Int defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@4e0dfdf4]]
2021-03-11 11:29:14,022 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a]
2021-03-11 11:29:14,144 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:14,150 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).rangeTo(92.toUByte()).step
2021-03-11 11:29:14,150 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]]
2021-03-11 11:29:14,150 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:29:14,150 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]
2021-03-11 11:29:14,150 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().toBits()
2021-03-11 11:29:14,150 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]]
2021-03-11 11:29:14,150 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:29:14,151 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]
2021-03-11 11:29:14,151 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().countLeadingZeroBits()
2021-03-11 11:29:14,151 [main:110] - replacement of prope5 of type Int is 1981831583
2021-03-11 11:29:14,287 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 11:29:14,288 [main:66] - Compilation checking started
2021-03-11 11:29:14,711 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        1981831583++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:14,714 [main:103] - replacing ("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n"), String)
2021-03-11 11:29:14,714 [main:38] - replacing "tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n") String
2021-03-11 11:29:14,714 [main:42] - Getting value of type String
2021-03-11 11:29:14,843 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:14,848 [main:46] - GENERATED VALUE OF TYPE String = "vrlix"
2021-03-11 11:29:14,849 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:15,027 [main:55] - randomType = String?
2021-03-11 11:29:15,152 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:15,182 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@56b1a486]
2021-03-11 11:29:15,309 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:15,309 [main:137] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9b6dfe8]
2021-03-11 11:29:15,433 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:15,439 [main:66] - Generated call from random type = ("houoh")?.plus("jotde").replaceIndent("vawpw")
2021-03-11 11:29:15,440 [main:94] - GETTING String from Function0<String>
2021-03-11 11:29:15,451 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6acbc1b7]]
2021-03-11 11:29:15,451 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:15,451 [main:137] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6acbc1b7]
2021-03-11 11:29:15,586 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:29:15,722 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:29:15,729 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:29:16,081 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:29:16,087 [main:95] - GENERATED = StringBuilder(-378304636)
2021-03-11 11:29:16,088 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().removeSurrounding(StringBuilder(-378304636))
2021-03-11 11:29:16,088 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52f43270]]
2021-03-11 11:29:16,088 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:16,088 [main:137] - GENERATING call of type public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52f43270]
2021-03-11 11:29:16,217 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:16,223 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().prependIndent("licep")
2021-03-11 11:29:16,223 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]]
2021-03-11 11:29:16,223 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:16,223 [main:137] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]
2021-03-11 11:29:16,224 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimIndent()
2021-03-11 11:29:16,224 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]]
2021-03-11 11:29:16,224 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:16,224 [main:137] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]
2021-03-11 11:29:16,350 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:16,479 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:29:16,485 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().padStart(-1051626020, '杂')
2021-03-11 11:29:16,485 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1843892a]]
2021-03-11 11:29:16,485 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:16,485 [main:137] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1843892a]
2021-03-11 11:29:16,637 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:29:16,769 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:29:16,776 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:29:17,084 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:29:17,090 [main:95] - GENERATED = StringBuilder(-1964808779)
2021-03-11 11:29:17,090 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().removeSuffix(StringBuilder(-1964808779))
2021-03-11 11:29:17,091 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60a5b9e5]]
2021-03-11 11:29:17,091 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:17,091 [main:137] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60a5b9e5]
2021-03-11 11:29:17,214 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:29:17,220 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:29:17,227 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().takeLastWhile({a: Char -> true})
2021-03-11 11:29:17,227 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]]
2021-03-11 11:29:17,228 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:17,228 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]
2021-03-11 11:29:17,350 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:17,480 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:17,613 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:29:17,775 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 11:29:17,784 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 11:29:18,158 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 11:29:18,167 [main:95] - GENERATED = StringBuilder("zhojz")
2021-03-11 11:29:18,168 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceRange(-1375488151, 1114960281, StringBuilder("zhojz"))
2021-03-11 11:29:18,168 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]]
2021-03-11 11:29:18,168 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:18,168 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]
2021-03-11 11:29:18,168 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimEnd()
2021-03-11 11:29:18,168 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e44f086]]
2021-03-11 11:29:18,168 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:18,168 [main:137] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e44f086]
2021-03-11 11:29:18,168 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().decapitalize()
2021-03-11 11:29:18,168 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64daa8f3]]
2021-03-11 11:29:18,168 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:18,169 [main:137] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64daa8f3]
2021-03-11 11:29:18,291 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:29:18,296 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:29:18,302 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().dropWhile({a: Char -> true})
2021-03-11 11:29:18,302 [main:110] - replacement of "tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n") of type String is (Kla0({ "hxtps"}).callback).invoke().removeSuffix(StringBuilder(-1964808779))
2021-03-11 11:29:18,425 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:18,426 [main:66] - Compilation checking started
2021-03-11 11:29:18,917 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error((Kla0({ "hxtps"}).callback).invoke().removeSuffix(StringBuilder(-1964808779))) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:18,921 [main:103] - replacing (1, Int)
2021-03-11 11:29:18,922 [main:38] - replacing 1 Int
2021-03-11 11:29:18,922 [main:42] - Getting value of type Int
2021-03-11 11:29:19,064 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:19,070 [main:46] - GENERATED VALUE OF TYPE Int = -272548765
2021-03-11 11:29:19,070 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:19,289 [main:55] - randomType = Byte
2021-03-11 11:29:19,489 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:19,539 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]
2021-03-11 11:29:19,665 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:19,672 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@25463407]
2021-03-11 11:29:19,810 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:19,820 [main:66] - Generated call from random type = (25).compareTo(18).xor(-1447310610)
2021-03-11 11:29:19,821 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:29:19,842 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:29:19,842 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:19,843 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:29:19,843 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:29:19,843 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:29:19,843 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:19,843 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:29:19,996 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:20,133 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:20,139 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("auddx", true)
2021-03-11 11:29:20,140 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:29:20,140 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:29:20,271 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:20,271 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:29:20,411 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:20,417 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("xqefl").compareTo(false)
2021-03-11 11:29:20,418 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:29:20,418 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:20,418 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:29:20,418 [main:110] - replacement of 1 of type Int is -272548765
2021-03-11 11:29:20,549 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 11:29:20,549 [main:66] - Compilation checking started
2021-03-11 11:29:20,985 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = -272548765,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:20,988 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8, Int)
2021-03-11 11:29:20,988 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 Int
2021-03-11 11:29:20,988 [main:42] - Getting value of type Int
2021-03-11 11:29:21,117 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:21,123 [main:46] - GENERATED VALUE OF TYPE Int = 985084755
2021-03-11 11:29:21,123 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:21,662 [main:55] - randomType = HashSet<Float?>
2021-03-11 11:29:21,794 [main:302] - generating value of type = HashSet<Float?> false depth = 0
2021-03-11 11:29:21,931 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): HashSet<Float?> = TODO()
2021-03-11 11:29:21,938 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): HashSet<Float?> = TODO()
2021-03-11 11:29:22,092 [main:95] - GENERATED = linkedSetOf<Float?>()
2021-03-11 11:29:22,259 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:29:22,388 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:22,394 [main:66] - Generated call from random type = (linkedSetOf<Float?>()).size.ushr(1186513727)
2021-03-11 11:29:22,395 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:29:22,406 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:29:22,407 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:22,407 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:29:22,407 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:29:22,407 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:29:22,407 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:22,407 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:29:22,407 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:29:22,407 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:22,407 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:29:22,532 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:22,663 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:22,669 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("pwgbo", true)
2021-03-11 11:29:22,669 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:29:22,669 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:29:22,801 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:22,801 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:29:22,934 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:22,941 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("qicxb").compareTo(true)
2021-03-11 11:29:22,941 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 of type Int is (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:29:23,069 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:23,069 [main:66] - Compilation checking started
2021-03-11 11:29:23,481 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((Kla0({ "hxtps"}).callback).invoke().length + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:23,484 [main:103] - replacing (prope3, String)
2021-03-11 11:29:23,484 [main:38] - replacing prope3 String
2021-03-11 11:29:23,484 [main:42] - Getting value of type String
2021-03-11 11:29:23,612 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:23,618 [main:46] - GENERATED VALUE OF TYPE String = "krfwf"
2021-03-11 11:29:23,618 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:23,963 [main:55] - randomType = HashSet<Short>
2021-03-11 11:29:24,094 [main:302] - generating value of type = HashSet<Short> false depth = 0
2021-03-11 11:29:24,238 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Short): HashSet<Short> = TODO()
2021-03-11 11:29:24,246 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Short): HashSet<Short> = TODO()
2021-03-11 11:29:24,400 [main:302] - generating value of type = Short true depth = 3
2021-03-11 11:29:24,407 [main:95] - GENERATED = linkedSetOf<Short>(-2156)
2021-03-11 11:29:24,537 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:29:24,672 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:24,680 [main:66] - Generated call from random type = (linkedSetOf<Short>(-2156)).size.toString(-794688496)
2021-03-11 11:29:24,681 [main:94] - GETTING String from Any
2021-03-11 11:29:24,687 [main:94] - GETTING String from ULong
2021-03-11 11:29:24,716 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:29:24,717 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:29:24,717 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:29:24,882 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:24,889 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(-452663081)
2021-03-11 11:29:24,889 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:29:24,889 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:25,021 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:25,028 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:29:25,154 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:25,160 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(68.toUByte()).toString(1370376678)
2021-03-11 11:29:25,160 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:29:25,160 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:29:25,283 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:25,289 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(-1256100845)
2021-03-11 11:29:25,289 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:29:25,289 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:29:25,290 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:29:25,414 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:25,420 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(-1910416220)
2021-03-11 11:29:25,420 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:29:25,420 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:25,420 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:29:25,545 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:25,551 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(1266195051)
2021-03-11 11:29:25,551 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:29:25,551 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:29:25,551 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:29:25,674 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:25,680 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(-1935400910)
2021-03-11 11:29:25,680 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:29:25,680 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:29:25,680 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:29:25,804 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:25,810 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(-1545182577)
2021-03-11 11:29:25,810 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:29:25,810 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:25,810 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:29:25,963 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:25,969 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(-1963630224)
2021-03-11 11:29:25,970 [main:110] - replacement of prope3 of type String is ((6516632970651683513.toULong())).toUShort().toString(-452663081)
2021-03-11 11:29:26,130 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:26,131 [main:66] - Compilation checking started
2021-03-11 11:29:26,603 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            ((6516632970651683513.toULong())).toUShort().toString(-452663081) = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:26,607 [main:103] - replacing (1, Int)
2021-03-11 11:29:26,607 [main:38] - replacing 1 Int
2021-03-11 11:29:26,607 [main:42] - Getting value of type Int
2021-03-11 11:29:26,751 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:26,758 [main:46] - GENERATED VALUE OF TYPE Int = 2097537906
2021-03-11 11:29:26,758 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:26,783 [main:55] - randomType = Kla4
2021-03-11 11:29:26,934 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 11:29:26,941 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}
2021-03-11 11:29:27,083 [main:194] - Type params = []
2021-03-11 11:29:27,206 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-11 11:29:27,343 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:29:27,352 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:29:27,736 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-11 11:29:27,880 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:29:27,887 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:29:28,444 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:29:28,444 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:29:28,463 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla4[DeserializedSimpleFunctionDescriptor@35ab24de]
2021-03-11 11:29:28,595 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:28,595 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:29:28,730 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:28,736 [main:66] - Generated call from random type = (Kla4()).equals("bximi").compareTo(true)
2021-03-11 11:29:28,737 [main:94] - GETTING Int from ULong
2021-03-11 11:29:28,778 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]]
2021-03-11 11:29:28,778 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:28,903 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:28,909 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]
2021-03-11 11:29:28,909 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(11.toUByte()).countLeadingZeroBits()
2021-03-11 11:29:28,909 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]]
2021-03-11 11:29:28,909 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:29,034 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:29,040 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]
2021-03-11 11:29:29,168 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:29,175 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(117.toUByte()).coerceAtMost(1695604683)
2021-03-11 11:29:29,175 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8070dd9]]
2021-03-11 11:29:29,175 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8070dd9]
2021-03-11 11:29:29,175 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).countOneBits()
2021-03-11 11:29:29,175 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c250e82]]
2021-03-11 11:29:29,176 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:29:29,176 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c250e82]
2021-03-11 11:29:29,176 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().countLeadingZeroBits()
2021-03-11 11:29:29,176 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:29:29,176 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:29,302 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:29,309 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:29:29,433 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:29,441 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(101.toUByte()).shl(471059167)
2021-03-11 11:29:29,441 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]]
2021-03-11 11:29:29,441 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:29:29,441 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]
2021-03-11 11:29:29,572 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:29,578 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().compareTo(88)
2021-03-11 11:29:29,578 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]]
2021-03-11 11:29:29,578 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:29,711 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:29,718 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]
2021-03-11 11:29:29,718 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(121.toUByte()).dec()
2021-03-11 11:29:29,718 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@38aa7ed8]]
2021-03-11 11:29:29,718 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@38aa7ed8]
2021-03-11 11:29:29,719 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).countTrailingZeroBits()
2021-03-11 11:29:29,719 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]]
2021-03-11 11:29:29,719 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:29,848 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:29,854 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:29:29,854 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(39.toUByte()).countOneBits()
2021-03-11 11:29:29,855 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5b9beac9]]
2021-03-11 11:29:29,855 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:29,855 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5b9beac9]
2021-03-11 11:29:29,855 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().unaryMinus()
2021-03-11 11:29:29,855 [main:110] - replacement of 1 of type Int is (6516632970651683513.toULong()).compareTo(39.toUByte()).countOneBits()
2021-03-11 11:29:29,991 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:29,991 [main:66] - Compilation checking started
2021-03-11 11:29:30,474 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = (6516632970651683513.toULong()).compareTo(39.toUByte()).countOneBits()
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:30,477 [main:103] - replacing (", got ", String)
2021-03-11 11:29:30,477 [main:38] - replacing ", got " String
2021-03-11 11:29:30,477 [main:42] - Getting value of type String
2021-03-11 11:29:30,616 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:30,623 [main:46] - GENERATED VALUE OF TYPE String = "aulwz"
2021-03-11 11:29:30,623 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:30,798 [main:55] - randomType = Double
2021-03-11 11:29:30,922 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:29:30,964 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:29:31,090 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:31,096 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:29:31,226 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:31,232 [main:66] - Generated call from random type = (0.7633365253117405).compareTo(-88).toString(2046547232)
2021-03-11 11:29:31,232 [main:94] - GETTING String from String
2021-03-11 11:29:31,252 [main:101] - Case = [public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5109e79f]]
2021-03-11 11:29:31,252 [main:137] - GENERATING call of type public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5109e79f]
2021-03-11 11:29:31,252 [main:105] - GENERATED CALL = (Kla1().prope0).capitalize()
2021-03-11 11:29:31,252 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a06694b]]
2021-03-11 11:29:31,252 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:29:31,381 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:31,513 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:31,519 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a06694b]
2021-03-11 11:29:31,655 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:31,802 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:31,809 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1001193762, -275493942).substring(-1272736267, 388263135)
2021-03-11 11:29:31,809 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@756e7e16]]
2021-03-11 11:29:31,809 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@756e7e16]
2021-03-11 11:29:31,809 [main:105] - GENERATED CALL = (Kla1().prope0).trim()
2021-03-11 11:29:31,809 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.repeat(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20f36d19]]
2021-03-11 11:29:31,809 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:29:31,949 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:32,084 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:32,091 [main:137] - GENERATING call of type public fun kotlin.CharSequence.repeat(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20f36d19]
2021-03-11 11:29:32,221 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:32,228 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(1706155623, 1754198163).repeat(-2087133840)
2021-03-11 11:29:32,228 [main:101] - Case = [public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@11347c7b]]
2021-03-11 11:29:32,229 [main:137] - GENERATING call of type public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@11347c7b]
2021-03-11 11:29:32,361 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:32,546 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:32,553 [main:105] - GENERATED CALL = (Kla1().prope0).replaceIndentByMargin("yiggg", "plpii")
2021-03-11 11:29:32,553 [main:101] - Case = [public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c1014c7]]
2021-03-11 11:29:32,553 [main:137] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c1014c7]
2021-03-11 11:29:32,730 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:32,738 [main:105] - GENERATED CALL = (Kla1().prope0).dropLast(1042763699)
2021-03-11 11:29:32,738 [main:101] - Case = [public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@765082f0]]
2021-03-11 11:29:32,738 [main:137] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@765082f0]
2021-03-11 11:29:32,907 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:32,917 [main:105] - GENERATED CALL = (Kla1().prope0).drop(1132013305)
2021-03-11 11:29:32,917 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@67329432]]
2021-03-11 11:29:32,917 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:29:33,079 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:33,085 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@67329432]
2021-03-11 11:29:33,085 [main:105] - GENERATED CALL = (Kla1().prope0).get(-2120568393).lowercase()
2021-03-11 11:29:33,085 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:29:33,085 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:29:33,286 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:33,292 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:29:33,451 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:33,459 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("jszpz").toString(-438313884)
2021-03-11 11:29:33,459 [main:101] - Case = [public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]]
2021-03-11 11:29:33,459 [main:137] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]
2021-03-11 11:29:33,604 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:29:33,610 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:29:33,616 [main:105] - GENERATED CALL = (Kla1().prope0).takeWhile({a: Char -> true})
2021-03-11 11:29:33,616 [main:110] - replacement of ", got " of type String is (Kla1().prope0).dropLast(1042763699)
2021-03-11 11:29:33,750 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:33,751 [main:66] - Compilation checking started
2021-03-11 11:29:34,174 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + (Kla1().prope0).dropLast(1042763699) + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:34,178 [main:103] - replacing (this, Kla5)
2021-03-11 11:29:34,178 [main:38] - replacing this Kla5
2021-03-11 11:29:34,178 [main:42] - Getting value of type Kla5
2021-03-11 11:29:34,328 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-11 11:29:34,333 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:29:34,334 [main:46] - GENERATED VALUE OF TYPE Kla5 = Kla5()
2021-03-11 11:29:34,334 [main:49] - GENERATED IS CALL =true
2021-03-11 11:29:34,346 [main:55] - randomType = Long
2021-03-11 11:29:34,472 [main:302] - generating value of type = Long true depth = 0
2021-03-11 11:29:34,538 [main:94] - GETTING Kla5 from Any
2021-03-11 11:29:34,544 [main:94] - GETTING Kla5 from ULong
2021-03-11 11:29:34,589 [main:94] - GETTING Kla5 from Function0<String>
2021-03-11 11:29:34,604 [main:94] - GETTING Kla5 from String
2021-03-11 11:29:34,635 [main:94] - GETTING Kla5 from UByte
2021-03-11 11:29:34,680 [main:94] - GETTING Kla5 from ULong
2021-03-11 11:29:34,680 [main:110] - replacement of this of type Kla5 is Kla5()
2021-03-11 11:29:34,805 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:29:34,805 [main:66] - Compilation checking started
2021-03-11 11:29:35,320 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
Kla5().prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:35,323 [main:103] - replacing (i29, Int)
2021-03-11 11:29:35,323 [main:38] - replacing i29 Int
2021-03-11 11:29:35,323 [main:42] - Getting value of type Int
2021-03-11 11:29:35,471 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:35,478 [main:46] - GENERATED VALUE OF TYPE Int = -482913612
2021-03-11 11:29:35,478 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:35,490 [main:55] - randomType = Int
2021-03-11 11:29:35,637 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:35,701 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4fd9603f]
2021-03-11 11:29:35,701 [main:66] - Generated call from random type = (1415730429).toInt().sign
2021-03-11 11:29:35,702 [main:94] - GETTING Int from ULong
2021-03-11 11:29:35,742 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]]
2021-03-11 11:29:35,742 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:35,883 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:35,889 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]
2021-03-11 11:29:35,890 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(56.toUByte()).countLeadingZeroBits()
2021-03-11 11:29:35,890 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@70fae96b]]
2021-03-11 11:29:35,890 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@70fae96b]
2021-03-11 11:29:35,890 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).countLeadingZeroBits()
2021-03-11 11:29:35,890 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]]
2021-03-11 11:29:35,890 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:29:35,890 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:29:36,014 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:36,020 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().compareTo(-55)
2021-03-11 11:29:36,020 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@16a81431]]
2021-03-11 11:29:36,020 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:36,021 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@16a81431]
2021-03-11 11:29:36,021 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toInt()
2021-03-11 11:29:36,021 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:29:36,021 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:36,148 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:36,155 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:29:36,281 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:36,288 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(43.toUByte()).ushr(1551410098)
2021-03-11 11:29:36,288 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]]
2021-03-11 11:29:36,288 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:36,288 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]
2021-03-11 11:29:36,441 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:36,447 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().plus(119)
2021-03-11 11:29:36,447 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]]
2021-03-11 11:29:36,447 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:36,575 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:36,581 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:29:36,581 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(117.toUByte()).countOneBits()
2021-03-11 11:29:36,581 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6473cf19]]
2021-03-11 11:29:36,581 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:36,581 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6473cf19]
2021-03-11 11:29:36,582 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().unaryMinus()
2021-03-11 11:29:36,582 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]]
2021-03-11 11:29:36,582 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:36,582 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]
2021-03-11 11:29:36,582 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().unaryPlus()
2021-03-11 11:29:36,582 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]]
2021-03-11 11:29:36,582 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:36,582 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 11:29:36,582 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().countOneBits()
2021-03-11 11:29:36,582 [main:110] - replacement of i29 of type Int is ((6516632970651683513.toULong())).toDouble().compareTo(-55)
2021-03-11 11:29:36,708 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:36,709 [main:66] - Compilation checking started
2021-03-11 11:29:37,114 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + ((6516632970651683513.toULong())).toDouble().compareTo(-55) + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:37,117 [main:103] - replacing (true, Boolean)
2021-03-11 11:29:37,117 [main:38] - replacing true Boolean
2021-03-11 11:29:37,117 [main:42] - Getting value of type Boolean
2021-03-11 11:29:37,240 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:37,245 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:29:37,246 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:38,529 [main:55] - randomType = Function2<MutableMap<String?, Kla1>?, Short?, Long>
2021-03-11 11:29:38,531 [main:94] - GETTING Boolean from Function0<String>
2021-03-11 11:29:38,544 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46e35a2]]
2021-03-11 11:29:38,544 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:38,544 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46e35a2]
2021-03-11 11:29:38,544 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toBoolean()
2021-03-11 11:29:38,545 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:29:38,545 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:29:38,670 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:29:38,792 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:38,798 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals(null).and(false)
2021-03-11 11:29:38,798 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:29:38,798 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:29:38,928 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:38,928 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:29:38,928 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("zcxlr").not()
2021-03-11 11:29:38,929 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:29:38,929 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:29:39,057 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:39,057 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:29:39,217 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:39,224 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("tnidf").xor(true)
2021-03-11 11:29:39,224 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]]
2021-03-11 11:29:39,224 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:39,224 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]
2021-03-11 11:29:39,354 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:39,354 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().equals("pfwmi")
2021-03-11 11:29:39,354 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]]
2021-03-11 11:29:39,354 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:39,355 [main:137] - GENERATING call of type public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]
2021-03-11 11:29:39,493 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:39,637 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:39,643 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().endsWith("vnphz", false)
2021-03-11 11:29:39,643 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:29:39,643 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:29:39,803 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:39,803 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:29:39,946 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:39,953 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("hulbz").or(false)
2021-03-11 11:29:39,953 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]]
2021-03-11 11:29:39,953 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:29:40,107 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:40,107 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("yvruj")
2021-03-11 11:29:40,107 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:29:40,108 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:29:40,270 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:40,270 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:29:40,423 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:40,423 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("zwefv").equals("sbhnx")
2021-03-11 11:29:40,423 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]]
2021-03-11 11:29:40,423 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:29:40,423 [main:137] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]
2021-03-11 11:29:40,574 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:40,749 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:40,757 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().startsWith("kzpcm", true)
2021-03-11 11:29:40,757 [main:110] - replacement of true of type Boolean is (Kla0({ "hxtps"}).callback).equals("hulbz").or(false)
2021-03-11 11:29:40,901 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:40,901 [main:66] - Compilation checking started
2021-03-11 11:29:41,351 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = (Kla0({ "hxtps"}).callback).equals("hulbz").or(false)) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:41,354 [main:103] - replacing (prope3, Result<Ty0>)
2021-03-11 11:29:41,355 [main:38] - replacing prope3 Result<Ty0>
2021-03-11 11:29:41,355 [main:42] - Getting value of type Result<Ty0>
2021-03-11 11:29:41,492 [main:302] - generating value of type = Result<Ty0> false depth = 0
2021-03-11 11:29:41,638 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:29:41,646 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:29:42,036 [main:385] - Cant generate call of fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:29:42,036 [main:46] - GENERATED VALUE OF TYPE Result<Ty0> = 
2021-03-11 11:29:42,417 [main:55] - randomType = Double?
2021-03-11 11:29:42,538 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:29:42,581 [main:94] - GETTING Result<Ty0> from UByte
2021-03-11 11:29:42,606 [main:94] - GETTING Result<Ty0> from Function0<String>
2021-03-11 11:29:42,615 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:29:42,640 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:29:42,641 [main:94] - GETTING Result<Ty0> from Any
2021-03-11 11:29:42,645 [main:94] - GETTING Result<Ty0> from String
2021-03-11 11:29:42,664 [main:107] - Cant find and generate replacement for prope3 type Result<Ty0>
2021-03-11 11:29:42,664 [main:103] - replacing (prope9 != "abc#31", Boolean)
2021-03-11 11:29:42,665 [main:38] - replacing prope9 != "abc#31" Boolean
2021-03-11 11:29:42,665 [main:42] - Getting value of type Boolean
2021-03-11 11:29:42,790 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:42,796 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:29:42,796 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:42,996 [main:55] - randomType = Set<Kla4>
2021-03-11 11:29:42,997 [main:94] - GETTING Boolean from ULong
2021-03-11 11:29:43,026 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]]
2021-03-11 11:29:43,026 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:29:43,026 [main:137] - GENERATING call of type public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]
2021-03-11 11:29:43,026 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().isNaN()
2021-03-11 11:29:43,026 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]]
2021-03-11 11:29:43,026 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:29:43,027 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:29:43,151 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:43,151 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().equals("qbmel")
2021-03-11 11:29:43,152 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]]
2021-03-11 11:29:43,152 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:29:43,152 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]
2021-03-11 11:29:43,275 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:43,275 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().equals("hzovv")
2021-03-11 11:29:43,275 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]]
2021-03-11 11:29:43,275 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:43,397 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:43,403 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]
2021-03-11 11:29:43,529 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:43,530 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(57.toUByte()).equals("tbuco")
2021-03-11 11:29:43,530 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:29:43,530 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:29:43,651 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:43,652 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:29:43,771 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:29:43,778 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("lcxyj").or(true)
2021-03-11 11:29:43,778 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongRange[DeserializedSimpleFunctionDescriptor@595fbf51]]
2021-03-11 11:29:43,778 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54]
2021-03-11 11:29:43,899 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:29:43,905 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongRange[DeserializedSimpleFunctionDescriptor@595fbf51]
2021-03-11 11:29:44,025 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).rangeTo(974711569651942932.toULong()).equals(null)
2021-03-11 11:29:44,025 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.ULongRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dd1b3c0]]
2021-03-11 11:29:44,025 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54]
2021-03-11 11:29:44,146 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:29:44,152 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.ULongRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dd1b3c0]
2021-03-11 11:29:44,273 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:44,279 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).rangeTo(8288152317462139698.toULong()).contains(111.toUByte())
2021-03-11 11:29:44,279 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]]
2021-03-11 11:29:44,279 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:29:44,279 [main:137] - GENERATING call of type public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]
2021-03-11 11:29:44,279 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().isInfinite()
2021-03-11 11:29:44,279 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]]
2021-03-11 11:29:44,279 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:29:44,279 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]
2021-03-11 11:29:44,400 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:29:44,400 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().equals("hgumc")
2021-03-11 11:29:44,401 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]]
2021-03-11 11:29:44,401 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:29:44,401 [main:137] - GENERATING call of type public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]
2021-03-11 11:29:44,401 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().isFinite()
2021-03-11 11:29:44,401 [main:110] - replacement of prope9 != "abc#31" of type Boolean is ((6516632970651683513.toULong())).rangeTo(974711569651942932.toULong()).equals(null)
2021-03-11 11:29:44,524 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:44,525 [main:66] - Compilation checking started
2021-03-11 11:29:45,080 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (((6516632970651683513.toULong())).rangeTo(974711569651942932.toULong()).equals(null)) {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:45,083 [main:103] - replacing (i13, Int)
2021-03-11 11:29:45,083 [main:38] - replacing i13 Int
2021-03-11 11:29:45,083 [main:42] - Getting value of type Int
2021-03-11 11:29:45,235 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:45,241 [main:46] - GENERATED VALUE OF TYPE Int = 407816021
2021-03-11 11:29:45,242 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:45,254 [main:55] - randomType = ULong
2021-03-11 11:29:45,381 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:29:45,419 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4b094fc5]
2021-03-11 11:29:45,419 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]
2021-03-11 11:29:45,544 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:45,550 [main:66] - Generated call from random type = (3222788277662622667.toULong()).toShort().rem(-28)
2021-03-11 11:29:45,551 [main:94] - GETTING Int from ULong
2021-03-11 11:29:45,575 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 11:29:45,576 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:29:45,576 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 11:29:45,576 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().countOneBits()
2021-03-11 11:29:45,576 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]]
2021-03-11 11:29:45,576 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:29:45,576 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]
2021-03-11 11:29:45,576 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().roundToInt()
2021-03-11 11:29:45,576 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]]
2021-03-11 11:29:45,576 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:29:45,576 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]
2021-03-11 11:29:45,576 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().countLeadingZeroBits()
2021-03-11 11:29:45,576 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]]
2021-03-11 11:29:45,577 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:45,577 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]
2021-03-11 11:29:45,700 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:45,706 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().times(-50)
2021-03-11 11:29:45,706 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3bf4390d]]
2021-03-11 11:29:45,706 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:45,706 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3bf4390d]
2021-03-11 11:29:45,706 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toInt()
2021-03-11 11:29:45,706 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]]
2021-03-11 11:29:45,706 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:45,706 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]
2021-03-11 11:29:45,706 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().countOneBits()
2021-03-11 11:29:45,706 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]]
2021-03-11 11:29:45,706 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:45,827 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:45,833 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]
2021-03-11 11:29:45,833 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(83.toUByte()).dec()
2021-03-11 11:29:45,833 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8070dd9]]
2021-03-11 11:29:45,834 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8070dd9]
2021-03-11 11:29:45,834 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).countOneBits()
2021-03-11 11:29:45,834 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:29:45,834 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:45,955 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:45,962 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:29:45,962 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(63.toUByte()).countTrailingZeroBits()
2021-03-11 11:29:45,962 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]]
2021-03-11 11:29:45,962 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:45,962 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]
2021-03-11 11:29:46,085 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:46,091 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().plus(50)
2021-03-11 11:29:46,091 [main:110] - replacement of i13 of type Int is ((6516632970651683513.toULong())).toDouble().roundToInt()
2021-03-11 11:29:46,210 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:46,210 [main:66] - Compilation checking started
2021-03-11 11:29:46,673 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + ((6516632970651683513.toULong())).toDouble().roundToInt() + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:46,678 [main:103] - replacing (i24, Int)
2021-03-11 11:29:46,678 [main:38] - replacing i24 Int
2021-03-11 11:29:46,678 [main:42] - Getting value of type Int
2021-03-11 11:29:46,874 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:46,880 [main:46] - GENERATED VALUE OF TYPE Int = 17988787
2021-03-11 11:29:46,881 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:47,083 [main:55] - randomType = LinkedHashSet<String>
2021-03-11 11:29:47,210 [main:302] - generating value of type = LinkedHashSet<String> false depth = 0
2021-03-11 11:29:47,360 [main:43] - GENERATING CALL OF fun <E> LinkedHashSet(elements: kotlin.collections.Collection<String>): LinkedHashSet<String> = TODO()
2021-03-11 11:29:47,367 [main:61] - WITHOUT TYPE PARAMS = fun <E> LinkedHashSet(elements: kotlin.collections.Collection<String>): LinkedHashSet<String> = TODO()
2021-03-11 11:29:47,744 [main:302] - generating value of type = Collection<String> false depth = 3
2021-03-11 11:29:47,887 [main:43] - GENERATING CALL OF fun <T> emptySet(): Collection<Strg> = TODO()
2021-03-11 11:29:47,894 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptySet(): Collection<Strg> = TODO()
2021-03-11 11:29:48,099 [main:95] - GENERATED = emptySet<String>()
2021-03-11 11:29:48,100 [main:95] - GENERATED = LinkedHashSet<String>(emptySet<String>())
2021-03-11 11:29:48,318 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42411fed]
2021-03-11 11:29:48,465 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:48,471 [main:66] - Generated call from random type = (LinkedHashSet<String>(emptySet<String>())).size.shr(-572760132)
2021-03-11 11:29:48,472 [main:94] - GETTING Int from ULong
2021-03-11 11:29:48,513 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]]
2021-03-11 11:29:48,513 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:48,642 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:48,648 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]
2021-03-11 11:29:48,772 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:48,779 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(51.toUByte()).coerceAtMost(-1407255731)
2021-03-11 11:29:48,779 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:29:48,779 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:48,904 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:48,910 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:29:48,910 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(99.toUByte()).inc()
2021-03-11 11:29:48,910 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 11:29:48,911 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:29:48,911 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 11:29:48,911 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().countOneBits()
2021-03-11 11:29:48,911 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c250e82]]
2021-03-11 11:29:48,911 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:29:48,911 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c250e82]
2021-03-11 11:29:48,911 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().countLeadingZeroBits()
2021-03-11 11:29:48,911 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]]
2021-03-11 11:29:48,911 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:29:48,911 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]
2021-03-11 11:29:48,911 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().countLeadingZeroBits()
2021-03-11 11:29:48,911 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]]
2021-03-11 11:29:48,911 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:29:48,912 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]
2021-03-11 11:29:49,031 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:49,037 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().compareTo(-88)
2021-03-11 11:29:49,037 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]]
2021-03-11 11:29:49,037 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:49,158 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:49,164 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]
2021-03-11 11:29:49,164 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(99.toUByte()).inv()
2021-03-11 11:29:49,164 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]]
2021-03-11 11:29:49,164 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:29:49,164 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]
2021-03-11 11:29:49,164 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().countTrailingZeroBits()
2021-03-11 11:29:49,164 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]]
2021-03-11 11:29:49,164 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:29:49,165 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]
2021-03-11 11:29:49,165 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().toBits()
2021-03-11 11:29:49,165 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@65f973c0]]
2021-03-11 11:29:49,165 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:29:49,165 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().sign
2021-03-11 11:29:49,165 [main:110] - replacement of i24 of type Int is ((6516632970651683513.toULong())).toUInt().countOneBits()
2021-03-11 11:29:49,285 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:49,285 [main:66] - Compilation checking started
2021-03-11 11:29:49,675 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + ((6516632970651683513.toULong())).toUInt().countOneBits() + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:49,678 [main:103] - replacing (prope7, Function0<Unit>)
2021-03-11 11:29:49,678 [main:38] - replacing prope7 Function0<Unit>
2021-03-11 11:29:49,678 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:29:49,801 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:29:49,807 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:29:49,934 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:29:49,941 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:29:50,241 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:29:50,242 [main:95] - GENERATED = println("zgmkx")
2021-03-11 11:29:50,242 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { println("zgmkx")}
2021-03-11 11:29:50,242 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:51,531 [main:55] - randomType = Function2<Boolean, Double?, Function2<Byte, Kla3, Float?>>
2021-03-11 11:29:51,532 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:29:51,557 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:29:51,575 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:29:51,600 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:29:51,604 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:29:51,613 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:29:51,613 [main:110] - replacement of prope7 of type Function0<Unit> is { println("zgmkx")}
2021-03-11 11:29:51,732 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 11:29:51,732 [main:66] - Compilation checking started
2021-03-11 11:29:52,159 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        { println("zgmkx")} = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:52,162 [main:103] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions, String)
2021-03-11 11:29:52,162 [main:38] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions String
2021-03-11 11:29:52,163 [main:42] - Getting value of type String
2021-03-11 11:29:52,284 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:52,291 [main:46] - GENERATED VALUE OF TYPE String = "kpczg"
2021-03-11 11:29:52,291 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:52,303 [main:55] - randomType = ULong
2021-03-11 11:29:52,429 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:29:52,464 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@7cbd144]
2021-03-11 11:29:52,465 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:29:52,583 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:52,590 [main:66] - Generated call from random type = (4071979456347242069.toULong()).toLong().toString(2033337274)
2021-03-11 11:29:52,590 [main:110] - replacement of "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions of type String is (4071979456347242069.toULong()).toLong().toString(2033337274)
2021-03-11 11:29:52,709 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:52,709 [main:66] - Compilation checking started
2021-03-11 11:29:53,107 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error((4071979456347242069.toULong()).toLong().toString(2033337274) + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:53,110 [main:103] - replacing (0, Int)
2021-03-11 11:29:53,110 [main:38] - replacing 0 Int
2021-03-11 11:29:53,110 [main:42] - Getting value of type Int
2021-03-11 11:29:53,230 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:53,236 [main:46] - GENERATED VALUE OF TYPE Int = -475585444
2021-03-11 11:29:53,237 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:53,248 [main:55] - randomType = Int
2021-03-11 11:29:53,370 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:53,408 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75314e1c]
2021-03-11 11:29:53,528 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:53,534 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]
2021-03-11 11:29:53,677 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:53,683 [main:66] - Generated call from random type = (1397302301).compareTo(927410738).or(-57388597)
2021-03-11 11:29:53,683 [main:110] - replacement of 0 of type Int is (1397302301).compareTo(927410738).or(-57388597)
2021-03-11 11:29:53,810 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:53,811 [main:66] - Compilation checking started
2021-03-11 11:29:54,236 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = (1397302301).compareTo(927410738).or(-57388597)
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:54,239 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16, Int)
2021-03-11 11:29:54,239 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 Int
2021-03-11 11:29:54,239 [main:42] - Getting value of type Int
2021-03-11 11:29:54,388 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:54,394 [main:46] - GENERATED VALUE OF TYPE Int = 688218504
2021-03-11 11:29:54,395 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:54,407 [main:55] - randomType = String
2021-03-11 11:29:54,533 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:54,558 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:29:54,680 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:29:54,686 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]
2021-03-11 11:29:54,686 [main:66] - Generated call from random type = ("rhcha").compareTo("bvvms").unaryMinus()
2021-03-11 11:29:54,687 [main:94] - GETTING Int from ULong
2021-03-11 11:29:54,713 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:29:54,713 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:54,834 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:54,843 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:29:54,843 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(118.toUByte()).countTrailingZeroBits()
2021-03-11 11:29:54,843 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]]
2021-03-11 11:29:54,843 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:54,979 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:54,985 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(39.toUByte())
2021-03-11 11:29:54,985 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34bc32be]]
2021-03-11 11:29:54,985 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:29:54,985 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34bc32be]
2021-03-11 11:29:54,985 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().countOneBits()
2021-03-11 11:29:54,985 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3fb6d686]]
2021-03-11 11:29:54,985 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:54,986 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3fb6d686]
2021-03-11 11:29:55,105 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:55,111 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().div(-89)
2021-03-11 11:29:55,111 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]]
2021-03-11 11:29:55,111 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:29:55,111 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]
2021-03-11 11:29:55,111 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().toInt()
2021-03-11 11:29:55,111 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34ff6543]]
2021-03-11 11:29:55,111 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:55,111 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34ff6543]
2021-03-11 11:29:55,111 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().countLeadingZeroBits()
2021-03-11 11:29:55,112 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6b6a3486]]
2021-03-11 11:29:55,112 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:55,112 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6b6a3486]
2021-03-11 11:29:55,112 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().countLeadingZeroBits()
2021-03-11 11:29:55,112 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]]
2021-03-11 11:29:55,112 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:55,112 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]
2021-03-11 11:29:55,112 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().countTrailingZeroBits()
2021-03-11 11:29:55,112 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]]
2021-03-11 11:29:55,112 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:29:55,112 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]
2021-03-11 11:29:55,113 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toInt()
2021-03-11 11:29:55,113 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]]
2021-03-11 11:29:55,113 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:55,247 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:55,253 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]
2021-03-11 11:29:55,373 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:55,379 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(46.toUByte()).coerceAtLeast(669244423)
2021-03-11 11:29:55,379 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 of type Int is (6516632970651683513.toULong()).toUInt().toInt()
2021-03-11 11:29:55,499 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:55,499 [main:66] - Compilation checking started
2021-03-11 11:29:55,885 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((6516632970651683513.toULong()).toUInt().toInt() + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:55,890 [main:103] - replacing (numberOfSuspensions, Int)
2021-03-11 11:29:55,890 [main:38] - replacing numberOfSuspensions Int
2021-03-11 11:29:55,890 [main:42] - Getting value of type Int
2021-03-11 11:29:56,021 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:56,027 [main:46] - GENERATED VALUE OF TYPE Int = 1499474631
2021-03-11 11:29:56,027 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:56,215 [main:55] - randomType = Set<Kla8>
2021-03-11 11:29:56,216 [main:94] - GETTING Int from ULong
2021-03-11 11:29:56,239 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:29:56,239 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:56,390 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:56,396 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:29:56,396 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(32.toUByte()).inc()
2021-03-11 11:29:56,396 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]]
2021-03-11 11:29:56,396 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:29:56,396 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]
2021-03-11 11:29:56,516 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:56,522 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().compareTo(77.toUByte())
2021-03-11 11:29:56,522 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:29:56,522 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:56,643 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:56,649 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:29:56,771 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:56,777 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(90.toUByte()).ushr(1660472965)
2021-03-11 11:29:56,779 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]]
2021-03-11 11:29:56,779 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:56,905 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:56,911 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]
2021-03-11 11:29:56,911 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(18.toUByte()).takeLowestOneBit()
2021-03-11 11:29:56,912 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]]
2021-03-11 11:29:56,912 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:29:56,912 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]
2021-03-11 11:29:56,912 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().countLeadingZeroBits()
2021-03-11 11:29:56,912 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]]
2021-03-11 11:29:56,912 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:29:57,031 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:57,037 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:29:57,037 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(104.toUByte()).countOneBits()
2021-03-11 11:29:57,038 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]]
2021-03-11 11:29:57,038 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:57,038 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]
2021-03-11 11:29:57,038 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().countOneBits()
2021-03-11 11:29:57,038 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]]
2021-03-11 11:29:57,038 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:29:57,038 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]
2021-03-11 11:29:57,158 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:57,164 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().minus(-66)
2021-03-11 11:29:57,164 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@535dafcd]]
2021-03-11 11:29:57,164 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:29:57,164 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@535dafcd]
2021-03-11 11:29:57,291 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:57,297 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().compareTo(58.toUByte())
2021-03-11 11:29:57,298 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]]
2021-03-11 11:29:57,298 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:29:57,298 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]
2021-03-11 11:29:57,298 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().countTrailingZeroBits()
2021-03-11 11:29:57,298 [main:110] - replacement of numberOfSuspensions of type Int is (6516632970651683513.toULong()).compareTo(32.toUByte()).inc()
2021-03-11 11:29:57,421 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:57,422 [main:66] - Compilation checking started
2021-03-11 11:29:57,824 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..(6516632970651683513.toULong()).compareTo(32.toUByte()).inc()) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:57,827 [main:103] - replacing (i3, Int)
2021-03-11 11:29:57,827 [main:38] - replacing i3 Int
2021-03-11 11:29:57,827 [main:42] - Getting value of type Int
2021-03-11 11:29:57,951 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:57,957 [main:46] - GENERATED VALUE OF TYPE Int = -2037179495
2021-03-11 11:29:57,957 [main:49] - GENERATED IS CALL =false
2021-03-11 11:29:58,134 [main:55] - randomType = UByte?
2021-03-11 11:29:58,256 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:58,295 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2d8ff9fa]
2021-03-11 11:29:58,415 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:58,421 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]
2021-03-11 11:29:58,541 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:29:58,547 [main:66] - Generated call from random type = (127.toUByte())?.compareTo(4.toUByte()).rotateRight(-1193171246)
2021-03-11 11:29:58,548 [main:94] - GETTING Int from UByte
2021-03-11 11:29:58,574 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3d9305eb]]
2021-03-11 11:29:58,574 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:29:58,574 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3d9305eb]
2021-03-11 11:29:58,574 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().unaryPlus()
2021-03-11 11:29:58,574 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]]
2021-03-11 11:29:58,574 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:29:58,574 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]
2021-03-11 11:29:58,693 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:58,699 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().compareTo(41)
2021-03-11 11:29:58,699 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3983235]]
2021-03-11 11:29:58,699 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:29:58,699 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3983235]
2021-03-11 11:29:58,819 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:29:58,825 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().div(117)
2021-03-11 11:29:58,826 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@15a75f79]]
2021-03-11 11:29:58,826 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:29:58,826 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@15a75f79]
2021-03-11 11:29:58,826 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().countTrailingZeroBits()
2021-03-11 11:29:58,826 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]]
2021-03-11 11:29:58,826 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:29:58,826 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]
2021-03-11 11:29:58,826 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().countTrailingZeroBits()
2021-03-11 11:29:58,826 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5a0be3d0]]
2021-03-11 11:29:58,826 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:29:58,826 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5a0be3d0]
2021-03-11 11:29:58,826 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().countTrailingZeroBits()
2021-03-11 11:29:58,826 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@76b82e74]]
2021-03-11 11:29:58,827 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@76b82e74]
2021-03-11 11:29:58,827 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toInt()
2021-03-11 11:29:58,827 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:29:58,827 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:29:58,947 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:58,953 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:29:58,953 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(9.toUByte()).inc()
2021-03-11 11:29:58,953 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7adb8d6f]]
2021-03-11 11:29:58,953 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:29:58,953 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7adb8d6f]
2021-03-11 11:29:58,953 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().toInt()
2021-03-11 11:29:58,953 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]]
2021-03-11 11:29:58,953 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:29:59,104 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:29:59,110 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]
2021-03-11 11:29:59,110 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(70.toUByte()).unaryMinus()
2021-03-11 11:29:59,111 [main:110] - replacement of i3 of type Int is ((6516632970651683513.toULong()).toUByte()).toShort().div(117)
2021-03-11 11:29:59,231 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:29:59,232 [main:66] - Compilation checking started
2021-03-11 11:29:59,620 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + ((6516632970651683513.toULong()).toUByte()).toShort().div(117) + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:29:59,623 [main:103] - replacing (Kla4, Kla10)
2021-03-11 11:29:59,623 [main:38] - replacing Kla4 Kla10
2021-03-11 11:29:59,623 [main:42] - Getting value of type Kla10
2021-03-11 11:29:59,747 [main:302] - generating value of type = Kla10 false depth = 0
2021-03-11 11:29:59,753 [main:112] - generating klass Kla10 text = companion object Kla10 : Kla4()
2021-03-11 11:29:59,753 [main:46] - GENERATED VALUE OF TYPE Kla10 = 
2021-03-11 11:29:59,777 [main:55] - randomType = Kla7
2021-03-11 11:29:59,899 [main:302] - generating value of type = Kla7 false depth = 0
2021-03-11 11:29:59,905 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}
2021-03-11 11:29:59,912 [main:94] - GETTING Kla10 from ULong
2021-03-11 11:29:59,938 [main:94] - GETTING Kla10 from Function0<String>
2021-03-11 11:29:59,948 [main:94] - GETTING Kla10 from String
2021-03-11 11:29:59,967 [main:94] - GETTING Kla10 from ULong
2021-03-11 11:29:59,968 [main:94] - GETTING Kla10 from UByte
2021-03-11 11:29:59,992 [main:94] - GETTING Kla10 from Any
2021-03-11 11:29:59,995 [main:107] - Cant find and generate replacement for Kla4 type Kla10
2021-03-11 11:29:59,995 [main:103] - replacing (prope5 != numberOfSuspensions, Boolean)
2021-03-11 11:29:59,995 [main:38] - replacing prope5 != numberOfSuspensions Boolean
2021-03-11 11:29:59,995 [main:42] - Getting value of type Boolean
2021-03-11 11:30:00,116 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:00,122 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:30:00,122 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:00,311 [main:55] - randomType = Sequence<Kla7>
2021-03-11 11:30:00,312 [main:94] - GETTING Boolean from Function0<String>
2021-03-11 11:30:00,323 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:30:00,323 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:30:00,445 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:00,445 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:30:00,566 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:00,572 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("tgrzl").and(true)
2021-03-11 11:30:00,572 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]]
2021-03-11 11:30:00,572 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:00,572 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]
2021-03-11 11:30:00,705 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:00,705 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().equals("gegqj")
2021-03-11 11:30:00,705 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:30:00,705 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:30:00,862 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:00,862 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:30:01,001 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:01,008 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("rmfya").xor(true)
2021-03-11 11:30:01,008 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:30:01,008 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:30:01,133 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:01,133 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:30:01,260 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:01,260 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("ybohd").equals("nldqs")
2021-03-11 11:30:01,260 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:30:01,260 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:30:01,392 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:01,392 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:30:01,529 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:01,537 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("hdqhv").or(false)
2021-03-11 11:30:01,537 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cb69174]]
2021-03-11 11:30:01,537 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:01,537 [main:137] - GENERATING call of type public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cb69174]
2021-03-11 11:30:01,674 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:01,680 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().matches("ycufk")
2021-03-11 11:30:01,680 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]]
2021-03-11 11:30:01,680 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:30:01,803 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:01,803 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("lfnsh")
2021-03-11 11:30:01,803 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]]
2021-03-11 11:30:01,803 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:01,803 [main:137] - GENERATING call of type public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]
2021-03-11 11:30:01,955 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:02,084 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:02,090 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().endsWith("mzmyx", true)
2021-03-11 11:30:02,091 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]]
2021-03-11 11:30:02,091 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:02,091 [main:137] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]
2021-03-11 11:30:02,216 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:02,343 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:02,350 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().startsWith("whtqe", true)
2021-03-11 11:30:02,350 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:30:02,350 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:30:02,473 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:02,473 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:30:02,473 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("pburh").not()
2021-03-11 11:30:02,473 [main:110] - replacement of prope5 != numberOfSuspensions of type Boolean is true
2021-03-11 11:30:02,594 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BOOLEAN_CONSTANT)
2021-03-11 11:30:02,595 [main:66] - Compilation checking started
2021-03-11 11:30:02,983 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (true)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:02,986 [main:103] - replacing (prope5 != numberOfSuspensions, Boolean)
2021-03-11 11:30:02,986 [main:38] - replacing prope5 != numberOfSuspensions Boolean
2021-03-11 11:30:02,986 [main:42] - Getting value of type Boolean
2021-03-11 11:30:03,118 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:03,124 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:30:03,124 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:03,137 [main:55] - randomType = Int
2021-03-11 11:30:03,274 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:03,343 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f88de11]
2021-03-11 11:30:03,478 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:30:03,484 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline operator fun kotlin.ranges.IntRange.contains(element: kotlin.Int?): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@43f9c193]
2021-03-11 11:30:03,608 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:03,615 [main:66] - Generated call from random type = (-1681663675).rangeTo(-1).contains(-647017723)
2021-03-11 11:30:03,616 [main:94] - GETTING Boolean from UByte
2021-03-11 11:30:03,642 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]]
2021-03-11 11:30:03,642 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:30:03,642 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]
2021-03-11 11:30:03,763 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:03,763 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().equals("tlkkd")
2021-03-11 11:30:03,763 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]]
2021-03-11 11:30:03,763 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:30:03,886 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:03,892 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]
2021-03-11 11:30:04,016 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:04,016 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(43.toUByte()).equals("zpglm")
2021-03-11 11:30:04,016 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]]
2021-03-11 11:30:04,016 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:30:04,016 [main:137] - GENERATING call of type public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]
2021-03-11 11:30:04,017 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().isNaN()
2021-03-11 11:30:04,017 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:30:04,017 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:30:04,148 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:04,148 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:30:04,271 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:04,271 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("qvsdj").equals("nfqfp")
2021-03-11 11:30:04,271 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]]
2021-03-11 11:30:04,271 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:30:04,271 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]
2021-03-11 11:30:04,271 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().isFinite()
2021-03-11 11:30:04,271 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]]
2021-03-11 11:30:04,271 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:30:04,271 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]
2021-03-11 11:30:04,401 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:04,401 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().equals("gajli")
2021-03-11 11:30:04,401 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]]
2021-03-11 11:30:04,401 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:30:04,401 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]
2021-03-11 11:30:04,521 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:04,522 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().equals("tfcya")
2021-03-11 11:30:04,522 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:30:04,522 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:30:04,641 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:04,642 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:30:04,763 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:04,769 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("gtoze").xor(false)
2021-03-11 11:30:04,769 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]]
2021-03-11 11:30:04,769 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:30:04,770 [main:137] - GENERATING call of type public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]
2021-03-11 11:30:04,770 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().isInfinite()
2021-03-11 11:30:04,770 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:30:04,770 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:30:04,926 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:04,926 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:30:05,044 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:05,051 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("qmpfe").and(false)
2021-03-11 11:30:05,051 [main:110] - replacement of prope5 != numberOfSuspensions of type Boolean is ((6516632970651683513.toULong()).toUByte()).div(43.toUByte()).equals("zpglm")
2021-03-11 11:30:05,178 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:05,179 [main:66] - Compilation checking started
2021-03-11 11:30:05,570 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (((6516632970651683513.toULong()).toUByte()).div(43.toUByte()).equals("zpglm"))
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:05,573 [main:103] - replacing (fu3(), String)
2021-03-11 11:30:05,573 [main:38] - replacing fu3() String
2021-03-11 11:30:05,573 [main:42] - Getting value of type String
2021-03-11 11:30:05,692 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:05,698 [main:46] - GENERATED VALUE OF TYPE String = "zdjck"
2021-03-11 11:30:05,698 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:06,049 [main:55] - randomType = Kla1?
2021-03-11 11:30:06,177 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 11:30:06,183 [main:112] - generating klass Kla1 text = class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}
2021-03-11 11:30:06,188 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2395627b]
2021-03-11 11:30:06,188 [main:66] - Generated call from random type = (Kla1())?.prope0.toUpperCase()
2021-03-11 11:30:06,189 [main:94] - GETTING String from Any
2021-03-11 11:30:06,194 [main:94] - GETTING String from ULong
2021-03-11 11:30:06,221 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:30:06,221 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:30:06,221 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:30:06,346 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:06,353 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().toString(-1026092405)
2021-03-11 11:30:06,353 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:30:06,353 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:30:06,353 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:30:06,475 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:06,481 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().toString(-1982756813)
2021-03-11 11:30:06,482 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:30:06,482 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:30:06,601 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:06,607 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:30:06,727 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:06,733 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(42.toUByte()).toString(736741022)
2021-03-11 11:30:06,733 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:30:06,733 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:30:06,733 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:30:06,853 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:06,859 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toString(-1848932583)
2021-03-11 11:30:06,859 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:30:06,859 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:30:06,859 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:30:06,980 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:06,986 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toString(-1463771615)
2021-03-11 11:30:06,986 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:30:06,986 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:30:06,986 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:30:07,124 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:07,131 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().toString(-1248551187)
2021-03-11 11:30:07,131 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:30:07,131 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:30:07,268 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:07,274 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toString(2011245697)
2021-03-11 11:30:07,274 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:30:07,274 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:30:07,274 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:30:07,394 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:07,400 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().toString(-1466780390)
2021-03-11 11:30:07,400 [main:110] - replacement of fu3() of type String is (Kla1())?.prope0.toUpperCase()
2021-03-11 11:30:07,519 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:07,519 [main:66] - Compilation checking started
2021-03-11 11:30:07,957 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = (Kla1())?.prope0.toUpperCase()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:07,960 [main:103] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5, String)
2021-03-11 11:30:07,960 [main:38] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5 String
2021-03-11 11:30:07,960 [main:42] - Getting value of type String
2021-03-11 11:30:08,079 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:08,085 [main:46] - GENERATED VALUE OF TYPE String = "pkxmf"
2021-03-11 11:30:08,085 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:08,260 [main:55] - randomType = Boolean?
2021-03-11 11:30:08,381 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:08,398 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:30:08,519 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:08,525 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:30:08,645 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:08,652 [main:66] - Generated call from random type = (false)?.compareTo(false).toString(-1039475276)
2021-03-11 11:30:08,653 [main:94] - GETTING String from ULong
2021-03-11 11:30:08,694 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:30:08,695 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:30:08,695 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:30:08,837 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:08,845 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(-912355065)
2021-03-11 11:30:08,845 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:30:08,845 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:30:08,845 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:30:08,995 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:09,001 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(-235691837)
2021-03-11 11:30:09,001 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:30:09,001 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:30:09,002 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:30:09,124 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:09,130 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(119517779)
2021-03-11 11:30:09,130 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:30:09,130 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:30:09,253 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:09,259 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:30:09,387 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:09,393 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(120.toUByte()).toString(1891631972)
2021-03-11 11:30:09,393 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:30:09,393 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:30:09,393 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:30:09,514 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:09,520 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(-600421646)
2021-03-11 11:30:09,520 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:30:09,520 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:30:09,520 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:30:09,642 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:09,649 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(-1231156187)
2021-03-11 11:30:09,649 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:30:09,649 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:30:09,771 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:09,777 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(-243850535)
2021-03-11 11:30:09,778 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:30:09,778 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:30:09,778 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:30:09,899 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:09,905 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(-2059938667)
2021-03-11 11:30:09,905 [main:110] - replacement of "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5 of type String is ((6516632970651683513.toULong())).toByte().toString(-1231156187)
2021-03-11 11:30:10,023 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:10,024 [main:66] - Compilation checking started
2021-03-11 11:30:10,409 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error(((6516632970651683513.toULong())).toByte().toString(-1231156187))
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:10,412 [main:103] - replacing ({
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }, [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit>)
2021-03-11 11:30:10,412 [main:38] - replacing {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    } [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit>
2021-03-11 11:30:10,413 [main:42] - Getting value of type [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit>
2021-03-11 11:30:10,532 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit> false depth = 0
2021-03-11 11:30:10,538 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:30:10,691 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:30:10,698 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:30:11,183 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:30:11,190 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 11:30:11,196 [main:302] - generating value of type = Any false depth = 5
2021-03-11 11:30:11,196 [main:95] - GENERATED = require(true, { "hwpqy"})
2021-03-11 11:30:11,196 [main:46] - GENERATED VALUE OF TYPE [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit> = {a: Kla3 -> require(true, { "hwpqy"})}
2021-03-11 11:30:11,196 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:11,529 [main:55] - randomType = UShort?
2021-03-11 11:30:11,649 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 11:30:11,690 [main:94] - GETTING [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit> from Any
2021-03-11 11:30:11,697 [main:94] - GETTING [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit> from Function0<String>
2021-03-11 11:30:11,715 [main:94] - GETTING [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit> from ULong
2021-03-11 11:30:11,765 [main:94] - GETTING [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit> from String
2021-03-11 11:30:11,795 [main:94] - GETTING [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit> from ULong
2021-03-11 11:30:11,798 [main:94] - GETTING [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit> from UByte
2021-03-11 11:30:11,823 [main:110] - replacement of {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    } of type [@kotlin.ExtensionFunctionType] SuspendFunction1<Kla3, Unit> is {a: Kla3 -> require(true, { "hwpqy"})}
2021-03-11 11:30:11,943 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:30:11,943 [main:66] - Compilation checking started
2021-03-11 11:30:12,320 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {a: Kla3 -> require(true, { "hwpqy"})}

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:12,323 [main:103] - replacing ({
            prope2.prope6 = true
        }, Function0<Unit>)
2021-03-11 11:30:12,323 [main:38] - replacing {
            prope2.prope6 = true
        } Function0<Unit>
2021-03-11 11:30:12,323 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:30:12,456 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:30:12,462 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:30:12,590 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:30:12,597 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:30:12,911 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-11 11:30:12,917 [main:302] - generating value of type = Unit false depth = 5
2021-03-11 11:30:13,045 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:30:13,052 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:30:13,364 [main:302] - generating value of type = Any false depth = 8
2021-03-11 11:30:13,364 [main:95] - GENERATED = print("slupm")
2021-03-11 11:30:13,365 [main:95] - GENERATED = contract({ print("slupm")})
2021-03-11 11:30:13,365 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { contract({ print("slupm")})}
2021-03-11 11:30:13,365 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:13,953 [main:55] - randomType = MutableMap<Boolean, ArrayDeque<Kla4?>>
2021-03-11 11:30:13,955 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:30:13,991 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:30:14,009 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:30:14,010 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:30:14,034 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:30:14,044 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:30:14,047 [main:110] - replacement of {
            prope2.prope6 = true
        } of type Function0<Unit> is { contract({ print("slupm")})}
2021-03-11 11:30:14,168 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:30:14,169 [main:66] - Compilation checking started
2021-03-11 11:30:14,559 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = { contract({ print("slupm")})}
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:14,561 [main:103] - replacing (Kla8(), Kla8)
2021-03-11 11:30:14,561 [main:38] - replacing Kla8() Kla8
2021-03-11 11:30:14,561 [main:42] - Getting value of type Kla8
2021-03-11 11:30:14,687 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-11 11:30:14,693 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-11 11:30:14,693 [main:46] - GENERATED VALUE OF TYPE Kla8 = Kla8()
2021-03-11 11:30:14,693 [main:49] - GENERATED IS CALL =true
2021-03-11 11:30:14,870 [main:55] - randomType = Kla1
2021-03-11 11:30:14,990 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 11:30:14,996 [main:112] - generating klass Kla1 text = class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}
2021-03-11 11:30:15,002 [main:94] - GETTING Kla8 from ULong
2021-03-11 11:30:15,032 [main:94] - GETTING Kla8 from UByte
2021-03-11 11:30:15,071 [main:94] - GETTING Kla8 from String
2021-03-11 11:30:15,103 [main:94] - GETTING Kla8 from Function0<String>
2021-03-11 11:30:15,118 [main:94] - GETTING Kla8 from ULong
2021-03-11 11:30:15,119 [main:94] - GETTING Kla8 from Any
2021-03-11 11:30:15,125 [main:110] - replacement of Kla8() of type Kla8 is Kla8()
2021-03-11 11:30:15,265 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:30:15,268 [main:103] - replacing (prope9, String)
2021-03-11 11:30:15,268 [main:38] - replacing prope9 String
2021-03-11 11:30:15,268 [main:42] - Getting value of type String
2021-03-11 11:30:15,401 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:15,411 [main:46] - GENERATED VALUE OF TYPE String = "vljiu"
2021-03-11 11:30:15,411 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:15,597 [main:55] - randomType = Double
2021-03-11 11:30:15,716 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:30:15,751 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:30:15,870 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:30:15,876 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:30:15,995 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:16,001 [main:66] - Generated call from random type = (0.23648432196515556).compareTo(57).toString(-762012509)
2021-03-11 11:30:16,001 [main:94] - GETTING String from String
2021-03-11 11:30:16,019 [main:101] - Case = [public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]]
2021-03-11 11:30:16,019 [main:137] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]
2021-03-11 11:30:16,019 [main:105] - GENERATED CALL = (Kla1().prope0).trimIndent()
2021-03-11 11:30:16,019 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a06694b]]
2021-03-11 11:30:16,019 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:30:16,139 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:16,268 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:16,274 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a06694b]
2021-03-11 11:30:16,397 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:16,577 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:16,583 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(1557539998, 752610467).substring(-1866993845, -1763115631)
2021-03-11 11:30:16,584 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.commonSuffixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@fd366af]]
2021-03-11 11:30:16,584 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:30:16,728 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:16,854 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:16,861 [main:137] - GENERATING call of type public fun kotlin.CharSequence.commonSuffixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@fd366af]
2021-03-11 11:30:16,981 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:30:17,112 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:17,119 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1914704299, 2032510678).commonSuffixWith("gppdu", true)
2021-03-11 11:30:17,119 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:30:17,119 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:30:17,241 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:17,247 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:30:17,367 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:17,374 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("nadaz").toString(-725193004)
2021-03-11 11:30:17,374 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@748a5ff1]]
2021-03-11 11:30:17,374 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:30:17,492 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:17,618 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:17,624 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@748a5ff1]
2021-03-11 11:30:17,743 [main:302] - generating value of type = Regex false depth = 0
2021-03-11 11:30:17,871 [main:43] - GENERATING CALL OF fun Regex(pattern: kotlin.String, option: kotlin.text.RegexOption): Regex = TODO()
2021-03-11 11:30:17,878 [main:61] - WITHOUT TYPE PARAMS = fun Regex(pattern: kotlin.String, option: kotlin.text.RegexOption): Regex = TODO()
2021-03-11 11:30:18,343 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:30:18,349 [main:302] - generating value of type = RegexOption false depth = 3
2021-03-11 11:30:18,357 [main:95] - GENERATED = Regex("ioava", kotlin.text.RegexOption.IGNORE_CASE)
2021-03-11 11:30:18,476 [main:302] - generating value of type = Function1<MatchResult, CharSequence> false depth = 0
2021-03-11 11:30:18,482 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 11:30:18,610 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:30:18,617 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:30:18,929 [main:302] - generating value of type = Int true depth = 4
2021-03-11 11:30:18,935 [main:95] - GENERATED = StringBuilder(-904224459)
2021-03-11 11:30:18,935 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(1004893880, 1690439873).replace(Regex("ioava", kotlin.text.RegexOption.IGNORE_CASE), {a: MatchResult -> StringBuilder(-904224459)})
2021-03-11 11:30:18,935 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]]
2021-03-11 11:30:18,935 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]
2021-03-11 11:30:19,056 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:19,062 [main:105] - GENERATED CALL = (Kla1().prope0).concat("kmxnd")
2021-03-11 11:30:19,062 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.repeat(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20f36d19]]
2021-03-11 11:30:19,062 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:30:19,184 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:19,340 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:19,346 [main:137] - GENERATING call of type public fun kotlin.CharSequence.repeat(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20f36d19]
2021-03-11 11:30:19,466 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:19,472 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(177537354, -2132597845).repeat(1033515509)
2021-03-11 11:30:19,472 [main:101] - Case = [public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60231eda]]
2021-03-11 11:30:19,472 [main:137] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60231eda]
2021-03-11 11:30:19,595 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:19,601 [main:105] - GENERATED CALL = (Kla1().prope0).trimMargin("uibgp")
2021-03-11 11:30:19,601 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6fa9e2e7]]
2021-03-11 11:30:19,601 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:30:19,720 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:19,726 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6fa9e2e7]
2021-03-11 11:30:19,726 [main:105] - GENERATED CALL = (Kla1().prope0).get(-975047109).titlecase()
2021-03-11 11:30:19,726 [main:101] - Case = [public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]]
2021-03-11 11:30:19,726 [main:137] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]
2021-03-11 11:30:19,845 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-11 11:30:19,851 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:30:19,858 [main:105] - GENERATED CALL = (Kla1().prope0).filterIndexed({a: Int, b: Char -> true})
2021-03-11 11:30:19,858 [main:110] - replacement of prope9 of type String is "vljiu"
2021-03-11 11:30:19,976 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:30:19,976 [main:66] - Compilation checking started
2021-03-11 11:30:20,358 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if ("vljiu" != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:20,361 [main:103] - replacing (prope3.isSuccess, Boolean)
2021-03-11 11:30:20,361 [main:38] - replacing prope3.isSuccess Boolean
2021-03-11 11:30:20,361 [main:42] - Getting value of type Boolean
2021-03-11 11:30:20,480 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:20,486 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:30:20,486 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:20,831 [main:55] - randomType = Array<Long?>
2021-03-11 11:30:20,950 [main:302] - generating value of type = Array<Long?> false depth = 0
2021-03-11 11:30:21,092 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Long?): Array<Long?> = TODO()
2021-03-11 11:30:21,099 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Long?): Array<Long?> = TODO()
2021-03-11 11:30:21,276 [main:302] - generating value of type = Long true depth = 3
2021-03-11 11:30:21,282 [main:95] - GENERATED = arrayOf<Long?>(-6135874725552472548)
2021-03-11 11:30:21,299 [main:137] - GENERATING call of type public final operator fun set(index: kotlin.Int, value: kotlin.Long?): kotlin.Unit defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@318867e8]
2021-03-11 11:30:21,423 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:21,549 [main:302] - generating value of type = Long true depth = 0
2021-03-11 11:30:21,556 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Unit[DeserializedSimpleFunctionDescriptor@6c3ef1bf]
2021-03-11 11:30:21,677 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:21,677 [main:66] - Generated call from random type = (arrayOf<Long?>(-6135874725552472548)).set(-1936607661, 8496765498235190094).equals("zzhjl")
2021-03-11 11:30:21,678 [main:94] - GETTING Boolean from UByte
2021-03-11 11:30:21,702 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]]
2021-03-11 11:30:21,702 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:30:21,702 [main:137] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]
2021-03-11 11:30:21,702 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().isInfinite()
2021-03-11 11:30:21,702 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]]
2021-03-11 11:30:21,703 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:30:21,703 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]
2021-03-11 11:30:21,823 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:21,824 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().equals("jbbmi")
2021-03-11 11:30:21,824 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]]
2021-03-11 11:30:21,824 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:30:21,824 [main:137] - GENERATING call of type public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]
2021-03-11 11:30:21,824 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().isFinite()
2021-03-11 11:30:21,824 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:30:21,824 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:30:21,945 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:21,946 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:30:22,066 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:22,072 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("maxxg").xor(false)
2021-03-11 11:30:22,072 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]]
2021-03-11 11:30:22,072 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:30:22,072 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]
2021-03-11 11:30:22,191 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:22,191 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().equals("surwa")
2021-03-11 11:30:22,191 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]]
2021-03-11 11:30:22,191 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:30:22,350 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:22,356 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]
2021-03-11 11:30:22,475 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:22,475 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(21.toUByte()).equals("iilnk")
2021-03-11 11:30:22,475 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:30:22,475 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:30:22,597 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:22,598 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:30:22,718 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:22,718 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("qsszc").equals("ixbmj")
2021-03-11 11:30:22,718 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@773e50e5]]
2021-03-11 11:30:22,718 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:30:22,718 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@773e50e5]
2021-03-11 11:30:22,838 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:22,838 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().equals("jznyx")
2021-03-11 11:30:22,838 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6b337e18]]
2021-03-11 11:30:22,838 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:30:22,838 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6b337e18]
2021-03-11 11:30:22,961 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:22,961 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().equals("hxqkw")
2021-03-11 11:30:22,961 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@52eed0c4]]
2021-03-11 11:30:22,961 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:30:22,962 [main:137] - GENERATING call of type public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@52eed0c4]
2021-03-11 11:30:22,962 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().isNaN()
2021-03-11 11:30:22,962 [main:110] - replacement of prope3.isSuccess of type Boolean is ((6516632970651683513.toULong()).toUByte()).toFloat().isNaN()
2021-03-11 11:30:23,084 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:23,087 [main:103] - replacing (i16, Int)
2021-03-11 11:30:23,087 [main:38] - replacing i16 Int
2021-03-11 11:30:23,087 [main:42] - Getting value of type Int
2021-03-11 11:30:23,207 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:23,213 [main:46] - GENERATED VALUE OF TYPE Int = -1370724447
2021-03-11 11:30:23,213 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:23,237 [main:55] - randomType = Kla7
2021-03-11 11:30:23,357 [main:302] - generating value of type = Kla7 false depth = 0
2021-03-11 11:30:23,363 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}
2021-03-11 11:30:23,369 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla7[DeserializedSimpleFunctionDescriptor@40d857d1]
2021-03-11 11:30:23,488 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:23,489 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:30:23,611 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:23,617 [main:66] - Generated call from random type = (Kla7()).equals("lzioq").compareTo(false)
2021-03-11 11:30:23,618 [main:110] - replacement of i16 of type Int is (Kla7()).equals("lzioq").compareTo(false)
2021-03-11 11:30:23,740 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:23,741 [main:66] - Compilation checking started
2021-03-11 11:30:24,126 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + (Kla7()).equals("lzioq").compareTo(false) + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:24,129 [main:103] - replacing (i18, Int)
2021-03-11 11:30:24,129 [main:38] - replacing i18 Int
2021-03-11 11:30:24,129 [main:42] - Getting value of type Int
2021-03-11 11:30:24,248 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:24,254 [main:46] - GENERATED VALUE OF TYPE Int = -2016620351
2021-03-11 11:30:24,254 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:24,940 [main:55] - randomType = Function1<UShort, Set<Boolean?>>
2021-03-11 11:30:24,941 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:30:24,950 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:30:24,950 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:24,950 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:30:24,950 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:30:24,950 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:30:24,951 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:24,951 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:30:24,951 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:30:24,951 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:24,951 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:30:25,070 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:25,195 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:25,201 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("dogob", false)
2021-03-11 11:30:25,201 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:30:25,201 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:30:25,358 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:25,358 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:30:25,479 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:25,485 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("dnvyn").compareTo(true)
2021-03-11 11:30:25,485 [main:110] - replacement of i18 of type Int is (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:30:25,604 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:25,605 [main:66] - Compilation checking started
2021-03-11 11:30:25,989 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + (Kla0({ "hxtps"}).callback).invoke().toInt() + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:25,993 [main:103] - replacing (EmptyCoroutineContext, EmptyCoroutineContext)
2021-03-11 11:30:25,993 [main:38] - replacing EmptyCoroutineContext EmptyCoroutineContext
2021-03-11 11:30:25,993 [main:42] - Getting value of type EmptyCoroutineContext
2021-03-11 11:30:26,142 [main:302] - generating value of type = EmptyCoroutineContext false depth = 0
2021-03-11 11:30:26,157 [main:46] - GENERATED VALUE OF TYPE EmptyCoroutineContext = 
2021-03-11 11:30:26,369 [main:55] - randomType = ULong?
2021-03-11 11:30:26,489 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:30:26,528 [main:94] - GETTING EmptyCoroutineContext from Any
2021-03-11 11:30:26,532 [main:94] - GETTING EmptyCoroutineContext from UByte
2021-03-11 11:30:26,557 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:30:26,582 [main:94] - GETTING EmptyCoroutineContext from Function0<String>
2021-03-11 11:30:26,592 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:30:26,593 [main:94] - GETTING EmptyCoroutineContext from String
2021-03-11 11:30:26,613 [main:107] - Cant find and generate replacement for EmptyCoroutineContext type EmptyCoroutineContext
2021-03-11 11:30:26,613 [main:103] - replacing (1, Int)
2021-03-11 11:30:26,613 [main:38] - replacing 1 Int
2021-03-11 11:30:26,613 [main:42] - Getting value of type Int
2021-03-11 11:30:26,734 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:26,740 [main:46] - GENERATED VALUE OF TYPE Int = 1222499787
2021-03-11 11:30:26,740 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:26,764 [main:55] - randomType = Kla4
2021-03-11 11:30:26,889 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 11:30:26,895 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}
2021-03-11 11:30:27,023 [main:194] - Type params = []
2021-03-11 11:30:27,144 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-11 11:30:27,273 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:30:27,281 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:30:27,614 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-11 11:30:27,748 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:30:27,755 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:30:28,263 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:30:28,263 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:30:28,279 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla4[DeserializedSimpleFunctionDescriptor@98173b1]
2021-03-11 11:30:28,452 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:28,452 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:30:28,621 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:28,630 [main:66] - Generated call from random type = (Kla4()).equals("puzys").compareTo(true)
2021-03-11 11:30:28,631 [main:94] - GETTING Int from ULong
2021-03-11 11:30:28,677 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]]
2021-03-11 11:30:28,677 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:30:28,834 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:28,841 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]
2021-03-11 11:30:28,841 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(35.toUByte()).dec()
2021-03-11 11:30:28,841 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8070dd9]]
2021-03-11 11:30:28,841 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8070dd9]
2021-03-11 11:30:28,842 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).countOneBits()
2021-03-11 11:30:28,842 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:30:28,842 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:30:29,001 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:29,009 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:30:29,166 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:29,173 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(1.toUByte()).ushr(1058755944)
2021-03-11 11:30:29,173 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]]
2021-03-11 11:30:29,173 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:30:29,340 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:29,346 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]
2021-03-11 11:30:29,346 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(9.toUByte()).unaryPlus()
2021-03-11 11:30:29,346 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]]
2021-03-11 11:30:29,346 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:30:29,500 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:29,508 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]
2021-03-11 11:30:29,508 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(102.toUByte()).takeLowestOneBit()
2021-03-11 11:30:29,508 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]]
2021-03-11 11:30:29,508 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:30:29,508 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]
2021-03-11 11:30:29,508 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().countLeadingZeroBits()
2021-03-11 11:30:29,508 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5c3bb402]]
2021-03-11 11:30:29,508 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:30:29,508 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5c3bb402]
2021-03-11 11:30:29,643 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:30:29,649 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().rem(-53)
2021-03-11 11:30:29,650 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]]
2021-03-11 11:30:29,650 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:30:29,650 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:30:29,782 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:29,788 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().compareTo(111.toUByte())
2021-03-11 11:30:29,789 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]]
2021-03-11 11:30:29,789 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:30:29,789 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]
2021-03-11 11:30:29,914 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:30:29,920 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().rem(-64)
2021-03-11 11:30:29,920 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:30:29,920 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:30:30,049 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:30:30,056 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:30:30,056 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(28.toUByte()).countTrailingZeroBits()
2021-03-11 11:30:30,056 [main:110] - replacement of 1 of type Int is ((6516632970651683513.toULong())).countOneBits()
2021-03-11 11:30:30,186 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:30,186 [main:66] - Compilation checking started
2021-03-11 11:30:30,738 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = ((6516632970651683513.toULong())).countOneBits(),
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:30,741 [main:103] - replacing (1, Int)
2021-03-11 11:30:30,741 [main:38] - replacing 1 Int
2021-03-11 11:30:30,741 [main:42] - Getting value of type Int
2021-03-11 11:30:30,867 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:30,873 [main:46] - GENERATED VALUE OF TYPE Int = -1228267321
2021-03-11 11:30:30,874 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:31,257 [main:55] - randomType = ArrayDeque<Short>
2021-03-11 11:30:31,385 [main:302] - generating value of type = ArrayDeque<Short> false depth = 0
2021-03-11 11:30:31,528 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Short> = TODO()
2021-03-11 11:30:31,536 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Short> = TODO()
2021-03-11 11:30:31,866 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:30:31,873 [main:95] - GENERATED = ArrayDeque<Short>(841990374)
2021-03-11 11:30:32,046 [main:137] - GENERATING call of type public final fun firstOrNull(): kotlin.Short? defined in kotlin.collections.ArrayDeque[DeserializedSimpleFunctionDescriptor@52d2b3ed]
2021-03-11 11:30:32,047 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]
2021-03-11 11:30:32,171 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:30:32,177 [main:66] - Generated call from random type = (ArrayDeque<Short>(841990374)).firstOrNull()?.compareTo(-31)!!
2021-03-11 11:30:32,178 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:30:32,190 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:30:32,190 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:32,190 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:30:32,190 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:30:32,190 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:32,191 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:30:32,316 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:32,448 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:32,454 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("vahzi", false)
2021-03-11 11:30:32,454 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:30:32,454 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:32,454 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:30:32,455 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:30:32,455 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:30:32,455 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:30:32,578 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:32,578 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:30:32,704 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:32,710 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("vgwep").compareTo(true)
2021-03-11 11:30:32,710 [main:110] - replacement of 1 of type Int is (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:30:32,838 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:32,838 [main:66] - Compilation checking started
2021-03-11 11:30:33,255 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = (Kla0({ "hxtps"}).callback).invoke().toInt(),
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:33,259 [main:103] - replacing (prope9, String)
2021-03-11 11:30:33,260 [main:38] - replacing prope9 String
2021-03-11 11:30:33,260 [main:42] - Getting value of type String
2021-03-11 11:30:33,403 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:33,410 [main:46] - GENERATED VALUE OF TYPE String = "kwige"
2021-03-11 11:30:33,410 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:33,611 [main:55] - randomType = Kla3?
2021-03-11 11:30:33,739 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 11:30:33,745 [main:112] - generating klass Kla3 text = class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}
2021-03-11 11:30:33,750 [main:137] - GENERATING call of type public final suspend fun fu3(prope9: kotlin.String = ..., i1: kotlin.Int = ..., i2: kotlin.Int = ..., i3: kotlin.Int = ..., i4: kotlin.Int = ..., i5: kotlin.Int = ..., i6: kotlin.Int = ..., i7: kotlin.Int = ..., i8: kotlin.Int = ..., i9: kotlin.Int = ..., i10: kotlin.Int = ..., i11: kotlin.Int = ..., i12: kotlin.Int = ..., i13: kotlin.Int = ..., i14: kotlin.Int = ..., i15: kotlin.Int = ..., i16: kotlin.Int = ..., i17: kotlin.Int = ..., i18: kotlin.Int = ..., i19: kotlin.Int = ..., i20: kotlin.Int = ..., i21: kotlin.Int = ..., i22: kotlin.Int = ..., i23: kotlin.Int = ..., i24: kotlin.Int = ..., i25: kotlin.Int = ..., i26: kotlin.Int = ..., i27: kotlin.Int = ..., i28: kotlin.Int = ..., i29: kotlin.Int = ..., i30: kotlin.Int = ..., i31: kotlin.Int = ...): kotlin.String defined in Kla3[SimpleFunctionDescriptorImpl@4a222ed4]
2021-03-11 11:30:33,877 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:34,007 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:34,141 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:34,274 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:34,405 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:34,537 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:34,673 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:34,811 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:34,945 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:35,075 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:35,244 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:35,372 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:35,503 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:35,637 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:35,768 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:35,905 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:36,036 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:36,166 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:36,298 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:36,428 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:36,558 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:36,694 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:36,828 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:36,960 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:37,088 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:37,218 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:37,349 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:37,481 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:37,616 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:37,749 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:37,880 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:38,049 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:38,056 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]
2021-03-11 11:30:38,057 [main:66] - Generated call from random type = (Kla3())?.fu3("oqwzt", -1240774267, 902335676, -2043189597, -904097202, 1504623431, 1563698957, -1305746272, 652942210, -2090877229, -392333385, -1242229835, 1607026611, 1520381630, -239115617, -363815282, 893787227, -1011846904, 1854884352, 1028255463, -1740511503, -1171446925, 1453964522, 296529846, 1675355853, -1597724801, 1703621224, 371499765, 75448362, 140540617, 198701106, -825553931).lowercase()
2021-03-11 11:30:38,057 [main:110] - replacement of prope9 of type String is (Kla3())?.fu3("oqwzt", -1240774267, 902335676, -2043189597, -904097202, 1504623431, 1563698957, -1305746272, 652942210, -2090877229, -392333385, -1242229835, 1607026611, 1520381630, -239115617, -363815282, 893787227, -1011846904, 1854884352, 1028255463, -1740511503, -1171446925, 1453964522, 296529846, 1675355853, -1597724801, 1703621224, 371499765, 75448362, 140540617, 198701106, -825553931).lowercase()
2021-03-11 11:30:38,179 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:38,180 [main:66] - Compilation checking started
2021-03-11 11:30:38,636 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        (Kla3())?.fu3("oqwzt", -1240774267, 902335676, -2043189597, -904097202, 1504623431, 1563698957, -1305746272, 652942210, -2090877229, -392333385, -1242229835, 1607026611, 1520381630, -239115617, -363815282, 893787227, -1011846904, 1854884352, 1028255463, -1740511503, -1171446925, 1453964522, 296529846, 1675355853, -1597724801, 1703621224, 371499765, 75448362, 140540617, 198701106, -825553931).lowercase() = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:38,640 [main:103] - replacing (prope7, Function0<Unit>)
2021-03-11 11:30:38,640 [main:38] - replacing prope7 Function0<Unit>
2021-03-11 11:30:38,640 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:30:38,764 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:30:38,771 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:30:38,903 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:30:38,910 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:30:39,407 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:30:39,413 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 11:30:39,419 [main:302] - generating value of type = Any false depth = 5
2021-03-11 11:30:39,419 [main:95] - GENERATED = require(false, { "wgwhz"})
2021-03-11 11:30:39,419 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { require(false, { "wgwhz"})}
2021-03-11 11:30:39,419 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:39,612 [main:55] - randomType = Kla4?
2021-03-11 11:30:39,736 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 11:30:39,742 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}
2021-03-11 11:30:39,864 [main:194] - Type params = []
2021-03-11 11:30:39,988 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-11 11:30:40,121 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:30:40,129 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:30:40,472 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-11 11:30:40,616 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:30:40,623 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:30:41,154 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 8
2021-03-11 11:30:41,298 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:30:41,307 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:30:41,889 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 11
2021-03-11 11:30:42,027 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:30:42,034 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:30:42,572 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:30:42,573 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:30:42,573 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:30:42,573 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:30:42,592 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:30:42,631 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:30:42,646 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:30:42,675 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:30:42,714 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:30:42,720 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:30:42,720 [main:110] - replacement of prope7 of type Function0<Unit> is { require(false, { "wgwhz"})}
2021-03-11 11:30:42,850 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 11:30:42,851 [main:66] - Compilation checking started
2021-03-11 11:30:43,245 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.{ require(false, { "wgwhz"})} = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:43,248 [main:103] - replacing (i16, Int)
2021-03-11 11:30:43,248 [main:38] - replacing i16 Int
2021-03-11 11:30:43,248 [main:42] - Getting value of type Int
2021-03-11 11:30:43,373 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:43,379 [main:46] - GENERATED VALUE OF TYPE Int = 541868513
2021-03-11 11:30:43,379 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:43,569 [main:55] - randomType = Collection<Boolean>
2021-03-11 11:30:43,570 [main:94] - GETTING Int from String
2021-03-11 11:30:43,593 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@1f61cfcf]]
2021-03-11 11:30:43,593 [main:105] - GENERATED CALL = (Kla1().prope0).length.sign
2021-03-11 11:30:43,594 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:30:43,594 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:30:43,714 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:43,720 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:30:43,842 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:43,848 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("esblh").shl(970413007)
2021-03-11 11:30:43,849 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:30:43,849 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:30:43,849 [main:105] - GENERATED CALL = (Kla1().prope0).length.inc()
2021-03-11 11:30:43,849 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:30:43,849 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:30:43,992 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:43,998 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:30:43,998 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("rpvfa").inc()
2021-03-11 11:30:43,998 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]]
2021-03-11 11:30:43,999 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]
2021-03-11 11:30:44,128 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:30:44,134 [main:105] - GENERATED CALL = (Kla1().prope0).length.div(120)
2021-03-11 11:30:44,134 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@25463407]]
2021-03-11 11:30:44,135 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:30:44,262 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:44,269 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@25463407]
2021-03-11 11:30:44,397 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:44,403 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("mcxiu").xor(-1073125869)
2021-03-11 11:30:44,403 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]]
2021-03-11 11:30:44,403 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]
2021-03-11 11:30:44,527 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:44,534 [main:105] - GENERATED CALL = (Kla1().prope0).length.rotateLeft(1776174975)
2021-03-11 11:30:44,534 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]]
2021-03-11 11:30:44,534 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]
2021-03-11 11:30:44,534 [main:105] - GENERATED CALL = (Kla1().prope0).length.unaryPlus()
2021-03-11 11:30:44,534 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]]
2021-03-11 11:30:44,534 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:30:44,660 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:44,667 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]
2021-03-11 11:30:44,790 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:44,796 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("imnqi").rotateRight(1865043438)
2021-03-11 11:30:44,796 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]]
2021-03-11 11:30:44,796 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:30:44,921 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:44,930 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]
2021-03-11 11:30:44,931 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("bmtuc").unaryMinus()
2021-03-11 11:30:44,931 [main:110] - replacement of i16 of type Int is 541868513
2021-03-11 11:30:45,056 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 11:30:45,057 [main:66] - Compilation checking started
2021-03-11 11:30:45,509 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + 541868513 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:45,512 [main:103] - replacing (prope9, String)
2021-03-11 11:30:45,512 [main:38] - replacing prope9 String
2021-03-11 11:30:45,512 [main:42] - Getting value of type String
2021-03-11 11:30:45,645 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:45,651 [main:46] - GENERATED VALUE OF TYPE String = "tmvas"
2021-03-11 11:30:45,651 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:45,822 [main:55] - randomType = Double
2021-03-11 11:30:45,947 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:30:45,992 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:30:46,115 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:30:46,121 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:30:46,247 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:46,253 [main:66] - Generated call from random type = (0.13398002741017545).compareTo(120).toString(-1767210658)
2021-03-11 11:30:46,254 [main:94] - GETTING String from Any
2021-03-11 11:30:46,258 [main:94] - GETTING String from Function0<String>
2021-03-11 11:30:46,269 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]]
2021-03-11 11:30:46,269 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:46,269 [main:137] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]
2021-03-11 11:30:46,397 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-11 11:30:46,405 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:30:46,411 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().filterIndexed({a: Int, b: Char -> true})
2021-03-11 11:30:46,411 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@756e7e16]]
2021-03-11 11:30:46,411 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:46,411 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@756e7e16]
2021-03-11 11:30:46,412 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trim()
2021-03-11 11:30:46,412 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52f43270]]
2021-03-11 11:30:46,412 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:46,412 [main:137] - GENERATING call of type public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52f43270]
2021-03-11 11:30:46,543 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:46,549 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().prependIndent("njqdw")
2021-03-11 11:30:46,549 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]]
2021-03-11 11:30:46,549 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:46,549 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]
2021-03-11 11:30:46,673 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-11 11:30:46,808 [main:43] - GENERATING CALL OF fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Int): Iterable<Int> = TODO()
2021-03-11 11:30:46,815 [main:61] - WITHOUT TYPE PARAMS = fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Int): Iterable<Int> = TODO()
2021-03-11 11:30:47,307 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:30:47,314 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, Int> false depth = 3
2021-03-11 11:30:47,320 [main:302] - generating value of type = Int true depth = 4
2021-03-11 11:30:47,326 [main:95] - GENERATED = List<Int>(-413824815, {a: Int -> -361927173})
2021-03-11 11:30:47,326 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().slice(List<Int>(-413824815, {a: Int -> -361927173}))
2021-03-11 11:30:47,327 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]]
2021-03-11 11:30:47,327 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:47,327 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]
2021-03-11 11:30:47,327 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimEnd()
2021-03-11 11:30:47,327 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14fa9c18]]
2021-03-11 11:30:47,327 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:47,327 [main:137] - GENERATING call of type public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14fa9c18]
2021-03-11 11:30:47,450 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:30:47,457 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:30:47,463 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().filter({a: Char -> true})
2021-03-11 11:30:47,463 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@512af8db]]
2021-03-11 11:30:47,463 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:47,463 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@512af8db]
2021-03-11 11:30:47,589 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:47,595 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().substring(1319234750)
2021-03-11 11:30:47,595 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@415ff653]]
2021-03-11 11:30:47,595 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:47,595 [main:137] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@415ff653]
2021-03-11 11:30:47,718 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:30:47,846 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:30:47,976 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:47,982 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replace('', '斠', true)
2021-03-11 11:30:47,982 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e44f086]]
2021-03-11 11:30:47,982 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:47,982 [main:137] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e44f086]
2021-03-11 11:30:47,982 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().decapitalize()
2021-03-11 11:30:47,983 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6e3a7417]]
2021-03-11 11:30:47,983 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:47,983 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6e3a7417]
2021-03-11 11:30:47,983 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toLowerCase()
2021-03-11 11:30:47,983 [main:110] - replacement of prope9 of type String is (Kla0({ "hxtps"}).callback).invoke().decapitalize()
2021-03-11 11:30:48,111 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:48,112 [main:66] - Compilation checking started
2021-03-11 11:30:48,513 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        (Kla0({ "hxtps"}).callback).invoke().decapitalize() = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:48,516 [main:103] - replacing (Kla3(), Kla3)
2021-03-11 11:30:48,516 [main:38] - replacing Kla3() Kla3
2021-03-11 11:30:48,516 [main:42] - Getting value of type Kla3
2021-03-11 11:30:48,642 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 11:30:48,648 [main:112] - generating klass Kla3 text = class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}
2021-03-11 11:30:48,648 [main:46] - GENERATED VALUE OF TYPE Kla3 = Kla3()
2021-03-11 11:30:48,648 [main:49] - GENERATED IS CALL =true
2021-03-11 11:30:49,040 [main:55] - randomType = Sequence<Boolean>
2021-03-11 11:30:49,041 [main:94] - GETTING Kla3 from Any
2021-03-11 11:30:49,045 [main:94] - GETTING Kla3 from ULong
2021-03-11 11:30:49,070 [main:94] - GETTING Kla3 from Function0<String>
2021-03-11 11:30:49,081 [main:94] - GETTING Kla3 from String
2021-03-11 11:30:49,103 [main:94] - GETTING Kla3 from UByte
2021-03-11 11:30:49,129 [main:94] - GETTING Kla3 from ULong
2021-03-11 11:30:49,129 [main:110] - replacement of Kla3() of type Kla3 is Kla3()
2021-03-11 11:30:49,250 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:30:49,253 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12, Int)
2021-03-11 11:30:49,253 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 Int
2021-03-11 11:30:49,253 [main:42] - Getting value of type Int
2021-03-11 11:30:49,381 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:49,387 [main:46] - GENERATED VALUE OF TYPE Int = -239976011
2021-03-11 11:30:49,387 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:49,725 [main:55] - randomType = Float?
2021-03-11 11:30:49,849 [main:302] - generating value of type = Float true depth = 0
2021-03-11 11:30:49,894 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]
2021-03-11 11:30:50,019 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:30:50,025 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]
2021-03-11 11:30:50,025 [main:66] - Generated call from random type = (0.4690234f)?.compareTo(84).countLeadingZeroBits()
2021-03-11 11:30:50,025 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 of type Int is (0.4690234f)?.compareTo(84).countLeadingZeroBits()
2021-03-11 11:30:50,154 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:50,154 [main:66] - Compilation checking started
2021-03-11 11:30:50,563 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((0.4690234f)?.compareTo(84).countLeadingZeroBits() + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:50,566 [main:103] - replacing (prope3, Result<Any?>)
2021-03-11 11:30:50,566 [main:38] - replacing prope3 Result<Any?>
2021-03-11 11:30:50,566 [main:42] - Getting value of type Result<Any?>
2021-03-11 11:30:50,691 [main:302] - generating value of type = Result<Any?> false depth = 0
2021-03-11 11:30:50,825 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-11 11:30:50,832 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-11 11:30:51,160 [main:302] - generating value of type = Function0<Any?> false depth = 3
2021-03-11 11:30:51,166 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:30:51,166 [main:95] - GENERATED = runCatching<Any?>({ "eyfwl"})
2021-03-11 11:30:51,166 [main:46] - GENERATED VALUE OF TYPE Result<Any?> = runCatching<Any?>({ "eyfwl"})
2021-03-11 11:30:51,167 [main:49] - GENERATED IS CALL =true
2021-03-11 11:30:51,342 [main:55] - randomType = Double
2021-03-11 11:30:51,464 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:30:51,532 [main:94] - GETTING Result<Any?> from Any
2021-03-11 11:30:51,538 [main:94] - GETTING Result<Any?> from UByte
2021-03-11 11:30:51,592 [main:94] - GETTING Result<Any?> from ULong
2021-03-11 11:30:51,643 [main:94] - GETTING Result<Any?> from ULong
2021-03-11 11:30:51,645 [main:94] - GETTING Result<Any?> from String
2021-03-11 11:30:51,682 [main:94] - GETTING Result<Any?> from Function0<String>
2021-03-11 11:30:51,701 [main:110] - replacement of prope3 of type Result<Any?> is runCatching<Any?>({ "eyfwl"})
2021-03-11 11:30:51,848 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:30:51,848 [main:66] - Compilation checking started
2021-03-11 11:30:52,277 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = runCatching<Any?>({ "eyfwl"}).getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:52,280 [main:103] - replacing (prope3, String)
2021-03-11 11:30:52,280 [main:38] - replacing prope3 String
2021-03-11 11:30:52,280 [main:42] - Getting value of type String
2021-03-11 11:30:52,467 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:52,477 [main:46] - GENERATED VALUE OF TYPE String = "uxcga"
2021-03-11 11:30:52,477 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:53,298 [main:55] - randomType = HashMap<ArrayList<Long>, Double?>
2021-03-11 11:30:53,427 [main:302] - generating value of type = HashMap<ArrayList<Long>, Double?> false depth = 0
2021-03-11 11:30:53,572 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(pairs: Pair<ArrayList<Long>, Double?>): HashMap<ArrayList<Long>, Double?> = TODO()
2021-03-11 11:30:53,580 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(pairs: Pair<ArrayList<Long>, Double?>): HashMap<ArrayList<Long>, Double?> = TODO()
2021-03-11 11:30:53,747 [main:302] - generating value of type = Pair<ArrayList<Long>, Double?> false depth = 3
2021-03-11 11:30:53,933 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: ArrayList<Long>, second: Double?): Pair<ArrayList<Long>, Double?> = TODO()
2021-03-11 11:30:53,941 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: ArrayList<Long>, second: Double?): Pair<ArrayList<Long>, Double?> = TODO()
2021-03-11 11:30:54,108 [main:302] - generating value of type = ArrayList<Long> false depth = 6
2021-03-11 11:30:54,262 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): ArrayList<Long> = TODO()
2021-03-11 11:30:54,270 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): ArrayList<Long> = TODO()
2021-03-11 11:30:54,436 [main:95] - GENERATED = arrayListOf<Long>()
2021-03-11 11:30:54,436 [main:302] - generating value of type = Double true depth = 6
2021-03-11 11:30:54,443 [main:95] - GENERATED = Pair<ArrayList<Long>, Double?>(arrayListOf<Long>(), 0.6914479279931515)
2021-03-11 11:30:54,443 [main:95] - GENERATED = hashMapOf<ArrayList<Long>, Double?>(Pair<ArrayList<Long>, Double?>(arrayListOf<Long>(), 0.6914479279931515))
2021-03-11 11:30:54,595 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:30:54,732 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:54,738 [main:66] - Generated call from random type = (hashMapOf<ArrayList<Long>, Double?>(Pair<ArrayList<Long>, Double?>(arrayListOf<Long>(), 0.6914479279931515))).size.toString(60587012)
2021-03-11 11:30:54,739 [main:94] - GETTING String from Any
2021-03-11 11:30:54,745 [main:94] - GETTING String from Function0<String>
2021-03-11 11:30:54,761 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4c3dccb7]]
2021-03-11 11:30:54,761 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:54,761 [main:137] - GENERATING call of type public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4c3dccb7]
2021-03-11 11:30:54,900 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:54,906 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().take(-879042906)
2021-03-11 11:30:54,906 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26ffbae6]]
2021-03-11 11:30:54,906 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:54,906 [main:137] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26ffbae6]
2021-03-11 11:30:55,040 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:30:55,175 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:55,182 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().substringBeforeLast('粏', "xjsjy")
2021-03-11 11:30:55,182 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]]
2021-03-11 11:30:55,182 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:55,182 [main:137] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]
2021-03-11 11:30:55,308 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:30:55,314 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:30:55,320 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().takeWhile({a: Char -> true})
2021-03-11 11:30:55,320 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]]
2021-03-11 11:30:55,320 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:55,321 [main:137] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]
2021-03-11 11:30:55,441 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:55,447 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().takeLast(-1920945875)
2021-03-11 11:30:55,448 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64daa8f3]]
2021-03-11 11:30:55,448 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:55,448 [main:137] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64daa8f3]
2021-03-11 11:30:55,569 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:30:55,576 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:30:55,582 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().dropWhile({a: Char -> false})
2021-03-11 11:30:55,582 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]]
2021-03-11 11:30:55,582 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:55,582 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]
2021-03-11 11:30:55,710 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:55,716 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().concat("raldc")
2021-03-11 11:30:55,716 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6e3a7417]]
2021-03-11 11:30:55,716 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:55,716 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6e3a7417]
2021-03-11 11:30:55,717 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toLowerCase()
2021-03-11 11:30:55,717 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@512af8db]]
2021-03-11 11:30:55,717 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:55,717 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@512af8db]
2021-03-11 11:30:55,847 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:55,853 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().substring(-946842828)
2021-03-11 11:30:55,853 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5109e79f]]
2021-03-11 11:30:55,853 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:55,853 [main:137] - GENERATING call of type public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5109e79f]
2021-03-11 11:30:55,854 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().capitalize()
2021-03-11 11:30:55,854 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]]
2021-03-11 11:30:55,854 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:30:55,854 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]
2021-03-11 11:30:55,993 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:30:56,165 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:56,311 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:56,318 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceAfter('', "moodl", "rgsrz")
2021-03-11 11:30:56,318 [main:110] - replacement of prope3 of type String is (Kla0({ "hxtps"}).callback).invoke().replaceAfter('', "moodl", "rgsrz")
2021-03-11 11:30:56,443 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:56,444 [main:66] - Compilation checking started
2021-03-11 11:30:56,855 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            (Kla0({ "hxtps"}).callback).invoke().replaceAfter('', "moodl", "rgsrz") = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:30:56,858 [main:103] - replacing (prope9 != "abc#36", Boolean)
2021-03-11 11:30:56,859 [main:38] - replacing prope9 != "abc#36" Boolean
2021-03-11 11:30:56,859 [main:42] - Getting value of type Boolean
2021-03-11 11:30:56,991 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:56,997 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:30:56,998 [main:49] - GENERATED IS CALL =false
2021-03-11 11:30:57,022 [main:55] - randomType = Kla8
2021-03-11 11:30:57,143 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-11 11:30:57,148 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-11 11:30:57,156 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:30:57,279 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:57,279 [main:66] - Generated call from random type = (Kla8()).prope7.equals("jiean")
2021-03-11 11:30:57,280 [main:94] - GETTING Boolean from String
2021-03-11 11:30:57,299 [main:101] - Case = [public fun kotlin.CharSequence.regionMatches(thisOffset: kotlin.Int, other: kotlin.CharSequence, otherOffset: kotlin.Int, length: kotlin.Int, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1d1d48c]]
2021-03-11 11:30:57,299 [main:137] - GENERATING call of type public fun kotlin.CharSequence.regionMatches(thisOffset: kotlin.Int, other: kotlin.CharSequence, otherOffset: kotlin.Int, length: kotlin.Int, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1d1d48c]
2021-03-11 11:30:57,426 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:57,552 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:30:57,683 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:57,810 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:57,938 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:57,944 [main:105] - GENERATED CALL = (Kla1().prope0).regionMatches(-1318854588, "ksmeu", -35853386, -1526418246, false)
2021-03-11 11:30:57,944 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.none(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@98bb10a]]
2021-03-11 11:30:57,944 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:30:58,077 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:58,209 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:58,215 [main:137] - GENERATING call of type public fun kotlin.CharSequence.none(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@98bb10a]
2021-03-11 11:30:58,215 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1140423243, 900968942).none()
2021-03-11 11:30:58,216 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.all(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5f09bfee]]
2021-03-11 11:30:58,216 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:30:58,341 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:58,470 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:58,476 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.all(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5f09bfee]
2021-03-11 11:30:58,598 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:30:58,605 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:30:58,611 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1338245780, -2134975225).all({a: Char -> false})
2021-03-11 11:30:58,612 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:30:58,612 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]
2021-03-11 11:30:58,737 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:30:58,738 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:30:58,738 [main:105] - GENERATED CALL = (Kla1().prope0).equals("xzyah").not()
2021-03-11 11:30:58,738 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46e35a2]]
2021-03-11 11:30:58,738 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46e35a2]
2021-03-11 11:30:58,738 [main:105] - GENERATED CALL = (Kla1().prope0).toBoolean()
2021-03-11 11:30:58,738 [main:101] - Case = [public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]]
2021-03-11 11:30:58,738 [main:137] - GENERATING call of type public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]
2021-03-11 11:30:58,867 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:30:59,009 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:59,015 [main:105] - GENERATED CALL = (Kla1().prope0).endsWith("lrybn", true)
2021-03-11 11:30:59,016 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.any(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@786c4d3f]]
2021-03-11 11:30:59,016 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:30:59,149 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:59,279 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:59,285 [main:137] - GENERATING call of type public fun kotlin.CharSequence.any(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@786c4d3f]
2021-03-11 11:30:59,285 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(904671978, 1808507344).any()
2021-03-11 11:30:59,285 [main:101] - Case = [public operator fun kotlin.CharSequence.contains(char: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dfa1e5e]]
2021-03-11 11:30:59,285 [main:137] - GENERATING call of type public operator fun kotlin.CharSequence.contains(char: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dfa1e5e]
2021-03-11 11:30:59,408 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:30:59,536 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:30:59,542 [main:105] - GENERATED CALL = (Kla1().prope0).contains('塇', false)
2021-03-11 11:30:59,542 [main:101] - Case = [public fun kotlin.CharSequence.none(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@98bb10a]]
2021-03-11 11:30:59,542 [main:137] - GENERATING call of type public fun kotlin.CharSequence.none(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@98bb10a]
2021-03-11 11:30:59,543 [main:105] - GENERATED CALL = (Kla1().prope0).none()
2021-03-11 11:30:59,543 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], public fun kotlin.Char.isLetter(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4148f26f]]
2021-03-11 11:30:59,543 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:30:59,696 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:30:59,703 [main:137] - GENERATING call of type public fun kotlin.Char.isLetter(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4148f26f]
2021-03-11 11:30:59,704 [main:105] - GENERATED CALL = (Kla1().prope0).get(-1546122591).isLetter()
2021-03-11 11:30:59,704 [main:110] - replacement of prope9 != "abc#36" of type Boolean is (Kla1().prope0).subSequence(-1140423243, 900968942).none()
2021-03-11 11:30:59,828 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:30:59,828 [main:66] - Compilation checking started
2021-03-11 11:31:00,240 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if ((Kla1().prope0).subSequence(-1140423243, 900968942).none()) {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:00,243 [main:103] - replacing (i5, Int)
2021-03-11 11:31:00,243 [main:38] - replacing i5 Int
2021-03-11 11:31:00,243 [main:42] - Getting value of type Int
2021-03-11 11:31:00,371 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:00,377 [main:46] - GENERATED VALUE OF TYPE Int = 2001564681
2021-03-11 11:31:00,377 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:00,550 [main:55] - randomType = Double
2021-03-11 11:31:00,675 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:31:00,722 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:31:00,846 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:00,853 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d9fa6ba]
2021-03-11 11:31:00,979 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:00,985 [main:66] - Generated call from random type = (0.6813187036483869).compareTo(10).plus(105)
2021-03-11 11:31:00,986 [main:94] - GETTING Int from UByte
2021-03-11 11:31:01,023 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:31:01,023 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:31:01,150 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:01,156 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:31:01,156 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(80.toUByte()).inc()
2021-03-11 11:31:01,156 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5b9beac9]]
2021-03-11 11:31:01,156 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:31:01,156 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5b9beac9]
2021-03-11 11:31:01,157 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().unaryMinus()
2021-03-11 11:31:01,157 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5a0be3d0]]
2021-03-11 11:31:01,157 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:31:01,157 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5a0be3d0]
2021-03-11 11:31:01,157 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().countTrailingZeroBits()
2021-03-11 11:31:01,157 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:31:01,157 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:31:01,282 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:01,289 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:31:01,289 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(70.toUByte()).countTrailingZeroBits()
2021-03-11 11:31:01,289 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:31:01,289 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:31:01,415 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:01,421 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:31:01,547 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:01,553 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(33.toUByte()).ushr(-1866476263)
2021-03-11 11:31:01,553 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]]
2021-03-11 11:31:01,553 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:31:01,554 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]
2021-03-11 11:31:01,678 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:01,684 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().rem(-23)
2021-03-11 11:31:01,684 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]]
2021-03-11 11:31:01,684 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:31:01,685 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]
2021-03-11 11:31:01,685 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().roundToInt()
2021-03-11 11:31:01,685 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3d9305eb]]
2021-03-11 11:31:01,685 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:31:01,685 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3d9305eb]
2021-03-11 11:31:01,685 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().unaryPlus()
2021-03-11 11:31:01,685 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@116c6746]]
2021-03-11 11:31:01,685 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:31:01,685 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@116c6746]
2021-03-11 11:31:01,811 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:01,817 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().times(8)
2021-03-11 11:31:01,818 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]]
2021-03-11 11:31:01,818 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:31:01,941 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:01,948 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]
2021-03-11 11:31:02,071 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:02,077 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(15.toUByte()).rem(97)
2021-03-11 11:31:02,077 [main:110] - replacement of i5 of type Int is (0.6813187036483869).compareTo(10).plus(105)
2021-03-11 11:31:02,199 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:02,199 [main:66] - Compilation checking started
2021-03-11 11:31:02,589 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + (0.6813187036483869).compareTo(10).plus(105) + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:02,592 [main:103] - replacing (", got ", String)
2021-03-11 11:31:02,592 [main:38] - replacing ", got " String
2021-03-11 11:31:02,592 [main:42] - Getting value of type String
2021-03-11 11:31:02,715 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:02,721 [main:46] - GENERATED VALUE OF TYPE String = "ybxbq"
2021-03-11 11:31:02,721 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:03,084 [main:55] - randomType = Kla6<Kla1>
2021-03-11 11:31:03,238 [main:302] - generating value of type = Kla6<Kla1> false depth = 0
2021-03-11 11:31:03,245 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-11 11:31:03,732 [main:302] - generating value of type = Kla9 false depth = 2
2021-03-11 11:31:03,738 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:31:03,756 [main:94] - GETTING String from ULong
2021-03-11 11:31:03,780 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:31:03,780 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:31:03,901 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:03,907 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toString(287455009)
2021-03-11 11:31:03,907 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:31:03,907 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:31:03,907 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:31:04,029 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:04,035 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toString(441797500)
2021-03-11 11:31:04,035 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:31:04,035 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:31:04,036 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:31:04,157 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:04,163 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().toString(1760300806)
2021-03-11 11:31:04,163 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:31:04,164 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:31:04,164 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:31:04,288 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:04,294 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toString(-46413824)
2021-03-11 11:31:04,294 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:31:04,294 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:31:04,418 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:04,424 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:31:04,548 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:04,555 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(103.toUByte()).toString(-928392564)
2021-03-11 11:31:04,555 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:31:04,555 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:31:04,555 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:31:04,678 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:04,684 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().toString(1790094248)
2021-03-11 11:31:04,684 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:31:04,684 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:31:04,685 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:31:04,807 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:04,813 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().toString(224608356)
2021-03-11 11:31:04,813 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:31:04,813 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:31:04,813 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:31:04,934 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:04,941 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().toString(2006570237)
2021-03-11 11:31:04,941 [main:110] - replacement of ", got " of type String is (6516632970651683513.toULong()).compareTo(103.toUByte()).toString(-928392564)
2021-03-11 11:31:05,061 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:05,061 [main:66] - Compilation checking started
2021-03-11 11:31:05,454 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + (6516632970651683513.toULong()).compareTo(103.toUByte()).toString(-928392564) + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:05,457 [main:103] - replacing (prope9, String)
2021-03-11 11:31:05,457 [main:38] - replacing prope9 String
2021-03-11 11:31:05,457 [main:42] - Getting value of type String
2021-03-11 11:31:05,582 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:05,589 [main:46] - GENERATED VALUE OF TYPE String = "tfqnm"
2021-03-11 11:31:05,589 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:05,932 [main:55] - randomType = ArrayDeque<Float>
2021-03-11 11:31:06,053 [main:302] - generating value of type = ArrayDeque<Float> false depth = 0
2021-03-11 11:31:06,184 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Float> = TODO()
2021-03-11 11:31:06,191 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<Float> = TODO()
2021-03-11 11:31:06,498 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:31:06,504 [main:95] - GENERATED = ArrayDeque<Float>(1480394311)
2021-03-11 11:31:06,647 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:31:06,803 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:06,809 [main:66] - Generated call from random type = (ArrayDeque<Float>(1480394311)).modCount.toString(-1474944287)
2021-03-11 11:31:06,809 [main:110] - replacement of prope9 of type String is (ArrayDeque<Float>(1480394311)).modCount.toString(-1474944287)
2021-03-11 11:31:06,931 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:06,932 [main:66] - Compilation checking started
2021-03-11 11:31:07,342 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if ((ArrayDeque<Float>(1480394311)).modCount.toString(-1474944287) != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:07,345 [main:103] - replacing (i28, Int)
2021-03-11 11:31:07,345 [main:38] - replacing i28 Int
2021-03-11 11:31:07,345 [main:42] - Getting value of type Int
2021-03-11 11:31:07,473 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:07,479 [main:46] - GENERATED VALUE OF TYPE Int = -1877479399
2021-03-11 11:31:07,479 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:07,653 [main:55] - randomType = Double
2021-03-11 11:31:07,794 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:31:07,863 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5d493952]
2021-03-11 11:31:07,863 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]
2021-03-11 11:31:07,863 [main:66] - Generated call from random type = (0.3930294304018468).toByte().countOneBits()
2021-03-11 11:31:07,864 [main:94] - GETTING Int from Any
2021-03-11 11:31:07,868 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:31:07,869 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:31:08,013 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:31:08,013 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:31:08,164 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:08,174 [main:105] - GENERATED CALL = (l).equals("ycbzl").compareTo(true)
2021-03-11 11:31:08,174 [main:110] - replacement of i28 of type Int is (l).equals("ycbzl").compareTo(true)
2021-03-11 11:31:08,329 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:08,329 [main:66] - Compilation checking started
2021-03-11 11:31:08,980 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + (l).equals("ycbzl").compareTo(true) + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:08,985 [main:103] - replacing (prope3, Result<Ty0>)
2021-03-11 11:31:08,985 [main:38] - replacing prope3 Result<Ty0>
2021-03-11 11:31:08,985 [main:42] - Getting value of type Result<Ty0>
2021-03-11 11:31:09,142 [main:302] - generating value of type = Result<Ty0> false depth = 0
2021-03-11 11:31:09,305 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:31:09,315 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:31:09,718 [main:385] - Cant generate call of fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:31:09,718 [main:46] - GENERATED VALUE OF TYPE Result<Ty0> = 
2021-03-11 11:31:09,750 [main:55] - randomType = Kla7
2021-03-11 11:31:09,910 [main:302] - generating value of type = Kla7 false depth = 0
2021-03-11 11:31:09,918 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}
2021-03-11 11:31:09,928 [main:94] - GETTING Result<Ty0> from String
2021-03-11 11:31:09,962 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:31:10,002 [main:94] - GETTING Result<Ty0> from UByte
2021-03-11 11:31:10,042 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:31:10,044 [main:94] - GETTING Result<Ty0> from Function0<String>
2021-03-11 11:31:10,061 [main:94] - GETTING Result<Ty0> from Any
2021-03-11 11:31:10,064 [main:107] - Cant find and generate replacement for prope3 type Result<Ty0>
2021-03-11 11:31:10,064 [main:103] - replacing (prope3.exceptionOrNull(), Throwable?)
2021-03-11 11:31:10,066 [main:38] - replacing prope3.exceptionOrNull() Throwable?
2021-03-11 11:31:10,066 [main:42] - Getting value of type Throwable?
2021-03-11 11:31:10,208 [main:302] - generating value of type = Throwable false depth = 0
2021-03-11 11:31:10,354 [main:43] - GENERATING CALL OF fun RuntimeException(message: kotlin.String?, cause: kotlin.Throwable?): Throwable = TODO()
2021-03-11 11:31:10,362 [main:61] - WITHOUT TYPE PARAMS = fun RuntimeException(message: kotlin.String?, cause: kotlin.Throwable?): Throwable = TODO()
2021-03-11 11:31:10,921 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:31:10,927 [main:302] - generating value of type = Throwable false depth = 3
2021-03-11 11:31:11,151 [main:43] - GENERATING CALL OF fun AssertionError(message: kotlin.Any?): Throwable = TODO()
2021-03-11 11:31:11,158 [main:61] - WITHOUT TYPE PARAMS = fun AssertionError(message: kotlin.Any?): Throwable = TODO()
2021-03-11 11:31:11,532 [main:302] - generating value of type = Any false depth = 6
2021-03-11 11:31:11,533 [main:95] - GENERATED = AssertionError("xbxhx")
2021-03-11 11:31:11,533 [main:95] - GENERATED = RuntimeException("omknu", AssertionError("xbxhx"))
2021-03-11 11:31:11,533 [main:46] - GENERATED VALUE OF TYPE Throwable? = RuntimeException("omknu", AssertionError("xbxhx"))
2021-03-11 11:31:11,533 [main:49] - GENERATED IS CALL =true
2021-03-11 11:31:11,547 [main:55] - randomType = ULong
2021-03-11 11:31:11,691 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:31:11,747 [main:94] - GETTING Throwable? from UByte
2021-03-11 11:31:11,791 [main:94] - GETTING Throwable? from Function0<String>
2021-03-11 11:31:11,808 [main:94] - GETTING Throwable? from Any
2021-03-11 11:31:11,813 [main:94] - GETTING Throwable? from String
2021-03-11 11:31:11,849 [main:94] - GETTING Throwable? from ULong
2021-03-11 11:31:11,896 [main:94] - GETTING Throwable? from ULong
2021-03-11 11:31:11,896 [main:110] - replacement of prope3.exceptionOrNull() of type Throwable? is RuntimeException("omknu", AssertionError("xbxhx"))
2021-03-11 11:31:12,088 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:31:12,088 [main:66] - Compilation checking started
2021-03-11 11:31:12,611 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
RuntimeException("omknu", AssertionError("xbxhx"))?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:12,614 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28, Int)
2021-03-11 11:31:12,614 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 Int
2021-03-11 11:31:12,614 [main:42] - Getting value of type Int
2021-03-11 11:31:12,766 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:12,773 [main:46] - GENERATED VALUE OF TYPE Int = 271966284
2021-03-11 11:31:12,773 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:12,804 [main:55] - randomType = Kla3
2021-03-11 11:31:12,952 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 11:31:12,958 [main:112] - generating klass Kla3 text = class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}
2021-03-11 11:31:12,963 [main:137] - GENERATING call of type public final suspend fun fu3(prope9: kotlin.String = ..., i1: kotlin.Int = ..., i2: kotlin.Int = ..., i3: kotlin.Int = ..., i4: kotlin.Int = ..., i5: kotlin.Int = ..., i6: kotlin.Int = ..., i7: kotlin.Int = ..., i8: kotlin.Int = ..., i9: kotlin.Int = ..., i10: kotlin.Int = ..., i11: kotlin.Int = ..., i12: kotlin.Int = ..., i13: kotlin.Int = ..., i14: kotlin.Int = ..., i15: kotlin.Int = ..., i16: kotlin.Int = ..., i17: kotlin.Int = ..., i18: kotlin.Int = ..., i19: kotlin.Int = ..., i20: kotlin.Int = ..., i21: kotlin.Int = ..., i22: kotlin.Int = ..., i23: kotlin.Int = ..., i24: kotlin.Int = ..., i25: kotlin.Int = ..., i26: kotlin.Int = ..., i27: kotlin.Int = ..., i28: kotlin.Int = ..., i29: kotlin.Int = ..., i30: kotlin.Int = ..., i31: kotlin.Int = ...): kotlin.String defined in Kla3[SimpleFunctionDescriptorImpl@c03e81f]
2021-03-11 11:31:13,083 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:13,215 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:13,352 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:13,480 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:13,607 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:13,738 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:13,874 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:14,012 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:14,142 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:14,286 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:14,418 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:14,548 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:14,673 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:14,806 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:14,932 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:15,099 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:15,228 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:15,353 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:15,491 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:15,623 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:15,753 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:15,881 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:16,016 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:16,145 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:16,294 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:16,428 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:16,564 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:16,706 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:16,838 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:16,972 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:17,125 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:17,296 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:17,305 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:31:17,452 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:17,580 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:17,587 [main:66] - Generated call from random type = (Kla3()).fu3("rmovu", -1554451267, -1183128362, -1222163085, -1249718302, 1132446940, 1006979354, 2025917973, 608350455, 788438654, 755778162, -964062865, 946405761, -703200975, -1998733324, 936150200, 948264748, 1901100348, -1886033927, -308501999, 1626060378, -48075398, 1288600156, 266061072, 1531905924, 1037328119, 1269425879, 1176520255, -191369181, -511371530, -1474821248, 1200471956).compareTo("gtghy", false)
2021-03-11 11:31:17,588 [main:94] - GETTING Int from String
2021-03-11 11:31:17,609 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]]
2021-03-11 11:31:17,610 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:31:17,735 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:17,741 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]
2021-03-11 11:31:17,878 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:17,884 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("oylru").coerceAtMost(1048479822)
2021-03-11 11:31:17,884 [main:101] - Case = [public fun kotlin.CharSequence.lastIndexOf(char: kotlin.Char, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af91d7a]]
2021-03-11 11:31:17,884 [main:137] - GENERATING call of type public fun kotlin.CharSequence.lastIndexOf(char: kotlin.Char, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af91d7a]
2021-03-11 11:31:18,019 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:31:18,168 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:18,335 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:18,345 [main:105] - GENERATED CALL = (Kla1().prope0).lastIndexOf('뙗', -262335851, true)
2021-03-11 11:31:18,345 [main:101] - Case = [public fun kotlin.CharSequence.lastIndexOfAny(chars: kotlin.CharArray, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@23e24504]]
2021-03-11 11:31:18,345 [main:137] - GENERATING call of type public fun kotlin.CharSequence.lastIndexOfAny(chars: kotlin.CharArray, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@23e24504]
2021-03-11 11:31:18,491 [main:302] - generating value of type = CharArray false depth = 0
2021-03-11 11:31:18,637 [main:43] - GENERATING CALL OF fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-11 11:31:18,645 [main:61] - WITHOUT TYPE PARAMS = fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-11 11:31:18,890 [main:302] - generating value of type = Char true depth = 3
2021-03-11 11:31:18,899 [main:95] - GENERATED = charArrayOf('蠔')
2021-03-11 11:31:19,051 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:19,224 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:19,230 [main:105] - GENERATED CALL = (Kla1().prope0).lastIndexOfAny(charArrayOf('蠔'), -1906907708, false)
2021-03-11 11:31:19,230 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]]
2021-03-11 11:31:19,231 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:31:19,391 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:19,398 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]
2021-03-11 11:31:19,520 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:19,526 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("kitzi").rem(-116)
2021-03-11 11:31:19,526 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]]
2021-03-11 11:31:19,526 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:31:19,655 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:19,661 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]
2021-03-11 11:31:19,661 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("ycmcg").dec()
2021-03-11 11:31:19,662 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@45a13ace]]
2021-03-11 11:31:19,662 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:31:19,807 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:19,814 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@45a13ace]
2021-03-11 11:31:19,940 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:31:19,946 [main:105] - GENERATED CALL = (Kla1().prope0).get(1174864132).minus('఼')
2021-03-11 11:31:19,946 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:31:19,946 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:31:20,069 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:20,076 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:31:20,076 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("obaat").countTrailingZeroBits()
2021-03-11 11:31:20,076 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@257ec110]]
2021-03-11 11:31:20,076 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@257ec110]
2021-03-11 11:31:20,210 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:20,216 [main:105] - GENERATED CALL = (Kla1().prope0).length.times(90)
2021-03-11 11:31:20,216 [main:101] - Case = [public val kotlin.CharSequence.lastIndex: kotlin.Int defined in kotlin.text[DeserializedPropertyDescriptor@4fba6ff1]]
2021-03-11 11:31:20,217 [main:105] - GENERATED CALL = (Kla1().prope0).lastIndex
2021-03-11 11:31:20,217 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:31:20,217 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:31:20,344 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:20,350 [main:105] - GENERATED CALL = (Kla1().prope0).length.shl(-356195534)
2021-03-11 11:31:20,351 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 of type Int is (Kla1().prope0).length.times(90)
2021-03-11 11:31:20,476 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:20,476 [main:66] - Compilation checking started
2021-03-11 11:31:20,863 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((Kla1().prope0).length.times(90) + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:20,866 [main:103] - replacing (1, Int)
2021-03-11 11:31:20,866 [main:38] - replacing 1 Int
2021-03-11 11:31:20,866 [main:42] - Getting value of type Int
2021-03-11 11:31:21,000 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:21,007 [main:46] - GENERATED VALUE OF TYPE Int = -437960618
2021-03-11 11:31:21,007 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:21,557 [main:55] - randomType = Function2<Kla9, Double, Kla4>
2021-03-11 11:31:21,558 [main:94] - GETTING Int from Any
2021-03-11 11:31:21,562 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:31:21,562 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:31:21,706 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:31:21,706 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:31:21,848 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:21,855 [main:105] - GENERATED CALL = (l).equals("mkrfh").compareTo(true)
2021-03-11 11:31:21,855 [main:110] - replacement of 1 of type Int is (l).equals("mkrfh").compareTo(true)
2021-03-11 11:31:21,973 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:21,974 [main:66] - Compilation checking started
2021-03-11 11:31:22,363 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = (l).equals("mkrfh").compareTo(true),
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:22,366 [main:103] - replacing (EmptyCoroutineContext, EmptyCoroutineContext)
2021-03-11 11:31:22,366 [main:38] - replacing EmptyCoroutineContext EmptyCoroutineContext
2021-03-11 11:31:22,366 [main:42] - Getting value of type EmptyCoroutineContext
2021-03-11 11:31:22,484 [main:302] - generating value of type = EmptyCoroutineContext false depth = 0
2021-03-11 11:31:22,493 [main:46] - GENERATED VALUE OF TYPE EmptyCoroutineContext = 
2021-03-11 11:31:22,691 [main:55] - randomType = UInt
2021-03-11 11:31:22,819 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:31:22,866 [main:94] - GETTING EmptyCoroutineContext from UByte
2021-03-11 11:31:22,908 [main:94] - GETTING EmptyCoroutineContext from Function0<String>
2021-03-11 11:31:22,919 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:31:22,947 [main:94] - GETTING EmptyCoroutineContext from String
2021-03-11 11:31:22,975 [main:94] - GETTING EmptyCoroutineContext from Any
2021-03-11 11:31:22,980 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:31:22,980 [main:107] - Cant find and generate replacement for EmptyCoroutineContext type EmptyCoroutineContext
2021-03-11 11:31:22,980 [main:103] - replacing (1, Int)
2021-03-11 11:31:22,980 [main:38] - replacing 1 Int
2021-03-11 11:31:22,980 [main:42] - Getting value of type Int
2021-03-11 11:31:23,105 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:23,111 [main:46] - GENERATED VALUE OF TYPE Int = 1620935
2021-03-11 11:31:23,111 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:23,288 [main:55] - randomType = UInt
2021-03-11 11:31:23,423 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:31:23,472 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@11cf1e54]
2021-03-11 11:31:23,473 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]
2021-03-11 11:31:23,600 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:23,607 [main:66] - Generated call from random type = (1116785361.toUInt()).toByte().plus(-97)
2021-03-11 11:31:23,607 [main:94] - GETTING Int from Any
2021-03-11 11:31:23,612 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:31:23,612 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:31:23,741 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:31:23,741 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:31:23,867 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:23,873 [main:105] - GENERATED CALL = (l).equals("yihcy").compareTo(false)
2021-03-11 11:31:23,873 [main:110] - replacement of 1 of type Int is (l).equals("yihcy").compareTo(false)
2021-03-11 11:31:24,000 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:24,000 [main:66] - Compilation checking started
2021-03-11 11:31:24,424 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = (l).equals("yihcy").compareTo(false),
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:24,427 [main:103] - replacing (prope9, String)
2021-03-11 11:31:24,427 [main:38] - replacing prope9 String
2021-03-11 11:31:24,427 [main:42] - Getting value of type String
2021-03-11 11:31:24,558 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:24,564 [main:46] - GENERATED VALUE OF TYPE String = "ygfne"
2021-03-11 11:31:24,564 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:24,577 [main:55] - randomType = Boolean
2021-03-11 11:31:24,699 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:24,714 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:31:24,833 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:24,839 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:31:24,958 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:24,964 [main:66] - Generated call from random type = (true).compareTo(true).toString(-168969220)
2021-03-11 11:31:24,965 [main:94] - GETTING String from UByte
2021-03-11 11:31:24,999 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:31:24,999 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:31:25,119 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:25,125 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toString(-1327017049)
2021-03-11 11:31:25,125 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:31:25,126 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:31:25,245 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:25,252 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:31:25,372 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:25,378 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(102.toUByte()).toString(1339389927)
2021-03-11 11:31:25,378 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:31:25,378 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:31:25,378 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:31:25,497 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:25,503 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().toString(1047236908)
2021-03-11 11:31:25,504 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:31:25,504 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:31:25,631 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:25,637 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:31:25,765 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:25,772 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(108.toUByte()).toString(2138311421)
2021-03-11 11:31:25,772 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:31:25,772 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:31:25,772 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:31:25,894 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:25,901 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().toString(-290233408)
2021-03-11 11:31:25,901 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:31:25,901 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:31:25,901 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:31:26,022 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:26,028 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().toString(2015398178)
2021-03-11 11:31:26,028 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:31:26,028 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:31:26,029 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:31:26,148 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:26,154 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().toString(-57714403)
2021-03-11 11:31:26,155 [main:110] - replacement of prope9 of type String is ((6516632970651683513.toULong()).toUByte()).toShort().toString(1047236908)
2021-03-11 11:31:26,273 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:26,273 [main:66] - Compilation checking started
2021-03-11 11:31:26,703 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $((6516632970651683513.toULong()).toUByte()).toShort().toString(1047236908)"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:26,706 [main:103] - replacing ("tail-call optimization miss: method at ", String)
2021-03-11 11:31:26,707 [main:38] - replacing "tail-call optimization miss: method at " String
2021-03-11 11:31:26,707 [main:42] - Getting value of type String
2021-03-11 11:31:26,825 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:26,832 [main:46] - GENERATED VALUE OF TYPE String = "fjgtv"
2021-03-11 11:31:26,832 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:27,172 [main:55] - randomType = Array<UInt>
2021-03-11 11:31:27,290 [main:302] - generating value of type = Array<UInt> false depth = 0
2021-03-11 11:31:27,418 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<UInt> = TODO()
2021-03-11 11:31:27,425 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<UInt> = TODO()
2021-03-11 11:31:27,565 [main:95] - GENERATED = enumValues<UInt>()
2021-03-11 11:31:27,577 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.UInt defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@17ec815f]
2021-03-11 11:31:27,698 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:27,704 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:31:27,823 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:27,829 [main:66] - Generated call from random type = (enumValues<UInt>()).get(-941485030).toString(-1117704727)
2021-03-11 11:31:27,830 [main:94] - GETTING String from String
2021-03-11 11:31:27,848 [main:101] - Case = [public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a3a113f]]
2021-03-11 11:31:27,849 [main:137] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a3a113f]
2021-03-11 11:31:27,968 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:31:28,097 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:28,229 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:28,235 [main:105] - GENERATED CALL = (Kla1().prope0).replaceBefore('䟽', "xvcpb", "yiefq")
2021-03-11 11:31:28,235 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]]
2021-03-11 11:31:28,236 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]
2021-03-11 11:31:28,236 [main:105] - GENERATED CALL = (Kla1().prope0).lowercase()
2021-03-11 11:31:28,236 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]]
2021-03-11 11:31:28,236 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:31:28,390 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:28,397 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]
2021-03-11 11:31:28,540 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:28,547 [main:105] - GENERATED CALL = (Kla1().prope0).get(2138851303).plus("hglul")
2021-03-11 11:31:28,547 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replaceFirst(regex: kotlin.text.Regex, replacement: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1a7ba985]]
2021-03-11 11:31:28,547 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:31:28,679 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:28,819 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:28,829 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replaceFirst(regex: kotlin.text.Regex, replacement: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1a7ba985]
2021-03-11 11:31:29,002 [main:302] - generating value of type = Regex false depth = 0
2021-03-11 11:31:29,156 [main:43] - GENERATING CALL OF fun Regex(pattern: kotlin.String, option: kotlin.text.RegexOption): Regex = TODO()
2021-03-11 11:31:29,163 [main:61] - WITHOUT TYPE PARAMS = fun Regex(pattern: kotlin.String, option: kotlin.text.RegexOption): Regex = TODO()
2021-03-11 11:31:29,729 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:31:29,736 [main:302] - generating value of type = RegexOption false depth = 3
2021-03-11 11:31:29,745 [main:95] - GENERATED = Regex("srzbi", kotlin.text.RegexOption.IGNORE_CASE)
2021-03-11 11:31:29,876 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:29,883 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1232738855, 449174100).replaceFirst(Regex("srzbi", kotlin.text.RegexOption.IGNORE_CASE), "aqcjq")
2021-03-11 11:31:29,883 [main:101] - Case = [public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60231eda]]
2021-03-11 11:31:29,883 [main:137] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60231eda]
2021-03-11 11:31:30,009 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:30,016 [main:105] - GENERATED CALL = (Kla1().prope0).trimMargin("msxag")
2021-03-11 11:31:30,016 [main:101] - Case = [public fun kotlin.CharSequence.commonSuffixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@fd366af]]
2021-03-11 11:31:30,016 [main:137] - GENERATING call of type public fun kotlin.CharSequence.commonSuffixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@fd366af]
2021-03-11 11:31:30,154 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:31:30,292 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:30,298 [main:105] - GENERATED CALL = (Kla1().prope0).commonSuffixWith("ptkdc", false)
2021-03-11 11:31:30,298 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]]
2021-03-11 11:31:30,298 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]
2021-03-11 11:31:30,298 [main:105] - GENERATED CALL = (Kla1().prope0).uppercase()
2021-03-11 11:31:30,298 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6fa9e2e7]]
2021-03-11 11:31:30,298 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:31:30,454 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:30,460 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6fa9e2e7]
2021-03-11 11:31:30,460 [main:105] - GENERATED CALL = (Kla1().prope0).get(124078251).titlecase()
2021-03-11 11:31:30,460 [main:101] - Case = [public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@386ac0b4]]
2021-03-11 11:31:30,460 [main:137] - GENERATING call of type public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@386ac0b4]
2021-03-11 11:31:30,579 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:31:30,709 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:30,715 [main:105] - GENERATED CALL = (Kla1().prope0).commonPrefixWith("gzwji", false)
2021-03-11 11:31:30,715 [main:101] - Case = [public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4db84176]]
2021-03-11 11:31:30,715 [main:137] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4db84176]
2021-03-11 11:31:30,834 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:31:30,961 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:31:30,968 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:31:31,270 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:31:31,276 [main:95] - GENERATED = StringBuilder(-1578717136)
2021-03-11 11:31:31,277 [main:105] - GENERATED CALL = (Kla1().prope0).removePrefix(StringBuilder(-1578717136))
2021-03-11 11:31:31,277 [main:110] - replacement of "tail-call optimization miss: method at " of type String is (Kla1().prope0).subSequence(-1232738855, 449174100).replaceFirst(Regex("srzbi", kotlin.text.RegexOption.IGNORE_CASE), "aqcjq")
2021-03-11 11:31:31,409 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:31,409 [main:66] - Compilation checking started
2021-03-11 11:31:31,820 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error((Kla1().prope0).subSequence(-1232738855, 449174100).replaceFirst(Regex("srzbi", kotlin.text.RegexOption.IGNORE_CASE), "aqcjq") + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:31,823 [main:103] - replacing (prope3, String)
2021-03-11 11:31:31,823 [main:38] - replacing prope3 String
2021-03-11 11:31:31,823 [main:42] - Getting value of type String
2021-03-11 11:31:31,947 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:31,953 [main:46] - GENERATED VALUE OF TYPE String = "kmnow"
2021-03-11 11:31:31,954 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:32,149 [main:55] - randomType = Array<Kla7>
2021-03-11 11:31:32,272 [main:302] - generating value of type = Array<Kla7> false depth = 0
2021-03-11 11:31:32,421 [main:43] - GENERATING CALL OF fun <T> arrayOfNulls(size: kotlin.Int): Array<Kla7> = TODO()
2021-03-11 11:31:32,433 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOfNulls(size: kotlin.Int): Array<Kla7> = TODO()
2021-03-11 11:31:32,739 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:31:32,746 [main:95] - GENERATED = arrayOfNulls<Kla7>(1913070431)
2021-03-11 11:31:32,757 [main:137] - GENERATING call of type public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1389e498]
2021-03-11 11:31:32,876 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:31:33,004 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:31:33,132 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 11:31:33,140 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 11:31:33,444 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:31:33,450 [main:95] - GENERATED = StringBuilder("rcstd")
2021-03-11 11:31:33,570 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:31:33,697 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:33,823 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:31:33,955 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 11:31:33,961 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 11:31:33,970 [main:66] - Generated call from random type = (arrayOfNulls<Kla7>(1913070431)).joinToString("fhpuz", StringBuilder("rcstd"), "xaxod", -489915443, "cpjit", {a: T -> StringBuilder()})
2021-03-11 11:31:33,971 [main:94] - GETTING String from Function0<String>
2021-03-11 11:31:33,980 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]]
2021-03-11 11:31:33,980 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:33,980 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]
2021-03-11 11:31:33,980 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().reversed()
2021-03-11 11:31:33,981 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@415ff653]]
2021-03-11 11:31:33,981 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:33,981 [main:137] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@415ff653]
2021-03-11 11:31:34,101 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:31:34,261 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:31:34,388 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:31:34,395 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replace('₺', 'ᥱ', true)
2021-03-11 11:31:34,395 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26ffbae6]]
2021-03-11 11:31:34,395 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:34,395 [main:137] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26ffbae6]
2021-03-11 11:31:34,518 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:31:34,644 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:34,651 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().substringBeforeLast('⋷', "tgrkx")
2021-03-11 11:31:34,651 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c1014c7]]
2021-03-11 11:31:34,651 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:34,651 [main:137] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c1014c7]
2021-03-11 11:31:34,771 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:34,778 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().dropLast(1231202093)
2021-03-11 11:31:34,778 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e44f086]]
2021-03-11 11:31:34,778 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:34,778 [main:137] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e44f086]
2021-03-11 11:31:34,778 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().decapitalize()
2021-03-11 11:31:34,778 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]]
2021-03-11 11:31:34,778 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:34,778 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]
2021-03-11 11:31:34,778 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().lowercase()
2021-03-11 11:31:34,778 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@28ae7bbc]]
2021-03-11 11:31:34,779 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:34,779 [main:137] - GENERATING call of type public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@28ae7bbc]
2021-03-11 11:31:34,898 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:31:35,023 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:35,029 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().substringAfter('⍎', "hqsms")
2021-03-11 11:31:35,030 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14fa9c18]]
2021-03-11 11:31:35,030 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:35,030 [main:137] - GENERATING call of type public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14fa9c18]
2021-03-11 11:31:35,154 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:31:35,160 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:31:35,167 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().filter({a: Char -> false})
2021-03-11 11:31:35,167 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@691c68ce]]
2021-03-11 11:31:35,167 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:35,167 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@691c68ce]
2021-03-11 11:31:35,288 [main:302] - generating value of type = Function1<Char, Char> false depth = 0
2021-03-11 11:31:35,294 [main:302] - generating value of type = Char true depth = 1
2021-03-11 11:31:35,300 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceFirstChar({a: Char -> '実'})
2021-03-11 11:31:35,300 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6e3a7417]]
2021-03-11 11:31:35,300 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:31:35,301 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6e3a7417]
2021-03-11 11:31:35,301 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toLowerCase()
2021-03-11 11:31:35,301 [main:110] - replacement of prope3 of type String is (Kla0({ "hxtps"}).callback).invoke().substringAfter('⍎', "hqsms")
2021-03-11 11:31:35,419 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:35,420 [main:66] - Compilation checking started
2021-03-11 11:31:35,813 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            (Kla0({ "hxtps"}).callback).invoke().substringAfter('⍎', "hqsms") = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:35,815 [main:103] - replacing (prope9, String)
2021-03-11 11:31:35,816 [main:38] - replacing prope9 String
2021-03-11 11:31:35,816 [main:42] - Getting value of type String
2021-03-11 11:31:35,944 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:35,951 [main:46] - GENERATED VALUE OF TYPE String = "depky"
2021-03-11 11:31:35,951 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:36,132 [main:55] - randomType = Kla1
2021-03-11 11:31:36,254 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 11:31:36,260 [main:112] - generating klass Kla1 text = class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}
2021-03-11 11:31:36,267 [main:137] - GENERATING call of type public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5109e79f]
2021-03-11 11:31:36,267 [main:66] - Generated call from random type = (Kla1()).prope0.capitalize()
2021-03-11 11:31:36,267 [main:110] - replacement of prope9 of type String is (Kla1()).prope0.capitalize()
2021-03-11 11:31:36,392 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:36,392 [main:66] - Compilation checking started
2021-03-11 11:31:36,783 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if ((Kla1()).prope0.capitalize() != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:36,786 [main:103] - replacing (this, Kla5)
2021-03-11 11:31:36,786 [main:38] - replacing this Kla5
2021-03-11 11:31:36,786 [main:42] - Getting value of type Kla5
2021-03-11 11:31:36,909 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-11 11:31:36,915 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:31:36,916 [main:46] - GENERATED VALUE OF TYPE Kla5 = Kla5()
2021-03-11 11:31:36,916 [main:49] - GENERATED IS CALL =true
2021-03-11 11:31:36,941 [main:55] - randomType = Kla7
2021-03-11 11:31:37,074 [main:302] - generating value of type = Kla7 false depth = 0
2021-03-11 11:31:37,081 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}
2021-03-11 11:31:37,090 [main:94] - GETTING Kla5 from Function0<String>
2021-03-11 11:31:37,105 [main:94] - GETTING Kla5 from Any
2021-03-11 11:31:37,111 [main:94] - GETTING Kla5 from UByte
2021-03-11 11:31:37,149 [main:94] - GETTING Kla5 from ULong
2021-03-11 11:31:37,184 [main:94] - GETTING Kla5 from String
2021-03-11 11:31:37,212 [main:94] - GETTING Kla5 from ULong
2021-03-11 11:31:37,212 [main:110] - replacement of this of type Kla5 is Kla5()
2021-03-11 11:31:37,334 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:31:37,334 [main:66] - Compilation checking started
2021-03-11 11:31:37,722 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
Kla5().prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:37,725 [main:103] - replacing (i23, Int)
2021-03-11 11:31:37,725 [main:38] - replacing i23 Int
2021-03-11 11:31:37,725 [main:42] - Getting value of type Int
2021-03-11 11:31:37,844 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:37,852 [main:46] - GENERATED VALUE OF TYPE Int = -456856087
2021-03-11 11:31:37,852 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:37,865 [main:55] - randomType = Int
2021-03-11 11:31:38,041 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:38,094 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75314e1c]
2021-03-11 11:31:38,216 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:38,222 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@257ec110]
2021-03-11 11:31:38,342 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:38,349 [main:66] - Generated call from random type = (1214774542).compareTo(-770222926).times(114)
2021-03-11 11:31:38,349 [main:94] - GETTING Int from ULong
2021-03-11 11:31:38,373 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:31:38,373 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:31:38,505 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:38,512 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:31:38,647 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:38,654 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(1.toUByte()).shl(596313626)
2021-03-11 11:31:38,654 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]]
2021-03-11 11:31:38,654 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:31:38,654 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 11:31:38,654 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().countOneBits()
2021-03-11 11:31:38,654 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]]
2021-03-11 11:31:38,654 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:31:38,781 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:38,787 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]
2021-03-11 11:31:38,907 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:38,913 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(54.toUByte()).coerceAtMost(1984389095)
2021-03-11 11:31:38,913 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]]
2021-03-11 11:31:38,913 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:31:38,913 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]
2021-03-11 11:31:38,913 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().toBits()
2021-03-11 11:31:38,913 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]]
2021-03-11 11:31:38,913 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:31:38,913 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]
2021-03-11 11:31:38,914 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().countLeadingZeroBits()
2021-03-11 11:31:38,914 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]]
2021-03-11 11:31:38,914 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:31:39,035 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:39,041 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]
2021-03-11 11:31:39,180 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:39,186 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(73.toUByte()).rotateLeft(604440610)
2021-03-11 11:31:39,186 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]]
2021-03-11 11:31:39,187 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:31:39,306 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:39,312 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]
2021-03-11 11:31:39,431 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:39,437 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(92.toUByte()).div(123)
2021-03-11 11:31:39,437 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]]
2021-03-11 11:31:39,437 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:31:39,437 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:31:39,557 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:39,565 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().compareTo(-75)
2021-03-11 11:31:39,565 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]]
2021-03-11 11:31:39,566 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:31:39,566 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]
2021-03-11 11:31:39,698 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:39,707 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().minus(69)
2021-03-11 11:31:39,708 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4a0e3df6]]
2021-03-11 11:31:39,708 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:31:39,708 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4a0e3df6]
2021-03-11 11:31:39,708 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().countLeadingZeroBits()
2021-03-11 11:31:39,708 [main:110] - replacement of i23 of type Int is -456856087
2021-03-11 11:31:39,856 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 11:31:39,856 [main:66] - Compilation checking started
2021-03-11 11:31:40,261 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + -456856087 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:40,264 [main:103] - replacing ("xyz", String)
2021-03-11 11:31:40,264 [main:38] - replacing "xyz" String
2021-03-11 11:31:40,264 [main:42] - Getting value of type String
2021-03-11 11:31:40,402 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:40,408 [main:46] - GENERATED VALUE OF TYPE String = "jtpdf"
2021-03-11 11:31:40,408 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:40,578 [main:55] - randomType = Double
2021-03-11 11:31:40,703 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:31:40,739 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@374aa0a8]
2021-03-11 11:31:40,739 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4e78f136]
2021-03-11 11:31:40,739 [main:66] - Generated call from random type = (0.2799292774716178).toChar().uppercase()
2021-03-11 11:31:40,740 [main:94] - GETTING String from UByte
2021-03-11 11:31:40,764 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:31:40,764 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:31:40,764 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:31:40,885 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:40,891 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().toString(476101075)
2021-03-11 11:31:40,891 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:31:40,891 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:31:41,012 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:41,019 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:31:41,144 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:41,150 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(78.toUByte()).toString(-831365912)
2021-03-11 11:31:41,150 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:31:41,150 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:31:41,273 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:41,280 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toString(768031970)
2021-03-11 11:31:41,280 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:31:41,280 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:31:41,405 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:41,411 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:31:41,534 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:41,540 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(1.toUByte()).toString(-813188548)
2021-03-11 11:31:41,540 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:31:41,540 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:31:41,540 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:31:41,660 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:41,666 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().toString(-1771392100)
2021-03-11 11:31:41,667 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:31:41,667 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:31:41,667 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:31:41,796 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:41,802 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().toString(701050287)
2021-03-11 11:31:41,802 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:31:41,802 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:31:41,803 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:31:41,957 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:41,963 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().toString(99637933)
2021-03-11 11:31:41,964 [main:110] - replacement of "xyz" of type String is ((6516632970651683513.toULong()).toUByte()).div(1.toUByte()).toString(-813188548)
2021-03-11 11:31:42,082 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:42,083 [main:66] - Compilation checking started
2021-03-11 11:31:42,527 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(((6516632970651683513.toULong()).toUByte()).div(1.toUByte()).toString(-813188548), 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:42,530 [main:103] - replacing (EmptyCoroutineContext, EmptyCoroutineContext)
2021-03-11 11:31:42,530 [main:38] - replacing EmptyCoroutineContext EmptyCoroutineContext
2021-03-11 11:31:42,530 [main:42] - Getting value of type EmptyCoroutineContext
2021-03-11 11:31:42,651 [main:302] - generating value of type = EmptyCoroutineContext false depth = 0
2021-03-11 11:31:42,660 [main:46] - GENERATED VALUE OF TYPE EmptyCoroutineContext = 
2021-03-11 11:31:42,824 [main:55] - randomType = Byte
2021-03-11 11:31:42,945 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:31:42,987 [main:94] - GETTING EmptyCoroutineContext from Function0<String>
2021-03-11 11:31:42,996 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:31:43,027 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:31:43,027 [main:94] - GETTING EmptyCoroutineContext from String
2021-03-11 11:31:43,052 [main:94] - GETTING EmptyCoroutineContext from UByte
2021-03-11 11:31:43,095 [main:94] - GETTING EmptyCoroutineContext from Any
2021-03-11 11:31:43,102 [main:107] - Cant find and generate replacement for EmptyCoroutineContext type EmptyCoroutineContext
2021-03-11 11:31:43,102 [main:103] - replacing (x, Continuation<String>)
2021-03-11 11:31:43,102 [main:38] - replacing x Continuation<String>
2021-03-11 11:31:43,102 [main:42] - Getting value of type Continuation<String>
2021-03-11 11:31:43,262 [main:302] - generating value of type = Continuation<String> false depth = 0
2021-03-11 11:31:43,405 [main:43] - GENERATING CALL OF fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<String>)->kotlin.Unit): Contuation<Strg> = TODO()
2021-03-11 11:31:43,412 [main:61] - WITHOUT TYPE PARAMS = fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<String>)->kotlin.Unit): Contuation<Strg> = TODO()
2021-03-11 11:31:43,966 [main:302] - generating value of type = CoroutineContext false depth = 3
2021-03-11 11:31:44,118 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:31:44,126 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:31:44,457 [main:302] - generating value of type = Key<*> false depth = 6
2021-03-11 11:31:44,604 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:31:44,611 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:31:45,167 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 9
2021-03-11 11:31:45,304 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:31:45,311 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:31:45,885 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:31:45,885 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:31:45,886 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:31:45,886 [main:385] - Cant generate call of fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<String>)->kotlin.Unit): Contuation<Strg> = TODO()
2021-03-11 11:31:45,886 [main:46] - GENERATED VALUE OF TYPE Continuation<String> = 
2021-03-11 11:31:46,510 [main:55] - randomType = Function1<ArrayList<ULong>, UInt>
2021-03-11 11:31:46,511 [main:94] - GETTING Continuation<String> from String
2021-03-11 11:31:46,530 [main:94] - GETTING Continuation<String> from ULong
2021-03-11 11:31:46,554 [main:94] - GETTING Continuation<String> from UByte
2021-03-11 11:31:46,578 [main:94] - GETTING Continuation<String> from Any
2021-03-11 11:31:46,582 [main:94] - GETTING Continuation<String> from Function0<String>
2021-03-11 11:31:46,596 [main:94] - GETTING Continuation<String> from ULong
2021-03-11 11:31:46,596 [main:107] - Cant find and generate replacement for x type Continuation<String>
2021-03-11 11:31:46,596 [main:103] - replacing (prope3, String)
2021-03-11 11:31:46,596 [main:38] - replacing prope3 String
2021-03-11 11:31:46,596 [main:42] - Getting value of type String
2021-03-11 11:31:46,720 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:46,727 [main:46] - GENERATED VALUE OF TYPE String = "cwlvf"
2021-03-11 11:31:46,727 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:47,089 [main:55] - randomType = UInt?
2021-03-11 11:31:47,210 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:31:47,246 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@45945b35]
2021-03-11 11:31:47,367 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:31:47,373 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:31:47,493 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:47,499 [main:66] - Generated call from random type = (719106217.toUInt())?.div(4099831168285445240.toULong()).toString(-304936908)
2021-03-11 11:31:47,500 [main:94] - GETTING String from ULong
2021-03-11 11:31:47,523 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:31:47,523 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:31:47,523 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:31:47,643 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:47,650 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().toString(-1032530001)
2021-03-11 11:31:47,650 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:31:47,650 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:31:47,650 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:31:47,769 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:47,775 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().toString(-1437189894)
2021-03-11 11:31:47,775 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:31:47,775 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:31:47,775 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:31:47,905 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:47,911 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toString(-635116437)
2021-03-11 11:31:47,912 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:31:47,912 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:31:48,042 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:48,049 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toString(250188000)
2021-03-11 11:31:48,049 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:31:48,049 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:31:48,049 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:31:48,185 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:48,191 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().toString(1197435740)
2021-03-11 11:31:48,191 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:31:48,192 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:31:48,192 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:31:48,320 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:48,327 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toString(133511831)
2021-03-11 11:31:48,327 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:31:48,327 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:31:48,327 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:31:48,452 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:48,458 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().toString(-914895733)
2021-03-11 11:31:48,458 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:31:48,458 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:31:48,595 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:48,603 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:31:48,738 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:48,744 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(109.toUByte()).toString(369136906)
2021-03-11 11:31:48,744 [main:110] - replacement of prope3 of type String is "cwlvf"
2021-03-11 11:31:48,871 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:31:48,871 [main:66] - Compilation checking started
2021-03-11 11:31:49,262 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            "cwlvf" = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:49,265 [main:103] - replacing (fu3("cde"), String)
2021-03-11 11:31:49,265 [main:38] - replacing fu3("cde") String
2021-03-11 11:31:49,265 [main:42] - Getting value of type String
2021-03-11 11:31:49,416 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:49,424 [main:46] - GENERATED VALUE OF TYPE String = "setdy"
2021-03-11 11:31:49,424 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:49,980 [main:55] - randomType = Array<Kla1>
2021-03-11 11:31:50,115 [main:302] - generating value of type = Array<Kla1> false depth = 0
2021-03-11 11:31:50,300 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Kla1> = TODO()
2021-03-11 11:31:50,308 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Kla1> = TODO()
2021-03-11 11:31:50,449 [main:95] - GENERATED = emptyArray<Kla1>()
2021-03-11 11:31:50,464 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): Kla1 defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@cbdf656]
2021-03-11 11:31:50,605 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:50,612 [main:66] - Generated call from random type = (emptyArray<Kla1>()).get(722409198).prope0
2021-03-11 11:31:50,613 [main:94] - GETTING String from ULong
2021-03-11 11:31:50,645 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:31:50,645 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:31:50,775 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:50,781 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(-335599804)
2021-03-11 11:31:50,781 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:31:50,781 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:31:50,781 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:31:50,900 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:50,907 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(2063759331)
2021-03-11 11:31:50,907 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:31:50,907 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:31:51,035 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:31:51,042 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:31:51,200 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:51,206 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(107.toUByte()).toString(-1535846803)
2021-03-11 11:31:51,207 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:31:51,207 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:31:51,207 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:31:51,337 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:51,344 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(703505736)
2021-03-11 11:31:51,344 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:31:51,344 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:31:51,344 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:31:51,463 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:51,470 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(2133417453)
2021-03-11 11:31:51,470 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:31:51,470 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:31:51,470 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:31:51,589 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:51,595 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(804740306)
2021-03-11 11:31:51,595 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:31:51,595 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:31:51,595 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:31:51,713 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:51,720 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(-34432897)
2021-03-11 11:31:51,720 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:31:51,720 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:31:51,720 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:31:51,841 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:51,848 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(151058756)
2021-03-11 11:31:51,848 [main:110] - replacement of fu3("cde") of type String is ((6516632970651683513.toULong())).toByte().toString(2133417453)
2021-03-11 11:31:51,968 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:31:51,968 [main:66] - Compilation checking started
2021-03-11 11:31:52,353 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = ((6516632970651683513.toULong())).toByte().toString(2133417453)
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:52,356 [main:103] - replacing (prope3.exceptionOrNull()?.let(x), Unit?)
2021-03-11 11:31:52,356 [main:38] - replacing prope3.exceptionOrNull()?.let(x) Unit?
2021-03-11 11:31:52,356 [main:42] - Getting value of type Unit?
2021-03-11 11:31:52,478 [main:302] - generating value of type = Unit false depth = 0
2021-03-11 11:31:52,488 [main:46] - GENERATED VALUE OF TYPE Unit? = println()
2021-03-11 11:31:52,488 [main:49] - GENERATED IS CALL =true
2021-03-11 11:31:52,657 [main:55] - randomType = UInt
2021-03-11 11:31:52,776 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:31:52,811 [main:94] - GETTING Unit? from ULong
2021-03-11 11:31:52,834 [main:94] - GETTING Unit? from UByte
2021-03-11 11:31:52,858 [main:94] - GETTING Unit? from Any
2021-03-11 11:31:52,861 [main:94] - GETTING Unit? from Function0<String>
2021-03-11 11:31:52,871 [main:94] - GETTING Unit? from String
2021-03-11 11:31:52,888 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]]
2021-03-11 11:31:52,888 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:31:53,006 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:53,130 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:53,137 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]
2021-03-11 11:31:53,255 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-11 11:31:53,261 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:31:53,388 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:31:53,395 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:31:53,700 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:31:53,706 [main:95] - GENERATED = check(false)
2021-03-11 11:31:53,706 [main:105] - GENERATED CALL = (Kla1().prope0)?.subSequence(-99681499, 13608620).forEach({a: Char -> check(false)})
2021-03-11 11:31:53,707 [main:101] - Case = [public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]]
2021-03-11 11:31:53,707 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]
2021-03-11 11:31:53,824 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-11 11:31:53,830 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:31:53,958 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:31:53,965 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:31:54,312 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:31:54,313 [main:95] - GENERATED = print("gpmny")
2021-03-11 11:31:54,313 [main:105] - GENERATED CALL = (Kla1().prope0)?.forEach({a: Char -> print("gpmny")})
2021-03-11 11:31:54,313 [main:101] - Case = [public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]]
2021-03-11 11:31:54,313 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]
2021-03-11 11:31:54,433 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-11 11:31:54,439 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:31:54,570 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:31:54,577 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:31:54,951 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:31:54,951 [main:95] - GENERATED = print("qzksj")
2021-03-11 11:31:54,951 [main:105] - GENERATED CALL = (Kla1().prope0)?.forEachIndexed({a: Int, b: Char -> print("qzksj")})
2021-03-11 11:31:54,951 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]]
2021-03-11 11:31:54,952 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:31:55,071 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:55,203 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:31:55,209 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]
2021-03-11 11:31:55,342 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-11 11:31:55,348 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:31:55,489 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:31:55,496 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:31:55,983 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:31:55,989 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 11:31:55,995 [main:302] - generating value of type = Any false depth = 5
2021-03-11 11:31:55,996 [main:95] - GENERATED = check(true, { "gfksd"})
2021-03-11 11:31:55,996 [main:105] - GENERATED CALL = (Kla1().prope0)?.subSequence(1148936195, 1000941013).forEachIndexed({a: Int, b: Char -> check(true, { "gfksd"})})
2021-03-11 11:31:55,996 [main:110] - replacement of prope3.exceptionOrNull()?.let(x) of type Unit? is println()
2021-03-11 11:31:56,114 [main:33] - Trying to replace Element(SAFE_ACCESS_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:31:56,115 [main:66] - Compilation checking started
2021-03-11 11:31:56,498 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
println()
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:31:56,502 [main:103] - replacing ("Continuation " + c, String)
2021-03-11 11:31:56,502 [main:38] - replacing "Continuation " + c String
2021-03-11 11:31:56,502 [main:42] - Getting value of type String
2021-03-11 11:31:56,624 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:31:56,631 [main:46] - GENERATED VALUE OF TYPE String = "vzddo"
2021-03-11 11:31:56,631 [main:49] - GENERATED IS CALL =false
2021-03-11 11:31:56,656 [main:55] - randomType = Kla4
2021-03-11 11:31:56,779 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 11:31:56,786 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}
2021-03-11 11:31:56,910 [main:194] - Type params = []
2021-03-11 11:31:57,031 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-11 11:31:57,162 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:31:57,170 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:31:57,504 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-11 11:31:57,648 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:31:57,655 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:31:58,224 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 8
2021-03-11 11:31:58,359 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:31:58,367 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:31:58,873 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 11
2021-03-11 11:31:59,009 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:31:59,016 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:31:59,548 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 14
2021-03-11 11:31:59,684 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:31:59,691 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:32:00,205 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 17
2021-03-11 11:32:00,206 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:32:00,206 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:32:00,206 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:00,206 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:00,206 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:00,221 [main:94] - GETTING String from ULong
2021-03-11 11:32:00,244 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:32:00,244 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:32:00,245 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:32:00,365 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:00,372 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().toString(-1287417110)
2021-03-11 11:32:00,372 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:32:00,372 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:32:00,372 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:32:00,493 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:00,500 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toString(-907148531)
2021-03-11 11:32:00,500 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:32:00,500 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:32:00,641 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:00,648 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:32:00,788 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:00,794 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(99.toUByte()).toString(-70905461)
2021-03-11 11:32:00,794 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:32:00,794 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:32:00,795 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:32:00,918 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:00,925 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().toString(-800986331)
2021-03-11 11:32:00,925 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:32:00,925 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:32:00,925 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:32:01,053 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:01,059 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().toString(124055038)
2021-03-11 11:32:01,059 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:32:01,059 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:32:01,185 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:01,191 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toString(557856749)
2021-03-11 11:32:01,191 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:32:01,191 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:32:01,191 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:32:01,328 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:01,335 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toString(1943943549)
2021-03-11 11:32:01,335 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:32:01,335 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:32:01,336 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:32:01,468 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:01,475 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().toString(-630849248)
2021-03-11 11:32:01,475 [main:110] - replacement of "Continuation " + c of type String is (6516632970651683513.toULong()).toUByte().toString(-630849248)
2021-03-11 11:32:01,607 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:01,607 [main:66] - Compilation checking started
2021-03-11 11:32:02,007 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error((6516632970651683513.toULong()).toUByte().toString(-630849248) + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:02,010 [main:103] - replacing (prope3.getOrThrow(), Ty0)
2021-03-11 11:32:02,010 [main:38] - replacing prope3.getOrThrow() Ty0
2021-03-11 11:32:02,010 [main:42] - Getting value of type Ty0
2021-03-11 11:32:02,132 [main:302] - generating value of type = Ty0 false depth = 0
2021-03-11 11:32:02,141 [main:46] - GENERATED VALUE OF TYPE Ty0 = 
2021-03-11 11:32:02,345 [main:55] - randomType = Short
2021-03-11 11:32:02,464 [main:302] - generating value of type = Short true depth = 0
2021-03-11 11:32:02,503 [main:94] - GETTING Ty0 from Any
2021-03-11 11:32:02,506 [main:94] - GETTING Ty0 from String
2021-03-11 11:32:02,522 [main:94] - GETTING Ty0 from ULong
2021-03-11 11:32:02,545 [main:94] - GETTING Ty0 from Function0<String>
2021-03-11 11:32:02,556 [main:94] - GETTING Ty0 from ULong
2021-03-11 11:32:02,557 [main:94] - GETTING Ty0 from UByte
2021-03-11 11:32:02,578 [main:107] - Cant find and generate replacement for prope3.getOrThrow() type Ty0
2021-03-11 11:32:02,578 [main:103] - replacing (prope9, String)
2021-03-11 11:32:02,578 [main:38] - replacing prope9 String
2021-03-11 11:32:02,578 [main:42] - Getting value of type String
2021-03-11 11:32:02,705 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:02,711 [main:46] - GENERATED VALUE OF TYPE String = "lbwut"
2021-03-11 11:32:02,711 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:03,241 [main:55] - randomType = Map<Kla9, UInt>
2021-03-11 11:32:03,242 [main:94] - GETTING String from Any
2021-03-11 11:32:03,246 [main:94] - GETTING String from Function0<String>
2021-03-11 11:32:03,255 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52f43270]]
2021-03-11 11:32:03,255 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:03,255 [main:137] - GENERATING call of type public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52f43270]
2021-03-11 11:32:03,381 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:03,389 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().prependIndent("zhoeh")
2021-03-11 11:32:03,389 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]]
2021-03-11 11:32:03,389 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:03,389 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke()
2021-03-11 11:32:03,389 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]]
2021-03-11 11:32:03,389 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:03,389 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]
2021-03-11 11:32:03,519 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-11 11:32:03,666 [main:43] - GENERATING CALL OF fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Int): Iterable<Int> = TODO()
2021-03-11 11:32:03,673 [main:61] - WITHOUT TYPE PARAMS = fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Int): Iterable<Int> = TODO()
2021-03-11 11:32:04,178 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:32:04,184 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, Int> false depth = 3
2021-03-11 11:32:04,190 [main:302] - generating value of type = Int true depth = 4
2021-03-11 11:32:04,196 [main:95] - GENERATED = List<Int>(678451238, {a: Int -> -1097042693})
2021-03-11 11:32:04,197 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().slice(List<Int>(678451238, {a: Int -> -1097042693}))
2021-03-11 11:32:04,197 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]]
2021-03-11 11:32:04,197 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:04,197 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]
2021-03-11 11:32:04,197 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimEnd()
2021-03-11 11:32:04,197 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]]
2021-03-11 11:32:04,197 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:04,197 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]
2021-03-11 11:32:04,197 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().lowercase()
2021-03-11 11:32:04,197 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]]
2021-03-11 11:32:04,197 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:04,197 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]
2021-03-11 11:32:04,329 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:04,476 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:04,620 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:32:04,629 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceRange(418691048, 540396339, "fhaoz")
2021-03-11 11:32:04,629 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dff8bc7]]
2021-03-11 11:32:04,630 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:04,630 [main:137] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dff8bc7]
2021-03-11 11:32:04,753 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:04,880 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:04,887 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().padEnd(1245008358, 'Ա')
2021-03-11 11:32:04,887 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]]
2021-03-11 11:32:04,887 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:04,887 [main:137] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]
2021-03-11 11:32:05,007 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:05,133 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:05,140 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().padStart(-414692458, 'ⲡ')
2021-03-11 11:32:05,140 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@28ae7bbc]]
2021-03-11 11:32:05,140 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:05,140 [main:137] - GENERATING call of type public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@28ae7bbc]
2021-03-11 11:32:05,259 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:05,386 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:05,392 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().substringAfter('ེ', "tohtr")
2021-03-11 11:32:05,392 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]]
2021-03-11 11:32:05,392 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:05,392 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]
2021-03-11 11:32:05,512 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:05,645 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:05,775 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:05,782 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceAfter('䞓', "alegw", "kynmm")
2021-03-11 11:32:05,782 [main:110] - replacement of prope9 of type String is (Kla0({ "hxtps"}).callback).invoke().padEnd(1245008358, 'Ա')
2021-03-11 11:32:05,911 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:05,912 [main:66] - Compilation checking started
2021-03-11 11:32:06,399 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $(Kla0({ "hxtps"}).callback).invoke().padEnd(1245008358, 'Ա')"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:06,404 [main:103] - replacing (i1 + i2 + i3 + i4 + i5, Int)
2021-03-11 11:32:06,404 [main:38] - replacing i1 + i2 + i3 + i4 + i5 Int
2021-03-11 11:32:06,404 [main:42] - Getting value of type Int
2021-03-11 11:32:06,542 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:06,548 [main:46] - GENERATED VALUE OF TYPE Int = -352095994
2021-03-11 11:32:06,548 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:06,765 [main:55] - randomType = Kla5?
2021-03-11 11:32:06,911 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-11 11:32:06,918 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:32:06,943 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla5[DeserializedSimpleFunctionDescriptor@196be9ea]
2021-03-11 11:32:07,076 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:07,076 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:32:07,247 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:07,256 [main:66] - Generated call from random type = (Kla5())?.equals("dfcxp").compareTo(false)
2021-03-11 11:32:07,257 [main:94] - GETTING Int from UByte
2021-03-11 11:32:07,303 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4913ac97]]
2021-03-11 11:32:07,304 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:32:07,304 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4913ac97]
2021-03-11 11:32:07,304 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().countOneBits()
2021-03-11 11:32:07,304 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]]
2021-03-11 11:32:07,304 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:32:07,443 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:07,450 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]
2021-03-11 11:32:07,610 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:32:07,620 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(104.toUByte()).minus(8)
2021-03-11 11:32:07,621 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]]
2021-03-11 11:32:07,621 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:32:07,621 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]
2021-03-11 11:32:07,757 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:32:07,763 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().minus(44)
2021-03-11 11:32:07,763 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]]
2021-03-11 11:32:07,764 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:32:07,885 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:07,891 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]
2021-03-11 11:32:07,891 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(127.toUByte()).takeLowestOneBit()
2021-03-11 11:32:07,892 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@454bc819]]
2021-03-11 11:32:07,892 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@454bc819]
2021-03-11 11:32:07,892 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).countTrailingZeroBits()
2021-03-11 11:32:07,892 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]]
2021-03-11 11:32:07,892 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:32:07,892 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]
2021-03-11 11:32:08,015 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:32:08,021 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().plus(4)
2021-03-11 11:32:08,021 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]]
2021-03-11 11:32:08,022 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:32:08,144 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:08,150 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]
2021-03-11 11:32:08,150 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(120.toUByte()).toInt()
2021-03-11 11:32:08,150 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@66682ea9]]
2021-03-11 11:32:08,150 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:32:08,273 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:08,279 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@66682ea9]
2021-03-11 11:32:08,280 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(26.toUByte()).takeHighestOneBit()
2021-03-11 11:32:08,280 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]]
2021-03-11 11:32:08,280 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:32:08,280 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]
2021-03-11 11:32:08,402 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:32:08,409 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().compareTo(-48)
2021-03-11 11:32:08,409 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4c83e101]]
2021-03-11 11:32:08,409 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:32:08,528 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:08,534 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(28.toUByte()).absoluteValue
2021-03-11 11:32:08,534 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 of type Int is ((6516632970651683513.toULong()).toUByte()).toShort().plus(4)
2021-03-11 11:32:08,663 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:08,663 [main:66] - Compilation checking started
2021-03-11 11:32:09,079 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (((6516632970651683513.toULong()).toUByte()).toShort().plus(4) + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:09,082 [main:103] - replacing (x, Continuation<String>)
2021-03-11 11:32:09,082 [main:38] - replacing x Continuation<String>
2021-03-11 11:32:09,082 [main:42] - Getting value of type Continuation<String>
2021-03-11 11:32:09,206 [main:302] - generating value of type = Continuation<String> false depth = 0
2021-03-11 11:32:09,338 [main:43] - GENERATING CALL OF fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<String>)->kotlin.Unit): Contuation<Strg> = TODO()
2021-03-11 11:32:09,345 [main:61] - WITHOUT TYPE PARAMS = fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<String>)->kotlin.Unit): Contuation<Strg> = TODO()
2021-03-11 11:32:09,846 [main:302] - generating value of type = CoroutineContext false depth = 3
2021-03-11 11:32:09,979 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:09,987 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:10,330 [main:302] - generating value of type = Key<*> false depth = 6
2021-03-11 11:32:10,472 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:10,479 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:11,073 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 9
2021-03-11 11:32:11,210 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:32:11,217 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:32:11,735 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 12
2021-03-11 11:32:11,874 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:11,886 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:12,443 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:12,443 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:32:12,443 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:12,443 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:12,443 [main:385] - Cant generate call of fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<String>)->kotlin.Unit): Contuation<Strg> = TODO()
2021-03-11 11:32:12,443 [main:46] - GENERATED VALUE OF TYPE Continuation<String> = 
2021-03-11 11:32:12,789 [main:55] - randomType = UInt?
2021-03-11 11:32:12,911 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:32:12,952 [main:94] - GETTING Continuation<String> from String
2021-03-11 11:32:12,968 [main:94] - GETTING Continuation<String> from Function0<String>
2021-03-11 11:32:12,979 [main:94] - GETTING Continuation<String> from Any
2021-03-11 11:32:12,983 [main:94] - GETTING Continuation<String> from ULong
2021-03-11 11:32:13,006 [main:94] - GETTING Continuation<String> from ULong
2021-03-11 11:32:13,007 [main:94] - GETTING Continuation<String> from UByte
2021-03-11 11:32:13,029 [main:107] - Cant find and generate replacement for x type Continuation<String>
2021-03-11 11:32:13,029 [main:103] - replacing (prope9, String)
2021-03-11 11:32:13,029 [main:38] - replacing prope9 String
2021-03-11 11:32:13,029 [main:42] - Getting value of type String
2021-03-11 11:32:13,149 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:13,155 [main:46] - GENERATED VALUE OF TYPE String = "yhosh"
2021-03-11 11:32:13,155 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:13,501 [main:55] - randomType = Set<Double>
2021-03-11 11:32:13,502 [main:94] - GETTING String from Function0<String>
2021-03-11 11:32:13,511 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]]
2021-03-11 11:32:13,511 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:13,511 [main:137] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]
2021-03-11 11:32:13,511 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimIndent()
2021-03-11 11:32:13,511 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]]
2021-03-11 11:32:13,511 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:13,512 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke()
2021-03-11 11:32:13,512 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a3a113f]]
2021-03-11 11:32:13,512 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:13,512 [main:137] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a3a113f]
2021-03-11 11:32:13,636 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:13,764 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:13,895 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:13,901 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceBefore('艨', "idkli", "nkget")
2021-03-11 11:32:13,901 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]]
2021-03-11 11:32:13,901 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:13,901 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]
2021-03-11 11:32:13,902 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimStart()
2021-03-11 11:32:13,902 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@17cd1937]]
2021-03-11 11:32:13,902 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:13,902 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@17cd1937]
2021-03-11 11:32:14,021 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:14,147 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:14,273 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:14,279 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceAfterLast('깄', "nyvvy", "mzbpg")
2021-03-11 11:32:14,279 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]]
2021-03-11 11:32:14,279 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:14,279 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]
2021-03-11 11:32:14,280 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().uppercase()
2021-03-11 11:32:14,280 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]]
2021-03-11 11:32:14,280 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:14,280 [main:137] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]
2021-03-11 11:32:14,400 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:14,406 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().takeLast(-1835389236)
2021-03-11 11:32:14,406 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]]
2021-03-11 11:32:14,406 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:14,406 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]
2021-03-11 11:32:14,406 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().reversed()
2021-03-11 11:32:14,406 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4db84176]]
2021-03-11 11:32:14,406 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:14,407 [main:137] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4db84176]
2021-03-11 11:32:14,529 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:32:14,538 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().removePrefix("pocxf")
2021-03-11 11:32:14,538 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26ffbae6]]
2021-03-11 11:32:14,538 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:14,538 [main:137] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26ffbae6]
2021-03-11 11:32:14,661 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:14,827 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:14,833 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().substringBeforeLast('靃', "drubz")
2021-03-11 11:32:14,833 [main:110] - replacement of prope9 of type String is (Kla0({ "hxtps"}).callback).invoke().replaceBefore('艨', "idkli", "nkget")
2021-03-11 11:32:14,953 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:14,953 [main:66] - Compilation checking started
2021-03-11 11:32:15,344 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if ((Kla0({ "hxtps"}).callback).invoke().replaceBefore('艨', "idkli", "nkget") != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:15,347 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15, Int)
2021-03-11 11:32:15,347 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 Int
2021-03-11 11:32:15,347 [main:42] - Getting value of type Int
2021-03-11 11:32:15,467 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:15,473 [main:46] - GENERATED VALUE OF TYPE Int = -1693021785
2021-03-11 11:32:15,473 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:15,486 [main:55] - randomType = String
2021-03-11 11:32:15,606 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:15,629 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:32:15,750 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:15,757 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:32:15,757 [main:66] - Generated call from random type = ("ycdmc").compareTo("duydx").inc()
2021-03-11 11:32:15,758 [main:94] - GETTING Int from ULong
2021-03-11 11:32:15,789 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]]
2021-03-11 11:32:15,789 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:32:15,790 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:32:15,910 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:15,916 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().compareTo(107.toUByte())
2021-03-11 11:32:15,916 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]]
2021-03-11 11:32:15,916 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:32:15,916 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]
2021-03-11 11:32:16,038 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:32:16,044 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().times(67)
2021-03-11 11:32:16,044 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]]
2021-03-11 11:32:16,044 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:32:16,044 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]
2021-03-11 11:32:16,164 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:32:16,171 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().compareTo(78)
2021-03-11 11:32:16,171 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]]
2021-03-11 11:32:16,171 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:32:16,171 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]
2021-03-11 11:32:16,290 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:32:16,296 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().compareTo(-3)
2021-03-11 11:32:16,296 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]]
2021-03-11 11:32:16,296 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:32:16,416 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:16,422 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(86.toUByte())
2021-03-11 11:32:16,422 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]]
2021-03-11 11:32:16,422 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:32:16,540 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:16,547 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]
2021-03-11 11:32:16,666 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:16,672 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(116.toUByte()).rotateRight(554797156)
2021-03-11 11:32:16,672 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]]
2021-03-11 11:32:16,672 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:32:16,792 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:16,798 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]
2021-03-11 11:32:16,918 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:16,925 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(85.toUByte()).coerceAtMost(-1705382623)
2021-03-11 11:32:16,925 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]]
2021-03-11 11:32:16,925 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:32:17,044 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:17,050 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]
2021-03-11 11:32:17,050 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(28.toUByte()).countLeadingZeroBits()
2021-03-11 11:32:17,050 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@535dafcd]]
2021-03-11 11:32:17,050 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:32:17,050 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@535dafcd]
2021-03-11 11:32:17,169 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:17,176 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().compareTo(102.toUByte())
2021-03-11 11:32:17,176 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]]
2021-03-11 11:32:17,176 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:32:17,176 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]
2021-03-11 11:32:17,176 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().countTrailingZeroBits()
2021-03-11 11:32:17,176 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 of type Int is (6516632970651683513.toULong()).toShort().countTrailingZeroBits()
2021-03-11 11:32:17,295 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:17,295 [main:66] - Compilation checking started
2021-03-11 11:32:17,681 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((6516632970651683513.toULong()).toShort().countTrailingZeroBits() + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:17,683 [main:103] - replacing (6, Int)
2021-03-11 11:32:17,684 [main:38] - replacing 6 Int
2021-03-11 11:32:17,684 [main:42] - Getting value of type Int
2021-03-11 11:32:17,803 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:17,809 [main:46] - GENERATED VALUE OF TYPE Int = -354788891
2021-03-11 11:32:17,809 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:17,988 [main:55] - randomType = Kla1
2021-03-11 11:32:18,111 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 11:32:18,118 [main:112] - generating klass Kla1 text = class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}
2021-03-11 11:32:18,122 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:32:18,123 [main:66] - Generated call from random type = (Kla1()).prope0.toInt()
2021-03-11 11:32:18,123 [main:110] - replacement of 6 of type Int is (Kla1()).prope0.toInt()
2021-03-11 11:32:18,241 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:18,241 [main:66] - Compilation checking started
2021-03-11 11:32:18,628 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = (Kla1()).prope0.toInt())
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:18,631 [main:103] - replacing (method, String)
2021-03-11 11:32:18,631 [main:38] - replacing method String
2021-03-11 11:32:18,631 [main:42] - Getting value of type String
2021-03-11 11:32:18,751 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:18,757 [main:46] - GENERATED VALUE OF TYPE String = "uhnbt"
2021-03-11 11:32:18,757 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:18,782 [main:55] - randomType = Kla0
2021-03-11 11:32:18,940 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 11:32:18,946 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:32:19,065 [main:194] - Type params = []
2021-03-11 11:32:19,184 [main:302] - generating value of type = Function0<String> false depth = 2
2021-03-11 11:32:19,190 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:32:19,202 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@58f90c97]
2021-03-11 11:32:19,202 [main:66] - Generated call from random type = (Kla0({ "izqje"})).callback.invoke()
2021-03-11 11:32:19,203 [main:94] - GETTING String from Function0<String>
2021-03-11 11:32:19,212 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9b6dfe8]]
2021-03-11 11:32:19,212 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:19,212 [main:137] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9b6dfe8]
2021-03-11 11:32:19,334 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:19,341 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceIndent("ihtzo")
2021-03-11 11:32:19,341 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@316a32f7]]
2021-03-11 11:32:19,341 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:19,341 [main:137] - GENERATING call of type public inline fun kotlin.String.filterNot(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@316a32f7]
2021-03-11 11:32:19,467 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:32:19,473 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:32:19,479 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().filterNot({a: Char -> false})
2021-03-11 11:32:19,480 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4c3dccb7]]
2021-03-11 11:32:19,480 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:19,480 [main:137] - GENERATING call of type public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4c3dccb7]
2021-03-11 11:32:19,638 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:19,647 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().take(-1395994208)
2021-03-11 11:32:19,647 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]]
2021-03-11 11:32:19,647 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:19,648 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]
2021-03-11 11:32:19,834 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:19,993 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:20,143 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:32:20,277 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 11:32:20,285 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 11:32:20,598 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:32:20,604 [main:95] - GENERATED = StringBuilder("upyxy")
2021-03-11 11:32:20,605 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceRange(-83624086, 835550143, StringBuilder("upyxy"))
2021-03-11 11:32:20,605 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c3ff9f]]
2021-03-11 11:32:20,605 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:20,605 [main:137] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c3ff9f]
2021-03-11 11:32:20,724 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:20,849 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:20,855 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().substringBefore('ⱏ', "eudxi")
2021-03-11 11:32:20,855 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60231eda]]
2021-03-11 11:32:20,856 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:20,856 [main:137] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60231eda]
2021-03-11 11:32:20,975 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:20,982 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimMargin("sebuy")
2021-03-11 11:32:20,982 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@56b1a486]]
2021-03-11 11:32:20,982 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:20,982 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@56b1a486]
2021-03-11 11:32:21,103 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:21,103 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().plus("qzlet")
2021-03-11 11:32:21,103 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]]
2021-03-11 11:32:21,103 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:21,103 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]
2021-03-11 11:32:21,104 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().reversed()
2021-03-11 11:32:21,104 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]]
2021-03-11 11:32:21,104 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:21,104 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]
2021-03-11 11:32:21,104 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimEnd()
2021-03-11 11:32:21,104 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dff8bc7]]
2021-03-11 11:32:21,104 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:21,104 [main:137] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dff8bc7]
2021-03-11 11:32:21,224 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:21,350 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:21,357 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().padEnd(-944894373, '∳')
2021-03-11 11:32:21,357 [main:110] - replacement of method of type String is "uhnbt"
2021-03-11 11:32:21,479 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:32:21,479 [main:66] - Compilation checking started
2021-03-11 11:32:21,891 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith("uhnbt") == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:21,894 [main:103] - replacing (method, String)
2021-03-11 11:32:21,894 [main:38] - replacing method String
2021-03-11 11:32:21,894 [main:42] - Getting value of type String
2021-03-11 11:32:22,018 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:22,024 [main:46] - GENERATED VALUE OF TYPE String = "afkqx"
2021-03-11 11:32:22,024 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:22,037 [main:55] - randomType = String
2021-03-11 11:32:22,163 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:22,198 [main:137] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]
2021-03-11 11:32:22,318 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:32:22,324 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:32:22,330 [main:66] - Generated call from random type = ("pdgwo").takeWhile({a: Char -> true})
2021-03-11 11:32:22,331 [main:94] - GETTING String from ULong
2021-03-11 11:32:22,356 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:32:22,356 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:32:22,356 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:32:22,475 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:22,481 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().toString(-534229234)
2021-03-11 11:32:22,482 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:32:22,482 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:32:22,482 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:32:22,602 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:22,608 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toString(466159287)
2021-03-11 11:32:22,608 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:32:22,608 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:32:22,608 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:32:22,728 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:22,735 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().toString(1383847789)
2021-03-11 11:32:22,735 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:32:22,735 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:32:22,735 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:32:22,854 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:22,860 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().toString(550493070)
2021-03-11 11:32:22,860 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:32:22,861 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:32:22,980 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:22,986 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:32:23,105 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:23,111 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(67.toUByte()).toString(-1944950063)
2021-03-11 11:32:23,111 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:32:23,111 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:32:23,112 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:32:23,272 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:23,278 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().toString(442999011)
2021-03-11 11:32:23,278 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:32:23,278 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:32:23,279 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:32:23,397 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:23,403 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toString(-179801268)
2021-03-11 11:32:23,403 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:32:23,404 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:32:23,527 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:23,535 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toString(-1739334500)
2021-03-11 11:32:23,536 [main:110] - replacement of method of type String is (6516632970651683513.toULong()).toShort().toString(442999011)
2021-03-11 11:32:23,659 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:23,660 [main:66] - Compilation checking started
2021-03-11 11:32:24,080 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith((6516632970651683513.toULong()).toShort().toString(442999011)) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:24,083 [main:103] - replacing (c, Continuation<*>)
2021-03-11 11:32:24,083 [main:38] - replacing c Continuation<*>
2021-03-11 11:32:24,083 [main:42] - Getting value of type Continuation<*>
2021-03-11 11:32:24,212 [main:302] - generating value of type = Continuation<*> false depth = 0
2021-03-11 11:32:24,340 [main:43] - GENERATING CALL OF fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-11 11:32:24,348 [main:61] - WITHOUT TYPE PARAMS = fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-11 11:32:24,882 [main:302] - generating value of type = CoroutineContext false depth = 3
2021-03-11 11:32:25,030 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:25,039 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:25,407 [main:302] - generating value of type = Key<*> false depth = 6
2021-03-11 11:32:25,543 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:25,550 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:26,063 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 9
2021-03-11 11:32:26,205 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:32:26,212 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:32:26,733 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:32:26,733 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:26,733 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:26,733 [main:385] - Cant generate call of fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-11 11:32:26,733 [main:46] - GENERATED VALUE OF TYPE Continuation<*> = 
2021-03-11 11:32:27,067 [main:55] - randomType = UInt?
2021-03-11 11:32:27,186 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:32:27,222 [main:94] - GETTING Continuation<*> from ULong
2021-03-11 11:32:27,245 [main:94] - GETTING Continuation<*> from ULong
2021-03-11 11:32:27,246 [main:94] - GETTING Continuation<*> from Any
2021-03-11 11:32:27,250 [main:94] - GETTING Continuation<*> from String
2021-03-11 11:32:27,267 [main:94] - GETTING Continuation<*> from UByte
2021-03-11 11:32:27,290 [main:94] - GETTING Continuation<*> from Function0<String>
2021-03-11 11:32:27,298 [main:107] - Cant find and generate replacement for c type Continuation<*>
2021-03-11 11:32:27,298 [main:103] - replacing (true, Boolean)
2021-03-11 11:32:27,298 [main:38] - replacing true Boolean
2021-03-11 11:32:27,298 [main:42] - Getting value of type Boolean
2021-03-11 11:32:27,417 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:27,423 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:32:27,423 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:27,436 [main:55] - randomType = Int
2021-03-11 11:32:27,593 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:27,634 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@ad89c4]
2021-03-11 11:32:27,635 [main:137] - GENERATING call of type public fun kotlin.Char.isLowerCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@70f3b325]
2021-03-11 11:32:27,635 [main:66] - Generated call from random type = (-286076787).toChar().isLowerCase()
2021-03-11 11:32:27,636 [main:94] - GETTING Boolean from UByte
2021-03-11 11:32:27,658 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]]
2021-03-11 11:32:27,658 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:32:27,658 [main:137] - GENERATING call of type public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]
2021-03-11 11:32:27,658 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().isNaN()
2021-03-11 11:32:27,658 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:32:27,658 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:32:27,778 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:27,778 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:32:27,897 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:27,898 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("ntsxf").equals("mndgp")
2021-03-11 11:32:27,902 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]]
2021-03-11 11:32:27,902 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:32:28,020 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:28,020 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("mcddn")
2021-03-11 11:32:28,020 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.UIntRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f897ecf]]
2021-03-11 11:32:28,020 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a]
2021-03-11 11:32:28,139 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:28,145 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.UIntRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f897ecf]
2021-03-11 11:32:28,264 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:28,271 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).rangeTo(45.toUByte()).contains(16.toUByte())
2021-03-11 11:32:28,271 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]]
2021-03-11 11:32:28,271 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:32:28,271 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]
2021-03-11 11:32:28,389 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:28,389 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().equals("tsdmh")
2021-03-11 11:32:28,389 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6b337e18]]
2021-03-11 11:32:28,389 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:32:28,389 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6b337e18]
2021-03-11 11:32:28,508 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:28,508 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().equals("zwqab")
2021-03-11 11:32:28,508 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]]
2021-03-11 11:32:28,508 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:32:28,508 [main:137] - GENERATING call of type public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]
2021-03-11 11:32:28,508 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().isFinite()
2021-03-11 11:32:28,508 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]]
2021-03-11 11:32:28,508 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:32:28,508 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]
2021-03-11 11:32:28,509 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().isFinite()
2021-03-11 11:32:28,509 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:32:28,509 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:32:28,629 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:28,630 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:32:28,630 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("behji").not()
2021-03-11 11:32:28,630 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]]
2021-03-11 11:32:28,630 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:32:28,748 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:28,754 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]
2021-03-11 11:32:28,872 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:28,873 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(4.toUByte()).equals("smxqc")
2021-03-11 11:32:28,873 [main:110] - replacement of true of type Boolean is ((6516632970651683513.toULong()).toUByte()).toDouble().isNaN()
2021-03-11 11:32:28,990 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:28,991 [main:66] - Compilation checking started
2021-03-11 11:32:29,387 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == ((6516632970651683513.toULong()).toUByte()).toDouble().isNaN() } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:29,389 [main:103] - replacing (i, Int)
2021-03-11 11:32:29,390 [main:38] - replacing i Int
2021-03-11 11:32:29,390 [main:42] - Getting value of type Int
2021-03-11 11:32:29,508 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:29,515 [main:46] - GENERATED VALUE OF TYPE Int = -1972826240
2021-03-11 11:32:29,515 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:29,692 [main:55] - randomType = UInt
2021-03-11 11:32:29,818 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:32:29,858 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@6277eac7]
2021-03-11 11:32:29,976 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:29,983 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]
2021-03-11 11:32:29,983 [main:66] - Generated call from random type = (366794102.toUInt()).compareTo(47.toUByte()).toInt()
2021-03-11 11:32:29,984 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:32:29,993 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:32:29,993 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:29,993 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:32:29,993 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:32:29,993 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:32:30,113 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:30,113 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:32:30,232 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:30,239 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("zeytf").compareTo(false)
2021-03-11 11:32:30,239 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:32:30,239 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:30,239 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:32:30,363 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:30,489 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:30,495 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("nrqtc", true)
2021-03-11 11:32:30,495 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:32:30,495 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:30,495 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:32:30,495 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:32:30,495 [main:110] - replacement of i of type Int is (Kla0({ "hxtps"}).callback).invoke().compareTo("nrqtc", true)
2021-03-11 11:32:30,615 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:30,616 [main:66] - Compilation checking started
2021-03-11 11:32:31,027 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + (Kla0({ "hxtps"}).callback).invoke().compareTo("nrqtc", true) + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:31,030 [main:103] - replacing (prope7, Function0<Unit>)
2021-03-11 11:32:31,030 [main:38] - replacing prope7 Function0<Unit>
2021-03-11 11:32:31,030 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:32:31,153 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:32:31,159 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:32:31,169 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { println()}
2021-03-11 11:32:31,169 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:31,194 [main:55] - randomType = Kla8
2021-03-11 11:32:31,313 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-11 11:32:31,319 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-11 11:32:31,326 [main:66] - Generated call from random type = (Kla8()).prope7
2021-03-11 11:32:31,328 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:32:31,352 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:32:31,375 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:32:31,386 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:32:31,403 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:32:31,404 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:32:31,407 [main:110] - replacement of prope7 of type Function0<Unit> is (Kla8()).prope7
2021-03-11 11:32:31,528 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:31,529 [main:66] - Compilation checking started
2021-03-11 11:32:31,975 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        (Kla8()).prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:31,978 [main:103] - replacing (i16, Int)
2021-03-11 11:32:31,978 [main:38] - replacing i16 Int
2021-03-11 11:32:31,978 [main:42] - Getting value of type Int
2021-03-11 11:32:32,100 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:32,106 [main:46] - GENERATED VALUE OF TYPE Int = 1642945467
2021-03-11 11:32:32,106 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:32,313 [main:55] - randomType = Byte
2021-03-11 11:32:32,442 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:32:32,480 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@65c03f1b]
2021-03-11 11:32:32,480 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5074f100]
2021-03-11 11:32:32,481 [main:66] - Generated call from random type = (88).toFloat().toRawBits()
2021-03-11 11:32:32,481 [main:110] - replacement of i16 of type Int is (88).toFloat().toRawBits()
2021-03-11 11:32:32,600 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:32,600 [main:66] - Compilation checking started
2021-03-11 11:32:32,993 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + (88).toFloat().toRawBits() + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:32,996 [main:103] - replacing (exceptionOrNull(), Throwable?)
2021-03-11 11:32:32,996 [main:38] - replacing exceptionOrNull() Throwable?
2021-03-11 11:32:32,996 [main:42] - Getting value of type Throwable?
2021-03-11 11:32:33,118 [main:302] - generating value of type = Throwable false depth = 0
2021-03-11 11:32:33,127 [main:46] - GENERATED VALUE OF TYPE Throwable? = ArithmeticException()
2021-03-11 11:32:33,127 [main:49] - GENERATED IS CALL =true
2021-03-11 11:32:33,294 [main:55] - randomType = UShort
2021-03-11 11:32:33,414 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 11:32:33,449 [main:94] - GETTING Throwable? from ULong
2021-03-11 11:32:33,471 [main:94] - GETTING Throwable? from ULong
2021-03-11 11:32:33,472 [main:94] - GETTING Throwable? from String
2021-03-11 11:32:33,490 [main:94] - GETTING Throwable? from Any
2021-03-11 11:32:33,493 [main:94] - GETTING Throwable? from UByte
2021-03-11 11:32:33,516 [main:94] - GETTING Throwable? from Function0<String>
2021-03-11 11:32:33,524 [main:110] - replacement of exceptionOrNull() of type Throwable? is ArithmeticException()
2021-03-11 11:32:33,655 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:32:33,655 [main:66] - Compilation checking started
2021-03-11 11:32:34,043 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.ArithmeticException()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:34,046 [main:103] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5, String)
2021-03-11 11:32:34,046 [main:38] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5 String
2021-03-11 11:32:34,046 [main:42] - Getting value of type String
2021-03-11 11:32:34,165 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:34,172 [main:46] - GENERATED VALUE OF TYPE String = "ocgjt"
2021-03-11 11:32:34,172 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:34,369 [main:55] - randomType = Kla6<Long>
2021-03-11 11:32:34,488 [main:302] - generating value of type = Kla6<Long> false depth = 0
2021-03-11 11:32:34,495 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-11 11:32:34,972 [main:302] - generating value of type = Kla9 false depth = 2
2021-03-11 11:32:34,979 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:32:34,993 [main:94] - GETTING String from Any
2021-03-11 11:32:34,997 [main:94] - GETTING String from ULong
2021-03-11 11:32:35,020 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:32:35,020 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:32:35,139 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:35,145 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:32:35,264 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:35,271 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(12.toUByte()).toString(605351286)
2021-03-11 11:32:35,271 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:32:35,271 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:32:35,271 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:32:35,390 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:35,396 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(1844406300)
2021-03-11 11:32:35,396 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:32:35,396 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:32:35,515 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:35,521 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(-771192541)
2021-03-11 11:32:35,521 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:32:35,521 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:32:35,522 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:32:35,641 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:35,647 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(1266542049)
2021-03-11 11:32:35,647 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:32:35,648 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:32:35,648 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:32:35,767 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:35,774 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(1482162366)
2021-03-11 11:32:35,774 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:32:35,774 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:32:35,774 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:32:35,894 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:35,900 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(858638948)
2021-03-11 11:32:35,900 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:32:35,901 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:32:35,901 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:32:36,059 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:36,065 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(1840497416)
2021-03-11 11:32:36,066 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:32:36,066 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:32:36,066 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:32:36,185 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:36,191 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(1929450568)
2021-03-11 11:32:36,191 [main:110] - replacement of "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5 of type String is ((6516632970651683513.toULong())).toUInt().toString(1266542049)
2021-03-11 11:32:36,309 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:36,310 [main:66] - Compilation checking started
2021-03-11 11:32:36,714 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error(((6516632970651683513.toULong())).toUInt().toString(1266542049))
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:36,716 [main:103] - replacing (prope3, Result<Any?>)
2021-03-11 11:32:36,717 [main:38] - replacing prope3 Result<Any?>
2021-03-11 11:32:36,717 [main:42] - Getting value of type Result<Any?>
2021-03-11 11:32:36,837 [main:302] - generating value of type = Result<Any?> false depth = 0
2021-03-11 11:32:36,966 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-11 11:32:36,973 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Any?): Result<Any?> = TODO()
2021-03-11 11:32:37,286 [main:302] - generating value of type = Function0<Any?> false depth = 3
2021-03-11 11:32:37,292 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:32:37,292 [main:95] - GENERATED = runCatching<Any?>({ "bydku"})
2021-03-11 11:32:37,292 [main:46] - GENERATED VALUE OF TYPE Result<Any?> = runCatching<Any?>({ "bydku"})
2021-03-11 11:32:37,292 [main:49] - GENERATED IS CALL =true
2021-03-11 11:32:37,458 [main:55] - randomType = Double
2021-03-11 11:32:37,578 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:32:37,617 [main:94] - GETTING Result<Any?> from Any
2021-03-11 11:32:37,621 [main:94] - GETTING Result<Any?> from Function0<String>
2021-03-11 11:32:37,631 [main:94] - GETTING Result<Any?> from String
2021-03-11 11:32:37,651 [main:94] - GETTING Result<Any?> from UByte
2021-03-11 11:32:37,676 [main:94] - GETTING Result<Any?> from ULong
2021-03-11 11:32:37,699 [main:94] - GETTING Result<Any?> from ULong
2021-03-11 11:32:37,699 [main:110] - replacement of prope3 of type Result<Any?> is runCatching<Any?>({ "bydku"})
2021-03-11 11:32:37,818 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:32:37,818 [main:66] - Compilation checking started
2021-03-11 11:32:38,203 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
runCatching<Any?>({ "bydku"}).exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:38,206 [main:103] - replacing (prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31), String)
2021-03-11 11:32:38,206 [main:38] - replacing prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31) String
2021-03-11 11:32:38,206 [main:42] - Getting value of type String
2021-03-11 11:32:38,329 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:38,335 [main:46] - GENERATED VALUE OF TYPE String = "rmqni"
2021-03-11 11:32:38,335 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:38,694 [main:55] - randomType = Set<Int?>
2021-03-11 11:32:38,695 [main:94] - GETTING String from ULong
2021-03-11 11:32:38,718 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:32:38,718 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:32:38,835 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:38,842 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(-1743521486)
2021-03-11 11:32:38,842 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:32:38,842 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:32:38,842 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:32:38,964 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:38,970 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(1585323719)
2021-03-11 11:32:38,970 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:32:38,970 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:32:38,970 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:32:39,090 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:39,096 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(79209539)
2021-03-11 11:32:39,096 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:32:39,096 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:32:39,096 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:32:39,215 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:39,221 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(-987655384)
2021-03-11 11:32:39,222 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:32:39,222 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:32:39,222 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:32:39,340 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:39,346 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(2083755505)
2021-03-11 11:32:39,346 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:32:39,347 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:32:39,465 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:39,471 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:32:39,590 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:39,597 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(64.toUByte()).toString(-2098245237)
2021-03-11 11:32:39,597 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:32:39,597 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:32:39,597 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:32:39,715 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:39,721 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(-1959514118)
2021-03-11 11:32:39,721 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:32:39,721 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:32:39,722 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:32:39,840 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:39,847 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(-1379050841)
2021-03-11 11:32:39,847 [main:110] - replacement of prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31) of type String is ((6516632970651683513.toULong())).toUShort().toString(-1379050841)
2021-03-11 11:32:39,965 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:39,966 [main:66] - Compilation checking started
2021-03-11 11:32:40,400 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(((6516632970651683513.toULong())).toUShort().toString(-1379050841))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:40,402 [main:103] - replacing (prope6, Boolean)
2021-03-11 11:32:40,403 [main:38] - replacing prope6 Boolean
2021-03-11 11:32:40,403 [main:42] - Getting value of type Boolean
2021-03-11 11:32:40,522 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:40,528 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:32:40,528 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:41,082 [main:55] - randomType = Sequence<Char>
2021-03-11 11:32:41,082 [main:94] - GETTING Boolean from ULong
2021-03-11 11:32:41,110 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]]
2021-03-11 11:32:41,111 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:32:41,111 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]
2021-03-11 11:32:41,233 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().equals(null)
2021-03-11 11:32:41,233 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]]
2021-03-11 11:32:41,233 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:32:41,354 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:41,361 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]
2021-03-11 11:32:41,481 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(61.toUByte()).equals(null)
2021-03-11 11:32:41,482 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.ULongRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dd1b3c0]]
2021-03-11 11:32:41,482 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54]
2021-03-11 11:32:41,604 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:32:41,610 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.ULongRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dd1b3c0]
2021-03-11 11:32:41,731 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:32:41,737 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).rangeTo(6157778406300162289.toULong()).contains(57.toUByte())
2021-03-11 11:32:41,737 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:32:41,737 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:32:41,859 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:41,860 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:32:41,982 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:41,988 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("mytcd").and(false)
2021-03-11 11:32:41,988 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]]
2021-03-11 11:32:41,988 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:32:41,988 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@5ce1412]
2021-03-11 11:32:42,109 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:42,110 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().equals("bvqbo")
2021-03-11 11:32:42,110 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongRange[DeserializedSimpleFunctionDescriptor@595fbf51]]
2021-03-11 11:32:42,110 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.ULong): kotlin.ranges.ULongRange defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@10564a54]
2021-03-11 11:32:42,233 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 11:32:42,239 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ULongRange[DeserializedSimpleFunctionDescriptor@595fbf51]
2021-03-11 11:32:42,362 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:42,362 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).rangeTo(6366851985740721808.toULong()).equals("mcjni")
2021-03-11 11:32:42,362 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@773e50e5]]
2021-03-11 11:32:42,362 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:32:42,362 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@773e50e5]
2021-03-11 11:32:42,485 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:42,485 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().equals("woiod")
2021-03-11 11:32:42,485 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]]
2021-03-11 11:32:42,485 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:32:42,486 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]
2021-03-11 11:32:42,618 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:42,619 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().equals("ofpai")
2021-03-11 11:32:42,619 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]]
2021-03-11 11:32:42,619 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:32:42,745 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:42,745 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("siwgg")
2021-03-11 11:32:42,745 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]]
2021-03-11 11:32:42,745 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:32:42,745 [main:137] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]
2021-03-11 11:32:42,745 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().isInfinite()
2021-03-11 11:32:42,746 [main:110] - replacement of prope6 of type Boolean is ((6516632970651683513.toULong())).toDouble().equals("ofpai")
2021-03-11 11:32:42,865 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:42,865 [main:66] - Compilation checking started
2021-03-11 11:32:43,338 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (((6516632970651683513.toULong())).toDouble().equals("ofpai")) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:43,340 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8, Int)
2021-03-11 11:32:43,341 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 Int
2021-03-11 11:32:43,341 [main:42] - Getting value of type Int
2021-03-11 11:32:43,494 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:43,501 [main:46] - GENERATED VALUE OF TYPE Int = 1819486333
2021-03-11 11:32:43,501 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:43,533 [main:55] - randomType = Kla4
2021-03-11 11:32:43,659 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 11:32:43,665 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}
2021-03-11 11:32:43,792 [main:194] - Type params = []
2021-03-11 11:32:43,911 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-11 11:32:44,041 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:44,049 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:44,400 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-11 11:32:44,534 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:44,541 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:45,137 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 8
2021-03-11 11:32:45,273 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:45,280 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:45,812 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 11
2021-03-11 11:32:45,956 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:45,964 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:46,517 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 14
2021-03-11 11:32:46,675 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:46,683 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:47,233 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 17
2021-03-11 11:32:47,233 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:47,233 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:47,233 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:32:47,233 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:32:47,233 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:32:47,253 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla4[DeserializedSimpleFunctionDescriptor@5f10de78]
2021-03-11 11:32:47,378 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:47,378 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:32:47,502 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:47,508 [main:66] - Generated call from random type = (Kla4()).equals("hoiiq").compareTo(false)
2021-03-11 11:32:47,509 [main:94] - GETTING Int from String
2021-03-11 11:32:47,529 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public abstract val length: kotlin.Int defined in kotlin.CharSequence[DeserializedPropertyDescriptor@34ba9ff3]]
2021-03-11 11:32:47,529 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:32:47,664 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:47,800 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:47,806 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(2102487083, 2053954727).length
2021-03-11 11:32:47,806 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public val kotlin.CharSequence.lastIndex: kotlin.Int defined in kotlin.text[DeserializedPropertyDescriptor@4fba6ff1]]
2021-03-11 11:32:47,806 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:32:47,938 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:48,087 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:48,098 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1256311927, 646487287).lastIndex
2021-03-11 11:32:48,098 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:32:48,098 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:32:48,237 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:48,244 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:32:48,392 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:48,399 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("flbdz").ushr(-1320571393)
2021-03-11 11:32:48,400 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]]
2021-03-11 11:32:48,400 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:32:48,538 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:48,546 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]
2021-03-11 11:32:48,546 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("odflc").inv()
2021-03-11 11:32:48,546 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]]
2021-03-11 11:32:48,547 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:32:48,547 [main:105] - GENERATED CALL = (Kla1().prope0).length.countOneBits()
2021-03-11 11:32:48,547 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]]
2021-03-11 11:32:48,547 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:32:48,696 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:48,705 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]
2021-03-11 11:32:48,855 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:48,862 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("prhjq").rotateLeft(-1620921441)
2021-03-11 11:32:48,862 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:32:48,863 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]
2021-03-11 11:32:49,010 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:49,010 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:32:49,152 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:49,159 [main:105] - GENERATED CALL = (Kla1().prope0).equals("kmqdt").compareTo(false)
2021-03-11 11:32:49,159 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]]
2021-03-11 11:32:49,159 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:32:49,299 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:49,306 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]
2021-03-11 11:32:49,460 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:49,466 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("gvhzv").coerceAtLeast(1057576806)
2021-03-11 11:32:49,466 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]]
2021-03-11 11:32:49,467 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]
2021-03-11 11:32:49,467 [main:105] - GENERATED CALL = (Kla1().prope0).length.countLeadingZeroBits()
2021-03-11 11:32:49,467 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:32:49,467 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:32:49,697 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:49,704 [main:105] - GENERATED CALL = (Kla1().prope0).length.ushr(-1361124171)
2021-03-11 11:32:49,704 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 of type Int is (Kla1().prope0).equals("kmqdt").compareTo(false)
2021-03-11 11:32:49,844 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:49,845 [main:66] - Compilation checking started
2021-03-11 11:32:50,385 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((Kla1().prope0).equals("kmqdt").compareTo(false) + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:50,388 [main:103] - replacing (checkFinished && !prope6, Boolean)
2021-03-11 11:32:50,388 [main:38] - replacing checkFinished && !prope6 Boolean
2021-03-11 11:32:50,388 [main:42] - Getting value of type Boolean
2021-03-11 11:32:50,538 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:50,545 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:32:50,545 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:50,781 [main:55] - randomType = Byte
2021-03-11 11:32:50,941 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:32:51,006 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]
2021-03-11 11:32:51,147 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:51,148 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:32:51,148 [main:66] - Generated call from random type = (18).equals("kijzf").not()
2021-03-11 11:32:51,149 [main:94] - GETTING Boolean from String
2021-03-11 11:32:51,181 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.isEmpty(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a78748a]]
2021-03-11 11:32:51,182 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.isEmpty(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a78748a]
2021-03-11 11:32:51,182 [main:105] - GENERATED CALL = (Kla1().prope0).isEmpty()
2021-03-11 11:32:51,182 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.isNotBlank(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@653a8f9b]]
2021-03-11 11:32:51,182 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.isNotBlank(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@653a8f9b]
2021-03-11 11:32:51,182 [main:105] - GENERATED CALL = (Kla1().prope0).isNotBlank()
2021-03-11 11:32:51,182 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], public fun kotlin.Char.isUpperCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b6bac3a]]
2021-03-11 11:32:51,182 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:32:51,321 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:51,328 [main:137] - GENERATING call of type public fun kotlin.Char.isUpperCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b6bac3a]
2021-03-11 11:32:51,329 [main:105] - GENERATED CALL = (Kla1().prope0).get(-1199474526).isUpperCase()
2021-03-11 11:32:51,329 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.endsWith(char: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a2c35e2]]
2021-03-11 11:32:51,329 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:32:51,476 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:51,624 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:51,634 [main:137] - GENERATING call of type public fun kotlin.CharSequence.endsWith(char: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a2c35e2]
2021-03-11 11:32:51,769 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:32:51,912 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:51,918 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(1972561064, -1814797212).endsWith('좝', true)
2021-03-11 11:32:51,919 [main:101] - Case = [public fun kotlin.CharSequence.none(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@98bb10a]]
2021-03-11 11:32:51,919 [main:137] - GENERATING call of type public fun kotlin.CharSequence.none(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@98bb10a]
2021-03-11 11:32:51,919 [main:105] - GENERATED CALL = (Kla1().prope0).none()
2021-03-11 11:32:51,919 [main:101] - Case = [public fun kotlin.CharSequence.regionMatches(thisOffset: kotlin.Int, other: kotlin.CharSequence, otherOffset: kotlin.Int, length: kotlin.Int, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1d1d48c]]
2021-03-11 11:32:51,919 [main:137] - GENERATING call of type public fun kotlin.CharSequence.regionMatches(thisOffset: kotlin.Int, other: kotlin.CharSequence, otherOffset: kotlin.Int, length: kotlin.Int, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1d1d48c]
2021-03-11 11:32:52,045 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:52,184 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:32:52,356 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:52,535 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:52,705 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:52,712 [main:105] - GENERATED CALL = (Kla1().prope0).regionMatches(-1122082108, "kievy", 1567392033, -203802996, false)
2021-03-11 11:32:52,712 [main:101] - Case = [public inline fun kotlin.CharSequence.all(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5f09bfee]]
2021-03-11 11:32:52,712 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.all(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5f09bfee]
2021-03-11 11:32:52,866 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:32:52,875 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:32:52,882 [main:105] - GENERATED CALL = (Kla1().prope0).all({a: Char -> false})
2021-03-11 11:32:52,883 [main:101] - Case = [public fun kotlin.CharSequence.isBlank(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15a90196]]
2021-03-11 11:32:52,883 [main:137] - GENERATING call of type public fun kotlin.CharSequence.isBlank(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@15a90196]
2021-03-11 11:32:52,883 [main:105] - GENERATED CALL = (Kla1().prope0).isBlank()
2021-03-11 11:32:52,883 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.hasSurrogatePairAt(index: kotlin.Int): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7bdeff2c]]
2021-03-11 11:32:52,883 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:32:53,041 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:53,189 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:53,195 [main:137] - GENERATING call of type public fun kotlin.CharSequence.hasSurrogatePairAt(index: kotlin.Int): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7bdeff2c]
2021-03-11 11:32:53,315 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:53,322 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(1694963827, 1326440508).hasSurrogatePairAt(1260321133)
2021-03-11 11:32:53,322 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], public fun kotlin.Char.isLowSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6dfab2cd]]
2021-03-11 11:32:53,322 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:32:53,453 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:53,459 [main:137] - GENERATING call of type public fun kotlin.Char.isLowSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6dfab2cd]
2021-03-11 11:32:53,459 [main:105] - GENERATED CALL = (Kla1().prope0).get(306449784).isLowSurrogate()
2021-03-11 11:32:53,459 [main:110] - replacement of checkFinished && !prope6 of type Boolean is (Kla1().prope0).isBlank()
2021-03-11 11:32:53,582 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:53,583 [main:66] - Compilation checking started
2021-03-11 11:32:54,066 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if ((Kla1().prope0).isBlank()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:54,069 [main:103] - replacing (prope2, Kla8)
2021-03-11 11:32:54,069 [main:38] - replacing prope2 Kla8
2021-03-11 11:32:54,069 [main:42] - Getting value of type Kla8
2021-03-11 11:32:54,230 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-11 11:32:54,238 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-11 11:32:54,238 [main:46] - GENERATED VALUE OF TYPE Kla8 = Kla8()
2021-03-11 11:32:54,238 [main:49] - GENERATED IS CALL =true
2021-03-11 11:32:54,491 [main:55] - randomType = Boolean?
2021-03-11 11:32:54,661 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:54,689 [main:94] - GETTING Kla8 from ULong
2021-03-11 11:32:54,736 [main:94] - GETTING Kla8 from ULong
2021-03-11 11:32:54,737 [main:94] - GETTING Kla8 from Function0<String>
2021-03-11 11:32:54,756 [main:94] - GETTING Kla8 from String
2021-03-11 11:32:54,798 [main:94] - GETTING Kla8 from Any
2021-03-11 11:32:54,805 [main:94] - GETTING Kla8 from UByte
2021-03-11 11:32:54,849 [main:110] - replacement of prope2 of type Kla8 is Kla8()
2021-03-11 11:32:55,012 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:32:55,013 [main:66] - Compilation checking started
2021-03-11 11:32:55,582 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
Kla8().prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:55,585 [main:103] - replacing (i31, Int)
2021-03-11 11:32:55,585 [main:38] - replacing i31 Int
2021-03-11 11:32:55,585 [main:42] - Getting value of type Int
2021-03-11 11:32:55,733 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:55,740 [main:46] - GENERATED VALUE OF TYPE Int = 1296867952
2021-03-11 11:32:55,740 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:55,967 [main:55] - randomType = Kla1
2021-03-11 11:32:56,119 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 11:32:56,127 [main:112] - generating klass Kla1 text = class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}
2021-03-11 11:32:56,136 [main:66] - Generated call from random type = (Kla1()).prope0.length
2021-03-11 11:32:56,137 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:32:56,153 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:32:56,153 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:56,153 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:32:56,310 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:56,472 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:56,479 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("itppa", true)
2021-03-11 11:32:56,479 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:32:56,479 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:56,480 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:32:56,480 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:32:56,480 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:32:56,617 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:56,618 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:32:56,758 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:56,766 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("xsegw").compareTo(true)
2021-03-11 11:32:56,766 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:32:56,766 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:56,766 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:32:56,766 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:32:56,766 [main:110] - replacement of i31 of type Int is 1296867952
2021-03-11 11:32:56,907 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 11:32:56,907 [main:66] - Compilation checking started
2021-03-11 11:32:57,339 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + 1296867952))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:57,342 [main:103] - replacing (numberOfSuspensions, Int)
2021-03-11 11:32:57,343 [main:38] - replacing numberOfSuspensions Int
2021-03-11 11:32:57,343 [main:42] - Getting value of type Int
2021-03-11 11:32:57,495 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:32:57,503 [main:46] - GENERATED VALUE OF TYPE Int = 1695660128
2021-03-11 11:32:57,503 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:57,954 [main:55] - randomType = UInt?
2021-03-11 11:32:58,108 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:32:58,172 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@777ed9a]
2021-03-11 11:32:58,173 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]
2021-03-11 11:32:58,173 [main:66] - Generated call from random type = (915890546.toUInt())?.toFloat().toInt()
2021-03-11 11:32:58,174 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:32:58,191 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:32:58,191 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:58,191 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:32:58,191 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:32:58,191 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:58,191 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:32:58,191 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:32:58,191 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:32:58,191 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:32:58,365 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:32:58,365 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:32:58,527 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:58,535 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("iyquo").compareTo(false)
2021-03-11 11:32:58,535 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:32:58,535 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:32:58,535 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:32:58,689 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:58,857 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:32:58,865 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("lycul", false)
2021-03-11 11:32:58,865 [main:110] - replacement of numberOfSuspensions of type Int is (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:32:59,024 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:32:59,024 [main:66] - Compilation checking started
2021-03-11 11:32:59,533 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != (Kla0({ "hxtps"}).callback).invoke().length)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:32:59,536 [main:103] - replacing ("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected ", String)
2021-03-11 11:32:59,536 [main:38] - replacing "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " String
2021-03-11 11:32:59,537 [main:42] - Getting value of type String
2021-03-11 11:32:59,689 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:32:59,695 [main:46] - GENERATED VALUE OF TYPE String = "biobc"
2021-03-11 11:32:59,695 [main:49] - GENERATED IS CALL =false
2021-03-11 11:32:59,905 [main:55] - randomType = UByte?
2021-03-11 11:33:00,042 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:00,095 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@d540b96]
2021-03-11 11:33:00,095 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:33:00,233 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:00,239 [main:66] - Generated call from random type = (107.toUByte())?.toUShort().toString(-1378086687)
2021-03-11 11:33:00,239 [main:110] - replacement of "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " of type String is (107.toUByte())?.toUShort().toString(-1378086687)
2021-03-11 11:33:00,379 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:00,380 [main:66] - Compilation checking started
2021-03-11 11:33:00,853 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error((107.toUByte())?.toUShort().toString(-1378086687) + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:00,856 [main:103] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected ", String)
2021-03-11 11:33:00,856 [main:38] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " String
2021-03-11 11:33:00,856 [main:42] - Getting value of type String
2021-03-11 11:33:00,988 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:00,994 [main:46] - GENERATED VALUE OF TYPE String = "ymqkj"
2021-03-11 11:33:00,994 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:01,465 [main:55] - randomType = List<Collection<Kla5>>
2021-03-11 11:33:01,466 [main:94] - GETTING String from ULong
2021-03-11 11:33:01,504 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:33:01,504 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:33:01,504 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:33:01,647 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:01,656 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(-1911583016)
2021-03-11 11:33:01,656 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:33:01,656 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:33:01,656 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:33:01,835 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:01,842 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(-319689046)
2021-03-11 11:33:01,842 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:33:01,842 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:33:01,843 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:33:01,993 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:02,003 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(-537232164)
2021-03-11 11:33:02,003 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:33:02,003 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:33:02,004 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:33:02,174 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:02,184 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(1755864244)
2021-03-11 11:33:02,184 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:33:02,184 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:33:02,344 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:02,354 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(1319990579)
2021-03-11 11:33:02,355 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:33:02,355 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:33:02,355 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:33:02,514 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:02,520 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(-1726930448)
2021-03-11 11:33:02,521 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:33:02,521 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:33:02,521 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:33:02,659 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:02,665 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(1697190389)
2021-03-11 11:33:02,666 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:33:02,666 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:02,803 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:02,809 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:33:02,959 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:02,969 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(125.toUByte()).toString(-747570890)
2021-03-11 11:33:02,969 [main:110] - replacement of "Wrong state-machine generated: wrong number of overall suspensions. Expected " of type String is ((6516632970651683513.toULong())).toUByte().toString(-1726930448)
2021-03-11 11:33:03,116 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:03,117 [main:66] - Compilation checking started
2021-03-11 11:33:03,668 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error(((6516632970651683513.toULong())).toUByte().toString(-1726930448) + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:03,673 [main:103] - replacing (1, Int)
2021-03-11 11:33:03,673 [main:38] - replacing 1 Int
2021-03-11 11:33:03,673 [main:42] - Getting value of type Int
2021-03-11 11:33:03,842 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:03,848 [main:46] - GENERATED VALUE OF TYPE Int = -249355516
2021-03-11 11:33:03,849 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:04,577 [main:55] - randomType = Triple<Int, Short, Kla8?>
2021-03-11 11:33:04,727 [main:302] - generating value of type = Triple<Int, Short, Kla8?> false depth = 0
2021-03-11 11:33:04,889 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Int, second: Short, third: Kla8?): Triple<Int, Short, Kla8?> = TODO()
2021-03-11 11:33:04,897 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Int, second: Short, third: Kla8?): Triple<Int, Short, Kla8?> = TODO()
2021-03-11 11:33:05,083 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:33:05,090 [main:302] - generating value of type = Short true depth = 3
2021-03-11 11:33:05,097 [main:302] - generating value of type = Kla8 false depth = 3
2021-03-11 11:33:05,103 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-11 11:33:05,104 [main:95] - GENERATED = Triple<Int, Short, Kla8?>(1601760501, 27641, Kla8())
2021-03-11 11:33:05,125 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d9fa6ba]
2021-03-11 11:33:05,264 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:05,271 [main:66] - Generated call from random type = (Triple<Int, Short, Kla8?>(1601760501, 27641, Kla8())).first.plus(126)
2021-03-11 11:33:05,271 [main:110] - replacement of 1 of type Int is (Triple<Int, Short, Kla8?>(1601760501, 27641, Kla8())).first.plus(126)
2021-03-11 11:33:05,410 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:05,410 [main:66] - Compilation checking started
2021-03-11 11:33:05,888 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = (Triple<Int, Short, Kla8?>(1601760501, 27641, Kla8())).first.plus(126),
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:05,892 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26, Int)
2021-03-11 11:33:05,892 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 Int
2021-03-11 11:33:05,892 [main:42] - Getting value of type Int
2021-03-11 11:33:06,053 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:06,060 [main:46] - GENERATED VALUE OF TYPE Int = -500509430
2021-03-11 11:33:06,060 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:06,574 [main:55] - randomType = Pair<Kla5, ULong?>
2021-03-11 11:33:06,730 [main:302] - generating value of type = Pair<Kla5, ULong?> false depth = 0
2021-03-11 11:33:06,912 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Kla5, second: ULong?): Pair<Kla5, ULong?> = TODO()
2021-03-11 11:33:06,920 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Kla5, second: ULong?): Pair<Kla5, ULong?> = TODO()
2021-03-11 11:33:07,112 [main:302] - generating value of type = Kla5 false depth = 3
2021-03-11 11:33:07,119 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:33:07,119 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 11:33:07,126 [main:95] - GENERATED = Pair<Kla5, ULong?>(Kla5(), 2725842772598337747.toULong())
2021-03-11 11:33:07,145 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@18a4baf7]
2021-03-11 11:33:07,145 [main:66] - Generated call from random type = (Pair<Kla5, ULong?>(Kla5(), 2725842772598337747.toULong())).second?.toInt()!!
2021-03-11 11:33:07,146 [main:94] - GETTING Int from ULong
2021-03-11 11:33:07,187 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]]
2021-03-11 11:33:07,187 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:33:07,187 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4103e6b7]
2021-03-11 11:33:07,325 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:07,332 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().times(50)
2021-03-11 11:33:07,332 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]]
2021-03-11 11:33:07,332 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:33:07,332 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]
2021-03-11 11:33:07,332 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().countLeadingZeroBits()
2021-03-11 11:33:07,332 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4c83e101]]
2021-03-11 11:33:07,333 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:07,471 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:07,477 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(40.toUByte()).absoluteValue
2021-03-11 11:33:07,477 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]]
2021-03-11 11:33:07,478 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:33:07,478 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:33:07,601 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:07,608 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().compareTo(78)
2021-03-11 11:33:07,608 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@25463407]]
2021-03-11 11:33:07,608 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:07,757 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:07,764 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@25463407]
2021-03-11 11:33:07,930 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:07,940 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(57.toUByte()).xor(1874908667)
2021-03-11 11:33:07,940 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]]
2021-03-11 11:33:07,940 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:33:07,940 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]
2021-03-11 11:33:08,099 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:08,105 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().rem(-21)
2021-03-11 11:33:08,106 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34bc32be]]
2021-03-11 11:33:08,106 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:33:08,106 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34bc32be]
2021-03-11 11:33:08,106 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().countOneBits()
2021-03-11 11:33:08,106 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]]
2021-03-11 11:33:08,106 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:08,251 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:08,258 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]
2021-03-11 11:33:08,393 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:08,400 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(115.toUByte()).minus(-107)
2021-03-11 11:33:08,400 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4a0e3df6]]
2021-03-11 11:33:08,400 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:33:08,400 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4a0e3df6]
2021-03-11 11:33:08,400 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().countLeadingZeroBits()
2021-03-11 11:33:08,401 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]]
2021-03-11 11:33:08,401 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:33:08,401 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]
2021-03-11 11:33:08,401 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toInt()
2021-03-11 11:33:08,401 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 of type Int is ((6516632970651683513.toULong())).toShort().rem(-21)
2021-03-11 11:33:08,555 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:08,555 [main:66] - Compilation checking started
2021-03-11 11:33:09,058 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (((6516632970651683513.toULong())).toShort().rem(-21) + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:09,061 [main:103] - replacing (prope7, Function0<Unit>)
2021-03-11 11:33:09,062 [main:38] - replacing prope7 Function0<Unit>
2021-03-11 11:33:09,062 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:33:09,208 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:33:09,215 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:33:09,385 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:33:09,392 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:33:09,956 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:33:09,962 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 11:33:09,968 [main:302] - generating value of type = Any false depth = 5
2021-03-11 11:33:09,969 [main:95] - GENERATED = check(false, { "rwpfz"})
2021-03-11 11:33:09,969 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { check(false, { "rwpfz"})}
2021-03-11 11:33:09,969 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:09,995 [main:55] - randomType = Kla3
2021-03-11 11:33:10,148 [main:302] - generating value of type = Kla3 false depth = 0
2021-03-11 11:33:10,155 [main:112] - generating klass Kla3 text = class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}
2021-03-11 11:33:10,164 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:33:10,211 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:33:10,220 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:33:10,242 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:33:10,295 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:33:10,331 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:33:10,331 [main:110] - replacement of prope7 of type Function0<Unit> is { check(false, { "rwpfz"})}
2021-03-11 11:33:10,472 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 11:33:10,472 [main:66] - Compilation checking started
2021-03-11 11:33:11,010 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        { check(false, { "rwpfz"})}()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:11,015 [main:103] - replacing (prope5 != numberOfSuspensions, Boolean)
2021-03-11 11:33:11,015 [main:38] - replacing prope5 != numberOfSuspensions Boolean
2021-03-11 11:33:11,015 [main:42] - Getting value of type Boolean
2021-03-11 11:33:11,183 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:33:11,192 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:33:11,192 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:11,206 [main:55] - randomType = UByte
2021-03-11 11:33:11,365 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:11,438 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@103df3eb]
2021-03-11 11:33:11,593 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:33:11,593 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:33:11,750 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:33:11,756 [main:66] - Generated call from random type = (38.toUByte()).equals("azvzm").xor(false)
2021-03-11 11:33:11,757 [main:94] - GETTING Boolean from UByte
2021-03-11 11:33:11,802 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]]
2021-03-11 11:33:11,802 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:33:11,802 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]
2021-03-11 11:33:12,010 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:33:12,011 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().equals("oafud")
2021-03-11 11:33:12,011 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:33:12,011 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:33:12,155 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:33:12,155 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:33:12,155 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("wlcel").not()
2021-03-11 11:33:12,155 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]]
2021-03-11 11:33:12,155 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:33:12,155 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]
2021-03-11 11:33:12,292 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:33:12,292 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().equals("pddvv")
2021-03-11 11:33:12,292 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a], public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntRange[DeserializedSimpleFunctionDescriptor@1088e94b]]
2021-03-11 11:33:12,292 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a]
2021-03-11 11:33:12,425 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:12,431 [main:137] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.UIntRange[DeserializedSimpleFunctionDescriptor@1088e94b]
2021-03-11 11:33:12,432 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).rangeTo(34.toUByte()).isEmpty()
2021-03-11 11:33:12,432 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]]
2021-03-11 11:33:12,432 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:33:12,562 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:33:12,563 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("shuni")
2021-03-11 11:33:12,563 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]]
2021-03-11 11:33:12,563 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:33:12,563 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]
2021-03-11 11:33:12,563 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().isFinite()
2021-03-11 11:33:12,563 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]]
2021-03-11 11:33:12,563 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:33:12,563 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]
2021-03-11 11:33:12,704 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:33:12,704 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().equals("cvalc")
2021-03-11 11:33:12,704 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]]
2021-03-11 11:33:12,705 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:33:12,705 [main:137] - GENERATING call of type public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]
2021-03-11 11:33:12,705 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().isInfinite()
2021-03-11 11:33:12,705 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]]
2021-03-11 11:33:12,705 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:33:12,705 [main:137] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]
2021-03-11 11:33:12,705 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().isInfinite()
2021-03-11 11:33:12,705 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]]
2021-03-11 11:33:12,705 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:33:12,705 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b14775c]
2021-03-11 11:33:12,836 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:33:12,836 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().equals("uofgp")
2021-03-11 11:33:12,836 [main:110] - replacement of prope5 != numberOfSuspensions of type Boolean is ((6516632970651683513.toULong()).toUByte()).toDouble().isInfinite()
2021-03-11 11:33:12,966 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:12,967 [main:66] - Compilation checking started
2021-03-11 11:33:13,520 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (((6516632970651683513.toULong()).toUByte()).toDouble().isInfinite())
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:13,523 [main:103] - replacing (prope7, Function0<Unit>)
2021-03-11 11:33:13,523 [main:38] - replacing prope7 Function0<Unit>
2021-03-11 11:33:13,523 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:33:13,675 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:33:13,681 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:33:13,824 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:33:13,832 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:33:14,183 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:33:14,184 [main:95] - GENERATED = println("fhqix")
2021-03-11 11:33:14,184 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { println("fhqix")}
2021-03-11 11:33:14,184 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:14,401 [main:55] - randomType = Kla9
2021-03-11 11:33:14,539 [main:302] - generating value of type = Kla9 false depth = 0
2021-03-11 11:33:14,546 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:33:14,580 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:33:14,622 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:33:14,639 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:33:14,640 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:33:14,686 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:33:14,692 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:33:14,729 [main:110] - replacement of prope7 of type Function0<Unit> is { println("fhqix")}
2021-03-11 11:33:14,884 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 11:33:14,884 [main:66] - Compilation checking started
2021-03-11 11:33:15,339 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        { println("fhqix")}()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:15,342 [main:103] - replacing (1, Int)
2021-03-11 11:33:15,342 [main:38] - replacing 1 Int
2021-03-11 11:33:15,342 [main:42] - Getting value of type Int
2021-03-11 11:33:15,501 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:15,507 [main:46] - GENERATED VALUE OF TYPE Int = -1044166851
2021-03-11 11:33:15,507 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:15,720 [main:55] - randomType = Kla1
2021-03-11 11:33:15,863 [main:302] - generating value of type = Kla1 false depth = 0
2021-03-11 11:33:15,873 [main:112] - generating klass Kla1 text = class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}
2021-03-11 11:33:15,883 [main:66] - Generated call from random type = (Kla1()).prope0.length
2021-03-11 11:33:15,884 [main:94] - GETTING Int from ULong
2021-03-11 11:33:15,931 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]]
2021-03-11 11:33:15,932 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:33:15,932 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]
2021-03-11 11:33:15,932 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().toInt()
2021-03-11 11:33:15,932 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4305d2ec]]
2021-03-11 11:33:15,932 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:33:15,932 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4305d2ec]
2021-03-11 11:33:15,932 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toInt()
2021-03-11 11:33:15,932 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@38aa7ed8]]
2021-03-11 11:33:15,932 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@38aa7ed8]
2021-03-11 11:33:15,932 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).countTrailingZeroBits()
2021-03-11 11:33:15,933 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]]
2021-03-11 11:33:15,933 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:33:15,933 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]
2021-03-11 11:33:15,933 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().countLeadingZeroBits()
2021-03-11 11:33:15,933 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 11:33:15,933 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:33:15,933 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 11:33:15,933 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().countOneBits()
2021-03-11 11:33:15,933 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:33:15,933 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:16,071 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:16,078 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:33:16,221 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:16,228 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(3.toUByte()).ushr(-416202109)
2021-03-11 11:33:16,228 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@44a6b9bf]]
2021-03-11 11:33:16,228 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:33:16,228 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@44a6b9bf]
2021-03-11 11:33:16,368 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:16,374 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().minus(106)
2021-03-11 11:33:16,374 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]]
2021-03-11 11:33:16,374 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:33:16,375 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]
2021-03-11 11:33:16,375 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().countLeadingZeroBits()
2021-03-11 11:33:16,375 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]]
2021-03-11 11:33:16,375 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:16,509 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:16,517 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]
2021-03-11 11:33:16,517 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(38.toUByte()).toInt()
2021-03-11 11:33:16,517 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]]
2021-03-11 11:33:16,517 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:33:16,517 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]
2021-03-11 11:33:16,658 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:16,665 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().compareTo(104)
2021-03-11 11:33:16,665 [main:110] - replacement of 1 of type Int is (6516632970651683513.toULong()).countTrailingZeroBits()
2021-03-11 11:33:16,821 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:16,822 [main:66] - Compilation checking started
2021-03-11 11:33:17,338 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = (6516632970651683513.toULong()).countTrailingZeroBits(),
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:17,341 [main:103] - replacing (i24, Int)
2021-03-11 11:33:17,341 [main:38] - replacing i24 Int
2021-03-11 11:33:17,341 [main:42] - Getting value of type Int
2021-03-11 11:33:17,522 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:17,529 [main:46] - GENERATED VALUE OF TYPE Int = -975155514
2021-03-11 11:33:17,529 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:17,713 [main:55] - randomType = UShort
2021-03-11 11:33:17,851 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 11:33:17,903 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@48858ac4]
2021-03-11 11:33:17,903 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]
2021-03-11 11:33:18,037 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:18,044 [main:66] - Generated call from random type = (24874.toUShort()).toShort().compareTo(-29)
2021-03-11 11:33:18,045 [main:94] - GETTING Int from ULong
2021-03-11 11:33:18,087 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]]
2021-03-11 11:33:18,087 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:33:18,087 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]
2021-03-11 11:33:18,236 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:18,242 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().compareTo(2)
2021-03-11 11:33:18,242 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]]
2021-03-11 11:33:18,242 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:18,384 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:18,391 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]
2021-03-11 11:33:18,529 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:18,537 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(91.toUByte()).coerceAtMost(2129125486)
2021-03-11 11:33:18,537 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4a2654b1]]
2021-03-11 11:33:18,537 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4a2654b1]
2021-03-11 11:33:18,537 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toInt()
2021-03-11 11:33:18,537 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:33:18,537 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:18,674 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:18,682 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:33:18,682 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(124.toUByte()).inc()
2021-03-11 11:33:18,682 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]]
2021-03-11 11:33:18,682 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:33:18,682 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:33:18,836 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:18,843 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().compareTo(-123)
2021-03-11 11:33:18,843 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]]
2021-03-11 11:33:18,843 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:19,009 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:19,019 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]
2021-03-11 11:33:19,179 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:19,186 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(67.toUByte()).or(-643683214)
2021-03-11 11:33:19,187 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5074f100]]
2021-03-11 11:33:19,187 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:33:19,187 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5074f100]
2021-03-11 11:33:19,187 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().toRawBits()
2021-03-11 11:33:19,187 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]]
2021-03-11 11:33:19,187 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:33:19,187 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]
2021-03-11 11:33:19,187 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().toBits()
2021-03-11 11:33:19,187 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]]
2021-03-11 11:33:19,187 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:19,324 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:19,331 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]
2021-03-11 11:33:19,468 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:19,475 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(73.toUByte()).minus(16)
2021-03-11 11:33:19,475 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]]
2021-03-11 11:33:19,475 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:33:19,475 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]
2021-03-11 11:33:19,475 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().toInt()
2021-03-11 11:33:19,475 [main:110] - replacement of i24 of type Int is ((6516632970651683513.toULong())).compareTo(67.toUByte()).or(-643683214)
2021-03-11 11:33:19,629 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:19,630 [main:66] - Compilation checking started
2021-03-11 11:33:20,104 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + ((6516632970651683513.toULong())).compareTo(67.toUByte()).or(-643683214) + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:20,107 [main:103] - replacing (i14, Int)
2021-03-11 11:33:20,107 [main:38] - replacing i14 Int
2021-03-11 11:33:20,107 [main:42] - Getting value of type Int
2021-03-11 11:33:20,234 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:20,240 [main:46] - GENERATED VALUE OF TYPE Int = -375028877
2021-03-11 11:33:20,240 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:20,690 [main:55] - randomType = HashSet<String?>
2021-03-11 11:33:20,834 [main:302] - generating value of type = HashSet<String?> false depth = 0
2021-03-11 11:33:20,991 [main:43] - GENERATING CALL OF fun linkedStringSetOf(elements: String): HashSet<Strg?> = TODO()
2021-03-11 11:33:20,999 [main:61] - WITHOUT TYPE PARAMS = fun linkedStringSetOf(elements: String): HashSet<Strg?> = TODO()
2021-03-11 11:33:21,159 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:33:21,166 [main:95] - GENERATED = linkedStringSetOf("unruh")
2021-03-11 11:33:21,328 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]
2021-03-11 11:33:21,328 [main:66] - Generated call from random type = (linkedStringSetOf("unruh")).size.inv()
2021-03-11 11:33:21,329 [main:94] - GETTING Int from ULong
2021-03-11 11:33:21,370 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d9fa6ba]]
2021-03-11 11:33:21,371 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:21,529 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:21,539 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d9fa6ba]
2021-03-11 11:33:21,706 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:21,714 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(51.toUByte()).plus(90)
2021-03-11 11:33:21,714 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]]
2021-03-11 11:33:21,714 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:33:21,714 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@10a1c090]
2021-03-11 11:33:21,869 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:21,876 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().compareTo(68)
2021-03-11 11:33:21,876 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]]
2021-03-11 11:33:21,876 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:22,028 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:22,035 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]
2021-03-11 11:33:22,035 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(76.toUByte()).takeLowestOneBit()
2021-03-11 11:33:22,035 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]]
2021-03-11 11:33:22,035 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:33:22,035 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]
2021-03-11 11:33:22,035 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toInt()
2021-03-11 11:33:22,035 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:33:22,035 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:33:22,169 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:33:22,169 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:33:22,301 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:33:22,307 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).equals("rwjaa").compareTo(false)
2021-03-11 11:33:22,308 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5c3bb402]]
2021-03-11 11:33:22,308 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:33:22,308 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5c3bb402]
2021-03-11 11:33:22,441 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:22,448 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().rem(-6)
2021-03-11 11:33:22,448 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:33:22,448 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:22,595 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:22,601 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:33:22,791 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:22,798 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(29.toUByte()).shl(-281191667)
2021-03-11 11:33:22,798 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]]
2021-03-11 11:33:22,798 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:33:22,798 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]
2021-03-11 11:33:22,933 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:22,939 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().compareTo(67.toUByte())
2021-03-11 11:33:22,939 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]]
2021-03-11 11:33:22,940 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:23,074 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:23,080 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]
2021-03-11 11:33:23,081 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(104.toUByte()).dec()
2021-03-11 11:33:23,081 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]]
2021-03-11 11:33:23,081 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:33:23,216 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:23,223 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]
2021-03-11 11:33:23,223 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(2.toUByte()).unaryPlus()
2021-03-11 11:33:23,223 [main:110] - replacement of i14 of type Int is (6516632970651683513.toULong()).compareTo(29.toUByte()).shl(-281191667)
2021-03-11 11:33:23,363 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:23,363 [main:66] - Compilation checking started
2021-03-11 11:33:23,811 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + (6516632970651683513.toULong()).compareTo(29.toUByte()).shl(-281191667) + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:23,816 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10, Int)
2021-03-11 11:33:23,816 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 Int
2021-03-11 11:33:23,816 [main:42] - Getting value of type Int
2021-03-11 11:33:23,953 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:23,959 [main:46] - GENERATED VALUE OF TYPE Int = 1977812937
2021-03-11 11:33:23,959 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:24,352 [main:55] - randomType = Kla9?
2021-03-11 11:33:24,488 [main:302] - generating value of type = Kla9 false depth = 0
2021-03-11 11:33:24,495 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:33:24,527 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla9[DeserializedSimpleFunctionDescriptor@6ce5644b]
2021-03-11 11:33:24,665 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:33:24,665 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:33:24,798 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:33:24,805 [main:66] - Generated call from random type = (Kla9)?.equals("rmlml").compareTo(true)
2021-03-11 11:33:24,806 [main:94] - GETTING Int from String
2021-03-11 11:33:24,839 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:33:24,839 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:33:24,984 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:24,990 [main:105] - GENERATED CALL = (Kla1().prope0).length.shl(-70464444)
2021-03-11 11:33:24,991 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]]
2021-03-11 11:33:24,991 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:25,123 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:25,129 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]
2021-03-11 11:33:25,267 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:25,274 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("ucxan").and(1740503389)
2021-03-11 11:33:25,274 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:33:25,274 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:25,422 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:25,429 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:33:25,585 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:25,594 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("spzhj").shl(-471968518)
2021-03-11 11:33:25,594 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:33:25,594 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:25,775 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:25,784 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:33:25,934 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:25,941 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("mvbpi").ushr(-1776163215)
2021-03-11 11:33:25,941 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]]
2021-03-11 11:33:25,941 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:26,093 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:26,102 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]
2021-03-11 11:33:26,234 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:26,240 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("lehgc").minus(1)
2021-03-11 11:33:26,241 [main:101] - Case = [public inline fun kotlin.CharSequence.indexOfLast(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@57c226b2]]
2021-03-11 11:33:26,241 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.indexOfLast(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@57c226b2]
2021-03-11 11:33:26,392 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:33:26,399 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:33:26,407 [main:105] - GENERATED CALL = (Kla1().prope0).indexOfLast({a: Char -> false})
2021-03-11 11:33:26,408 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d9fa6ba]]
2021-03-11 11:33:26,408 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:26,559 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:26,568 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4d9fa6ba]
2021-03-11 11:33:26,716 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:33:26,723 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("mhgdh").plus(105)
2021-03-11 11:33:26,723 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]]
2021-03-11 11:33:26,723 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:26,872 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:26,879 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]
2021-03-11 11:33:26,880 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("xqvap").toInt()
2021-03-11 11:33:26,880 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]]
2021-03-11 11:33:26,880 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:27,024 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:27,033 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]
2021-03-11 11:33:27,033 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("cpbdz").unaryPlus()
2021-03-11 11:33:27,033 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]]
2021-03-11 11:33:27,033 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:27,177 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:27,186 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@41a92e8f]
2021-03-11 11:33:27,187 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("wxrxr").countLeadingZeroBits()
2021-03-11 11:33:27,187 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 of type Int is (Kla1().prope0).length.shl(-70464444)
2021-03-11 11:33:27,327 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:27,328 [main:66] - Compilation checking started
2021-03-11 11:33:27,800 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((Kla1().prope0).length.shl(-70464444) + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:27,803 [main:103] - replacing ("tail-call optimization miss: method at " + it + " has state-machine ", String)
2021-03-11 11:33:27,803 [main:38] - replacing "tail-call optimization miss: method at " + it + " has state-machine " String
2021-03-11 11:33:27,803 [main:42] - Getting value of type String
2021-03-11 11:33:27,951 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:27,957 [main:46] - GENERATED VALUE OF TYPE String = "mibor"
2021-03-11 11:33:27,957 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:28,460 [main:55] - randomType = Map<Kla8, Float>
2021-03-11 11:33:28,461 [main:94] - GETTING String from UByte
2021-03-11 11:33:28,498 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:33:28,499 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:33:28,623 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:28,630 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toString(-179325027)
2021-03-11 11:33:28,630 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:33:28,630 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:33:28,630 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:33:28,753 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:28,760 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().toString(1048016318)
2021-03-11 11:33:28,760 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:33:28,760 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:33:28,760 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:33:28,901 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:28,908 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().toString(2109803804)
2021-03-11 11:33:28,908 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:33:28,908 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:33:28,908 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:33:29,068 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:29,078 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().toString(1452752269)
2021-03-11 11:33:29,078 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:33:29,078 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:33:29,225 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:29,233 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:33:29,368 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:29,375 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(115.toUByte()).toString(1621969181)
2021-03-11 11:33:29,375 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:33:29,375 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:33:29,513 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:33:29,519 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:33:29,653 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:29,661 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(66.toUByte()).toString(1885963461)
2021-03-11 11:33:29,661 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:33:29,662 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:33:29,662 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:33:29,799 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:29,805 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().toString(-1566101911)
2021-03-11 11:33:29,806 [main:110] - replacement of "tail-call optimization miss: method at " + it + " has state-machine " of type String is ((6516632970651683513.toULong()).toUByte()).toShort().toString(-1566101911)
2021-03-11 11:33:29,985 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:29,986 [main:66] - Compilation checking started
2021-03-11 11:33:30,471 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error(((6516632970651683513.toULong()).toUByte()).toShort().toString(-1566101911) +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:30,474 [main:103] - replacing (prope3.exceptionOrNull()?.let(x), Unit?)
2021-03-11 11:33:30,474 [main:38] - replacing prope3.exceptionOrNull()?.let(x) Unit?
2021-03-11 11:33:30,474 [main:42] - Getting value of type Unit?
2021-03-11 11:33:30,635 [main:302] - generating value of type = Unit false depth = 0
2021-03-11 11:33:30,646 [main:46] - GENERATED VALUE OF TYPE Unit? = println()
2021-03-11 11:33:30,646 [main:49] - GENERATED IS CALL =true
2021-03-11 11:33:32,104 [main:55] - randomType = Kla6<Function2<Sequence<UShort>, Short, Double>>
2021-03-11 11:33:32,236 [main:302] - generating value of type = Kla6<Function2<Sequence<UShort>, Short, Double>> false depth = 0
2021-03-11 11:33:32,242 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-11 11:33:32,798 [main:302] - generating value of type = Kla9 false depth = 2
2021-03-11 11:33:32,804 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:33:32,835 [main:137] - GENERATING call of type public abstract fun fu4(exception: kotlin.Throwable): kotlin.Unit defined in Kla6[SimpleFunctionDescriptorImpl@3f918c0e]
2021-03-11 11:33:32,976 [main:302] - generating value of type = Throwable false depth = 0
2021-03-11 11:33:33,149 [main:43] - GENERATING CALL OF fun UninitializedPropertyAccessException(message: kotlin.String?): Throwable = TODO()
2021-03-11 11:33:33,158 [main:61] - WITHOUT TYPE PARAMS = fun UninitializedPropertyAccessException(message: kotlin.String?): Throwable = TODO()
2021-03-11 11:33:33,533 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:33:33,540 [main:95] - GENERATED = UninitializedPropertyAccessException("zdxik")
2021-03-11 11:33:33,540 [main:66] - Generated call from random type = (Kla9).fu4(UninitializedPropertyAccessException("zdxik"))
2021-03-11 11:33:33,541 [main:94] - GETTING Unit? from UByte
2021-03-11 11:33:33,576 [main:94] - GETTING Unit? from Function0<String>
2021-03-11 11:33:33,638 [main:94] - GETTING Unit? from Any
2021-03-11 11:33:33,644 [main:94] - GETTING Unit? from ULong
2021-03-11 11:33:33,688 [main:94] - GETTING Unit? from String
2021-03-11 11:33:33,721 [main:101] - Case = [public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]]
2021-03-11 11:33:33,721 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]
2021-03-11 11:33:33,854 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-11 11:33:33,861 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:33:34,004 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:33:34,012 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:33:34,381 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:33:34,388 [main:95] - GENERATED = check(false)
2021-03-11 11:33:34,388 [main:105] - GENERATED CALL = (Kla1().prope0)?.forEach({a: Char -> check(false)})
2021-03-11 11:33:34,389 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]]
2021-03-11 11:33:34,389 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:33:34,535 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:34,678 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:34,685 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]
2021-03-11 11:33:34,831 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-11 11:33:34,837 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:33:34,990 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:33:34,999 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:33:35,365 [main:302] - generating value of type = Any false depth = 4
2021-03-11 11:33:35,365 [main:95] - GENERATED = print("vbmon")
2021-03-11 11:33:35,366 [main:105] - GENERATED CALL = (Kla1().prope0)?.subSequence(2060392459, 1074784386).forEach({a: Char -> print("vbmon")})
2021-03-11 11:33:35,366 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]]
2021-03-11 11:33:35,366 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:33:35,514 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:35,671 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:35,678 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]
2021-03-11 11:33:35,821 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-11 11:33:35,828 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:33:35,986 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:33:35,995 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:33:36,362 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-11 11:33:36,369 [main:302] - generating value of type = Unit false depth = 5
2021-03-11 11:33:36,519 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:33:36,528 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:33:37,077 [main:302] - generating value of type = Boolean true depth = 8
2021-03-11 11:33:37,084 [main:302] - generating value of type = Function0<Any> false depth = 8
2021-03-11 11:33:37,091 [main:302] - generating value of type = Any false depth = 9
2021-03-11 11:33:37,091 [main:95] - GENERATED = require(false, { "miwio"})
2021-03-11 11:33:37,091 [main:95] - GENERATED = contract({ require(false, { "miwio"})})
2021-03-11 11:33:37,091 [main:105] - GENERATED CALL = (Kla1().prope0)?.subSequence(930879718, -161318715).forEachIndexed({a: Int, b: Char -> contract({ require(false, { "miwio"})})})
2021-03-11 11:33:37,092 [main:101] - Case = [public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]]
2021-03-11 11:33:37,092 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]
2021-03-11 11:33:37,230 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-11 11:33:37,238 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:33:37,388 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:33:37,397 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:33:37,752 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:33:37,758 [main:95] - GENERATED = check(true)
2021-03-11 11:33:37,759 [main:105] - GENERATED CALL = (Kla1().prope0)?.forEachIndexed({a: Int, b: Char -> check(true)})
2021-03-11 11:33:37,759 [main:110] - replacement of prope3.exceptionOrNull()?.let(x) of type Unit? is (Kla1().prope0)?.subSequence(2060392459, 1074784386).forEach({a: Char -> print("vbmon")})
2021-03-11 11:33:37,895 [main:33] - Trying to replace Element(SAFE_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:37,896 [main:66] - Compilation checking started
2021-03-11 11:33:38,362 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
(Kla1().prope0)?.subSequence(2060392459, 1074784386).forEach({a: Char -> print("vbmon")})
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:38,366 [main:103] - replacing (i4, Int)
2021-03-11 11:33:38,366 [main:38] - replacing i4 Int
2021-03-11 11:33:38,367 [main:42] - Getting value of type Int
2021-03-11 11:33:38,505 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:38,511 [main:46] - GENERATED VALUE OF TYPE Int = 426475807
2021-03-11 11:33:38,511 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:39,872 [main:55] - randomType = List<Triple<UByte, UByte, HashMap<Kla1?, UShort>>>
2021-03-11 11:33:39,873 [main:94] - GETTING Int from String
2021-03-11 11:33:39,905 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.lastIndexOf(char: kotlin.Char, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af91d7a]]
2021-03-11 11:33:39,906 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:33:40,046 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:40,202 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:40,209 [main:137] - GENERATING call of type public fun kotlin.CharSequence.lastIndexOf(char: kotlin.Char, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af91d7a]
2021-03-11 11:33:40,365 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:33:40,528 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:40,690 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:33:40,699 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1799323892, 1897826791).lastIndexOf('➳', 1286925978, true)
2021-03-11 11:33:40,699 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]]
2021-03-11 11:33:40,699 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:40,853 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:40,859 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]
2021-03-11 11:33:41,010 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:41,018 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("mekat").and(274753136)
2021-03-11 11:33:41,019 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]]
2021-03-11 11:33:41,019 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:41,169 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:41,175 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]
2021-03-11 11:33:41,175 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("kenwf").inv()
2021-03-11 11:33:41,175 [main:101] - Case = [public inline fun kotlin.CharSequence.indexOfFirst(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7255d6b3]]
2021-03-11 11:33:41,175 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.indexOfFirst(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7255d6b3]
2021-03-11 11:33:41,325 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:33:41,333 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:33:41,340 [main:105] - GENERATED CALL = (Kla1().prope0).indexOfFirst({a: Char -> false})
2021-03-11 11:33:41,340 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.sumOf(selector: (kotlin.Char) -> kotlin.Int): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20529c32]]
2021-03-11 11:33:41,340 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:33:41,490 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:41,650 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:41,657 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.sumOf(selector: (kotlin.Char) -> kotlin.Int): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20529c32]
2021-03-11 11:33:41,807 [main:302] - generating value of type = Function1<Char, Int> false depth = 0
2021-03-11 11:33:41,816 [main:302] - generating value of type = Int true depth = 1
2021-03-11 11:33:41,822 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-574519198, -907599631).sumOf({a: Char -> -1081759238})
2021-03-11 11:33:41,822 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@1f61cfcf]]
2021-03-11 11:33:41,822 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:33:41,972 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:41,981 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("vjnmu").sign
2021-03-11 11:33:41,981 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]]
2021-03-11 11:33:41,981 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]
2021-03-11 11:33:42,132 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:42,139 [main:105] - GENERATED CALL = (Kla1().prope0).length.and(725497343)
2021-03-11 11:33:42,139 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]]
2021-03-11 11:33:42,139 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]
2021-03-11 11:33:42,139 [main:105] - GENERATED CALL = (Kla1().prope0).length.takeLowestOneBit()
2021-03-11 11:33:42,139 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]]
2021-03-11 11:33:42,139 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:33:42,139 [main:105] - GENERATED CALL = (Kla1().prope0).length.countOneBits()
2021-03-11 11:33:42,139 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@1f61cfcf]]
2021-03-11 11:33:42,139 [main:105] - GENERATED CALL = (Kla1().prope0).length.sign
2021-03-11 11:33:42,139 [main:110] - replacement of i4 of type Int is (Kla1().prope0).compareTo("kenwf").inv()
2021-03-11 11:33:42,289 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:42,289 [main:66] - Compilation checking started
2021-03-11 11:33:42,744 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + (Kla1().prope0).compareTo("kenwf").inv() + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:42,747 [main:103] - replacing (Kla4, Kla10)
2021-03-11 11:33:42,747 [main:38] - replacing Kla4 Kla10
2021-03-11 11:33:42,747 [main:42] - Getting value of type Kla10
2021-03-11 11:33:42,906 [main:302] - generating value of type = Kla10 false depth = 0
2021-03-11 11:33:42,913 [main:112] - generating klass Kla10 text = companion object Kla10 : Kla4()
2021-03-11 11:33:42,913 [main:46] - GENERATED VALUE OF TYPE Kla10 = 
2021-03-11 11:33:43,189 [main:55] - randomType = Kla6<Long>
2021-03-11 11:33:43,344 [main:302] - generating value of type = Kla6<Long> false depth = 0
2021-03-11 11:33:43,350 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-11 11:33:44,107 [main:302] - generating value of type = Kla9 false depth = 2
2021-03-11 11:33:44,114 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:33:44,137 [main:94] - GETTING Kla10 from String
2021-03-11 11:33:44,170 [main:94] - GETTING Kla10 from ULong
2021-03-11 11:33:44,210 [main:94] - GETTING Kla10 from Function0<String>
2021-03-11 11:33:44,225 [main:94] - GETTING Kla10 from Any
2021-03-11 11:33:44,231 [main:94] - GETTING Kla10 from ULong
2021-03-11 11:33:44,232 [main:94] - GETTING Kla10 from UByte
2021-03-11 11:33:44,274 [main:107] - Cant find and generate replacement for Kla4 type Kla10
2021-03-11 11:33:44,274 [main:103] - replacing ("tail-call optimization miss: method at ", String)
2021-03-11 11:33:44,274 [main:38] - replacing "tail-call optimization miss: method at " String
2021-03-11 11:33:44,274 [main:42] - Getting value of type String
2021-03-11 11:33:44,419 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:44,425 [main:46] - GENERATED VALUE OF TYPE String = "touey"
2021-03-11 11:33:44,426 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:45,759 [main:55] - randomType = MutableMap<Char, Pair<List<UShort>, Kla0?>>
2021-03-11 11:33:45,761 [main:94] - GETTING String from Function0<String>
2021-03-11 11:33:45,776 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@691c68ce]]
2021-03-11 11:33:45,776 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:45,776 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@691c68ce]
2021-03-11 11:33:45,924 [main:302] - generating value of type = Function1<Char, Char> false depth = 0
2021-03-11 11:33:45,932 [main:302] - generating value of type = Char true depth = 1
2021-03-11 11:33:45,940 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceFirstChar({a: Char -> '敓'})
2021-03-11 11:33:45,940 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dff8bc7]]
2021-03-11 11:33:45,940 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:45,940 [main:137] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dff8bc7]
2021-03-11 11:33:46,104 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:46,269 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:33:46,277 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().padEnd(1540247805, '仧')
2021-03-11 11:33:46,277 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]]
2021-03-11 11:33:46,277 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:46,278 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]
2021-03-11 11:33:46,278 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().uppercase()
2021-03-11 11:33:46,278 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@415ff653]]
2021-03-11 11:33:46,278 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:46,278 [main:137] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@415ff653]
2021-03-11 11:33:46,425 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:33:46,574 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:33:46,719 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:33:46,726 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replace('쥦', '跺', true)
2021-03-11 11:33:46,726 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]]
2021-03-11 11:33:46,726 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:46,726 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]
2021-03-11 11:33:46,858 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:47,001 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:47,139 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:33:47,288 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:33:47,295 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:33:47,655 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:33:47,661 [main:95] - GENERATED = StringBuilder(741797724)
2021-03-11 11:33:47,662 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceRange(1233866234, -199000123, StringBuilder(741797724))
2021-03-11 11:33:47,662 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]]
2021-03-11 11:33:47,662 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:47,662 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke()
2021-03-11 11:33:47,662 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@756e7e16]]
2021-03-11 11:33:47,662 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:47,662 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@756e7e16]
2021-03-11 11:33:47,662 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trim()
2021-03-11 11:33:47,662 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]]
2021-03-11 11:33:47,662 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:47,662 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]
2021-03-11 11:33:47,663 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().reversed()
2021-03-11 11:33:47,663 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]]
2021-03-11 11:33:47,663 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:47,663 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]
2021-03-11 11:33:47,663 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimStart()
2021-03-11 11:33:47,663 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4db84176]]
2021-03-11 11:33:47,663 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:33:47,663 [main:137] - GENERATING call of type public fun kotlin.String.removePrefix(prefix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4db84176]
2021-03-11 11:33:47,810 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:33:47,956 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:33:47,963 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:33:48,345 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:33:48,353 [main:95] - GENERATED = StringBuilder(1831581461)
2021-03-11 11:33:48,354 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().removePrefix(StringBuilder(1831581461))
2021-03-11 11:33:48,354 [main:110] - replacement of "tail-call optimization miss: method at " of type String is (Kla0({ "hxtps"}).callback).invoke().trimStart()
2021-03-11 11:33:48,501 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:48,501 [main:66] - Compilation checking started
2021-03-11 11:33:48,950 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error((Kla0({ "hxtps"}).callback).invoke().trimStart() + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:48,953 [main:103] - replacing (prope7, Function0<Unit>)
2021-03-11 11:33:48,953 [main:38] - replacing prope7 Function0<Unit>
2021-03-11 11:33:48,953 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:33:49,118 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:33:49,124 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:33:49,286 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:33:49,295 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:33:49,664 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-11 11:33:49,671 [main:302] - generating value of type = Unit false depth = 5
2021-03-11 11:33:49,813 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:33:49,820 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:33:50,168 [main:302] - generating value of type = Any false depth = 8
2021-03-11 11:33:50,168 [main:95] - GENERATED = print("gdzgc")
2021-03-11 11:33:50,168 [main:95] - GENERATED = contract({ print("gdzgc")})
2021-03-11 11:33:50,168 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { contract({ print("gdzgc")})}
2021-03-11 11:33:50,168 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:50,438 [main:55] - randomType = ArrayDeque<Kla7>
2021-03-11 11:33:50,575 [main:302] - generating value of type = ArrayDeque<Kla7> false depth = 0
2021-03-11 11:33:50,716 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(): ArrayDeque<Kla7> = TODO()
2021-03-11 11:33:50,723 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(): ArrayDeque<Kla7> = TODO()
2021-03-11 11:33:50,890 [main:95] - GENERATED = ArrayDeque<Kla7>()
2021-03-11 11:33:51,108 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:33:51,156 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:33:51,164 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:33:51,212 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:33:51,214 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:33:51,231 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:33:51,265 [main:110] - replacement of prope7 of type Function0<Unit> is { contract({ print("gdzgc")})}
2021-03-11 11:33:51,402 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 11:33:51,403 [main:66] - Compilation checking started
2021-03-11 11:33:51,852 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        { contract({ print("gdzgc")})} = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:51,855 [main:103] - replacing (prope3, String)
2021-03-11 11:33:51,855 [main:38] - replacing prope3 String
2021-03-11 11:33:51,855 [main:42] - Getting value of type String
2021-03-11 11:33:52,009 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:52,019 [main:46] - GENERATED VALUE OF TYPE String = "yrkbd"
2021-03-11 11:33:52,019 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:52,048 [main:55] - randomType = Kla0
2021-03-11 11:33:52,202 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 11:33:52,208 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:33:52,349 [main:194] - Type params = []
2021-03-11 11:33:52,480 [main:302] - generating value of type = Function0<String> false depth = 2
2021-03-11 11:33:52,486 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:33:52,502 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@259d4a11]
2021-03-11 11:33:52,502 [main:66] - Generated call from random type = (Kla0({ "sezpt"})).callback.invoke()
2021-03-11 11:33:52,502 [main:94] - GETTING String from String
2021-03-11 11:33:52,530 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]]
2021-03-11 11:33:52,531 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]
2021-03-11 11:33:52,531 [main:105] - GENERATED CALL = (Kla1().prope0).trimEnd()
2021-03-11 11:33:52,531 [main:101] - Case = [public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]]
2021-03-11 11:33:52,531 [main:137] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]
2021-03-11 11:33:52,662 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:52,668 [main:105] - GENERATED CALL = (Kla1().prope0).takeLast(-1420123127)
2021-03-11 11:33:52,668 [main:101] - Case = [public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@765082f0]]
2021-03-11 11:33:52,668 [main:137] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@765082f0]
2021-03-11 11:33:52,802 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:52,809 [main:105] - GENERATED CALL = (Kla1().prope0).drop(1533372487)
2021-03-11 11:33:52,809 [main:101] - Case = [public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a3a113f]]
2021-03-11 11:33:52,809 [main:137] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a3a113f]
2021-03-11 11:33:52,943 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:33:53,094 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:53,236 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:53,243 [main:105] - GENERATED CALL = (Kla1().prope0).replaceBefore('䵂', "fwveu", "tjpyt")
2021-03-11 11:33:53,243 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@756e7e16]]
2021-03-11 11:33:53,243 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@756e7e16]
2021-03-11 11:33:53,244 [main:105] - GENERATED CALL = (Kla1().prope0).trim()
2021-03-11 11:33:53,244 [main:101] - Case = [public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]]
2021-03-11 11:33:53,244 [main:137] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]
2021-03-11 11:33:53,383 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-11 11:33:53,389 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:33:53,396 [main:105] - GENERATED CALL = (Kla1().prope0).filterIndexed({a: Int, b: Char -> true})
2021-03-11 11:33:53,396 [main:101] - Case = [public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26ffbae6]]
2021-03-11 11:33:53,396 [main:137] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26ffbae6]
2021-03-11 11:33:53,532 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:33:53,674 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:53,681 [main:105] - GENERATED CALL = (Kla1().prope0).substringBeforeLast('䀁', "wjxmk")
2021-03-11 11:33:53,681 [main:101] - Case = [public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60a5b9e5]]
2021-03-11 11:33:53,681 [main:137] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60a5b9e5]
2021-03-11 11:33:53,822 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:33:53,829 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:33:53,837 [main:105] - GENERATED CALL = (Kla1().prope0).takeLastWhile({a: Char -> false})
2021-03-11 11:33:53,837 [main:101] - Case = [public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]]
2021-03-11 11:33:53,837 [main:137] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]
2021-03-11 11:33:53,973 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:54,135 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:33:54,142 [main:105] - GENERATED CALL = (Kla1().prope0).padStart(1471037872, '䞪')
2021-03-11 11:33:54,142 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6e3a7417]]
2021-03-11 11:33:54,142 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6e3a7417]
2021-03-11 11:33:54,143 [main:105] - GENERATED CALL = (Kla1().prope0).toLowerCase()
2021-03-11 11:33:54,143 [main:110] - replacement of prope3 of type String is "yrkbd"
2021-03-11 11:33:54,299 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:33:54,300 [main:66] - Compilation checking started
2021-03-11 11:33:54,824 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException("yrkbd")
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:54,828 [main:103] - replacing ("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5, String)
2021-03-11 11:33:54,828 [main:38] - replacing "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5 String
2021-03-11 11:33:54,828 [main:42] - Getting value of type String
2021-03-11 11:33:54,962 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:54,968 [main:46] - GENERATED VALUE OF TYPE String = "sewue"
2021-03-11 11:33:54,968 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:55,565 [main:55] - randomType = LinkedHashSet<Double?>
2021-03-11 11:33:55,702 [main:302] - generating value of type = LinkedHashSet<Double?> false depth = 0
2021-03-11 11:33:55,861 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Double?): LkedHashSet<Double?> = TODO()
2021-03-11 11:33:55,870 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Double?): LkedHashSet<Double?> = TODO()
2021-03-11 11:33:56,139 [main:302] - generating value of type = Double true depth = 3
2021-03-11 11:33:56,146 [main:95] - GENERATED = linkedSetOf<Double?>(0.2224966296004358)
2021-03-11 11:33:56,341 [main:137] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.LinkedHashSet[DeserializedSimpleFunctionDescriptor@9495c61]
2021-03-11 11:33:56,341 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34afee7c]
2021-03-11 11:33:56,341 [main:66] - Generated call from random type = (linkedSetOf<Double?>(0.2224966296004358)).toArray().contentToString()
2021-03-11 11:33:56,341 [main:110] - replacement of "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5 of type String is (linkedSetOf<Double?>(0.2224966296004358)).toArray().contentToString()
2021-03-11 11:33:56,477 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:33:56,478 [main:66] - Compilation checking started
2021-03-11 11:33:57,027 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error((linkedSetOf<Double?>(0.2224966296004358)).toArray().contentToString())
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:33:57,031 [main:103] - replacing (c, Continuation<*>)
2021-03-11 11:33:57,032 [main:38] - replacing c Continuation<*>
2021-03-11 11:33:57,032 [main:42] - Getting value of type Continuation<*>
2021-03-11 11:33:57,185 [main:302] - generating value of type = Continuation<*> false depth = 0
2021-03-11 11:33:57,352 [main:43] - GENERATING CALL OF fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-11 11:33:57,359 [main:61] - WITHOUT TYPE PARAMS = fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-11 11:33:57,937 [main:302] - generating value of type = CoroutineContext false depth = 3
2021-03-11 11:33:58,084 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:33:58,091 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:33:58,477 [main:302] - generating value of type = Key<*> false depth = 6
2021-03-11 11:33:58,641 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:33:58,650 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:33:59,253 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:33:59,253 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:33:59,253 [main:385] - Cant generate call of fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-11 11:33:59,253 [main:46] - GENERATED VALUE OF TYPE Continuation<*> = 
2021-03-11 11:33:59,266 [main:55] - randomType = String
2021-03-11 11:33:59,415 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:33:59,448 [main:94] - GETTING Continuation<*> from Function0<String>
2021-03-11 11:33:59,459 [main:94] - GETTING Continuation<*> from String
2021-03-11 11:33:59,488 [main:94] - GETTING Continuation<*> from UByte
2021-03-11 11:33:59,531 [main:94] - GETTING Continuation<*> from ULong
2021-03-11 11:33:59,570 [main:94] - GETTING Continuation<*> from Any
2021-03-11 11:33:59,574 [main:94] - GETTING Continuation<*> from ULong
2021-03-11 11:33:59,574 [main:107] - Cant find and generate replacement for c type Continuation<*>
2021-03-11 11:33:59,574 [main:103] - replacing (i15, Int)
2021-03-11 11:33:59,574 [main:38] - replacing i15 Int
2021-03-11 11:33:59,574 [main:42] - Getting value of type Int
2021-03-11 11:33:59,711 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:33:59,718 [main:46] - GENERATED VALUE OF TYPE Int = -713774514
2021-03-11 11:33:59,718 [main:49] - GENERATED IS CALL =false
2021-03-11 11:33:59,743 [main:55] - randomType = Kla4
2021-03-11 11:33:59,882 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 11:33:59,890 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}
2021-03-11 11:34:00,053 [main:194] - Type params = []
2021-03-11 11:34:00,204 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-11 11:34:00,369 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:34:00,379 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:34:00,757 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-11 11:34:00,910 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:34:00,917 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:34:01,518 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:34:01,518 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:34:01,540 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla4[DeserializedSimpleFunctionDescriptor@574a5da9]
2021-03-11 11:34:01,712 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:01,713 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:34:01,932 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:01,939 [main:66] - Generated call from random type = (Kla4()).equals("xpuai").compareTo(false)
2021-03-11 11:34:01,939 [main:110] - replacement of i15 of type Int is (Kla4()).equals("xpuai").compareTo(false)
2021-03-11 11:34:02,088 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:02,089 [main:66] - Compilation checking started
2021-03-11 11:34:02,597 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + (Kla4()).equals("xpuai").compareTo(false) + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:02,600 [main:103] - replacing (prope3.getOrThrow(), Any?)
2021-03-11 11:34:02,601 [main:38] - replacing prope3.getOrThrow() Any?
2021-03-11 11:34:02,601 [main:42] - Getting value of type Any?
2021-03-11 11:34:02,733 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:02,733 [main:46] - GENERATED VALUE OF TYPE Any? = "koaff"
2021-03-11 11:34:02,733 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:03,243 [main:55] - randomType = LinkedHashMap<Boolean, Kla7?>
2021-03-11 11:34:03,396 [main:302] - generating value of type = LinkedHashMap<Boolean, Kla7?> false depth = 0
2021-03-11 11:34:03,553 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): LkedHashMap<Boolean, Kla7?> = TODO()
2021-03-11 11:34:03,563 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): LkedHashMap<Boolean, Kla7?> = TODO()
2021-03-11 11:34:03,763 [main:95] - GENERATED = linkedMapOf<Boolean, Kla7?>()
2021-03-11 11:34:03,957 [main:94] - GETTING Any? from ULong
2021-03-11 11:34:04,000 [main:94] - GETTING Any? from String
2021-03-11 11:34:04,032 [main:94] - GETTING Any? from ULong
2021-03-11 11:34:04,034 [main:94] - GETTING Any? from Function0<String>
2021-03-11 11:34:04,051 [main:94] - GETTING Any? from Any
2021-03-11 11:34:04,057 [main:110] - replacement of prope3.getOrThrow() of type Any? is "koaff"
2021-03-11 11:34:04,203 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:34:04,204 [main:66] - Compilation checking started
2021-03-11 11:34:04,767 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
"koaff"
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:04,771 [main:103] - replacing ("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5, String)
2021-03-11 11:34:04,771 [main:38] - replacing "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5 String
2021-03-11 11:34:04,771 [main:42] - Getting value of type String
2021-03-11 11:34:04,937 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:04,944 [main:46] - GENERATED VALUE OF TYPE String = "lbtny"
2021-03-11 11:34:04,944 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:05,166 [main:55] - randomType = Kla6<Kla3>
2021-03-11 11:34:05,305 [main:302] - generating value of type = Kla6<Kla3> false depth = 0
2021-03-11 11:34:05,311 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-11 11:34:05,903 [main:302] - generating value of type = Kla9 false depth = 2
2021-03-11 11:34:05,910 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:34:05,937 [main:94] - GETTING String from ULong
2021-03-11 11:34:05,984 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:34:05,984 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:34:06,134 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:06,141 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:34:06,280 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:06,286 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(86.toUByte()).toString(-1431044041)
2021-03-11 11:34:06,287 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:34:06,287 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:34:06,287 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:34:06,420 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:06,428 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(-24782186)
2021-03-11 11:34:06,428 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:34:06,428 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:34:06,428 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:34:06,576 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:06,583 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(-807852754)
2021-03-11 11:34:06,583 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:34:06,583 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:34:06,583 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:34:06,719 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:06,726 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(142223683)
2021-03-11 11:34:06,726 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:34:06,726 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:34:06,872 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:06,879 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(-2143769513)
2021-03-11 11:34:06,879 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:34:06,879 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:34:06,879 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:34:07,021 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:07,028 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(-974363894)
2021-03-11 11:34:07,028 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:34:07,028 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:34:07,028 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:34:07,171 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:07,178 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(307675760)
2021-03-11 11:34:07,179 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:34:07,179 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:34:07,179 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:34:07,342 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:07,350 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(1231890643)
2021-03-11 11:34:07,351 [main:110] - replacement of "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5 of type String is ((6516632970651683513.toULong())).toString(-2143769513)
2021-03-11 11:34:07,502 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:07,502 [main:66] - Compilation checking started
2021-03-11 11:34:08,127 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error(((6516632970651683513.toULong())).toString(-2143769513))
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:08,130 [main:103] - replacing (prope3, String)
2021-03-11 11:34:08,130 [main:38] - replacing prope3 String
2021-03-11 11:34:08,130 [main:42] - Getting value of type String
2021-03-11 11:34:08,264 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:08,270 [main:46] - GENERATED VALUE OF TYPE String = "oxxts"
2021-03-11 11:34:08,270 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:08,466 [main:55] - randomType = Float
2021-03-11 11:34:08,596 [main:302] - generating value of type = Float true depth = 0
2021-03-11 11:34:08,643 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4fd9603f]
2021-03-11 11:34:08,644 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:34:08,772 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:08,778 [main:66] - Generated call from random type = (0.9288269f).toInt().toString(1495980354)
2021-03-11 11:34:08,779 [main:94] - GETTING String from Any
2021-03-11 11:34:08,784 [main:94] - GETTING String from ULong
2021-03-11 11:34:08,819 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:34:08,819 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:34:08,950 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:08,956 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(460370132)
2021-03-11 11:34:08,956 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:34:08,956 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:34:09,105 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:09,114 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:34:09,253 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:09,260 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(54.toUByte()).toString(903321629)
2021-03-11 11:34:09,260 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:34:09,260 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:34:09,260 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:34:09,396 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:09,403 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(431222271)
2021-03-11 11:34:09,403 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:34:09,403 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:34:09,404 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:34:09,544 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:09,551 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(-903549511)
2021-03-11 11:34:09,551 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:34:09,551 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:34:09,551 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:34:09,684 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:09,694 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(-583519205)
2021-03-11 11:34:09,694 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:34:09,694 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:34:09,694 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:34:09,855 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:09,864 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(-2059803280)
2021-03-11 11:34:09,864 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:34:09,864 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:34:09,864 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:34:10,017 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:10,023 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(-1348974661)
2021-03-11 11:34:10,023 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:34:10,023 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:34:10,024 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:34:10,155 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:10,161 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(-1124467493)
2021-03-11 11:34:10,161 [main:110] - replacement of prope3 of type String is ((6516632970651683513.toULong())).toShort().toString(431222271)
2021-03-11 11:34:10,295 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:10,295 [main:66] - Compilation checking started
2021-03-11 11:34:10,843 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            ((6516632970651683513.toULong())).toShort().toString(431222271) = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:10,846 [main:103] - replacing (numberOfSuspensions, Int)
2021-03-11 11:34:10,846 [main:38] - replacing numberOfSuspensions Int
2021-03-11 11:34:10,846 [main:42] - Getting value of type Int
2021-03-11 11:34:10,991 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:10,998 [main:46] - GENERATED VALUE OF TYPE Int = -490024793
2021-03-11 11:34:10,998 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:11,208 [main:55] - randomType = String?
2021-03-11 11:34:11,343 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:11,384 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:34:11,531 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:11,538 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]
2021-03-11 11:34:11,538 [main:66] - Generated call from random type = ("vcvqq")?.compareTo("mxqdz").inv()
2021-03-11 11:34:11,539 [main:94] - GETTING Int from UByte
2021-03-11 11:34:11,582 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]]
2021-03-11 11:34:11,582 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:34:11,725 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:11,733 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]
2021-03-11 11:34:11,733 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(15.toUByte()).unaryMinus()
2021-03-11 11:34:11,733 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:34:11,733 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:34:11,877 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:11,884 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:34:11,884 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(119.toUByte()).countTrailingZeroBits()
2021-03-11 11:34:11,884 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a], public final val step: kotlin.Int defined in kotlin.ranges.UIntRange[DeserializedPropertyDescriptor@4e0dfdf4]]
2021-03-11 11:34:11,884 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a]
2021-03-11 11:34:12,050 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:12,058 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).rangeTo(68.toUByte()).step
2021-03-11 11:34:12,058 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]]
2021-03-11 11:34:12,058 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:34:12,218 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:12,226 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]
2021-03-11 11:34:12,395 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:12,403 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(116.toUByte()).div(-99)
2021-03-11 11:34:12,403 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1759a7dd]]
2021-03-11 11:34:12,403 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:34:12,561 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:12,567 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1759a7dd]
2021-03-11 11:34:12,568 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(20.toUByte()).countTrailingZeroBits()
2021-03-11 11:34:12,568 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]]
2021-03-11 11:34:12,568 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:34:12,568 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]
2021-03-11 11:34:12,731 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:12,738 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().plus(59)
2021-03-11 11:34:12,738 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]]
2021-03-11 11:34:12,738 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:34:12,738 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]
2021-03-11 11:34:12,738 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().toInt()
2021-03-11 11:34:12,738 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3ba31af9]]
2021-03-11 11:34:12,738 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:34:12,738 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3ba31af9]
2021-03-11 11:34:12,739 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().toInt()
2021-03-11 11:34:12,739 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]]
2021-03-11 11:34:12,739 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:34:12,885 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:12,892 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]
2021-03-11 11:34:13,038 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:13,046 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(27.toUByte()).coerceAtMost(-178833189)
2021-03-11 11:34:13,046 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]]
2021-03-11 11:34:13,046 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:34:13,046 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@540eb8f7]
2021-03-11 11:34:13,189 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:13,197 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().plus(45)
2021-03-11 11:34:13,197 [main:110] - replacement of numberOfSuspensions of type Int is ((6516632970651683513.toULong()).toUByte()).toByte().plus(45)
2021-03-11 11:34:13,339 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:13,339 [main:66] - Compilation checking started
2021-03-11 11:34:13,899 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..((6516632970651683513.toULong()).toUByte()).toByte().plus(45)) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:13,902 [main:103] - replacing (checkFinished && !prope6, Boolean)
2021-03-11 11:34:13,902 [main:38] - replacing checkFinished && !prope6 Boolean
2021-03-11 11:34:13,902 [main:42] - Getting value of type Boolean
2021-03-11 11:34:14,034 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:14,040 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:34:14,040 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:14,438 [main:55] - randomType = Function1<UShort, Long>
2021-03-11 11:34:14,439 [main:94] - GETTING Boolean from String
2021-03-11 11:34:14,466 [main:101] - Case = [public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]]
2021-03-11 11:34:14,466 [main:137] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]
2021-03-11 11:34:14,602 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:14,747 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:14,753 [main:105] - GENERATED CALL = (Kla1().prope0).startsWith("iidlx", true)
2021-03-11 11:34:14,753 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], public fun kotlin.Char.isDefined(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@380aa430]]
2021-03-11 11:34:14,753 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:34:14,907 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:14,916 [main:137] - GENERATING call of type public fun kotlin.Char.isDefined(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@380aa430]
2021-03-11 11:34:14,917 [main:105] - GENERATED CALL = (Kla1().prope0).get(-1448536376).isDefined()
2021-03-11 11:34:14,917 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]]
2021-03-11 11:34:14,917 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]
2021-03-11 11:34:15,064 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:15,064 [main:105] - GENERATED CALL = (Kla1().prope0).length.equals("skazv")
2021-03-11 11:34:15,064 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:34:15,064 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]
2021-03-11 11:34:15,216 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:15,216 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:34:15,216 [main:105] - GENERATED CALL = (Kla1().prope0).equals("zagyj").not()
2021-03-11 11:34:15,217 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.any(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@786c4d3f]]
2021-03-11 11:34:15,217 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:15,351 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:15,500 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:15,507 [main:137] - GENERATING call of type public fun kotlin.CharSequence.any(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@786c4d3f]
2021-03-11 11:34:15,507 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(966351131, -1330670794).any()
2021-03-11 11:34:15,507 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public operator fun kotlin.CharSequence.contains(char: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dfa1e5e]]
2021-03-11 11:34:15,507 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:15,653 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:15,822 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:15,830 [main:137] - GENERATING call of type public operator fun kotlin.CharSequence.contains(char: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dfa1e5e]
2021-03-11 11:34:15,982 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:34:16,151 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:16,159 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1598511982, -119967985).contains('䋋', false)
2021-03-11 11:34:16,159 [main:101] - Case = [public operator fun kotlin.CharSequence.contains(char: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dfa1e5e]]
2021-03-11 11:34:16,159 [main:137] - GENERATING call of type public operator fun kotlin.CharSequence.contains(char: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dfa1e5e]
2021-03-11 11:34:16,301 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:34:16,454 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:16,461 [main:105] - GENERATED CALL = (Kla1().prope0).contains('譓', false)
2021-03-11 11:34:16,461 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], public fun kotlin.Char.isUpperCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b6bac3a]]
2021-03-11 11:34:16,461 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:34:16,609 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:16,616 [main:137] - GENERATING call of type public fun kotlin.Char.isUpperCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b6bac3a]
2021-03-11 11:34:16,616 [main:105] - GENERATED CALL = (Kla1().prope0).get(-2104178727).isUpperCase()
2021-03-11 11:34:16,616 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.all(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5f09bfee]]
2021-03-11 11:34:16,616 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:16,756 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:16,906 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:17,027 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.all(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5f09bfee]
2021-03-11 11:34:17,207 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:34:17,216 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:34:17,223 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(278647692, 1598356657).all({a: Char -> false})
2021-03-11 11:34:17,223 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], public fun kotlin.Char.isLetter(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4148f26f]]
2021-03-11 11:34:17,223 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:34:17,395 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:17,403 [main:137] - GENERATING call of type public fun kotlin.Char.isLetter(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4148f26f]
2021-03-11 11:34:17,404 [main:105] - GENERATED CALL = (Kla1().prope0).get(-626018058).isLetter()
2021-03-11 11:34:17,404 [main:110] - replacement of checkFinished && !prope6 of type Boolean is (Kla1().prope0).subSequence(278647692, 1598356657).all({a: Char -> false})
2021-03-11 11:34:17,585 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:17,585 [main:66] - Compilation checking started
2021-03-11 11:34:18,142 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if ((Kla1().prope0).subSequence(278647692, 1598356657).all({a: Char -> false})) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:18,146 [main:103] - replacing (prope3, Any?)
2021-03-11 11:34:18,146 [main:38] - replacing prope3 Any?
2021-03-11 11:34:18,146 [main:42] - Getting value of type Any?
2021-03-11 11:34:18,289 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:18,290 [main:46] - GENERATED VALUE OF TYPE Any? = "mdgua"
2021-03-11 11:34:18,290 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:18,505 [main:55] - randomType = HashSet<UByte>
2021-03-11 11:34:18,639 [main:302] - generating value of type = HashSet<UByte> false depth = 0
2021-03-11 11:34:18,800 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): HashSet<UByte> = TODO()
2021-03-11 11:34:18,808 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): HashSet<UByte> = TODO()
2021-03-11 11:34:18,974 [main:95] - GENERATED = linkedSetOf<UByte>()
2021-03-11 11:34:19,111 [main:137] - GENERATING call of type @kotlin.js.JsName public open fun toJSON(): kotlin.Any defined in kotlin.collections.HashSet[DeserializedSimpleFunctionDescriptor@5b15bae4]
2021-03-11 11:34:19,112 [main:66] - Generated call from random type = (linkedSetOf<UByte>()).toJSON()
2021-03-11 11:34:19,113 [main:94] - GETTING Any? from String
2021-03-11 11:34:19,136 [main:94] - GETTING Any? from Any
2021-03-11 11:34:19,139 [main:110] - replacement of prope3 of type Any? is "mdgua"
2021-03-11 11:34:19,274 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:34:19,274 [main:66] - Compilation checking started
2021-03-11 11:34:19,826 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this."mdgua" = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:19,829 [main:103] - replacing (prope9, String)
2021-03-11 11:34:19,829 [main:38] - replacing prope9 String
2021-03-11 11:34:19,829 [main:42] - Getting value of type String
2021-03-11 11:34:19,964 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:19,970 [main:46] - GENERATED VALUE OF TYPE String = "xygso"
2021-03-11 11:34:19,971 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:20,376 [main:55] - randomType = Byte?
2021-03-11 11:34:20,525 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:20,594 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@59acd373]
2021-03-11 11:34:20,594 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@67329432]
2021-03-11 11:34:20,594 [main:66] - Generated call from random type = (1)?.toChar().lowercase()
2021-03-11 11:34:20,594 [main:94] - GETTING String from String
2021-03-11 11:34:20,625 [main:101] - Case = [public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60a5b9e5]]
2021-03-11 11:34:20,625 [main:137] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60a5b9e5]
2021-03-11 11:34:20,760 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:34:20,767 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:34:20,774 [main:105] - GENERATED CALL = (Kla1().prope0).takeLastWhile({a: Char -> false})
2021-03-11 11:34:20,774 [main:101] - Case = [public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]]
2021-03-11 11:34:20,774 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]
2021-03-11 11:34:20,922 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:34:21,065 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:21,196 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:21,202 [main:105] - GENERATED CALL = (Kla1().prope0).replaceAfter('', "neguw", "nmnmd")
2021-03-11 11:34:21,202 [main:101] - Case = [public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@56b1a486]]
2021-03-11 11:34:21,202 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@56b1a486]
2021-03-11 11:34:21,333 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:21,333 [main:105] - GENERATED CALL = (Kla1().prope0).plus("uqtot")
2021-03-11 11:34:21,333 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]]
2021-03-11 11:34:21,334 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d9cdb93]
2021-03-11 11:34:21,334 [main:105] - GENERATED CALL = (Kla1().prope0).trimEnd()
2021-03-11 11:34:21,334 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]]
2021-03-11 11:34:21,334 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]
2021-03-11 11:34:21,460 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-11 11:34:21,597 [main:43] - GENERATING CALL OF fun <T> setOfNotNull(element: Int): Iterable<Int> = TODO()
2021-03-11 11:34:21,604 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOfNotNull(element: Int): Iterable<Int> = TODO()
2021-03-11 11:34:21,756 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:34:21,763 [main:95] - GENERATED = setOfNotNull<Int>(534519334)
2021-03-11 11:34:21,763 [main:105] - GENERATED CALL = (Kla1().prope0).slice(setOfNotNull<Int>(534519334))
2021-03-11 11:34:21,763 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]]
2021-03-11 11:34:21,763 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:34:21,894 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:21,901 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]
2021-03-11 11:34:22,026 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:22,033 [main:105] - GENERATED CALL = (Kla1().prope0).get(1006443925).plus("wgwsc")
2021-03-11 11:34:22,033 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:34:22,033 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:34:22,165 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:22,171 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:34:22,299 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:22,306 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("ofzem").toString(1288758798)
2021-03-11 11:34:22,306 [main:101] - Case = [public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]]
2021-03-11 11:34:22,306 [main:137] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]
2021-03-11 11:34:22,434 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:34:22,440 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:34:22,448 [main:105] - GENERATED CALL = (Kla1().prope0).takeWhile({a: Char -> false})
2021-03-11 11:34:22,448 [main:101] - Case = [public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]]
2021-03-11 11:34:22,448 [main:137] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]
2021-03-11 11:34:22,576 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:22,582 [main:105] - GENERATED CALL = (Kla1().prope0).takeLast(1136079250)
2021-03-11 11:34:22,582 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@691c68ce]]
2021-03-11 11:34:22,582 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@691c68ce]
2021-03-11 11:34:22,712 [main:302] - generating value of type = Function1<Char, Char> false depth = 0
2021-03-11 11:34:22,718 [main:302] - generating value of type = Char true depth = 1
2021-03-11 11:34:22,725 [main:105] - GENERATED CALL = (Kla1().prope0).replaceFirstChar({a: Char -> '䌕'})
2021-03-11 11:34:22,725 [main:110] - replacement of prope9 of type String is (Kla1().prope0).replaceAfter('', "neguw", "nmnmd")
2021-03-11 11:34:22,859 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:22,859 [main:66] - Compilation checking started
2021-03-11 11:34:23,272 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if ((Kla1().prope0).replaceAfter('', "neguw", "nmnmd") != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:23,275 [main:103] - replacing (1, Int)
2021-03-11 11:34:23,276 [main:38] - replacing 1 Int
2021-03-11 11:34:23,276 [main:42] - Getting value of type Int
2021-03-11 11:34:23,405 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:23,412 [main:46] - GENERATED VALUE OF TYPE Int = -491405944
2021-03-11 11:34:23,412 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:23,437 [main:55] - randomType = Kla5
2021-03-11 11:34:23,563 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-11 11:34:23,569 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:34:23,589 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla5[DeserializedSimpleFunctionDescriptor@5f3c6575]
2021-03-11 11:34:23,718 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:23,718 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:34:23,853 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:23,861 [main:66] - Generated call from random type = (Kla5()).equals("mtigi").compareTo(false)
2021-03-11 11:34:23,862 [main:94] - GETTING Int from String
2021-03-11 11:34:23,892 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]]
2021-03-11 11:34:23,892 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]
2021-03-11 11:34:23,892 [main:105] - GENERATED CALL = (Kla1().prope0).length.unaryMinus()
2021-03-11 11:34:23,892 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:34:23,892 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:34:23,892 [main:105] - GENERATED CALL = (Kla1().prope0).length.inc()
2021-03-11 11:34:23,893 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public val kotlin.CharSequence.lastIndex: kotlin.Int defined in kotlin.text[DeserializedPropertyDescriptor@4fba6ff1]]
2021-03-11 11:34:23,893 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:24,018 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:24,149 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:24,155 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-979498352, 1678117474).lastIndex
2021-03-11 11:34:24,155 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]]
2021-03-11 11:34:24,155 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:34:24,279 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:24,286 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:34:24,286 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("pjlng").countOneBits()
2021-03-11 11:34:24,286 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]]
2021-03-11 11:34:24,286 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]
2021-03-11 11:34:24,414 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:24,420 [main:105] - GENERATED CALL = (Kla1().prope0).length.coerceAtLeast(1829002761)
2021-03-11 11:34:24,420 [main:101] - Case = [public inline fun kotlin.CharSequence.indexOfFirst(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7255d6b3]]
2021-03-11 11:34:24,420 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.indexOfFirst(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7255d6b3]
2021-03-11 11:34:24,545 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:34:24,552 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:34:24,558 [main:105] - GENERATED CALL = (Kla1().prope0).indexOfFirst({a: Char -> true})
2021-03-11 11:34:24,559 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]]
2021-03-11 11:34:24,559 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]
2021-03-11 11:34:24,686 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:24,694 [main:105] - GENERATED CALL = (Kla1().prope0).length.div(117)
2021-03-11 11:34:24,694 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:34:24,694 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:34:24,864 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:24,871 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:34:24,871 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("bqsjh").inc()
2021-03-11 11:34:24,871 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]]
2021-03-11 11:34:24,871 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71c6bf20]
2021-03-11 11:34:24,871 [main:105] - GENERATED CALL = (Kla1().prope0).length.dec()
2021-03-11 11:34:24,871 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.sumBy(selector: (kotlin.Char) -> kotlin.Int): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46eee8f1]]
2021-03-11 11:34:24,871 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:24,996 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:25,129 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:25,136 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.sumBy(selector: (kotlin.Char) -> kotlin.Int): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46eee8f1]
2021-03-11 11:34:25,259 [main:302] - generating value of type = Function1<Char, Int> false depth = 0
2021-03-11 11:34:25,265 [main:302] - generating value of type = Int true depth = 1
2021-03-11 11:34:25,271 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1834745472, -77337670).sumBy({a: Char -> 540861274})
2021-03-11 11:34:25,272 [main:110] - replacement of 1 of type Int is (Kla1().prope0).compareTo("pjlng").countOneBits()
2021-03-11 11:34:25,406 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:25,406 [main:66] - Compilation checking started
2021-03-11 11:34:25,845 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = (Kla1().prope0).compareTo("pjlng").countOneBits(),
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:25,848 [main:103] - replacing (1, Int)
2021-03-11 11:34:25,848 [main:38] - replacing 1 Int
2021-03-11 11:34:25,848 [main:42] - Getting value of type Int
2021-03-11 11:34:25,973 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:25,980 [main:46] - GENERATED VALUE OF TYPE Int = 1271043469
2021-03-11 11:34:25,980 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:25,993 [main:55] - randomType = String
2021-03-11 11:34:26,128 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:26,164 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]
2021-03-11 11:34:26,293 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:26,300 [main:66] - Generated call from random type = ("jaizc").length.coerceAtMost(463050865)
2021-03-11 11:34:26,301 [main:94] - GETTING Int from UByte
2021-03-11 11:34:26,331 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3983235]]
2021-03-11 11:34:26,331 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:34:26,331 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3983235]
2021-03-11 11:34:26,474 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:26,483 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().div(-122)
2021-03-11 11:34:26,483 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:34:26,483 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:34:26,649 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:26,655 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:34:26,802 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:26,809 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(35.toUByte()).ushr(-472652237)
2021-03-11 11:34:26,810 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]]
2021-03-11 11:34:26,810 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:34:26,954 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:26,961 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@14cb3b20]
2021-03-11 11:34:27,100 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:27,106 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(81.toUByte()).coerceAtLeast(1482640119)
2021-03-11 11:34:27,106 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]]
2021-03-11 11:34:27,107 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:34:27,107 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]
2021-03-11 11:34:27,107 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().toBits()
2021-03-11 11:34:27,107 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]]
2021-03-11 11:34:27,107 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:34:27,107 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]
2021-03-11 11:34:27,248 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:27,255 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().compareTo(25)
2021-03-11 11:34:27,255 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5b9beac9]]
2021-03-11 11:34:27,255 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:34:27,255 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5b9beac9]
2021-03-11 11:34:27,255 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().unaryMinus()
2021-03-11 11:34:27,255 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]]
2021-03-11 11:34:27,255 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:34:27,255 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@40dba6b1]
2021-03-11 11:34:27,255 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().countTrailingZeroBits()
2021-03-11 11:34:27,256 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]]
2021-03-11 11:34:27,256 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:34:27,387 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:27,395 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e91c245]
2021-03-11 11:34:27,395 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(75.toUByte()).toInt()
2021-03-11 11:34:27,395 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 11:34:27,395 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:34:27,535 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:27,542 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 11:34:27,542 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(2.toUByte()).countOneBits()
2021-03-11 11:34:27,542 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]]
2021-03-11 11:34:27,542 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:34:27,542 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]
2021-03-11 11:34:27,678 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:27,685 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().compareTo(-66)
2021-03-11 11:34:27,685 [main:110] - replacement of 1 of type Int is ((6516632970651683513.toULong()).toUByte()).compareTo(35.toUByte()).ushr(-472652237)
2021-03-11 11:34:27,821 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:27,821 [main:66] - Compilation checking started
2021-03-11 11:34:28,291 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = ((6516632970651683513.toULong()).toUByte()).compareTo(35.toUByte()).ushr(-472652237),
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:28,294 [main:103] - replacing (prope7, Function0<Unit>)
2021-03-11 11:34:28,294 [main:38] - replacing prope7 Function0<Unit>
2021-03-11 11:34:28,294 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:34:28,424 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:34:28,431 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:34:28,574 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:34:28,581 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:34:29,144 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:34:29,150 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 11:34:29,157 [main:302] - generating value of type = Any false depth = 5
2021-03-11 11:34:29,157 [main:95] - GENERATED = require(true, { "tsmmd"})
2021-03-11 11:34:29,157 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { require(true, { "tsmmd"})}
2021-03-11 11:34:29,157 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:30,244 [main:55] - randomType = Triple<Byte, ArrayList<Kla6<Boolean>>?, Kla7>
2021-03-11 11:34:30,451 [main:302] - generating value of type = Triple<Byte, ArrayList<Kla6<Boolean>>?, Kla7> false depth = 0
2021-03-11 11:34:30,601 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Byte, second: ArrayList<Kla6<Boolean>>?, third: Kla7): Triple<Byte, ArrayList<Kla6<Boolean>>?, Kla7> = TODO()
2021-03-11 11:34:30,609 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Byte, second: ArrayList<Kla6<Boolean>>?, third: Kla7): Triple<Byte, ArrayList<Kla6<Boolean>>?, Kla7> = TODO()
2021-03-11 11:34:30,763 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 11:34:30,770 [main:302] - generating value of type = ArrayList<Kla6<Boolean>> false depth = 3
2021-03-11 11:34:30,907 [main:43] - GENERATING CALL OF fun <E> ArrayList(elements: kotlin.collections.Collection<Kla6<Boolean>>): ArrayList<Kla6<Boolean>> = TODO()
2021-03-11 11:34:30,915 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(elements: kotlin.collections.Collection<Kla6<Boolean>>): ArrayList<Kla6<Boolean>> = TODO()
2021-03-11 11:34:31,327 [main:302] - generating value of type = Collection<Kla6<Boolean>> false depth = 6
2021-03-11 11:34:31,488 [main:43] - GENERATING CALL OF fun <T> listOf(elements: Kla6<Boolean>): Collection<Kla6<Boolean>> = TODO()
2021-03-11 11:34:31,496 [main:61] - WITHOUT TYPE PARAMS = fun <T> listOf(elements: Kla6<Boolean>): Collection<Kla6<Boolean>> = TODO()
2021-03-11 11:34:31,659 [main:302] - generating value of type = Kla6<Boolean> false depth = 9
2021-03-11 11:34:31,666 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-11 11:34:32,451 [main:302] - generating value of type = Kla9 false depth = 11
2021-03-11 11:34:32,458 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:34:32,459 [main:95] - GENERATED = listOf<Kla6<Boolean>>(Kla9)
2021-03-11 11:34:32,459 [main:95] - GENERATED = ArrayList<Kla6<Boolean>>(listOf<Kla6<Boolean>>(Kla9))
2021-03-11 11:34:32,459 [main:302] - generating value of type = Kla7 false depth = 3
2021-03-11 11:34:32,466 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}
2021-03-11 11:34:32,466 [main:95] - GENERATED = Triple<Byte, ArrayList<Kla6<Boolean>>?, Kla7>(56, ArrayList<Kla6<Boolean>>(listOf<Kla6<Boolean>>(Kla9)), Kla7())
2021-03-11 11:34:32,502 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:34:32,506 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:34:32,544 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:34:32,581 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:34:32,593 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:34:32,594 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:34:32,621 [main:110] - replacement of prope7 of type Function0<Unit> is { require(true, { "tsmmd"})}
2021-03-11 11:34:32,762 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 11:34:32,762 [main:66] - Compilation checking started
2021-03-11 11:34:33,218 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        { require(true, { "tsmmd"})} = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:33,221 [main:103] - replacing (EmptyCoroutineContext, EmptyCoroutineContext)
2021-03-11 11:34:33,221 [main:38] - replacing EmptyCoroutineContext EmptyCoroutineContext
2021-03-11 11:34:33,221 [main:42] - Getting value of type EmptyCoroutineContext
2021-03-11 11:34:33,374 [main:302] - generating value of type = EmptyCoroutineContext false depth = 0
2021-03-11 11:34:33,385 [main:46] - GENERATED VALUE OF TYPE EmptyCoroutineContext = 
2021-03-11 11:34:33,603 [main:55] - randomType = Float
2021-03-11 11:34:33,756 [main:302] - generating value of type = Float true depth = 0
2021-03-11 11:34:33,829 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:34:33,878 [main:94] - GETTING EmptyCoroutineContext from String
2021-03-11 11:34:33,912 [main:94] - GETTING EmptyCoroutineContext from UByte
2021-03-11 11:34:33,957 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:34:33,959 [main:94] - GETTING EmptyCoroutineContext from Any
2021-03-11 11:34:33,967 [main:94] - GETTING EmptyCoroutineContext from Function0<String>
2021-03-11 11:34:33,982 [main:107] - Cant find and generate replacement for EmptyCoroutineContext type EmptyCoroutineContext
2021-03-11 11:34:33,983 [main:103] - replacing (" has state-machine ", String)
2021-03-11 11:34:33,983 [main:38] - replacing " has state-machine " String
2021-03-11 11:34:33,983 [main:42] - Getting value of type String
2021-03-11 11:34:34,129 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:34,136 [main:46] - GENERATED VALUE OF TYPE String = "tbbvz"
2021-03-11 11:34:34,136 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:34,162 [main:55] - randomType = Kla5
2021-03-11 11:34:34,322 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-11 11:34:34,329 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:34:34,350 [main:137] - GENERATING call of type public fun kotlin.Any?.toString(): kotlin.String defined in kotlin[DeserializedSimpleFunctionDescriptor@2ccb0929]
2021-03-11 11:34:34,350 [main:66] - Generated call from random type = (Kla5()).prope3?.toString()!!
2021-03-11 11:34:34,351 [main:94] - GETTING String from Any
2021-03-11 11:34:34,355 [main:94] - GETTING String from String
2021-03-11 11:34:34,381 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:34:34,381 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:34:34,514 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:34,521 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:34:34,645 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:34,651 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("zskey").toString(-587797747)
2021-03-11 11:34:34,652 [main:101] - Case = [public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]]
2021-03-11 11:34:34,652 [main:137] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46361a05]
2021-03-11 11:34:34,776 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:34:34,783 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:34:34,789 [main:105] - GENERATED CALL = (Kla1().prope0).takeWhile({a: Char -> true})
2021-03-11 11:34:34,789 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]]
2021-03-11 11:34:34,789 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]
2021-03-11 11:34:34,789 [main:105] - GENERATED CALL = (Kla1().prope0).trimStart()
2021-03-11 11:34:34,789 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]]
2021-03-11 11:34:34,789 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]
2021-03-11 11:34:34,920 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:34,928 [main:105] - GENERATED CALL = (Kla1().prope0).concat("vtsqm")
2021-03-11 11:34:34,928 [main:101] - Case = [public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dff8bc7]]
2021-03-11 11:34:34,928 [main:137] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7dff8bc7]
2021-03-11 11:34:35,057 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:35,190 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:34:35,198 [main:105] - GENERATED CALL = (Kla1().prope0).padEnd(1825243481, '砙')
2021-03-11 11:34:35,198 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]]
2021-03-11 11:34:35,198 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]
2021-03-11 11:34:35,198 [main:105] - GENERATED CALL = (Kla1().prope0).lowercase()
2021-03-11 11:34:35,198 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replaceFirst(regex: kotlin.text.Regex, replacement: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1a7ba985]]
2021-03-11 11:34:35,198 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:35,333 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:35,468 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:35,475 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replaceFirst(regex: kotlin.text.Regex, replacement: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1a7ba985]
2021-03-11 11:34:35,600 [main:302] - generating value of type = Regex false depth = 0
2021-03-11 11:34:35,736 [main:43] - GENERATING CALL OF fun Regex(pattern: kotlin.String): Regex = TODO()
2021-03-11 11:34:35,745 [main:61] - WITHOUT TYPE PARAMS = fun Regex(pattern: kotlin.String): Regex = TODO()
2021-03-11 11:34:36,135 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:34:36,142 [main:95] - GENERATED = Regex("uidgj")
2021-03-11 11:34:36,270 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:36,277 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(1341537199, -1634060233).replaceFirst(Regex("uidgj"), "ngsfi")
2021-03-11 11:34:36,277 [main:101] - Case = [public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@17cd1937]]
2021-03-11 11:34:36,277 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@17cd1937]
2021-03-11 11:34:36,405 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:34:36,539 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:36,671 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:36,678 [main:105] - GENERATED CALL = (Kla1().prope0).replaceAfterLast('ﻀ', "ougxf", "zmlxm")
2021-03-11 11:34:36,679 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]]
2021-03-11 11:34:36,679 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]
2021-03-11 11:34:36,679 [main:105] - GENERATED CALL = (Kla1().prope0).uppercase()
2021-03-11 11:34:36,679 [main:101] - Case = [public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@386ac0b4]]
2021-03-11 11:34:36,679 [main:137] - GENERATING call of type public fun kotlin.CharSequence.commonPrefixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@386ac0b4]
2021-03-11 11:34:36,803 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:34:36,938 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:36,944 [main:105] - GENERATED CALL = (Kla1().prope0).commonPrefixWith("ircjj", true)
2021-03-11 11:34:36,945 [main:110] - replacement of " has state-machine " of type String is (Kla5()).prope3?.toString()!!
2021-03-11 11:34:37,070 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(POSTFIX_EXPRESSION)
2021-03-11 11:34:37,071 [main:66] - Compilation checking started
2021-03-11 11:34:37,500 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + (Kla5()).prope3?.toString()!! +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:37,503 [main:103] - replacing (prope9 != "abc#31", Boolean)
2021-03-11 11:34:37,504 [main:38] - replacing prope9 != "abc#31" Boolean
2021-03-11 11:34:37,504 [main:42] - Getting value of type Boolean
2021-03-11 11:34:37,629 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:37,636 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:34:37,636 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:37,816 [main:55] - randomType = Double
2021-03-11 11:34:37,945 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:34:38,002 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2af59846]
2021-03-11 11:34:38,132 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:38,139 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]
2021-03-11 11:34:38,266 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:38,267 [main:66] - Generated call from random type = (0.05737226350104707).compareTo(31).equals("qfmyx")
2021-03-11 11:34:38,267 [main:110] - replacement of prope9 != "abc#31" of type Boolean is (0.05737226350104707).compareTo(31).equals("qfmyx")
2021-03-11 11:34:38,392 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:38,392 [main:66] - Compilation checking started
2021-03-11 11:34:38,815 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if ((0.05737226350104707).compareTo(31).equals("qfmyx")) {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:38,817 [main:103] - replacing (6, Int)
2021-03-11 11:34:38,818 [main:38] - replacing 6 Int
2021-03-11 11:34:38,818 [main:42] - Getting value of type Int
2021-03-11 11:34:38,945 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:38,951 [main:46] - GENERATED VALUE OF TYPE Int = -805151665
2021-03-11 11:34:38,951 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:39,498 [main:55] - randomType = Array<Float?>
2021-03-11 11:34:39,628 [main:302] - generating value of type = Array<Float?> false depth = 0
2021-03-11 11:34:39,766 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Float?): Array<Float?> = TODO()
2021-03-11 11:34:39,773 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Float?): Array<Float?> = TODO()
2021-03-11 11:34:40,314 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:34:40,320 [main:302] - generating value of type = Function1<Int, Float?> false depth = 3
2021-03-11 11:34:40,327 [main:302] - generating value of type = Float true depth = 4
2021-03-11 11:34:40,334 [main:95] - GENERATED = Array<Float?>(-2071580770, {a: Int -> 0.87942797f})
2021-03-11 11:34:40,356 [main:66] - Generated call from random type = (Array<Float?>(-2071580770, {a: Int -> 0.87942797f})).size
2021-03-11 11:34:40,357 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:34:40,368 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:34:40,369 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:34:40,369 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:34:40,498 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:40,636 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:40,644 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("xrhmt", false)
2021-03-11 11:34:40,645 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:34:40,645 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:34:40,645 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:34:40,645 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:34:40,645 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:34:40,645 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:34:40,645 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:34:40,645 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:34:40,645 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:34:40,770 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:40,770 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:34:40,898 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:40,904 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("apxca").compareTo(true)
2021-03-11 11:34:40,904 [main:110] - replacement of 6 of type Int is (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:34:41,033 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:41,033 [main:66] - Compilation checking started
2021-03-11 11:34:41,503 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = (Kla0({ "hxtps"}).callback).invoke().toInt())
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:41,506 [main:103] - replacing (let(x), Unit?)
2021-03-11 11:34:41,506 [main:38] - replacing let(x) Unit?
2021-03-11 11:34:41,506 [main:42] - Getting value of type Unit?
2021-03-11 11:34:41,635 [main:302] - generating value of type = Unit false depth = 0
2021-03-11 11:34:41,785 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:34:41,793 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 11:34:42,119 [main:302] - generating value of type = Any false depth = 3
2021-03-11 11:34:42,119 [main:95] - GENERATED = print("pmgxw")
2021-03-11 11:34:42,119 [main:46] - GENERATED VALUE OF TYPE Unit? = print("pmgxw")
2021-03-11 11:34:42,119 [main:49] - GENERATED IS CALL =true
2021-03-11 11:34:42,318 [main:55] - randomType = String?
2021-03-11 11:34:42,449 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:42,482 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:42,612 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:42,746 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:42,752 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]
2021-03-11 11:34:42,879 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-11 11:34:42,886 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:34:42,897 [main:66] - Generated call from random type = ("uysxf")?.subSequence(-2071693506, 798778178).forEach({a: Char -> println()})
2021-03-11 11:34:42,898 [main:94] - GETTING Unit? from ULong
2021-03-11 11:34:42,931 [main:94] - GETTING Unit? from String
2021-03-11 11:34:42,961 [main:101] - Case = [public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]]
2021-03-11 11:34:42,961 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]
2021-03-11 11:34:43,089 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-11 11:34:43,096 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:34:43,107 [main:105] - GENERATED CALL = (Kla1().prope0)?.forEach({a: Char -> println()})
2021-03-11 11:34:43,107 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]]
2021-03-11 11:34:43,107 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:43,246 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:43,380 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:43,386 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEach(action: (kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eb27644]
2021-03-11 11:34:43,515 [main:302] - generating value of type = Function1<Char, Unit> false depth = 0
2021-03-11 11:34:43,521 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:34:43,531 [main:105] - GENERATED CALL = (Kla1().prope0)?.subSequence(1162506963, 54177565).forEach({a: Char -> println()})
2021-03-11 11:34:43,531 [main:101] - Case = [public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]]
2021-03-11 11:34:43,531 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]
2021-03-11 11:34:43,660 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-11 11:34:43,667 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:34:43,804 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:34:43,813 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 11:34:44,156 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-11 11:34:44,163 [main:302] - generating value of type = Unit false depth = 5
2021-03-11 11:34:44,300 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:34:44,308 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 11:34:44,642 [main:302] - generating value of type = Boolean true depth = 8
2021-03-11 11:34:44,649 [main:95] - GENERATED = check(false)
2021-03-11 11:34:44,649 [main:95] - GENERATED = contract({ check(false)})
2021-03-11 11:34:44,649 [main:105] - GENERATED CALL = (Kla1().prope0)?.forEachIndexed({a: Int, b: Char -> contract({ check(false)})})
2021-03-11 11:34:44,650 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]]
2021-03-11 11:34:44,650 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:44,784 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:44,918 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:44,925 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.forEachIndexed(action: (index: kotlin.Int, kotlin.Char) -> kotlin.Unit): kotlin.Unit defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30ee52cf]
2021-03-11 11:34:45,053 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Unit> false depth = 0
2021-03-11 11:34:45,060 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:34:45,202 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:34:45,210 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:34:45,748 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:34:45,755 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 11:34:45,762 [main:302] - generating value of type = Any false depth = 5
2021-03-11 11:34:45,763 [main:95] - GENERATED = require(true, { "ohjrp"})
2021-03-11 11:34:45,763 [main:105] - GENERATED CALL = (Kla1().prope0)?.subSequence(580742809, -906148485).forEachIndexed({a: Int, b: Char -> require(true, { "ohjrp"})})
2021-03-11 11:34:45,764 [main:110] - replacement of let(x) of type Unit? is (Kla1().prope0)?.subSequence(1162506963, 54177565).forEach({a: Char -> println()})
2021-03-11 11:34:45,895 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:45,895 [main:66] - Compilation checking started
2021-03-11 11:34:46,320 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.(Kla1().prope0)?.subSequence(1162506963, 54177565).forEach({a: Char -> println()})
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:46,325 [main:103] - replacing (prope3.exceptionOrNull(), Throwable?)
2021-03-11 11:34:46,325 [main:38] - replacing prope3.exceptionOrNull() Throwable?
2021-03-11 11:34:46,325 [main:42] - Getting value of type Throwable?
2021-03-11 11:34:46,459 [main:302] - generating value of type = Throwable false depth = 0
2021-03-11 11:34:46,597 [main:43] - GENERATING CALL OF fun RuntimeException(cause: kotlin.Throwable?): Throwable = TODO()
2021-03-11 11:34:46,605 [main:61] - WITHOUT TYPE PARAMS = fun RuntimeException(cause: kotlin.Throwable?): Throwable = TODO()
2021-03-11 11:34:47,015 [main:302] - generating value of type = Throwable false depth = 3
2021-03-11 11:34:47,156 [main:43] - GENERATING CALL OF fun RuntimeException(cause: kotlin.Throwable?): Throwable = TODO()
2021-03-11 11:34:47,164 [main:61] - WITHOUT TYPE PARAMS = fun RuntimeException(cause: kotlin.Throwable?): Throwable = TODO()
2021-03-11 11:34:47,495 [main:302] - generating value of type = Throwable false depth = 6
2021-03-11 11:34:47,631 [main:43] - GENERATING CALL OF fun ClassCastException(message: kotlin.String?): Throwable = TODO()
2021-03-11 11:34:47,639 [main:61] - WITHOUT TYPE PARAMS = fun ClassCastException(message: kotlin.String?): Throwable = TODO()
2021-03-11 11:34:47,967 [main:302] - generating value of type = String true depth = 9
2021-03-11 11:34:47,975 [main:95] - GENERATED = ClassCastException("yetsn")
2021-03-11 11:34:47,975 [main:95] - GENERATED = RuntimeException(ClassCastException("yetsn"))
2021-03-11 11:34:47,975 [main:95] - GENERATED = RuntimeException(RuntimeException(ClassCastException("yetsn")))
2021-03-11 11:34:47,975 [main:46] - GENERATED VALUE OF TYPE Throwable? = RuntimeException(RuntimeException(ClassCastException("yetsn")))
2021-03-11 11:34:47,975 [main:49] - GENERATED IS CALL =true
2021-03-11 11:34:47,988 [main:55] - randomType = String
2021-03-11 11:34:48,115 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:48,147 [main:94] - GETTING Throwable? from UByte
2021-03-11 11:34:48,170 [main:94] - GETTING Throwable? from String
2021-03-11 11:34:48,191 [main:94] - GETTING Throwable? from Any
2021-03-11 11:34:48,197 [main:94] - GETTING Throwable? from ULong
2021-03-11 11:34:48,230 [main:94] - GETTING Throwable? from ULong
2021-03-11 11:34:48,231 [main:94] - GETTING Throwable? from Function0<String>
2021-03-11 11:34:48,243 [main:110] - replacement of prope3.exceptionOrNull() of type Throwable? is RuntimeException(RuntimeException(ClassCastException("yetsn")))
2021-03-11 11:34:48,368 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:34:48,369 [main:66] - Compilation checking started
2021-03-11 11:34:48,818 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
RuntimeException(RuntimeException(ClassCastException("yetsn")))?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:48,821 [main:103] - replacing (prope2, Kla8)
2021-03-11 11:34:48,821 [main:38] - replacing prope2 Kla8
2021-03-11 11:34:48,821 [main:42] - Getting value of type Kla8
2021-03-11 11:34:48,949 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-11 11:34:48,956 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-11 11:34:48,956 [main:46] - GENERATED VALUE OF TYPE Kla8 = Kla8()
2021-03-11 11:34:48,956 [main:49] - GENERATED IS CALL =true
2021-03-11 11:34:48,983 [main:55] - randomType = Kla8
2021-03-11 11:34:49,110 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-11 11:34:49,116 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-11 11:34:49,127 [main:94] - GETTING Kla8 from Any
2021-03-11 11:34:49,131 [main:94] - GETTING Kla8 from ULong
2021-03-11 11:34:49,158 [main:94] - GETTING Kla8 from UByte
2021-03-11 11:34:49,183 [main:94] - GETTING Kla8 from ULong
2021-03-11 11:34:49,184 [main:94] - GETTING Kla8 from Function0<String>
2021-03-11 11:34:49,195 [main:94] - GETTING Kla8 from String
2021-03-11 11:34:49,220 [main:110] - replacement of prope2 of type Kla8 is Kla8()
2021-03-11 11:34:49,347 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:34:49,347 [main:66] - Compilation checking started
2021-03-11 11:34:49,779 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            Kla8().prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:49,782 [main:103] - replacing (" has state-machine ", String)
2021-03-11 11:34:49,782 [main:38] - replacing " has state-machine " String
2021-03-11 11:34:49,782 [main:42] - Getting value of type String
2021-03-11 11:34:49,907 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:49,914 [main:46] - GENERATED VALUE OF TYPE String = "dzkzo"
2021-03-11 11:34:49,914 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:49,927 [main:55] - randomType = UByte
2021-03-11 11:34:50,055 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:50,093 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:34:50,221 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:50,228 [main:66] - Generated call from random type = (12.toUByte()).toString(2141532041)
2021-03-11 11:34:50,229 [main:94] - GETTING String from Any
2021-03-11 11:34:50,233 [main:94] - GETTING String from ULong
2021-03-11 11:34:50,260 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:34:50,260 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:34:50,260 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:34:50,388 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:50,395 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(509557097)
2021-03-11 11:34:50,395 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:34:50,395 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:34:50,522 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:50,529 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:34:50,656 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:50,662 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(75.toUByte()).toString(449174936)
2021-03-11 11:34:50,662 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:34:50,662 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:34:50,662 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:34:50,792 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:50,798 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(-1357334232)
2021-03-11 11:34:50,798 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:34:50,799 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:34:50,799 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:34:50,928 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:50,935 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(377526808)
2021-03-11 11:34:50,935 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:34:50,935 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:34:50,935 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:34:51,065 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:51,071 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(-1032751798)
2021-03-11 11:34:51,071 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:34:51,071 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:34:51,071 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:34:51,200 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:51,207 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(2107035927)
2021-03-11 11:34:51,207 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:34:51,207 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:34:51,207 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:34:51,343 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:51,349 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(-796008261)
2021-03-11 11:34:51,349 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:34:51,350 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:34:51,478 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:51,485 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(-1816363098)
2021-03-11 11:34:51,485 [main:110] - replacement of " has state-machine " of type String is ((6516632970651683513.toULong())).toUInt().toString(2107035927)
2021-03-11 11:34:51,612 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:51,613 [main:66] - Compilation checking started
2021-03-11 11:34:52,038 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + ((6516632970651683513.toULong())).toUInt().toString(2107035927) +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:52,041 [main:103] - replacing (1, Int)
2021-03-11 11:34:52,041 [main:38] - replacing 1 Int
2021-03-11 11:34:52,041 [main:42] - Getting value of type Int
2021-03-11 11:34:52,218 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:52,224 [main:46] - GENERATED VALUE OF TYPE Int = -990097657
2021-03-11 11:34:52,224 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:52,404 [main:55] - randomType = Short
2021-03-11 11:34:52,535 [main:302] - generating value of type = Short true depth = 0
2021-03-11 11:34:52,582 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4fd9603f]
2021-03-11 11:34:52,582 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50274fbd]
2021-03-11 11:34:52,710 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:52,717 [main:66] - Generated call from random type = (-19885).toInt().or(-1258301374)
2021-03-11 11:34:52,717 [main:110] - replacement of 1 of type Int is (-19885).toInt().or(-1258301374)
2021-03-11 11:34:52,845 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:52,846 [main:66] - Compilation checking started
2021-03-11 11:34:53,276 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = (-19885).toInt().or(-1258301374),
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:53,279 [main:103] - replacing (i8, Int)
2021-03-11 11:34:53,279 [main:38] - replacing i8 Int
2021-03-11 11:34:53,279 [main:42] - Getting value of type Int
2021-03-11 11:34:53,402 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:53,408 [main:46] - GENERATED VALUE OF TYPE Int = 1449388277
2021-03-11 11:34:53,409 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:53,422 [main:55] - randomType = UByte
2021-03-11 11:34:53,553 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:53,594 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@107deeb1]
2021-03-11 11:34:53,594 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34ff6543]
2021-03-11 11:34:53,595 [main:66] - Generated call from random type = (53.toUByte()).toByte().countLeadingZeroBits()
2021-03-11 11:34:53,595 [main:94] - GETTING Int from ULong
2021-03-11 11:34:53,622 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5c3bb402]]
2021-03-11 11:34:53,622 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:34:53,622 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5c3bb402]
2021-03-11 11:34:53,748 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:53,755 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().rem(99)
2021-03-11 11:34:53,755 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@16a81431]]
2021-03-11 11:34:53,755 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:34:53,755 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@16a81431]
2021-03-11 11:34:53,755 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().toInt()
2021-03-11 11:34:53,755 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@44a6b9bf]]
2021-03-11 11:34:53,755 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:34:53,755 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@44a6b9bf]
2021-03-11 11:34:53,882 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:53,888 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().minus(120)
2021-03-11 11:34:53,888 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]]
2021-03-11 11:34:53,888 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:34:53,888 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]
2021-03-11 11:34:53,888 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toInt()
2021-03-11 11:34:53,888 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6b6a3486]]
2021-03-11 11:34:53,888 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:34:53,889 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6b6a3486]
2021-03-11 11:34:53,889 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().countLeadingZeroBits()
2021-03-11 11:34:53,889 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34bc32be]]
2021-03-11 11:34:53,889 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:34:53,889 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@34bc32be]
2021-03-11 11:34:53,889 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().countOneBits()
2021-03-11 11:34:53,889 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]]
2021-03-11 11:34:53,889 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:34:53,889 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]
2021-03-11 11:34:54,019 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:54,026 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().compareTo(82)
2021-03-11 11:34:54,026 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:34:54,026 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:34:54,153 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:54,160 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:34:54,285 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:54,292 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(82.toUByte()).ushr(1318251341)
2021-03-11 11:34:54,292 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]]
2021-03-11 11:34:54,292 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:34:54,292 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]
2021-03-11 11:34:54,292 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().countTrailingZeroBits()
2021-03-11 11:34:54,292 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]]
2021-03-11 11:34:54,292 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:34:54,292 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]
2021-03-11 11:34:54,292 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().unaryPlus()
2021-03-11 11:34:54,292 [main:110] - replacement of i8 of type Int is (6516632970651683513.toULong()).compareTo(82.toUByte()).ushr(1318251341)
2021-03-11 11:34:54,416 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:54,416 [main:66] - Compilation checking started
2021-03-11 11:34:54,837 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + (6516632970651683513.toULong()).compareTo(82.toUByte()).ushr(1318251341) + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:54,840 [main:103] - replacing (1, Int)
2021-03-11 11:34:54,841 [main:38] - replacing 1 Int
2021-03-11 11:34:54,841 [main:42] - Getting value of type Int
2021-03-11 11:34:54,966 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:54,972 [main:46] - GENERATED VALUE OF TYPE Int = -775185656
2021-03-11 11:34:54,972 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:54,986 [main:55] - randomType = String
2021-03-11 11:34:55,113 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:34:55,139 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:34:55,266 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:55,396 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:55,402 [main:137] - GENERATING call of type public fun kotlin.CharSequence.indexOfAny(chars: kotlin.CharArray, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4136631b]
2021-03-11 11:34:55,528 [main:302] - generating value of type = CharArray false depth = 0
2021-03-11 11:34:55,667 [main:43] - GENERATING CALL OF fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-11 11:34:55,674 [main:61] - WITHOUT TYPE PARAMS = fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-11 11:34:55,823 [main:302] - generating value of type = Char true depth = 3
2021-03-11 11:34:55,831 [main:95] - GENERATED = charArrayOf('쨉')
2021-03-11 11:34:55,958 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:56,094 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:34:56,100 [main:66] - Generated call from random type = ("vwpbh").subSequence(-255394065, 349707067).indexOfAny(charArrayOf('쨉'), -1701376499, true)
2021-03-11 11:34:56,101 [main:94] - GETTING Int from ULong
2021-03-11 11:34:56,128 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42411fed]]
2021-03-11 11:34:56,128 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:34:56,259 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:56,266 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42411fed]
2021-03-11 11:34:56,393 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:56,400 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(74.toUByte()).shr(1990466852)
2021-03-11 11:34:56,400 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]]
2021-03-11 11:34:56,400 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:34:56,527 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:56,533 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6e997547]
2021-03-11 11:34:56,663 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:56,669 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(24.toUByte()).coerceAtMost(-1224163377)
2021-03-11 11:34:56,670 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]]
2021-03-11 11:34:56,670 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:34:56,670 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]
2021-03-11 11:34:56,796 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:34:56,803 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().plus(-71)
2021-03-11 11:34:56,803 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 11:34:56,803 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:34:56,803 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 11:34:56,803 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().countOneBits()
2021-03-11 11:34:56,803 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]]
2021-03-11 11:34:56,803 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:34:56,930 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:56,936 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@71f83fd1]
2021-03-11 11:34:57,062 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:57,068 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(77.toUByte()).and(-674745265)
2021-03-11 11:34:57,069 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5a0be3d0]]
2021-03-11 11:34:57,069 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:34:57,069 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5a0be3d0]
2021-03-11 11:34:57,069 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().countTrailingZeroBits()
2021-03-11 11:34:57,069 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]]
2021-03-11 11:34:57,069 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:34:57,069 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:34:57,195 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:57,201 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().compareTo(90.toUByte())
2021-03-11 11:34:57,202 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:34:57,202 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:34:57,328 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:57,335 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:34:57,511 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:57,518 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(85.toUByte()).shl(-1339240025)
2021-03-11 11:34:57,518 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]]
2021-03-11 11:34:57,518 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:34:57,646 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:34:57,653 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(49.toUByte())
2021-03-11 11:34:57,653 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4305d2ec]]
2021-03-11 11:34:57,653 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:34:57,653 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4305d2ec]
2021-03-11 11:34:57,653 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toInt()
2021-03-11 11:34:57,653 [main:110] - replacement of 1 of type Int is (6516632970651683513.toULong()).toShort().plus(-71)
2021-03-11 11:34:57,782 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:34:57,782 [main:66] - Compilation checking started
2021-03-11 11:34:58,234 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = (6516632970651683513.toULong()).toShort().plus(-71),
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:58,237 [main:103] - replacing (prope3.getOrThrow(), Any?)
2021-03-11 11:34:58,237 [main:38] - replacing prope3.getOrThrow() Any?
2021-03-11 11:34:58,237 [main:42] - Getting value of type Any?
2021-03-11 11:34:58,360 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:34:58,360 [main:46] - GENERATED VALUE OF TYPE Any? = "myrmi"
2021-03-11 11:34:58,361 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:58,538 [main:55] - randomType = Double
2021-03-11 11:34:58,668 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:34:58,713 [main:94] - GETTING Any? from String
2021-03-11 11:34:58,735 [main:94] - GETTING Any? from ULong
2021-03-11 11:34:58,764 [main:94] - GETTING Any? from ULong
2021-03-11 11:34:58,766 [main:94] - GETTING Any? from UByte
2021-03-11 11:34:58,794 [main:94] - GETTING Any? from Function0<String>
2021-03-11 11:34:58,804 [main:94] - GETTING Any? from Any
2021-03-11 11:34:58,807 [main:110] - replacement of prope3.getOrThrow() of type Any? is l
2021-03-11 11:34:58,935 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 11:34:58,935 [main:66] - Compilation checking started
2021-03-11 11:34:59,354 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = l
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:34:59,357 [main:103] - replacing (1, Int)
2021-03-11 11:34:59,358 [main:38] - replacing 1 Int
2021-03-11 11:34:59,358 [main:42] - Getting value of type Int
2021-03-11 11:34:59,483 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:34:59,489 [main:46] - GENERATED VALUE OF TYPE Int = 1148420750
2021-03-11 11:34:59,490 [main:49] - GENERATED IS CALL =false
2021-03-11 11:34:59,836 [main:55] - randomType = Double?
2021-03-11 11:34:59,964 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:35:00,032 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5076da27]
2021-03-11 11:35:00,032 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3ba31af9]
2021-03-11 11:35:00,032 [main:66] - Generated call from random type = (0.033050748992569434)?.toDouble().toInt()
2021-03-11 11:35:00,033 [main:94] - GETTING Int from UByte
2021-03-11 11:35:00,072 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]]
2021-03-11 11:35:00,072 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]
2021-03-11 11:35:00,073 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).countLeadingZeroBits()
2021-03-11 11:35:00,073 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@15a75f79]]
2021-03-11 11:35:00,073 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:35:00,073 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@15a75f79]
2021-03-11 11:35:00,073 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().countTrailingZeroBits()
2021-03-11 11:35:00,073 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7adb8d6f]]
2021-03-11 11:35:00,073 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:35:00,073 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7adb8d6f]
2021-03-11 11:35:00,073 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().toInt()
2021-03-11 11:35:00,074 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]]
2021-03-11 11:35:00,074 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:35:00,203 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:00,209 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]
2021-03-11 11:35:00,336 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:35:00,342 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(17.toUByte()).minus(44)
2021-03-11 11:35:00,342 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]]
2021-03-11 11:35:00,342 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:35:00,471 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:00,478 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]
2021-03-11 11:35:00,478 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(41.toUByte()).unaryPlus()
2021-03-11 11:35:00,478 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:35:00,479 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:35:00,606 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:00,613 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:35:00,743 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:00,749 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(109.toUByte()).ushr(-1525761355)
2021-03-11 11:35:00,749 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]]
2021-03-11 11:35:00,749 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:35:00,749 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@451e5f57]
2021-03-11 11:35:00,749 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().toInt()
2021-03-11 11:35:00,750 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:35:00,750 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:35:00,875 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:00,882 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:35:01,016 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:01,022 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(28.toUByte()).shl(1693967239)
2021-03-11 11:35:01,023 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@454bc819]]
2021-03-11 11:35:01,023 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@454bc819]
2021-03-11 11:35:01,023 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).countTrailingZeroBits()
2021-03-11 11:35:01,023 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]]
2021-03-11 11:35:01,023 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:35:01,162 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:01,168 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]
2021-03-11 11:35:01,168 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(123.toUByte()).toInt()
2021-03-11 11:35:01,168 [main:110] - replacement of 1 of type Int is ((6516632970651683513.toULong()).toUByte()).compareTo(28.toUByte()).shl(1693967239)
2021-03-11 11:35:01,295 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:01,295 [main:66] - Compilation checking started
2021-03-11 11:35:01,724 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = ((6516632970651683513.toULong()).toUByte()).compareTo(28.toUByte()).shl(1693967239),
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:01,727 [main:103] - replacing (i12, Int)
2021-03-11 11:35:01,727 [main:38] - replacing i12 Int
2021-03-11 11:35:01,727 [main:42] - Getting value of type Int
2021-03-11 11:35:01,860 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:01,866 [main:46] - GENERATED VALUE OF TYPE Int = -277504609
2021-03-11 11:35:01,866 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:01,892 [main:55] - randomType = Kla7
2021-03-11 11:35:02,019 [main:302] - generating value of type = Kla7 false depth = 0
2021-03-11 11:35:02,026 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}
2021-03-11 11:35:02,031 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla7[DeserializedSimpleFunctionDescriptor@4679405]
2021-03-11 11:35:02,159 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:02,159 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:35:02,283 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:02,290 [main:66] - Generated call from random type = (Kla7()).equals("xvvya").compareTo(false)
2021-03-11 11:35:02,291 [main:94] - GETTING Int from String
2021-03-11 11:35:02,316 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@45a13ace]]
2021-03-11 11:35:02,316 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:35:02,442 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:02,448 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@45a13ace]
2021-03-11 11:35:02,579 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:35:02,586 [main:105] - GENERATED CALL = (Kla1().prope0).get(-798394479).minus('ꀰ')
2021-03-11 11:35:02,586 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.count(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@341cd084]]
2021-03-11 11:35:02,586 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:35:02,712 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:02,842 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:02,899 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.count(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@341cd084]
2021-03-11 11:35:02,899 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(728978542, 544326063).count()
2021-03-11 11:35:02,899 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:35:02,899 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:35:02,899 [main:105] - GENERATED CALL = (Kla1().prope0).length.inc()
2021-03-11 11:35:02,899 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public inline fun kotlin.CharSequence.indexOfFirst(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7255d6b3]]
2021-03-11 11:35:02,899 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:35:03,029 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:03,163 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:03,169 [main:137] - GENERATING call of type public inline fun kotlin.CharSequence.indexOfFirst(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7255d6b3]
2021-03-11 11:35:03,299 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:35:03,306 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:35:03,313 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(963470882, 957203061).indexOfFirst({a: Char -> true})
2021-03-11 11:35:03,313 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@25463407]]
2021-03-11 11:35:03,313 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@25463407]
2021-03-11 11:35:03,438 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:03,445 [main:105] - GENERATED CALL = (Kla1().prope0).length.xor(785631708)
2021-03-11 11:35:03,445 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]]
2021-03-11 11:35:03,445 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]
2021-03-11 11:35:03,445 [main:105] - GENERATED CALL = (Kla1().prope0).length.inv()
2021-03-11 11:35:03,445 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]]
2021-03-11 11:35:03,445 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:35:03,573 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:03,579 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@e85a71b]
2021-03-11 11:35:03,704 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:03,711 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("rvdmx").shl(-1692605275)
2021-03-11 11:35:03,711 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:35:03,711 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:35:03,837 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:03,844 [main:105] - GENERATED CALL = (Kla1().prope0).length.ushr(281062261)
2021-03-11 11:35:03,844 [main:101] - Case = [public val kotlin.CharSequence.lastIndex: kotlin.Int defined in kotlin.text[DeserializedPropertyDescriptor@4fba6ff1]]
2021-03-11 11:35:03,844 [main:105] - GENERATED CALL = (Kla1().prope0).lastIndex
2021-03-11 11:35:03,844 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]]
2021-03-11 11:35:03,844 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:35:03,972 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:03,980 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]
2021-03-11 11:35:04,106 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:35:04,113 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("mvnmo").rem(-29)
2021-03-11 11:35:04,113 [main:110] - replacement of i12 of type Int is (Kla1().prope0).length.inv()
2021-03-11 11:35:04,246 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:04,247 [main:66] - Compilation checking started
2021-03-11 11:35:04,667 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + (Kla1().prope0).length.inv() + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:04,670 [main:103] - replacing (prope5, Int)
2021-03-11 11:35:04,670 [main:38] - replacing prope5 Int
2021-03-11 11:35:04,670 [main:42] - Getting value of type Int
2021-03-11 11:35:04,795 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:04,801 [main:46] - GENERATED VALUE OF TYPE Int = -1963004279
2021-03-11 11:35:04,801 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:05,159 [main:55] - randomType = UShort?
2021-03-11 11:35:05,285 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 11:35:05,329 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline infix fun and(other: kotlin.UShort): kotlin.UShort defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@3f55f8ab]
2021-03-11 11:35:05,453 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 11:35:05,461 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]
2021-03-11 11:35:05,461 [main:66] - Generated call from random type = (6196.toUShort())?.and(7740.toUShort()).countTrailingZeroBits()
2021-03-11 11:35:05,462 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:35:05,473 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:35:05,473 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:05,473 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:35:05,473 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:35:05,473 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:35:05,473 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:05,474 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:35:05,601 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:05,738 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:05,745 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("jlcrg", false)
2021-03-11 11:35:05,746 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:35:05,746 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:35:05,871 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:05,871 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:35:06,000 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:06,007 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("mstaz").compareTo(true)
2021-03-11 11:35:06,007 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:35:06,007 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:06,007 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:35:06,007 [main:110] - replacement of prope5 of type Int is (6196.toUShort())?.and(7740.toUShort()).countTrailingZeroBits()
2021-03-11 11:35:06,132 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:06,133 [main:66] - Compilation checking started
2021-03-11 11:35:06,553 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + (6196.toUShort())?.and(7740.toUShort()).countTrailingZeroBits())
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:06,556 [main:103] - replacing (false, Boolean)
2021-03-11 11:35:06,556 [main:38] - replacing false Boolean
2021-03-11 11:35:06,556 [main:42] - Getting value of type Boolean
2021-03-11 11:35:06,687 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:06,694 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:35:06,695 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:06,708 [main:55] - randomType = UByte
2021-03-11 11:35:06,834 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:06,872 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@20b5e685]
2021-03-11 11:35:06,998 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:06,999 [main:66] - Generated call from random type = (121.toUByte()).equals("tobxm")
2021-03-11 11:35:07,000 [main:94] - GETTING Boolean from ULong
2021-03-11 11:35:07,025 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:35:07,025 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:35:07,169 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:07,170 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:35:07,303 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:07,304 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("vsqxh").equals("qkfbh")
2021-03-11 11:35:07,304 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]]
2021-03-11 11:35:07,304 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:35:07,428 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:07,429 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("btniz")
2021-03-11 11:35:07,429 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]]
2021-03-11 11:35:07,429 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:35:07,429 [main:137] - GENERATING call of type public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]
2021-03-11 11:35:07,429 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().isInfinite()
2021-03-11 11:35:07,429 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]]
2021-03-11 11:35:07,429 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:35:07,429 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]
2021-03-11 11:35:07,555 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:07,555 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().equals("kpmuu")
2021-03-11 11:35:07,555 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]]
2021-03-11 11:35:07,555 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:35:07,555 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:35:07,682 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:07,682 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().equals("guqer")
2021-03-11 11:35:07,682 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]]
2021-03-11 11:35:07,682 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:35:07,682 [main:137] - GENERATING call of type public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]
2021-03-11 11:35:07,682 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().isFinite()
2021-03-11 11:35:07,682 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]]
2021-03-11 11:35:07,682 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:35:07,682 [main:137] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]
2021-03-11 11:35:07,682 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().isInfinite()
2021-03-11 11:35:07,683 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]]
2021-03-11 11:35:07,683 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:35:07,812 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:07,818 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]
2021-03-11 11:35:07,946 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:07,947 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(118.toUByte()).equals("cyiog")
2021-03-11 11:35:07,947 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6b337e18]]
2021-03-11 11:35:07,947 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:35:07,947 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6b337e18]
2021-03-11 11:35:08,075 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().equals(null)
2021-03-11 11:35:08,075 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:35:08,075 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:35:08,204 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:08,204 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:35:08,382 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:08,389 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("ggfzx").xor(false)
2021-03-11 11:35:08,389 [main:110] - replacement of false of type Boolean is ((6516632970651683513.toULong())).compareTo(118.toUByte()).equals("cyiog")
2021-03-11 11:35:08,515 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:08,516 [main:66] - Compilation checking started
2021-03-11 11:35:08,945 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = ((6516632970651683513.toULong())).compareTo(118.toUByte()).equals("cyiog")

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:08,948 [main:103] - replacing (true, Boolean)
2021-03-11 11:35:08,948 [main:38] - replacing true Boolean
2021-03-11 11:35:08,948 [main:42] - Getting value of type Boolean
2021-03-11 11:35:09,079 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:09,085 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:35:09,086 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:10,039 [main:55] - randomType = Array<Function1<HashSet<UInt?>, Int>>
2021-03-11 11:35:10,166 [main:302] - generating value of type = Array<Function1<HashSet<UInt?>, Int>> false depth = 0
2021-03-11 11:35:10,305 [main:43] - GENERATING CALL OF fun <T> arrayOfNulls(size: kotlin.Int): Array<Function1<HashSet<UInt?>, Int>> = TODO()
2021-03-11 11:35:10,313 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOfNulls(size: kotlin.Int): Array<Function1<HashSet<UInt?>, Int>> = TODO()
2021-03-11 11:35:10,649 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:35:10,656 [main:95] - GENERATED = arrayOfNulls<Function1<HashSet<UInt?>, Int>>(-298560759)
2021-03-11 11:35:10,681 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Array<*>?.isNullOrEmpty(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@22822577]
2021-03-11 11:35:10,681 [main:66] - Generated call from random type = (arrayOfNulls<Function1<HashSet<UInt?>, Int>>(-298560759)).isNullOrEmpty()
2021-03-11 11:35:10,682 [main:94] - GETTING Boolean from ULong
2021-03-11 11:35:10,709 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@52eed0c4]]
2021-03-11 11:35:10,709 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:35:10,709 [main:137] - GENERATING call of type public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@52eed0c4]
2021-03-11 11:35:10,709 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().isNaN()
2021-03-11 11:35:10,709 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@773e50e5]]
2021-03-11 11:35:10,710 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:35:10,710 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@773e50e5]
2021-03-11 11:35:10,836 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:10,836 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().equals("yflfq")
2021-03-11 11:35:10,836 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]]
2021-03-11 11:35:10,836 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:35:10,836 [main:137] - GENERATING call of type public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@aa0aa6]
2021-03-11 11:35:10,836 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().isNaN()
2021-03-11 11:35:10,836 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]]
2021-03-11 11:35:10,836 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:35:10,836 [main:137] - GENERATING call of type public fun kotlin.Float.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@6e37943b]
2021-03-11 11:35:10,837 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().isFinite()
2021-03-11 11:35:10,837 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]]
2021-03-11 11:35:10,837 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:35:10,837 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@377b590]
2021-03-11 11:35:10,965 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:10,965 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().equals("jgtay")
2021-03-11 11:35:10,965 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]]
2021-03-11 11:35:10,965 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:35:10,965 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]
2021-03-11 11:35:10,966 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().isFinite()
2021-03-11 11:35:10,966 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]]
2021-03-11 11:35:10,966 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:35:11,096 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:11,102 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@638f22cc]
2021-03-11 11:35:11,229 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:11,229 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(98.toUByte()).equals("gybkj")
2021-03-11 11:35:11,229 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:35:11,229 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@fe44817]
2021-03-11 11:35:11,355 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:11,356 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:35:11,489 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:11,497 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).equals("iejjc").xor(false)
2021-03-11 11:35:11,498 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]]
2021-03-11 11:35:11,498 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:35:11,498 [main:137] - GENERATING call of type public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]
2021-03-11 11:35:11,498 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().isInfinite()
2021-03-11 11:35:11,498 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]]
2021-03-11 11:35:11,498 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:35:11,498 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]
2021-03-11 11:35:11,632 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:11,632 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toFloat().equals("neddg")
2021-03-11 11:35:11,632 [main:110] - replacement of true of type Boolean is ((6516632970651683513.toULong())).toDouble().isFinite()
2021-03-11 11:35:11,756 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:11,757 [main:66] - Compilation checking started
2021-03-11 11:35:12,179 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = ((6516632970651683513.toULong())).toDouble().isFinite()
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:12,182 [main:103] - replacing (EmptyCoroutineContext, EmptyCoroutineContext)
2021-03-11 11:35:12,182 [main:38] - replacing EmptyCoroutineContext EmptyCoroutineContext
2021-03-11 11:35:12,182 [main:42] - Getting value of type EmptyCoroutineContext
2021-03-11 11:35:12,312 [main:302] - generating value of type = EmptyCoroutineContext false depth = 0
2021-03-11 11:35:12,321 [main:46] - GENERATED VALUE OF TYPE EmptyCoroutineContext = 
2021-03-11 11:35:12,497 [main:55] - randomType = Short
2021-03-11 11:35:12,630 [main:302] - generating value of type = Short true depth = 0
2021-03-11 11:35:12,674 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:35:12,703 [main:94] - GETTING EmptyCoroutineContext from String
2021-03-11 11:35:12,725 [main:94] - GETTING EmptyCoroutineContext from UByte
2021-03-11 11:35:12,750 [main:94] - GETTING EmptyCoroutineContext from Function0<String>
2021-03-11 11:35:12,764 [main:94] - GETTING EmptyCoroutineContext from Any
2021-03-11 11:35:12,767 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:35:12,767 [main:107] - Cant find and generate replacement for EmptyCoroutineContext type EmptyCoroutineContext
2021-03-11 11:35:12,767 [main:103] - replacing ("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i, String)
2021-03-11 11:35:12,767 [main:38] - replacing "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i String
2021-03-11 11:35:12,767 [main:42] - Getting value of type String
2021-03-11 11:35:12,899 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:12,905 [main:46] - GENERATED VALUE OF TYPE String = "jaiye"
2021-03-11 11:35:12,905 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:13,084 [main:55] - randomType = Char
2021-03-11 11:35:13,211 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:35:13,237 [main:137] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@dae0597]
2021-03-11 11:35:13,237 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:35:13,368 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:13,375 [main:66] - Generated call from random type = ('㫈').toLong().toString(-1998392248)
2021-03-11 11:35:13,376 [main:94] - GETTING String from Function0<String>
2021-03-11 11:35:13,386 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]]
2021-03-11 11:35:13,386 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:13,386 [main:137] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]
2021-03-11 11:35:13,513 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:13,654 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:35:13,661 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().padStart(2042786056, '槊')
2021-03-11 11:35:13,661 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9b6dfe8]]
2021-03-11 11:35:13,661 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:13,661 [main:137] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9b6dfe8]
2021-03-11 11:35:13,793 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:13,800 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceIndent("grbyy")
2021-03-11 11:35:13,801 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]]
2021-03-11 11:35:13,801 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:13,801 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b5e1119]
2021-03-11 11:35:13,801 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().uppercase()
2021-03-11 11:35:13,801 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]]
2021-03-11 11:35:13,801 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:13,801 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]
2021-03-11 11:35:13,801 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().reversed()
2021-03-11 11:35:13,801 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6acbc1b7]]
2021-03-11 11:35:13,801 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:13,801 [main:137] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6acbc1b7]
2021-03-11 11:35:13,980 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:35:14,122 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 11:35:14,131 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 11:35:14,467 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 11:35:14,606 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:35:14,613 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:35:14,961 [main:302] - generating value of type = Int true depth = 6
2021-03-11 11:35:14,968 [main:95] - GENERATED = StringBuilder(-1081065372)
2021-03-11 11:35:14,968 [main:95] - GENERATED = StringBuilder(StringBuilder(-1081065372))
2021-03-11 11:35:14,968 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().removeSurrounding(StringBuilder(StringBuilder(-1081065372)))
2021-03-11 11:35:14,968 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]]
2021-03-11 11:35:14,968 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:14,968 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke()
2021-03-11 11:35:14,969 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60231eda]]
2021-03-11 11:35:14,969 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:14,969 [main:137] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60231eda]
2021-03-11 11:35:15,099 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:15,106 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimMargin("thght")
2021-03-11 11:35:15,107 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]]
2021-03-11 11:35:15,107 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:15,107 [main:137] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]
2021-03-11 11:35:15,231 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-11 11:35:15,238 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:35:15,245 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().filterIndexed({a: Int, b: Char -> false})
2021-03-11 11:35:15,245 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]]
2021-03-11 11:35:15,245 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:15,246 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]
2021-03-11 11:35:15,374 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-11 11:35:15,520 [main:43] - GENERATING CALL OF fun <T> setOf(element: Int): Iterable<Int> = TODO()
2021-03-11 11:35:15,529 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOf(element: Int): Iterable<Int> = TODO()
2021-03-11 11:35:15,695 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:35:15,701 [main:95] - GENERATED = setOf<Int>(457282354)
2021-03-11 11:35:15,701 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().slice(setOf<Int>(457282354))
2021-03-11 11:35:15,701 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]]
2021-03-11 11:35:15,701 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:15,701 [main:137] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]
2021-03-11 11:35:15,702 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimIndent()
2021-03-11 11:35:15,702 [main:110] - replacement of "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i of type String is (Kla0({ "hxtps"}).callback).invoke().replaceIndent("grbyy")
2021-03-11 11:35:15,831 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:15,832 [main:66] - Compilation checking started
2021-03-11 11:35:16,250 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error((Kla0({ "hxtps"}).callback).invoke().replaceIndent("grbyy") + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:16,253 [main:103] - replacing (this.prope3, Any?)
2021-03-11 11:35:16,253 [main:38] - replacing this.prope3 Any?
2021-03-11 11:35:16,253 [main:42] - Getting value of type Any?
2021-03-11 11:35:16,382 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:16,382 [main:46] - GENERATED VALUE OF TYPE Any? = "vunfo"
2021-03-11 11:35:16,382 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:16,571 [main:55] - randomType = Kla9
2021-03-11 11:35:16,700 [main:302] - generating value of type = Kla9 false depth = 0
2021-03-11 11:35:16,706 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:35:16,736 [main:94] - GETTING Any? from ULong
2021-03-11 11:35:16,761 [main:94] - GETTING Any? from Any
2021-03-11 11:35:16,766 [main:110] - replacement of this.prope3 of type Any? is "vunfo"
2021-03-11 11:35:16,888 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 11:35:16,888 [main:66] - Compilation checking started
2021-03-11 11:35:17,303 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
"vunfo" = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:17,306 [main:103] - replacing (i10, Int)
2021-03-11 11:35:17,307 [main:38] - replacing i10 Int
2021-03-11 11:35:17,307 [main:42] - Getting value of type Int
2021-03-11 11:35:17,433 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:17,440 [main:46] - GENERATED VALUE OF TYPE Int = -4634666
2021-03-11 11:35:17,440 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:17,453 [main:55] - randomType = Long
2021-03-11 11:35:17,581 [main:302] - generating value of type = Long true depth = 0
2021-03-11 11:35:17,629 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4fd9603f]
2021-03-11 11:35:17,630 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@66682ea9]
2021-03-11 11:35:17,630 [main:66] - Generated call from random type = (-7630247984888078661).toInt().takeHighestOneBit()
2021-03-11 11:35:17,631 [main:94] - GETTING Int from UByte
2021-03-11 11:35:17,658 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@76b82e74]]
2021-03-11 11:35:17,659 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@76b82e74]
2021-03-11 11:35:17,659 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toInt()
2021-03-11 11:35:17,659 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]]
2021-03-11 11:35:17,659 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:35:17,659 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]
2021-03-11 11:35:17,659 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().unaryPlus()
2021-03-11 11:35:17,659 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]]
2021-03-11 11:35:17,659 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:35:17,786 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:17,793 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18f38d7a]
2021-03-11 11:35:17,793 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(23.toUByte()).inv()
2021-03-11 11:35:17,793 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]]
2021-03-11 11:35:17,793 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:35:17,793 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 11:35:17,793 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().countOneBits()
2021-03-11 11:35:17,793 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4913ac97]]
2021-03-11 11:35:17,794 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:35:17,794 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4913ac97]
2021-03-11 11:35:17,794 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().countOneBits()
2021-03-11 11:35:17,794 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@66682ea9]]
2021-03-11 11:35:17,794 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:35:17,922 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:17,929 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@66682ea9]
2021-03-11 11:35:17,930 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(76.toUByte()).takeHighestOneBit()
2021-03-11 11:35:17,930 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]]
2021-03-11 11:35:17,930 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:35:17,930 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@204f4880]
2021-03-11 11:35:18,053 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:35:18,060 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().plus(24)
2021-03-11 11:35:18,060 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]]
2021-03-11 11:35:18,060 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:35:18,060 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]
2021-03-11 11:35:18,187 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:35:18,193 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().compareTo(-97)
2021-03-11 11:35:18,193 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]]
2021-03-11 11:35:18,194 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:35:18,326 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:18,332 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]
2021-03-11 11:35:18,463 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:18,469 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(9.toUByte()).rotateLeft(-1446499327)
2021-03-11 11:35:18,469 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]]
2021-03-11 11:35:18,470 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:35:18,470 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@153e6276]
2021-03-11 11:35:18,599 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:35:18,605 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().minus(-45)
2021-03-11 11:35:18,605 [main:110] - replacement of i10 of type Int is ((6516632970651683513.toULong()).toUByte()).toShort().compareTo(-97)
2021-03-11 11:35:18,732 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:18,732 [main:66] - Compilation checking started
2021-03-11 11:35:19,154 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + ((6516632970651683513.toULong()).toUByte()).toShort().compareTo(-97) + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:19,157 [main:103] - replacing (!prope6, Boolean)
2021-03-11 11:35:19,158 [main:38] - replacing !prope6 Boolean
2021-03-11 11:35:19,158 [main:42] - Getting value of type Boolean
2021-03-11 11:35:19,284 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:19,291 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:35:19,291 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:19,551 [main:55] - randomType = Kla4?
2021-03-11 11:35:19,679 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 11:35:19,686 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}
2021-03-11 11:35:19,813 [main:194] - Type params = []
2021-03-11 11:35:19,941 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-11 11:35:20,080 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:20,087 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:20,441 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-11 11:35:20,592 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:35:20,600 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:35:21,151 [main:302] - generating value of type = Key<AbstractCoroutineContextElement> false depth = 8
2021-03-11 11:35:21,301 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:35:21,309 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:35:21,861 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->AbstractCoroutineContextElement): Key<AbstractCoroutineContextElement> = TODO()
2021-03-11 11:35:21,861 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<AbstractCoroutineContextElement>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:35:21,861 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:21,876 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla4[DeserializedSimpleFunctionDescriptor@288a5601]
2021-03-11 11:35:22,003 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:22,004 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:35:22,133 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:22,139 [main:66] - Generated call from random type = (Kla4())?.equals("ugpup").xor(true)
2021-03-11 11:35:22,141 [main:94] - GETTING Boolean from Any
2021-03-11 11:35:22,147 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:35:22,147 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:35:22,274 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:22,274 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:35:22,404 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:22,410 [main:105] - GENERATED CALL = (l).equals("czvif").and(false)
2021-03-11 11:35:22,410 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]]
2021-03-11 11:35:22,410 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:35:22,538 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:22,538 [main:105] - GENERATED CALL = (l).equals("uqyzc")
2021-03-11 11:35:22,538 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:35:22,538 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:35:22,666 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:22,666 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:35:22,790 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:22,797 [main:105] - GENERATED CALL = (l).equals("hmvaf").xor(false)
2021-03-11 11:35:22,797 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]]
2021-03-11 11:35:22,797 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:35:22,922 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:22,922 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@67939dd4]
2021-03-11 11:35:23,049 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:23,049 [main:105] - GENERATED CALL = (l).equals("tmmoc").equals("asihb")
2021-03-11 11:35:23,049 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:35:23,049 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:35:23,183 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:35:23,184 [main:105] - GENERATED CALL = (l).equals(null).not()
2021-03-11 11:35:23,184 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:35:23,184 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:35:23,312 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:23,312 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:35:23,440 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:23,446 [main:105] - GENERATED CALL = (l).equals("zklib").or(true)
2021-03-11 11:35:23,446 [main:110] - replacement of !prope6 of type Boolean is (l).equals("czvif").and(false)
2021-03-11 11:35:23,575 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:23,576 [main:66] - Compilation checking started
2021-03-11 11:35:24,003 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && (l).equals("czvif").and(false)) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:24,006 [main:103] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions, String)
2021-03-11 11:35:24,007 [main:38] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions String
2021-03-11 11:35:24,007 [main:42] - Getting value of type String
2021-03-11 11:35:24,134 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:24,141 [main:46] - GENERATED VALUE OF TYPE String = "nrvxs"
2021-03-11 11:35:24,141 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:24,752 [main:55] - randomType = Pair<UByte?, Kla0>?
2021-03-11 11:35:24,878 [main:302] - generating value of type = Pair<UByte?, Kla0> false depth = 0
2021-03-11 11:35:25,015 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: UByte?, second: Kla0): Pair<UByte?, Kla0> = TODO()
2021-03-11 11:35:25,023 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: UByte?, second: Kla0): Pair<UByte?, Kla0> = TODO()
2021-03-11 11:35:25,248 [main:302] - generating value of type = UByte true depth = 3
2021-03-11 11:35:25,255 [main:302] - generating value of type = Kla0 false depth = 3
2021-03-11 11:35:25,262 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:35:25,389 [main:194] - Type params = []
2021-03-11 11:35:25,517 [main:302] - generating value of type = Function0<String> false depth = 5
2021-03-11 11:35:25,524 [main:302] - generating value of type = String true depth = 6
2021-03-11 11:35:25,531 [main:95] - GENERATED = Pair<UByte?, Kla0>(76.toUByte(), Kla0({ "nnovi"}))
2021-03-11 11:35:25,550 [main:94] - GETTING String from String
2021-03-11 11:35:25,570 [main:101] - Case = [public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5109e79f]]
2021-03-11 11:35:25,570 [main:137] - GENERATING call of type public fun kotlin.String.capitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5109e79f]
2021-03-11 11:35:25,570 [main:105] - GENERATED CALL = (Kla1().prope0).capitalize()
2021-03-11 11:35:25,570 [main:101] - Case = [public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]]
2021-03-11 11:35:25,570 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]
2021-03-11 11:35:25,698 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:35:25,833 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:25,969 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:25,976 [main:105] - GENERATED CALL = (Kla1().prope0).replaceAfter('', "vzsel", "finhb")
2021-03-11 11:35:25,976 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6fa9e2e7]]
2021-03-11 11:35:25,976 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:35:26,102 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:26,109 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6fa9e2e7]
2021-03-11 11:35:26,109 [main:105] - GENERATED CALL = (Kla1().prope0).get(-1843059482).titlecase()
2021-03-11 11:35:26,109 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]]
2021-03-11 11:35:26,109 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:35:26,238 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:26,244 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]
2021-03-11 11:35:26,375 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:26,382 [main:105] - GENERATED CALL = (Kla1().prope0).get(-1942931994).plus("bexkn")
2021-03-11 11:35:26,382 [main:101] - Case = [public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1a85e3d9]]
2021-03-11 11:35:26,382 [main:137] - GENERATING call of type public inline fun kotlin.String.dropLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1a85e3d9]
2021-03-11 11:35:26,511 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:35:26,517 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:35:26,527 [main:105] - GENERATED CALL = (Kla1().prope0).dropLastWhile({a: Char -> false})
2021-03-11 11:35:26,528 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replaceFirst(regex: kotlin.text.Regex, replacement: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1a7ba985]]
2021-03-11 11:35:26,528 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:35:26,660 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:26,794 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:26,800 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replaceFirst(regex: kotlin.text.Regex, replacement: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1a7ba985]
2021-03-11 11:35:26,931 [main:302] - generating value of type = Regex false depth = 0
2021-03-11 11:35:27,071 [main:43] - GENERATING CALL OF fun Regex(pattern: kotlin.String, option: kotlin.text.RegexOption): Regex = TODO()
2021-03-11 11:35:27,079 [main:61] - WITHOUT TYPE PARAMS = fun Regex(pattern: kotlin.String, option: kotlin.text.RegexOption): Regex = TODO()
2021-03-11 11:35:27,601 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:35:27,608 [main:302] - generating value of type = RegexOption false depth = 3
2021-03-11 11:35:27,615 [main:95] - GENERATED = Regex("zxttb", kotlin.text.RegexOption.MULTILINE)
2021-03-11 11:35:27,740 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:27,747 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1032233732, 1939933199).replaceFirst(Regex("zxttb", kotlin.text.RegexOption.MULTILINE), "nslfp")
2021-03-11 11:35:27,747 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@512af8db]]
2021-03-11 11:35:27,747 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@512af8db]
2021-03-11 11:35:27,877 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:27,883 [main:105] - GENERATED CALL = (Kla1().prope0).substring(1221859505)
2021-03-11 11:35:27,883 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]]
2021-03-11 11:35:27,883 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@596fa295]
2021-03-11 11:35:27,883 [main:105] - GENERATED CALL = (Kla1().prope0).reversed()
2021-03-11 11:35:27,883 [main:101] - Case = [public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14fa9c18]]
2021-03-11 11:35:27,883 [main:137] - GENERATING call of type public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14fa9c18]
2021-03-11 11:35:28,015 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:35:28,021 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:35:28,028 [main:105] - GENERATED CALL = (Kla1().prope0).filter({a: Char -> true})
2021-03-11 11:35:28,028 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]]
2021-03-11 11:35:28,028 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]
2021-03-11 11:35:28,155 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:28,162 [main:105] - GENERATED CALL = (Kla1().prope0).concat("dglku")
2021-03-11 11:35:28,162 [main:110] - replacement of "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions of type String is (Kla1().prope0).get(-1942931994).plus("bexkn")
2021-03-11 11:35:28,293 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:28,293 [main:66] - Compilation checking started
2021-03-11 11:35:28,752 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error((Kla1().prope0).get(-1942931994).plus("bexkn") + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:28,755 [main:103] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions, String)
2021-03-11 11:35:28,755 [main:38] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions String
2021-03-11 11:35:28,755 [main:42] - Getting value of type String
2021-03-11 11:35:28,884 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:28,891 [main:46] - GENERATED VALUE OF TYPE String = "tbgif"
2021-03-11 11:35:28,891 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:29,692 [main:55] - randomType = Triple<Int, Byte, UShort>
2021-03-11 11:35:29,819 [main:302] - generating value of type = Triple<Int, Byte, UShort> false depth = 0
2021-03-11 11:35:29,959 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Int, second: Byte, third: UShort): Triple<Int, Byte, UShort> = TODO()
2021-03-11 11:35:29,966 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Int, second: Byte, third: UShort): Triple<Int, Byte, UShort> = TODO()
2021-03-11 11:35:30,128 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:35:30,134 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 11:35:30,141 [main:302] - generating value of type = UShort true depth = 3
2021-03-11 11:35:30,147 [main:95] - GENERATED = Triple<Int, Byte, UShort>(-637737598, -95, 3261.toUShort())
2021-03-11 11:35:30,163 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:35:30,299 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:30,307 [main:66] - Generated call from random type = (Triple<Int, Byte, UShort>(-637737598, -95, 3261.toUShort())).second.toString(-356555010)
2021-03-11 11:35:30,308 [main:94] - GETTING String from Any
2021-03-11 11:35:30,315 [main:94] - GETTING String from UByte
2021-03-11 11:35:30,346 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:35:30,346 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:35:30,483 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:30,489 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toString(-210588933)
2021-03-11 11:35:30,489 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:35:30,489 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:35:30,617 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:30,624 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:35:30,750 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:30,757 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(45.toUByte()).toString(2135648136)
2021-03-11 11:35:30,757 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:35:30,757 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:35:30,757 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:35:30,948 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:30,955 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().toString(1318148483)
2021-03-11 11:35:30,955 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:35:30,955 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:35:30,955 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:35:31,084 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:31,091 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().toString(-1194047389)
2021-03-11 11:35:31,091 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:35:31,091 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:35:31,092 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:35:31,218 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:31,226 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().toString(2077436761)
2021-03-11 11:35:31,226 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:35:31,226 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:35:31,226 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:35:31,351 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:31,358 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().toString(-1347889628)
2021-03-11 11:35:31,358 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:35:31,358 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:35:31,485 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:31,491 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:35:31,627 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:31,633 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(3.toUByte()).toString(-2119979253)
2021-03-11 11:35:31,633 [main:110] - replacement of "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions of type String is ((6516632970651683513.toULong()).toUByte()).toByte().toString(1318148483)
2021-03-11 11:35:31,759 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:31,760 [main:66] - Compilation checking started
2021-03-11 11:35:32,185 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error(((6516632970651683513.toULong()).toUByte()).toByte().toString(1318148483) + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:32,187 [main:103] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5, String)
2021-03-11 11:35:32,188 [main:38] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5 String
2021-03-11 11:35:32,188 [main:42] - Getting value of type String
2021-03-11 11:35:32,313 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:32,319 [main:46] - GENERATED VALUE OF TYPE String = "rlihk"
2021-03-11 11:35:32,319 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:32,907 [main:55] - randomType = LinkedHashMap<Double, Kla4>
2021-03-11 11:35:33,032 [main:302] - generating value of type = LinkedHashMap<Double, Kla4> false depth = 0
2021-03-11 11:35:33,176 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<Double, Kla4>): LkedHashMap<Double, Kla4> = TODO()
2021-03-11 11:35:33,184 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<Double, Kla4>): LkedHashMap<Double, Kla4> = TODO()
2021-03-11 11:35:33,339 [main:302] - generating value of type = Pair<Double, Kla4> false depth = 3
2021-03-11 11:35:33,477 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Double, second: Kla4): Pair<Double, Kla4> = TODO()
2021-03-11 11:35:33,484 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Double, second: Kla4): Pair<Double, Kla4> = TODO()
2021-03-11 11:35:33,635 [main:302] - generating value of type = Double true depth = 6
2021-03-11 11:35:33,642 [main:302] - generating value of type = Kla4 false depth = 6
2021-03-11 11:35:33,648 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}
2021-03-11 11:35:33,773 [main:194] - Type params = []
2021-03-11 11:35:33,900 [main:302] - generating value of type = CoroutineContext false depth = 8
2021-03-11 11:35:34,035 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:34,042 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:34,393 [main:302] - generating value of type = Key<*> false depth = 11
2021-03-11 11:35:34,542 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:35:34,549 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:35:35,098 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:35:35,098 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:35,098 [main:95] - GENERATED = Pair<Double, Kla4>(0.8515714402872284, Kla4())
2021-03-11 11:35:35,098 [main:95] - GENERATED = linkedMapOf<Double, Kla4>(Pair<Double, Kla4>(0.8515714402872284, Kla4()))
2021-03-11 11:35:35,232 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:35:35,364 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:35,371 [main:66] - Generated call from random type = (linkedMapOf<Double, Kla4>(Pair<Double, Kla4>(0.8515714402872284, Kla4()))).size.toString(-429694278)
2021-03-11 11:35:35,372 [main:94] - GETTING String from Function0<String>
2021-03-11 11:35:35,384 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]]
2021-03-11 11:35:35,384 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:35,384 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@296a983]
2021-03-11 11:35:35,512 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:35,518 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().concat("ebfkw")
2021-03-11 11:35:35,519 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]]
2021-03-11 11:35:35,519 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:35,519 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@51ad892]
2021-03-11 11:35:35,519 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().lowercase()
2021-03-11 11:35:35,519 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60a5b9e5]]
2021-03-11 11:35:35,519 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:35,519 [main:137] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@60a5b9e5]
2021-03-11 11:35:35,651 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:35:35,658 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:35:35,666 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().takeLastWhile({a: Char -> false})
2021-03-11 11:35:35,666 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]]
2021-03-11 11:35:35,666 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:35,666 [main:137] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]
2021-03-11 11:35:35,800 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:35,806 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().takeLast(994430556)
2021-03-11 11:35:35,806 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4c3dccb7]]
2021-03-11 11:35:35,806 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:35,806 [main:137] - GENERATING call of type public fun kotlin.String.take(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4c3dccb7]
2021-03-11 11:35:35,938 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:35,945 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().take(1660574063)
2021-03-11 11:35:35,945 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@712e8f0]]
2021-03-11 11:35:35,945 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:35,946 [main:137] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@712e8f0]
2021-03-11 11:35:36,068 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:35:36,210 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:35:36,340 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:36,347 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().replaceFirst('Ŷ', '迀', false)
2021-03-11 11:35:36,347 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]]
2021-03-11 11:35:36,347 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:36,347 [main:137] - GENERATING call of type public fun kotlin.String.trimIndent(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@140e61c]
2021-03-11 11:35:36,347 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimIndent()
2021-03-11 11:35:36,347 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]]
2021-03-11 11:35:36,347 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:36,347 [main:137] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]
2021-03-11 11:35:36,474 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-11 11:35:36,480 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:35:36,487 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().filterIndexed({a: Int, b: Char -> true})
2021-03-11 11:35:36,487 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c1014c7]]
2021-03-11 11:35:36,487 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:36,487 [main:137] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c1014c7]
2021-03-11 11:35:36,613 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:36,620 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().dropLast(-2092367143)
2021-03-11 11:35:36,620 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14fa9c18]]
2021-03-11 11:35:36,620 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:36,620 [main:137] - GENERATING call of type public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@14fa9c18]
2021-03-11 11:35:36,809 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:35:36,815 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:35:36,822 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().filter({a: Char -> false})
2021-03-11 11:35:36,823 [main:110] - replacement of "Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5 of type String is (Kla0({ "hxtps"}).callback).invoke().takeLast(994430556)
2021-03-11 11:35:36,948 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:36,948 [main:66] - Compilation checking started
2021-03-11 11:35:37,376 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error((Kla0({ "hxtps"}).callback).invoke().takeLast(994430556))
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:37,380 [main:103] - replacing ("tail-call optimization hit: method " + method + " has no state-machine ", String)
2021-03-11 11:35:37,380 [main:38] - replacing "tail-call optimization hit: method " + method + " has no state-machine " String
2021-03-11 11:35:37,380 [main:42] - Getting value of type String
2021-03-11 11:35:37,508 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:37,515 [main:46] - GENERATED VALUE OF TYPE String = "xjytb"
2021-03-11 11:35:37,515 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:37,702 [main:55] - randomType = Char
2021-03-11 11:35:37,832 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:35:37,867 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6fa9e2e7]
2021-03-11 11:35:37,867 [main:66] - Generated call from random type = ('ﷷ').titlecase()
2021-03-11 11:35:37,868 [main:94] - GETTING String from Function0<String>
2021-03-11 11:35:37,876 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]]
2021-03-11 11:35:37,876 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:37,876 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke()
2021-03-11 11:35:37,877 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]]
2021-03-11 11:35:37,877 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:37,877 [main:137] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@19f62426]
2021-03-11 11:35:38,001 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:38,007 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().takeLast(-2143473099)
2021-03-11 11:35:38,008 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]]
2021-03-11 11:35:38,008 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:38,008 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]
2021-03-11 11:35:38,132 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-11 11:35:38,270 [main:43] - GENERATING CALL OF fun <T> hashSetOf(): Iterable<Int> = TODO()
2021-03-11 11:35:38,280 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(): Iterable<Int> = TODO()
2021-03-11 11:35:38,437 [main:95] - GENERATED = hashSetOf<Int>()
2021-03-11 11:35:38,437 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().slice(hashSetOf<Int>())
2021-03-11 11:35:38,437 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64daa8f3]]
2021-03-11 11:35:38,437 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:38,437 [main:137] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64daa8f3]
2021-03-11 11:35:38,568 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-11 11:35:38,575 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:35:38,584 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().dropWhile({a: Char -> false})
2021-03-11 11:35:38,584 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]]
2021-03-11 11:35:38,584 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:38,584 [main:137] - GENERATING call of type public inline fun kotlin.String.filterIndexed(predicate: (index: kotlin.Int, kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d223039]
2021-03-11 11:35:38,716 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Char, Boolean> false depth = 0
2021-03-11 11:35:38,722 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 11:35:38,729 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().filterIndexed({a: Int, b: Char -> true})
2021-03-11 11:35:38,730 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c1014c7]]
2021-03-11 11:35:38,730 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:38,730 [main:137] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c1014c7]
2021-03-11 11:35:38,862 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:38,869 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().dropLast(1550615426)
2021-03-11 11:35:38,869 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e44f086]]
2021-03-11 11:35:38,869 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:38,869 [main:137] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5e44f086]
2021-03-11 11:35:38,869 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().decapitalize()
2021-03-11 11:35:38,869 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]]
2021-03-11 11:35:38,869 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:38,869 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]
2021-03-11 11:35:38,870 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().trimStart()
2021-03-11 11:35:38,870 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2395627b]]
2021-03-11 11:35:38,870 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:38,870 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2395627b]
2021-03-11 11:35:38,870 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toUpperCase()
2021-03-11 11:35:38,870 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]]
2021-03-11 11:35:38,870 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:38,870 [main:137] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53d401c4]
2021-03-11 11:35:38,997 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:39,130 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:35:39,136 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().padStart(-691770248, '隍')
2021-03-11 11:35:39,136 [main:110] - replacement of "tail-call optimization hit: method " + method + " has no state-machine " of type String is (Kla0({ "hxtps"}).callback).invoke().slice(hashSetOf<Int>())
2021-03-11 11:35:39,273 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:39,273 [main:66] - Compilation checking started
2021-03-11 11:35:39,698 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error((Kla0({ "hxtps"}).callback).invoke().slice(hashSetOf<Int>()) +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:39,700 [main:103] - replacing ("cde", String)
2021-03-11 11:35:39,701 [main:38] - replacing "cde" String
2021-03-11 11:35:39,701 [main:42] - Getting value of type String
2021-03-11 11:35:39,828 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:39,834 [main:46] - GENERATED VALUE OF TYPE String = "cbjwq"
2021-03-11 11:35:39,834 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:40,454 [main:55] - randomType = Function2<ULong, Kla3?, Kla3?>
2021-03-11 11:35:40,455 [main:94] - GETTING String from ULong
2021-03-11 11:35:40,485 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:35:40,485 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:35:40,485 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:35:40,611 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:40,617 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().toString(-1752910811)
2021-03-11 11:35:40,618 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:35:40,618 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:35:40,746 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:40,756 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toString(402370954)
2021-03-11 11:35:40,756 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:35:40,756 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:35:40,756 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:35:40,887 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:40,895 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toString(-1630373724)
2021-03-11 11:35:40,895 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:35:40,895 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:35:41,022 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:41,029 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:35:41,158 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:41,164 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(7.toUByte()).toString(627992061)
2021-03-11 11:35:41,164 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:35:41,164 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:35:41,164 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:35:41,293 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:41,299 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().toString(-2125481106)
2021-03-11 11:35:41,300 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:35:41,300 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:35:41,300 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:35:41,427 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:41,433 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toShort().toString(769257905)
2021-03-11 11:35:41,434 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:35:41,434 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:35:41,434 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:35:41,562 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:41,568 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUShort().toString(1881934938)
2021-03-11 11:35:41,569 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:35:41,569 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:35:41,569 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:35:41,694 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:41,700 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toLong().toString(1527015180)
2021-03-11 11:35:41,700 [main:110] - replacement of "cde" of type String is (6516632970651683513.toULong()).toUInt().toString(-1630373724)
2021-03-11 11:35:41,828 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:41,828 [main:66] - Compilation checking started
2021-03-11 11:35:42,243 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3((6516632970651683513.toULong()).toUInt().toString(-1630373724))
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:42,246 [main:103] - replacing (prope2, Kla8)
2021-03-11 11:35:42,246 [main:38] - replacing prope2 Kla8
2021-03-11 11:35:42,246 [main:42] - Getting value of type Kla8
2021-03-11 11:35:42,372 [main:302] - generating value of type = Kla8 false depth = 0
2021-03-11 11:35:42,379 [main:112] - generating klass Kla8 text = class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-11 11:35:42,379 [main:46] - GENERATED VALUE OF TYPE Kla8 = Kla8()
2021-03-11 11:35:42,379 [main:49] - GENERATED IS CALL =true
2021-03-11 11:35:43,557 [main:55] - randomType = HashSet<Function1<Kla9?, ULong?>>?
2021-03-11 11:35:43,685 [main:302] - generating value of type = HashSet<Function1<Kla9?, ULong?>> false depth = 0
2021-03-11 11:35:43,824 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): HashSet<Function1<Kla9?, ULong?>> = TODO()
2021-03-11 11:35:43,832 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): HashSet<Function1<Kla9?, ULong?>> = TODO()
2021-03-11 11:35:43,983 [main:95] - GENERATED = linkedSetOf<Function1<Kla9?, ULong?>>()
2021-03-11 11:35:44,166 [main:94] - GETTING Kla8 from ULong
2021-03-11 11:35:44,199 [main:94] - GETTING Kla8 from Any
2021-03-11 11:35:44,203 [main:94] - GETTING Kla8 from String
2021-03-11 11:35:44,233 [main:94] - GETTING Kla8 from ULong
2021-03-11 11:35:44,234 [main:94] - GETTING Kla8 from UByte
2021-03-11 11:35:44,268 [main:94] - GETTING Kla8 from Function0<String>
2021-03-11 11:35:44,282 [main:110] - replacement of prope2 of type Kla8 is Kla8()
2021-03-11 11:35:44,411 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:35:44,411 [main:66] - Compilation checking started
2021-03-11 11:35:44,831 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            Kla8().prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:44,834 [main:103] - replacing (RuntimeException(prope3), RuntimeException)
2021-03-11 11:35:44,834 [main:38] - replacing RuntimeException(prope3) RuntimeException
2021-03-11 11:35:44,834 [main:42] - Getting value of type RuntimeException
2021-03-11 11:35:44,963 [main:302] - generating value of type = RuntimeException false depth = 0
2021-03-11 11:35:44,973 [main:46] - GENERATED VALUE OF TYPE RuntimeException = NoWhenBranchMatchedException()
2021-03-11 11:35:44,974 [main:49] - GENERATED IS CALL =true
2021-03-11 11:35:45,674 [main:55] - randomType = Triple<Kla4, Array<Kla3>, Kla5>?
2021-03-11 11:35:45,803 [main:302] - generating value of type = Triple<Kla4, Array<Kla3>, Kla5> false depth = 0
2021-03-11 11:35:45,946 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Kla4, second: Array<Kla3>, third: Kla5): Triple<Kla4, Array<Kla3>, Kla5> = TODO()
2021-03-11 11:35:45,954 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Kla4, second: Array<Kla3>, third: Kla5): Triple<Kla4, Array<Kla3>, Kla5> = TODO()
2021-03-11 11:35:46,115 [main:302] - generating value of type = Kla4 false depth = 3
2021-03-11 11:35:46,122 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}
2021-03-11 11:35:46,256 [main:194] - Type params = []
2021-03-11 11:35:46,387 [main:302] - generating value of type = CoroutineContext false depth = 5
2021-03-11 11:35:46,532 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:46,539 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:46,892 [main:302] - generating value of type = Key<*> false depth = 8
2021-03-11 11:35:47,035 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:35:47,044 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:35:47,590 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 11
2021-03-11 11:35:47,737 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:35:47,746 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:35:48,290 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:35:48,290 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:35:48,290 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:48,290 [main:302] - generating value of type = Array<Kla3> false depth = 3
2021-03-11 11:35:48,428 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Kla3> = TODO()
2021-03-11 11:35:48,436 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Kla3> = TODO()
2021-03-11 11:35:48,598 [main:95] - GENERATED = enumValues<Kla3>()
2021-03-11 11:35:48,598 [main:302] - generating value of type = Kla5 false depth = 3
2021-03-11 11:35:48,606 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:35:48,606 [main:95] - GENERATED = Triple<Kla4, Array<Kla3>, Kla5>(Kla4(), enumValues<Kla3>(), Kla5())
2021-03-11 11:35:48,635 [main:94] - GETTING RuntimeException from ULong
2021-03-11 11:35:48,669 [main:94] - GETTING RuntimeException from Any
2021-03-11 11:35:48,672 [main:94] - GETTING RuntimeException from UByte
2021-03-11 11:35:48,698 [main:94] - GETTING RuntimeException from ULong
2021-03-11 11:35:48,699 [main:94] - GETTING RuntimeException from Function0<String>
2021-03-11 11:35:48,711 [main:94] - GETTING RuntimeException from String
2021-03-11 11:35:48,732 [main:110] - replacement of RuntimeException(prope3) of type RuntimeException is NoWhenBranchMatchedException()
2021-03-11 11:35:48,908 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:35:48,909 [main:66] - Compilation checking started
2021-03-11 11:35:49,324 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw NoWhenBranchMatchedException()
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:49,327 [main:103] - replacing (i1 + i2 + i3, Int)
2021-03-11 11:35:49,327 [main:38] - replacing i1 + i2 + i3 Int
2021-03-11 11:35:49,327 [main:42] - Getting value of type Int
2021-03-11 11:35:49,464 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:49,470 [main:46] - GENERATED VALUE OF TYPE Int = -1430054513
2021-03-11 11:35:49,470 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:50,447 [main:55] - randomType = HashMap<ArrayDeque<ULong>, List<String?>?>
2021-03-11 11:35:50,574 [main:302] - generating value of type = HashMap<ArrayDeque<ULong>, List<String?>?> false depth = 0
2021-03-11 11:35:50,712 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): HashMap<ArrayDeque<ULong>, List<Strg?>?> = TODO()
2021-03-11 11:35:50,719 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): HashMap<ArrayDeque<ULong>, List<Strg?>?> = TODO()
2021-03-11 11:35:50,871 [main:95] - GENERATED = linkedMapOf<ArrayDeque<ULong>, List<String?>?>()
2021-03-11 11:35:51,036 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:35:51,036 [main:66] - Generated call from random type = (linkedMapOf<ArrayDeque<ULong>, List<String?>?>()).size.countOneBits()
2021-03-11 11:35:51,036 [main:110] - replacement of i1 + i2 + i3 of type Int is (linkedMapOf<ArrayDeque<ULong>, List<String?>?>()).size.countOneBits()
2021-03-11 11:35:51,164 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:51,165 [main:66] - Compilation checking started
2021-03-11 11:35:51,647 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((linkedMapOf<ArrayDeque<ULong>, List<String?>?>()).size.countOneBits() + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:51,650 [main:103] - replacing (prope9 + "#", String)
2021-03-11 11:35:51,650 [main:38] - replacing prope9 + "#" String
2021-03-11 11:35:51,650 [main:42] - Getting value of type String
2021-03-11 11:35:51,782 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:51,789 [main:46] - GENERATED VALUE OF TYPE String = "vfyzz"
2021-03-11 11:35:51,789 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:52,154 [main:55] - randomType = Array<UInt>
2021-03-11 11:35:52,282 [main:302] - generating value of type = Array<UInt> false depth = 0
2021-03-11 11:35:52,416 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<UInt> = TODO()
2021-03-11 11:35:52,423 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<UInt> = TODO()
2021-03-11 11:35:52,573 [main:95] - GENERATED = emptyArray<UInt>()
2021-03-11 11:35:52,586 [main:137] - GENERATING call of type public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1389e498]
2021-03-11 11:35:52,712 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:35:52,848 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:35:52,856 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-11 11:35:53,190 [main:302] - generating value of type = Int true depth = 3
2021-03-11 11:35:53,196 [main:95] - GENERATED = StringBuilder(480572338)
2021-03-11 11:35:53,328 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:35:53,465 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:35:53,601 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:53,734 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:35:53,877 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 11:35:53,883 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 11:35:53,892 [main:66] - Generated call from random type = (emptyArray<UInt>()).joinToString(StringBuilder(480572338), "vplsv", StringBuilder(), 1259213839, "ccibc", {a: T -> "yggse"})
2021-03-11 11:35:53,893 [main:94] - GETTING String from ULong
2021-03-11 11:35:53,921 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:35:53,921 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:35:53,921 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:35:54,050 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:54,057 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(-1201365899)
2021-03-11 11:35:54,057 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:35:54,057 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:35:54,057 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:35:54,187 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:54,194 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(-1483715796)
2021-03-11 11:35:54,194 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:35:54,194 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:35:54,325 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:35:54,331 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:35:54,462 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:54,468 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(9.toUByte()).toString(494229936)
2021-03-11 11:35:54,468 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:35:54,468 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:35:54,468 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:35:54,596 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:54,602 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(-1158070850)
2021-03-11 11:35:54,602 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:35:54,602 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:35:54,602 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:35:54,727 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:54,734 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(-116187811)
2021-03-11 11:35:54,734 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:35:54,734 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:35:54,734 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:35:54,906 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:54,913 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(-1413248573)
2021-03-11 11:35:54,913 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:35:54,913 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:35:54,913 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:35:55,040 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:55,047 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(1880462032)
2021-03-11 11:35:55,047 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:35:55,047 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:35:55,171 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:35:55,178 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(-1037048528)
2021-03-11 11:35:55,178 [main:110] - replacement of prope9 + "#" of type String is ((6516632970651683513.toULong())).toShort().toString(-1201365899)
2021-03-11 11:35:55,305 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:55,306 [main:66] - Compilation checking started
2021-03-11 11:35:55,745 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(((6516632970651683513.toULong())).toShort().toString(-1201365899) + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:55,748 [main:103] - replacing (Kla7(), Kla7)
2021-03-11 11:35:55,748 [main:38] - replacing Kla7() Kla7
2021-03-11 11:35:55,748 [main:42] - Getting value of type Kla7
2021-03-11 11:35:55,882 [main:302] - generating value of type = Kla7 false depth = 0
2021-03-11 11:35:55,889 [main:112] - generating klass Kla7 text = class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}
2021-03-11 11:35:55,889 [main:46] - GENERATED VALUE OF TYPE Kla7 = Kla7()
2021-03-11 11:35:55,889 [main:49] - GENERATED IS CALL =true
2021-03-11 11:35:55,914 [main:55] - randomType = Kla5
2021-03-11 11:35:56,044 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-11 11:35:56,051 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:35:56,068 [main:94] - GETTING Kla7 from ULong
2021-03-11 11:35:56,101 [main:94] - GETTING Kla7 from Any
2021-03-11 11:35:56,107 [main:94] - GETTING Kla7 from UByte
2021-03-11 11:35:56,136 [main:94] - GETTING Kla7 from ULong
2021-03-11 11:35:56,136 [main:94] - GETTING Kla7 from Function0<String>
2021-03-11 11:35:56,146 [main:94] - GETTING Kla7 from String
2021-03-11 11:35:56,166 [main:110] - replacement of Kla7() of type Kla7 is Kla7()
2021-03-11 11:35:56,295 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:35:56,298 [main:103] - replacing (prope6, Boolean)
2021-03-11 11:35:56,298 [main:38] - replacing prope6 Boolean
2021-03-11 11:35:56,298 [main:42] - Getting value of type Boolean
2021-03-11 11:35:56,426 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:56,432 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 11:35:56,432 [main:49] - GENERATED IS CALL =false
2021-03-11 11:35:56,826 [main:55] - randomType = List<Kla4?>
2021-03-11 11:35:56,827 [main:94] - GETTING Boolean from Function0<String>
2021-03-11 11:35:56,836 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cb69174]]
2021-03-11 11:35:56,836 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:56,836 [main:137] - GENERATING call of type public fun kotlin.String.matches(regex: kotlin.String): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cb69174]
2021-03-11 11:35:56,966 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:56,973 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().matches("bvcpn")
2021-03-11 11:35:56,973 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:35:56,973 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:35:57,108 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:57,108 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:35:57,237 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:57,243 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("olzmp").or(true)
2021-03-11 11:35:57,244 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]]
2021-03-11 11:35:57,244 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:35:57,371 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:57,371 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@512e87d]
2021-03-11 11:35:57,503 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:57,510 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("dbisn").xor(true)
2021-03-11 11:35:57,510 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]]
2021-03-11 11:35:57,510 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:35:57,639 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:57,639 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("mdvuf")
2021-03-11 11:35:57,640 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]]
2021-03-11 11:35:57,640 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:57,640 [main:137] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7910a6f8]
2021-03-11 11:35:57,768 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:57,903 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:57,910 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().startsWith("ikhoi", false)
2021-03-11 11:35:57,910 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46e35a2]]
2021-03-11 11:35:57,911 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:57,911 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.String.toBoolean(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46e35a2]
2021-03-11 11:35:57,911 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toBoolean()
2021-03-11 11:35:57,911 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]]
2021-03-11 11:35:57,911 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:57,911 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]
2021-03-11 11:35:58,041 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:58,041 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().equals("iyszb")
2021-03-11 11:35:58,041 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]]
2021-03-11 11:35:58,042 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:35:58,042 [main:137] - GENERATING call of type public fun kotlin.String.endsWith(suffix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@560bb998]
2021-03-11 11:35:58,182 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:35:58,315 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:58,321 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().endsWith("dcmkr", true)
2021-03-11 11:35:58,322 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]]
2021-03-11 11:35:58,322 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:35:58,447 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:58,447 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2b13fc09]
2021-03-11 11:35:58,447 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("fxwib").not()
2021-03-11 11:35:58,447 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:35:58,447 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:35:58,577 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:35:58,577 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:35:58,705 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:35:58,712 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals("jhqsm").and(false)
2021-03-11 11:35:58,712 [main:110] - replacement of prope6 of type Boolean is (Kla0({ "hxtps"}).callback).invoke().toBoolean()
2021-03-11 11:35:58,839 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:35:58,840 [main:66] - Compilation checking started
2021-03-11 11:35:59,260 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !(Kla0({ "hxtps"}).callback).invoke().toBoolean()) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:35:59,263 [main:103] - replacing (EmptyCoroutineContext, EmptyCoroutineContext)
2021-03-11 11:35:59,263 [main:38] - replacing EmptyCoroutineContext EmptyCoroutineContext
2021-03-11 11:35:59,263 [main:42] - Getting value of type EmptyCoroutineContext
2021-03-11 11:35:59,387 [main:302] - generating value of type = EmptyCoroutineContext false depth = 0
2021-03-11 11:35:59,396 [main:46] - GENERATED VALUE OF TYPE EmptyCoroutineContext = 
2021-03-11 11:35:59,423 [main:55] - randomType = Kla4
2021-03-11 11:35:59,548 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 11:35:59,555 [main:112] - generating klass Kla4 text = open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}
2021-03-11 11:35:59,683 [main:194] - Type params = []
2021-03-11 11:35:59,811 [main:302] - generating value of type = CoroutineContext false depth = 2
2021-03-11 11:35:59,945 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:35:59,952 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:36:00,300 [main:302] - generating value of type = Key<*> false depth = 5
2021-03-11 11:36:00,447 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:36:00,455 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:36:01,080 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 8
2021-03-11 11:36:01,223 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:36:01,231 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:36:01,779 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 11
2021-03-11 11:36:01,927 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:36:01,934 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:36:02,471 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:36:02,471 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-11 11:36:02,471 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-11 11:36:02,471 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-11 11:36:02,491 [main:94] - GETTING EmptyCoroutineContext from String
2021-03-11 11:36:02,513 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:36:02,542 [main:94] - GETTING EmptyCoroutineContext from ULong
2021-03-11 11:36:02,542 [main:94] - GETTING EmptyCoroutineContext from UByte
2021-03-11 11:36:02,574 [main:94] - GETTING EmptyCoroutineContext from Function0<String>
2021-03-11 11:36:02,584 [main:94] - GETTING EmptyCoroutineContext from Any
2021-03-11 11:36:02,586 [main:107] - Cant find and generate replacement for EmptyCoroutineContext type EmptyCoroutineContext
2021-03-11 11:36:02,587 [main:103] - replacing (prope3, Result<Ty0>)
2021-03-11 11:36:02,587 [main:38] - replacing prope3 Result<Ty0>
2021-03-11 11:36:02,587 [main:42] - Getting value of type Result<Ty0>
2021-03-11 11:36:02,713 [main:302] - generating value of type = Result<Ty0> false depth = 0
2021-03-11 11:36:02,853 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:36:02,860 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:36:03,196 [main:385] - Cant generate call of fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:36:03,196 [main:46] - GENERATED VALUE OF TYPE Result<Ty0> = 
2021-03-11 11:36:03,375 [main:55] - randomType = UInt
2021-03-11 11:36:03,506 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:36:03,546 [main:94] - GETTING Result<Ty0> from UByte
2021-03-11 11:36:03,578 [main:94] - GETTING Result<Ty0> from Any
2021-03-11 11:36:03,582 [main:94] - GETTING Result<Ty0> from Function0<String>
2021-03-11 11:36:03,595 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:36:03,622 [main:94] - GETTING Result<Ty0> from String
2021-03-11 11:36:03,647 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:36:03,647 [main:107] - Cant find and generate replacement for prope3 type Result<Ty0>
2021-03-11 11:36:03,647 [main:103] - replacing (i6, Int)
2021-03-11 11:36:03,647 [main:38] - replacing i6 Int
2021-03-11 11:36:03,647 [main:42] - Getting value of type Int
2021-03-11 11:36:03,773 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:03,779 [main:46] - GENERATED VALUE OF TYPE Int = -819546417
2021-03-11 11:36:03,779 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:03,959 [main:55] - randomType = Short
2021-03-11 11:36:04,086 [main:302] - generating value of type = Short true depth = 0
2021-03-11 11:36:04,132 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@13bfd6]
2021-03-11 11:36:04,258 [main:302] - generating value of type = Long true depth = 0
2021-03-11 11:36:04,264 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4913ac97]
2021-03-11 11:36:04,265 [main:66] - Generated call from random type = (-9565).div(-3781438166162488369).countOneBits()
2021-03-11 11:36:04,265 [main:94] - GETTING Int from String
2021-03-11 11:36:04,290 [main:101] - Case = [public fun kotlin.CharSequence.indexOf(char: kotlin.Char, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@628c8437]]
2021-03-11 11:36:04,290 [main:137] - GENERATING call of type public fun kotlin.CharSequence.indexOf(char: kotlin.Char, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@628c8437]
2021-03-11 11:36:04,414 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:36:04,547 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:04,682 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:04,690 [main:105] - GENERATED CALL = (Kla1().prope0).indexOf('뵯', -1521969162, true)
2021-03-11 11:36:04,690 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]]
2021-03-11 11:36:04,690 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:36:04,690 [main:105] - GENERATED CALL = (Kla1().prope0).length.countOneBits()
2021-03-11 11:36:04,690 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.count(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@341cd084]]
2021-03-11 11:36:04,690 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:36:04,822 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:04,953 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:04,961 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.count(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@341cd084]
2021-03-11 11:36:04,961 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-1992789788, 1436740362).count()
2021-03-11 11:36:04,961 [main:101] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb], public fun kotlin.CharSequence.lastIndexOfAny(chars: kotlin.CharArray, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@23e24504]]
2021-03-11 11:36:04,961 [main:137] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@3dfab3cb]
2021-03-11 11:36:05,088 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:05,223 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:05,230 [main:137] - GENERATING call of type public fun kotlin.CharSequence.lastIndexOfAny(chars: kotlin.CharArray, startIndex: kotlin.Int = ..., ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@23e24504]
2021-03-11 11:36:05,355 [main:302] - generating value of type = CharArray false depth = 0
2021-03-11 11:36:05,492 [main:43] - GENERATING CALL OF fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-11 11:36:05,499 [main:61] - WITHOUT TYPE PARAMS = fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-11 11:36:05,654 [main:302] - generating value of type = Char true depth = 3
2021-03-11 11:36:05,661 [main:95] - GENERATED = charArrayOf('픰')
2021-03-11 11:36:05,787 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:05,918 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:05,925 [main:105] - GENERATED CALL = (Kla1().prope0).subSequence(-187908937, 1046159021).lastIndexOfAny(charArrayOf('픰'), 1243550987, true)
2021-03-11 11:36:05,925 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]]
2021-03-11 11:36:05,925 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]
2021-03-11 11:36:06,051 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:06,058 [main:105] - GENERATED CALL = (Kla1().prope0).length.minus(-38)
2021-03-11 11:36:06,059 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]]
2021-03-11 11:36:06,059 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5fb23360]
2021-03-11 11:36:06,059 [main:105] - GENERATED CALL = (Kla1().prope0).length.inc()
2021-03-11 11:36:06,059 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4c83e101]]
2021-03-11 11:36:06,059 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:36:06,187 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:06,194 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("pgtsq").absoluteValue
2021-03-11 11:36:06,194 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:36:06,194 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23491d36]
2021-03-11 11:36:06,319 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:36:06,448 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:06,454 [main:105] - GENERATED CALL = (Kla1().prope0).equals(null).compareTo(false)
2021-03-11 11:36:06,455 [main:101] - Case = [public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]]
2021-03-11 11:36:06,455 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]
2021-03-11 11:36:06,581 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:06,587 [main:105] - GENERATED CALL = (Kla1().prope0).length.rotateRight(-113786080)
2021-03-11 11:36:06,587 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]]
2021-03-11 11:36:06,587 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@18225180]
2021-03-11 11:36:06,794 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:06,801 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7d9b2878]
2021-03-11 11:36:06,801 [main:105] - GENERATED CALL = (Kla1().prope0).compareTo("lgshx").takeLowestOneBit()
2021-03-11 11:36:06,802 [main:110] - replacement of i6 of type Int is (Kla1().prope0).length.rotateRight(-113786080)
2021-03-11 11:36:06,932 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:06,932 [main:66] - Compilation checking started
2021-03-11 11:36:07,349 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + (Kla1().prope0).length.rotateRight(-113786080) + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:07,353 [main:103] - replacing (i24, Int)
2021-03-11 11:36:07,353 [main:38] - replacing i24 Int
2021-03-11 11:36:07,353 [main:42] - Getting value of type Int
2021-03-11 11:36:07,483 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:07,489 [main:46] - GENERATED VALUE OF TYPE Int = 107218077
2021-03-11 11:36:07,489 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:07,515 [main:55] - randomType = Kla0
2021-03-11 11:36:07,650 [main:302] - generating value of type = Kla0 false depth = 0
2021-03-11 11:36:07,657 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:36:07,794 [main:194] - Type params = []
2021-03-11 11:36:07,923 [main:302] - generating value of type = Function0<String> false depth = 2
2021-03-11 11:36:07,930 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:36:07,946 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla0[DeserializedSimpleFunctionDescriptor@2dbaab0b]
2021-03-11 11:36:08,076 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:08,076 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:36:08,213 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:08,220 [main:66] - Generated call from random type = (Kla0({ "idyft"})).equals("ikrqm").compareTo(false)
2021-03-11 11:36:08,220 [main:110] - replacement of i24 of type Int is (Kla0({ "idyft"})).equals("ikrqm").compareTo(false)
2021-03-11 11:36:08,344 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:08,345 [main:66] - Compilation checking started
2021-03-11 11:36:08,778 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + (Kla0({ "idyft"})).equals("ikrqm").compareTo(false) + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:08,781 [main:103] - replacing ({ x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }, Function1<Continuation<String>, Any?>)
2021-03-11 11:36:08,781 [main:38] - replacing { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    } Function1<Continuation<String>, Any?>
2021-03-11 11:36:08,781 [main:42] - Getting value of type Function1<Continuation<String>, Any?>
2021-03-11 11:36:08,910 [main:302] - generating value of type = Function1<Continuation<String>, Any?> false depth = 0
2021-03-11 11:36:08,917 [main:302] - generating value of type = Any false depth = 1
2021-03-11 11:36:08,917 [main:46] - GENERATED VALUE OF TYPE Function1<Continuation<String>, Any?> = {a: Continuation<String> -> "kgswv"}
2021-03-11 11:36:08,917 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:09,097 [main:55] - randomType = Short
2021-03-11 11:36:09,236 [main:302] - generating value of type = Short true depth = 0
2021-03-11 11:36:09,284 [main:94] - GETTING Function1<Continuation<String>, Any?> from Any
2021-03-11 11:36:09,288 [main:94] - GETTING Function1<Continuation<String>, Any?> from ULong
2021-03-11 11:36:09,320 [main:94] - GETTING Function1<Continuation<String>, Any?> from ULong
2021-03-11 11:36:09,321 [main:94] - GETTING Function1<Continuation<String>, Any?> from UByte
2021-03-11 11:36:09,349 [main:94] - GETTING Function1<Continuation<String>, Any?> from Function0<String>
2021-03-11 11:36:09,363 [main:94] - GETTING Function1<Continuation<String>, Any?> from String
2021-03-11 11:36:09,384 [main:110] - replacement of { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    } of type Function1<Continuation<String>, Any?> is {a: Continuation<String> -> "kgswv"}
2021-03-11 11:36:09,510 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 11:36:09,511 [main:66] - Compilation checking started
2021-03-11 11:36:09,920 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn {a: Continuation<String> -> "kgswv"}
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:09,923 [main:103] - replacing ({
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }, Any?)
2021-03-11 11:36:09,923 [main:38] - replacing {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    } Any?
2021-03-11 11:36:09,923 [main:42] - Getting value of type Any?
2021-03-11 11:36:10,050 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:10,050 [main:46] - GENERATED VALUE OF TYPE Any? = "mrdxv"
2021-03-11 11:36:10,050 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:10,253 [main:55] - randomType = Set<String>
2021-03-11 11:36:10,255 [main:94] - GETTING Any? from String
2021-03-11 11:36:10,279 [main:94] - GETTING Any? from UByte
2021-03-11 11:36:10,308 [main:94] - GETTING Any? from ULong
2021-03-11 11:36:10,334 [main:94] - GETTING Any? from Function0<String>
2021-03-11 11:36:10,345 [main:94] - GETTING Any? from Any
2021-03-11 11:36:10,347 [main:110] - replacement of {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    } of type Any? is l
2021-03-11 11:36:10,472 [main:33] - Trying to replace BLOCK on Element(REFERENCE_EXPRESSION)
2021-03-11 11:36:10,473 [main:66] - Compilation checking started
2021-03-11 11:36:10,483 [main:71] - Wrong syntax or breaks conditions
2021-03-11 11:36:10,483 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) l
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:10,487 [main:103] - replacing (RuntimeException(prope3), RuntimeException)
2021-03-11 11:36:10,487 [main:38] - replacing RuntimeException(prope3) RuntimeException
2021-03-11 11:36:10,487 [main:42] - Getting value of type RuntimeException
2021-03-11 11:36:10,613 [main:302] - generating value of type = RuntimeException false depth = 0
2021-03-11 11:36:10,751 [main:43] - GENERATING CALL OF fun UninitializedPropertyAccessException(message: kotlin.String?, cause: kotlin.Throwable?): RuntimeException = TODO()
2021-03-11 11:36:10,758 [main:61] - WITHOUT TYPE PARAMS = fun UninitializedPropertyAccessException(message: kotlin.String?, cause: kotlin.Throwable?): RuntimeException = TODO()
2021-03-11 11:36:11,260 [main:302] - generating value of type = String true depth = 3
2021-03-11 11:36:11,266 [main:302] - generating value of type = Throwable false depth = 3
2021-03-11 11:36:11,400 [main:43] - GENERATING CALL OF fun IllegalArgumentException(cause: kotlin.Throwable?): Throwable = TODO()
2021-03-11 11:36:11,408 [main:61] - WITHOUT TYPE PARAMS = fun IllegalArgumentException(cause: kotlin.Throwable?): Throwable = TODO()
2021-03-11 11:36:11,736 [main:302] - generating value of type = Throwable false depth = 6
2021-03-11 11:36:11,869 [main:43] - GENERATING CALL OF fun NoSuchElementException(message: kotlin.String?): Throwable = TODO()
2021-03-11 11:36:11,877 [main:61] - WITHOUT TYPE PARAMS = fun NoSuchElementException(message: kotlin.String?): Throwable = TODO()
2021-03-11 11:36:12,204 [main:302] - generating value of type = String true depth = 9
2021-03-11 11:36:12,211 [main:95] - GENERATED = NoSuchElementException("lfzwf")
2021-03-11 11:36:12,211 [main:95] - GENERATED = IllegalArgumentException(NoSuchElementException("lfzwf"))
2021-03-11 11:36:12,211 [main:95] - GENERATED = UninitializedPropertyAccessException("jldml", IllegalArgumentException(NoSuchElementException("lfzwf")))
2021-03-11 11:36:12,211 [main:46] - GENERATED VALUE OF TYPE RuntimeException = UninitializedPropertyAccessException("jldml", IllegalArgumentException(NoSuchElementException("lfzwf")))
2021-03-11 11:36:12,211 [main:49] - GENERATED IS CALL =true
2021-03-11 11:36:13,481 [main:55] - randomType = ArrayList<LinkedHashMap<Triple<String, Byte, Kla0>, UInt>>
2021-03-11 11:36:13,610 [main:302] - generating value of type = ArrayList<LinkedHashMap<Triple<String, Byte, Kla0>, UInt>> false depth = 0
2021-03-11 11:36:13,748 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: LinkedHashMap<Triple<String, Byte, Kla0>, UInt>): ArrayList<LkedHashMap<Triple<Strg, Byte, Kla0>, UInt>> = TODO()
2021-03-11 11:36:13,757 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: LinkedHashMap<Triple<String, Byte, Kla0>, UInt>): ArrayList<LkedHashMap<Triple<Strg, Byte, Kla0>, UInt>> = TODO()
2021-03-11 11:36:13,907 [main:302] - generating value of type = LinkedHashMap<Triple<String, Byte, Kla0>, UInt> false depth = 3
2021-03-11 11:36:14,043 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<Triple<String, Byte, Kla0>, UInt>): LkedHashMap<Triple<Strg, Byte, Kla0>, UInt> = TODO()
2021-03-11 11:36:14,051 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<Triple<String, Byte, Kla0>, UInt>): LkedHashMap<Triple<Strg, Byte, Kla0>, UInt> = TODO()
2021-03-11 11:36:14,203 [main:302] - generating value of type = Pair<Triple<String, Byte, Kla0>, UInt> false depth = 6
2021-03-11 11:36:14,339 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Triple<String, Byte, Kla0>, second: UInt): Pair<Triple<String, Byte, Kla0>, UInt> = TODO()
2021-03-11 11:36:14,347 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Triple<String, Byte, Kla0>, second: UInt): Pair<Triple<String, Byte, Kla0>, UInt> = TODO()
2021-03-11 11:36:14,500 [main:302] - generating value of type = Triple<String, Byte, Kla0> false depth = 9
2021-03-11 11:36:14,642 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: String, second: Byte, third: Kla0): Triple<String, Byte, Kla0> = TODO()
2021-03-11 11:36:14,649 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: String, second: Byte, third: Kla0): Triple<String, Byte, Kla0> = TODO()
2021-03-11 11:36:14,810 [main:302] - generating value of type = String true depth = 12
2021-03-11 11:36:14,817 [main:302] - generating value of type = Byte true depth = 12
2021-03-11 11:36:14,824 [main:302] - generating value of type = Kla0 false depth = 12
2021-03-11 11:36:14,831 [main:112] - generating klass Kla0 text = open class Kla0(val callback: () -> String)
2021-03-11 11:36:14,961 [main:194] - Type params = []
2021-03-11 11:36:15,094 [main:302] - generating value of type = Function0<String> false depth = 14
2021-03-11 11:36:15,101 [main:302] - generating value of type = String true depth = 15
2021-03-11 11:36:15,108 [main:95] - GENERATED = Triple<String, Byte, Kla0>("avzgw", -117, Kla0({ "batqz"}))
2021-03-11 11:36:15,108 [main:302] - generating value of type = UInt true depth = 9
2021-03-11 11:36:15,115 [main:95] - GENERATED = Pair<Triple<String, Byte, Kla0>, UInt>(Triple<String, Byte, Kla0>("avzgw", -117, Kla0({ "batqz"})), 1355613037.toUInt())
2021-03-11 11:36:15,115 [main:95] - GENERATED = linkedMapOf<Triple<String, Byte, Kla0>, UInt>(Pair<Triple<String, Byte, Kla0>, UInt>(Triple<String, Byte, Kla0>("avzgw", -117, Kla0({ "batqz"})), 1355613037.toUInt()))
2021-03-11 11:36:15,115 [main:95] - GENERATED = arrayListOf<LinkedHashMap<Triple<String, Byte, Kla0>, UInt>>(linkedMapOf<Triple<String, Byte, Kla0>, UInt>(Pair<Triple<String, Byte, Kla0>, UInt>(Triple<String, Byte, Kla0>("avzgw", -117, Kla0({ "batqz"})), 1355613037.toUInt())))
2021-03-11 11:36:15,412 [main:94] - GETTING RuntimeException from Any
2021-03-11 11:36:15,416 [main:94] - GETTING RuntimeException from ULong
2021-03-11 11:36:15,445 [main:94] - GETTING RuntimeException from ULong
2021-03-11 11:36:15,446 [main:94] - GETTING RuntimeException from UByte
2021-03-11 11:36:15,474 [main:94] - GETTING RuntimeException from Function0<String>
2021-03-11 11:36:15,484 [main:94] - GETTING RuntimeException from String
2021-03-11 11:36:15,506 [main:110] - replacement of RuntimeException(prope3) of type RuntimeException is UninitializedPropertyAccessException("jldml", IllegalArgumentException(NoSuchElementException("lfzwf")))
2021-03-11 11:36:15,633 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 11:36:15,634 [main:66] - Compilation checking started
2021-03-11 11:36:16,056 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw UninitializedPropertyAccessException("jldml", IllegalArgumentException(NoSuchElementException("lfzwf")))
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:16,059 [main:103] - replacing (1, Int)
2021-03-11 11:36:16,059 [main:38] - replacing 1 Int
2021-03-11 11:36:16,060 [main:42] - Getting value of type Int
2021-03-11 11:36:16,188 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:16,194 [main:46] - GENERATED VALUE OF TYPE Int = -1135884899
2021-03-11 11:36:16,194 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:16,219 [main:55] - randomType = Kla5
2021-03-11 11:36:16,346 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-11 11:36:16,353 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:36:16,372 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla5[DeserializedSimpleFunctionDescriptor@8c410e7]
2021-03-11 11:36:16,496 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:16,496 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:36:16,622 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:16,628 [main:66] - Generated call from random type = (Kla5()).equals("bgcci").compareTo(false)
2021-03-11 11:36:16,629 [main:94] - GETTING Int from ULong
2021-03-11 11:36:16,659 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]]
2021-03-11 11:36:16,659 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:16,784 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:16,791 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]
2021-03-11 11:36:16,791 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(105.toUByte()).unaryPlus()
2021-03-11 11:36:16,791 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3fb6d686]]
2021-03-11 11:36:16,791 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:36:16,791 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3fb6d686]
2021-03-11 11:36:16,919 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:16,925 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().div(62)
2021-03-11 11:36:16,925 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]]
2021-03-11 11:36:16,925 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:36:16,926 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@45700d31]
2021-03-11 11:36:17,055 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:17,062 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().compareTo(97.toUByte())
2021-03-11 11:36:17,062 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@70fae96b]]
2021-03-11 11:36:17,062 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.ULong.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@70fae96b]
2021-03-11 11:36:17,062 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).countLeadingZeroBits()
2021-03-11 11:36:17,062 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 11:36:17,062 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:36:17,062 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 11:36:17,062 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().countOneBits()
2021-03-11 11:36:17,062 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]]
2021-03-11 11:36:17,062 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:17,192 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:17,199 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]
2021-03-11 11:36:17,327 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:17,334 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(62.toUByte()).minus(-63)
2021-03-11 11:36:17,334 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]]
2021-03-11 11:36:17,334 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b6031bc]
2021-03-11 11:36:17,334 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]
2021-03-11 11:36:17,334 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toDouble().roundToInt()
2021-03-11 11:36:17,334 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42411fed]]
2021-03-11 11:36:17,334 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:17,462 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:17,469 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42411fed]
2021-03-11 11:36:17,600 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:17,607 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(96.toUByte()).shr(1138224328)
2021-03-11 11:36:17,607 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]]
2021-03-11 11:36:17,607 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:17,732 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:17,739 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@257ef7ca]
2021-03-11 11:36:17,739 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(32.toUByte()).countTrailingZeroBits()
2021-03-11 11:36:17,739 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4a0e3df6]]
2021-03-11 11:36:17,739 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:36:17,739 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4a0e3df6]
2021-03-11 11:36:17,739 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().countLeadingZeroBits()
2021-03-11 11:36:17,739 [main:110] - replacement of 1 of type Int is ((6516632970651683513.toULong())).compareTo(62.toUByte()).minus(-63)
2021-03-11 11:36:17,865 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:17,866 [main:66] - Compilation checking started
2021-03-11 11:36:18,290 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = ((6516632970651683513.toULong())).compareTo(62.toUByte()).minus(-63),
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:18,293 [main:103] - replacing (c !is CoroutineStackFrame, Boolean)
2021-03-11 11:36:18,293 [main:38] - replacing c !is CoroutineStackFrame Boolean
2021-03-11 11:36:18,293 [main:42] - Getting value of type Boolean
2021-03-11 11:36:18,426 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:18,432 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 11:36:18,433 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:18,633 [main:55] - randomType = Sequence<Int>
2021-03-11 11:36:18,634 [main:94] - GETTING Boolean from UByte
2021-03-11 11:36:18,675 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]]
2021-03-11 11:36:18,675 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:36:18,675 [main:137] - GENERATING call of type public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@7a2238d3]
2021-03-11 11:36:18,675 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().isInfinite()
2021-03-11 11:36:18,675 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@52eed0c4]]
2021-03-11 11:36:18,675 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:36:18,675 [main:137] - GENERATING call of type public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@52eed0c4]
2021-03-11 11:36:18,675 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().isNaN()
2021-03-11 11:36:18,676 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]]
2021-03-11 11:36:18,676 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:36:18,676 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43a02211]
2021-03-11 11:36:18,804 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:18,805 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().equals("jiirg")
2021-03-11 11:36:18,805 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]]
2021-03-11 11:36:18,805 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:36:18,805 [main:137] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a66d789]
2021-03-11 11:36:18,805 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().isInfinite()
2021-03-11 11:36:18,805 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]]
2021-03-11 11:36:18,805 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@2352bf1e]
2021-03-11 11:36:18,805 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1a9c44a7]
2021-03-11 11:36:18,935 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:18,935 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toFloat().equals("cylnc")
2021-03-11 11:36:18,935 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]]
2021-03-11 11:36:18,935 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:36:19,063 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:19,063 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@ef3a193]
2021-03-11 11:36:19,237 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:19,245 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("aveqj").or(false)
2021-03-11 11:36:19,245 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6b337e18]]
2021-03-11 11:36:19,245 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:36:19,245 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6b337e18]
2021-03-11 11:36:19,369 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:19,370 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().equals("mwxer")
2021-03-11 11:36:19,370 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]]
2021-03-11 11:36:19,370 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:36:19,370 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@33092f6e]
2021-03-11 11:36:19,370 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().isFinite()
2021-03-11 11:36:19,370 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.UIntRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f897ecf]]
2021-03-11 11:36:19,370 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun rangeTo(other: kotlin.UByte): kotlin.ranges.UIntRange defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@f898b0a]
2021-03-11 11:36:19,495 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:19,502 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public operator fun kotlin.ranges.UIntRange.contains(value: kotlin.UByte): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@2f897ecf]
2021-03-11 11:36:19,629 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:19,636 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).rangeTo(103.toUByte()).contains(96.toUByte())
2021-03-11 11:36:19,636 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]]
2021-03-11 11:36:19,636 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:36:19,765 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:19,765 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1541ea06]
2021-03-11 11:36:19,897 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:19,904 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("mgrui").and(true)
2021-03-11 11:36:19,904 [main:110] - replacement of c !is CoroutineStackFrame of type Boolean is ((6516632970651683513.toULong()).toUByte()).toShort().equals("mwxer")
2021-03-11 11:36:20,030 [main:33] - Trying to replace Element(IS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:20,031 [main:66] - Compilation checking started
2021-03-11 11:36:20,457 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (((6516632970651683513.toULong()).toUByte()).toShort().equals("mwxer")) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:20,460 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19, Int)
2021-03-11 11:36:20,460 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 Int
2021-03-11 11:36:20,460 [main:42] - Getting value of type Int
2021-03-11 11:36:20,589 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:20,596 [main:46] - GENERATED VALUE OF TYPE Int = -1217292420
2021-03-11 11:36:20,596 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:20,957 [main:55] - randomType = Char?
2021-03-11 11:36:21,086 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:36:21,123 [main:137] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@45217c9e]
2021-03-11 11:36:21,123 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]
2021-03-11 11:36:21,249 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:21,256 [main:66] - Generated call from random type = ('︭')?.toShort().rem(-9)
2021-03-11 11:36:21,256 [main:94] - GETTING Int from UByte
2021-03-11 11:36:21,285 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]]
2021-03-11 11:36:21,285 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:36:21,415 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:21,422 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]
2021-03-11 11:36:21,422 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(7.toUByte()).unaryPlus()
2021-03-11 11:36:21,422 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]]
2021-03-11 11:36:21,422 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:36:21,552 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:21,558 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]
2021-03-11 11:36:21,558 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(6.toUByte()).unaryMinus()
2021-03-11 11:36:21,558 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@65f973c0]]
2021-03-11 11:36:21,558 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:36:21,559 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().sign
2021-03-11 11:36:21,559 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3d9305eb]]
2021-03-11 11:36:21,559 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:36:21,559 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3d9305eb]
2021-03-11 11:36:21,559 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().unaryPlus()
2021-03-11 11:36:21,559 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:36:21,559 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7f8e4b57]
2021-03-11 11:36:21,686 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:21,686 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:36:21,812 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:21,818 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).equals("ojwon").compareTo(false)
2021-03-11 11:36:21,819 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]]
2021-03-11 11:36:21,819 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:36:21,948 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:21,956 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:36:22,082 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:22,089 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(97.toUByte()).ushr(-1944808174)
2021-03-11 11:36:22,089 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]]
2021-03-11 11:36:22,089 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@247091d5]
2021-03-11 11:36:22,089 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).countLeadingZeroBits()
2021-03-11 11:36:22,089 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]]
2021-03-11 11:36:22,089 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:36:22,089 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@200f818c]
2021-03-11 11:36:22,089 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().countLeadingZeroBits()
2021-03-11 11:36:22,089 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]]
2021-03-11 11:36:22,089 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:36:22,090 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]
2021-03-11 11:36:22,090 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().countTrailingZeroBits()
2021-03-11 11:36:22,090 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]]
2021-03-11 11:36:22,090 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:36:22,090 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1b17b5cb]
2021-03-11 11:36:22,225 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:22,232 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().rem(-77)
2021-03-11 11:36:22,232 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 of type Int is -1217292420
2021-03-11 11:36:22,367 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 11:36:22,368 [main:66] - Compilation checking started
2021-03-11 11:36:22,771 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (-1217292420 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:22,775 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16, Int)
2021-03-11 11:36:22,775 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 Int
2021-03-11 11:36:22,776 [main:42] - Getting value of type Int
2021-03-11 11:36:22,910 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:22,917 [main:46] - GENERATED VALUE OF TYPE Int = -2043015551
2021-03-11 11:36:22,917 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:23,093 [main:55] - randomType = UInt
2021-03-11 11:36:23,218 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 11:36:23,259 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@4049db12]
2021-03-11 11:36:23,396 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:23,403 [main:66] - Generated call from random type = (970640334.toUInt()).compareTo(120.toUByte())
2021-03-11 11:36:23,404 [main:94] - GETTING Int from ULong
2021-03-11 11:36:23,431 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]]
2021-03-11 11:36:23,432 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:36:23,432 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:36:23,555 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:23,562 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().compareTo(128.toUByte())
2021-03-11 11:36:23,562 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]]
2021-03-11 11:36:23,562 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@3b5314ae]
2021-03-11 11:36:23,562 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@8f911ab]
2021-03-11 11:36:23,562 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toFloat().toBits()
2021-03-11 11:36:23,562 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]]
2021-03-11 11:36:23,562 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:36:23,562 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b4db716]
2021-03-11 11:36:23,690 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:23,697 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toByte().compareTo(43)
2021-03-11 11:36:23,697 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4c83e101]]
2021-03-11 11:36:23,697 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:23,826 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:23,832 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(95.toUByte()).absoluteValue
2021-03-11 11:36:23,832 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]]
2021-03-11 11:36:23,832 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:36:23,832 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@7451d888]
2021-03-11 11:36:23,832 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUInt().toInt()
2021-03-11 11:36:23,833 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]]
2021-03-11 11:36:23,833 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:23,963 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:23,969 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@27045ea]
2021-03-11 11:36:24,096 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:24,102 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(121.toUByte()).minus(82)
2021-03-11 11:36:24,103 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1fee26e7]]
2021-03-11 11:36:24,103 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:36:24,103 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1fee26e7]
2021-03-11 11:36:24,103 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).toUByte().countOneBits()
2021-03-11 11:36:24,103 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]]
2021-03-11 11:36:24,103 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:24,231 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:24,237 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@143b496f]
2021-03-11 11:36:24,364 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:24,371 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(74.toUByte()).div(-65)
2021-03-11 11:36:24,372 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]]
2021-03-11 11:36:24,372 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:24,511 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:24,517 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@71ee6d22]
2021-03-11 11:36:24,645 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:24,651 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(104.toUByte()).rotateLeft(-234705223)
2021-03-11 11:36:24,651 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]]
2021-03-11 11:36:24,651 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:24,778 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:24,784 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@28434905]
2021-03-11 11:36:24,784 [main:105] - GENERATED CALL = (6516632970651683513.toULong()).compareTo(88.toUByte()).unaryPlus()
2021-03-11 11:36:24,784 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 of type Int is (6516632970651683513.toULong()).compareTo(95.toUByte()).absoluteValue
2021-03-11 11:36:24,919 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:24,919 [main:66] - Compilation checking started
2021-03-11 11:36:25,542 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + ((6516632970651683513.toULong()).compareTo(95.toUByte()).absoluteValue + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:25,549 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27, Int)
2021-03-11 11:36:25,549 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 Int
2021-03-11 11:36:25,549 [main:42] - Getting value of type Int
2021-03-11 11:36:25,683 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:25,690 [main:46] - GENERATED VALUE OF TYPE Int = -85530766
2021-03-11 11:36:25,690 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:25,890 [main:55] - randomType = ArrayDeque<Int>
2021-03-11 11:36:26,028 [main:302] - generating value of type = ArrayDeque<Int> false depth = 0
2021-03-11 11:36:26,162 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Int>): ArrayDeque<Int> = TODO()
2021-03-11 11:36:26,170 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Int>): ArrayDeque<Int> = TODO()
2021-03-11 11:36:26,525 [main:302] - generating value of type = Collection<Int> false depth = 3
2021-03-11 11:36:26,658 [main:43] - GENERATING CALL OF fun <E> ArrayList(): Collection<Int> = TODO()
2021-03-11 11:36:26,666 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): Collection<Int> = TODO()
2021-03-11 11:36:26,815 [main:95] - GENERATED = ArrayList<Int>()
2021-03-11 11:36:26,815 [main:95] - GENERATED = ArrayDeque<Int>(ArrayList<Int>())
2021-03-11 11:36:26,950 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6e85b19d]
2021-03-11 11:36:26,950 [main:66] - Generated call from random type = (ArrayDeque<Int>(ArrayList<Int>())).size.countOneBits()
2021-03-11 11:36:26,951 [main:94] - GETTING Int from UByte
2021-03-11 11:36:26,981 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]]
2021-03-11 11:36:26,981 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:36:26,981 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22e0a633]
2021-03-11 11:36:27,108 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:27,114 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().compareTo(-62)
2021-03-11 11:36:27,114 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]]
2021-03-11 11:36:27,114 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:36:27,244 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:27,250 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@59bf64eb]
2021-03-11 11:36:27,381 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:27,388 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(90.toUByte()).rotateRight(1850396436)
2021-03-11 11:36:27,388 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]]
2021-03-11 11:36:27,388 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:36:27,388 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 11:36:27,388 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().countOneBits()
2021-03-11 11:36:27,388 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]]
2021-03-11 11:36:27,388 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:36:27,388 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@e5ca0bd]
2021-03-11 11:36:27,526 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:27,532 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().compareTo(-65)
2021-03-11 11:36:27,532 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]]
2021-03-11 11:36:27,532 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:36:27,657 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:27,664 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(19.toUByte())
2021-03-11 11:36:27,664 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4305d2ec]]
2021-03-11 11:36:27,664 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4aae1f66]
2021-03-11 11:36:27,664 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4305d2ec]
2021-03-11 11:36:27,664 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toLong().toInt()
2021-03-11 11:36:27,664 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]]
2021-03-11 11:36:27,664 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:36:27,664 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6ad0e35b]
2021-03-11 11:36:27,664 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().countOneBits()
2021-03-11 11:36:27,664 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]]
2021-03-11 11:36:27,664 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:36:27,786 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:27,793 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@273cca1e]
2021-03-11 11:36:27,918 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:27,927 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(92.toUByte()).rem(120)
2021-03-11 11:36:27,928 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@454bc819]]
2021-03-11 11:36:27,928 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@454bc819]
2021-03-11 11:36:27,928 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).countTrailingZeroBits()
2021-03-11 11:36:27,928 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]]
2021-03-11 11:36:27,928 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4ba3e6fc]
2021-03-11 11:36:27,928 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@49f3631]
2021-03-11 11:36:27,928 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toDouble().roundToInt()
2021-03-11 11:36:27,928 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 of type Int is ((6516632970651683513.toULong()).toUByte()).toShort().countOneBits()
2021-03-11 11:36:28,059 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:28,059 [main:66] - Compilation checking started
2021-03-11 11:36:28,471 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (((6516632970651683513.toULong()).toUByte()).toShort().countOneBits() + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:28,474 [main:103] - replacing (1, Int)
2021-03-11 11:36:28,474 [main:38] - replacing 1 Int
2021-03-11 11:36:28,474 [main:42] - Getting value of type Int
2021-03-11 11:36:28,602 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:28,608 [main:46] - GENERATED VALUE OF TYPE Int = 2038272232
2021-03-11 11:36:28,608 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:28,982 [main:55] - randomType = Kla9?
2021-03-11 11:36:29,117 [main:302] - generating value of type = Kla9 false depth = 0
2021-03-11 11:36:29,124 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:36:29,145 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla9[DeserializedSimpleFunctionDescriptor@20a65a88]
2021-03-11 11:36:29,270 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:29,270 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:36:29,395 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:29,402 [main:66] - Generated call from random type = (Kla9)?.equals("cghfw").compareTo(false)
2021-03-11 11:36:29,402 [main:94] - GETTING Int from Any
2021-03-11 11:36:29,407 [main:101] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:36:29,407 [main:137] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@1892f2ad]
2021-03-11 11:36:29,542 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:29,543 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:36:29,666 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:29,673 [main:105] - GENERATED CALL = (l).equals("frdze").compareTo(true)
2021-03-11 11:36:29,674 [main:110] - replacement of 1 of type Int is (Kla9)?.equals("cghfw").compareTo(false)
2021-03-11 11:36:29,802 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:29,802 [main:66] - Compilation checking started
2021-03-11 11:36:30,241 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = (Kla9)?.equals("cghfw").compareTo(false),
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:30,244 [main:103] - replacing (i28, Int)
2021-03-11 11:36:30,244 [main:38] - replacing i28 Int
2021-03-11 11:36:30,244 [main:42] - Getting value of type Int
2021-03-11 11:36:30,373 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:30,379 [main:46] - GENERATED VALUE OF TYPE Int = -327987076
2021-03-11 11:36:30,380 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:30,406 [main:55] - randomType = Kla5
2021-03-11 11:36:30,542 [main:302] - generating value of type = Kla5 false depth = 0
2021-03-11 11:36:30,548 [main:112] - generating klass Kla5 text = class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 11:36:30,565 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Kla5[DeserializedSimpleFunctionDescriptor@67586846]
2021-03-11 11:36:30,695 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:30,695 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:36:30,823 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:30,829 [main:66] - Generated call from random type = (Kla5()).equals("oqvpe").compareTo(false)
2021-03-11 11:36:30,830 [main:94] - GETTING Int from Function0<String>
2021-03-11 11:36:30,843 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]]
2021-03-11 11:36:30,844 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:36:30,844 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.String.compareTo(other: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8804f6e]
2021-03-11 11:36:30,972 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:31,113 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:31,119 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().compareTo("hsuem", true)
2021-03-11 11:36:31,120 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]]
2021-03-11 11:36:31,120 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:36:31,120 [main:137] - GENERATING call of type public fun kotlin.String.toInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@722ca081]
2021-03-11 11:36:31,120 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().toInt()
2021-03-11 11:36:31,120 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]]
2021-03-11 11:36:31,120 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Function0[DeserializedSimpleFunctionDescriptor@4b9bbe37]
2021-03-11 11:36:31,244 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:36:31,368 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:31,375 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).equals(null).compareTo(true)
2021-03-11 11:36:31,375 [main:101] - Case = [public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab], public open val length: kotlin.Int defined in kotlin.String[DeserializedPropertyDescriptor@ecc43d6]]
2021-03-11 11:36:31,375 [main:137] - GENERATING call of type public abstract operator fun invoke(): kotlin.String defined in kotlin.Function0[FunctionInvokeDescriptor@6a0aafab]
2021-03-11 11:36:31,375 [main:105] - GENERATED CALL = (Kla0({ "hxtps"}).callback).invoke().length
2021-03-11 11:36:31,375 [main:110] - replacement of i28 of type Int is (Kla0({ "hxtps"}).callback).invoke().compareTo("hsuem", true)
2021-03-11 11:36:31,498 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:31,499 [main:66] - Compilation checking started
2021-03-11 11:36:31,981 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + (Kla0({ "hxtps"}).callback).invoke().compareTo("hsuem", true) + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:31,984 [main:103] - replacing (prope3, Result<Ty0>)
2021-03-11 11:36:31,984 [main:38] - replacing prope3 Result<Ty0>
2021-03-11 11:36:31,984 [main:42] - Getting value of type Result<Ty0>
2021-03-11 11:36:32,124 [main:302] - generating value of type = Result<Ty0> false depth = 0
2021-03-11 11:36:32,260 [main:43] - GENERATING CALL OF fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:36:32,267 [main:61] - WITHOUT TYPE PARAMS = fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:36:32,608 [main:385] - Cant generate call of fun <R> runCatching(block: ()->Ty0): Result<Ty0> = TODO()
2021-03-11 11:36:32,608 [main:46] - GENERATED VALUE OF TYPE Result<Ty0> = 
2021-03-11 11:36:32,784 [main:55] - randomType = Double
2021-03-11 11:36:32,908 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:36:32,952 [main:94] - GETTING Result<Ty0> from Any
2021-03-11 11:36:32,957 [main:94] - GETTING Result<Ty0> from String
2021-03-11 11:36:32,980 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:36:33,005 [main:94] - GETTING Result<Ty0> from ULong
2021-03-11 11:36:33,007 [main:94] - GETTING Result<Ty0> from UByte
2021-03-11 11:36:33,042 [main:94] - GETTING Result<Ty0> from Function0<String>
2021-03-11 11:36:33,052 [main:107] - Cant find and generate replacement for prope3 type Result<Ty0>
2021-03-11 11:36:33,052 [main:103] - replacing (suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }, String)
2021-03-11 11:36:33,052 [main:38] - replacing suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    } String
2021-03-11 11:36:33,052 [main:42] - Getting value of type String
2021-03-11 11:36:33,177 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:33,183 [main:46] - GENERATED VALUE OF TYPE String = "mklcv"
2021-03-11 11:36:33,183 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:33,362 [main:55] - randomType = Char
2021-03-11 11:36:33,489 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:36:33,525 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]
2021-03-11 11:36:33,664 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:33,672 [main:66] - Generated call from random type = ('㗾').plus("jvkmc")
2021-03-11 11:36:33,672 [main:110] - replacement of suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    } of type String is ('㗾').plus("jvkmc")
2021-03-11 11:36:33,799 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:33,800 [main:66] - Compilation checking started
2021-03-11 11:36:34,218 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = ('㗾').plus("jvkmc")
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:34,221 [main:103] - replacing (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12, Int)
2021-03-11 11:36:34,221 [main:38] - replacing i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 Int
2021-03-11 11:36:34,221 [main:42] - Getting value of type Int
2021-03-11 11:36:34,347 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:34,354 [main:46] - GENERATED VALUE OF TYPE Int = -2044718193
2021-03-11 11:36:34,354 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:34,531 [main:55] - randomType = Float
2021-03-11 11:36:34,660 [main:302] - generating value of type = Float true depth = 0
2021-03-11 11:36:34,709 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4fd9603f]
2021-03-11 11:36:34,710 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2327173a]
2021-03-11 11:36:34,834 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:34,842 [main:66] - Generated call from random type = (0.019630432f).toInt().ushr(-608781083)
2021-03-11 11:36:34,843 [main:94] - GETTING Int from UByte
2021-03-11 11:36:34,872 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]]
2021-03-11 11:36:34,872 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@41867e6d]
2021-03-11 11:36:34,999 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:35,006 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UInt.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5c2475de]
2021-03-11 11:36:35,006 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).div(70.toUByte()).countOneBits()
2021-03-11 11:36:35,006 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@116c6746]]
2021-03-11 11:36:35,006 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:36:35,006 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@116c6746]
2021-03-11 11:36:35,136 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:35,142 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().times(-61)
2021-03-11 11:36:35,142 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54e1c058]]
2021-03-11 11:36:35,143 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:36:35,274 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:35,281 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54e1c058]
2021-03-11 11:36:35,410 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:35,417 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(58.toUByte()).compareTo(4)
2021-03-11 11:36:35,417 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]]
2021-03-11 11:36:35,417 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:36:35,417 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28ba0ded]
2021-03-11 11:36:35,417 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().unaryPlus()
2021-03-11 11:36:35,417 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5b9beac9]]
2021-03-11 11:36:35,417 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3c001550]
2021-03-11 11:36:35,417 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5b9beac9]
2021-03-11 11:36:35,417 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toByte().unaryMinus()
2021-03-11 11:36:35,417 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@44a6b9bf]]
2021-03-11 11:36:35,417 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:36:35,417 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@44a6b9bf]
2021-03-11 11:36:35,549 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 11:36:35,555 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().minus(-15)
2021-03-11 11:36:35,555 [main:101] - Case = [@kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]]
2021-03-11 11:36:35,555 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3727f6f]
2021-03-11 11:36:35,684 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:35,691 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1e847672]
2021-03-11 11:36:35,692 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).compareTo(15.toUByte()).unaryMinus()
2021-03-11 11:36:35,692 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]]
2021-03-11 11:36:35,692 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@1e6e94c9]
2021-03-11 11:36:35,692 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7249d9ce]
2021-03-11 11:36:35,692 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toShort().countOneBits()
2021-03-11 11:36:35,692 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]]
2021-03-11 11:36:35,692 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:36:35,692 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2559b952]
2021-03-11 11:36:35,692 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().countTrailingZeroBits()
2021-03-11 11:36:35,692 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0], @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7adb8d6f]]
2021-03-11 11:36:35,692 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4fc35ba0]
2021-03-11 11:36:35,692 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7adb8d6f]
2021-03-11 11:36:35,692 [main:105] - GENERATED CALL = ((6516632970651683513.toULong()).toUByte()).toUShort().toInt()
2021-03-11 11:36:35,693 [main:110] - replacement of i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 of type Int is -2044718193
2021-03-11 11:36:35,818 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 11:36:35,819 [main:66] - Compilation checking started
2021-03-11 11:36:36,235 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (-2044718193 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:36,238 [main:103] - replacing (getOrThrow(), Any?)
2021-03-11 11:36:36,238 [main:38] - replacing getOrThrow() Any?
2021-03-11 11:36:36,238 [main:42] - Getting value of type Any?
2021-03-11 11:36:36,364 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:36,364 [main:46] - GENERATED VALUE OF TYPE Any? = "ypyxj"
2021-03-11 11:36:36,364 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:36,556 [main:55] - randomType = Long?
2021-03-11 11:36:36,689 [main:302] - generating value of type = Long true depth = 0
2021-03-11 11:36:36,738 [main:94] - GETTING Any? from UByte
2021-03-11 11:36:36,766 [main:94] - GETTING Any? from Any
2021-03-11 11:36:36,769 [main:110] - replacement of getOrThrow() of type Any? is l
2021-03-11 11:36:36,896 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 11:36:36,896 [main:66] - Compilation checking started
2021-03-11 11:36:37,325 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.l
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:37,328 [main:103] - replacing (prope7, Function0<Unit>)
2021-03-11 11:36:37,328 [main:38] - replacing prope7 Function0<Unit>
2021-03-11 11:36:37,328 [main:42] - Getting value of type Function0<Unit>
2021-03-11 11:36:37,459 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 11:36:37,465 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 11:36:37,605 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:36:37,612 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 11:36:38,194 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 11:36:38,201 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 11:36:38,208 [main:302] - generating value of type = Any false depth = 5
2021-03-11 11:36:38,208 [main:95] - GENERATED = check(true, { "tvykm"})
2021-03-11 11:36:38,208 [main:46] - GENERATED VALUE OF TYPE Function0<Unit> = { check(true, { "tvykm"})}
2021-03-11 11:36:38,208 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:38,389 [main:55] - randomType = Double
2021-03-11 11:36:38,518 [main:302] - generating value of type = Double true depth = 0
2021-03-11 11:36:38,561 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:36:38,594 [main:94] - GETTING Function0<Unit> from UByte
2021-03-11 11:36:38,623 [main:94] - GETTING Function0<Unit> from String
2021-03-11 11:36:38,645 [main:94] - GETTING Function0<Unit> from Any
2021-03-11 11:36:38,650 [main:94] - GETTING Function0<Unit> from Function0<String>
2021-03-11 11:36:38,661 [main:94] - GETTING Function0<Unit> from ULong
2021-03-11 11:36:38,661 [main:110] - replacement of prope7 of type Function0<Unit> is { check(true, { "tvykm"})}
2021-03-11 11:36:38,788 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 11:36:38,788 [main:66] - Compilation checking started
2021-03-11 11:36:39,213 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            { check(true, { "tvykm"})}()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:39,216 [main:103] - replacing (prope3, String)
2021-03-11 11:36:39,216 [main:38] - replacing prope3 String
2021-03-11 11:36:39,216 [main:42] - Getting value of type String
2021-03-11 11:36:39,346 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:39,352 [main:46] - GENERATED VALUE OF TYPE String = "txrrf"
2021-03-11 11:36:39,352 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:39,365 [main:55] - randomType = Boolean
2021-03-11 11:36:39,502 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:39,519 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@74ea35e5]
2021-03-11 11:36:39,645 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 11:36:39,651 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:36:39,777 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:39,783 [main:66] - Generated call from random type = (true).compareTo(false).toString(-529205808)
2021-03-11 11:36:39,784 [main:94] - GETTING String from ULong
2021-03-11 11:36:39,814 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]]
2021-03-11 11:36:39,814 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@c294df7]
2021-03-11 11:36:39,814 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b46bba1]
2021-03-11 11:36:39,940 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:39,946 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUShort().toString(1224689641)
2021-03-11 11:36:39,946 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]]
2021-03-11 11:36:39,946 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUInt(): kotlin.UInt defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@ff0c2f5]
2021-03-11 11:36:39,946 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ac56e04]
2021-03-11 11:36:40,077 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:40,083 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUInt().toString(-1258186819)
2021-03-11 11:36:40,083 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc], @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]]
2021-03-11 11:36:40,083 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@214e30fc]
2021-03-11 11:36:40,083 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UByte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@36bf1baa]
2021-03-11 11:36:40,209 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:40,215 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toUByte().toString(-609028231)
2021-03-11 11:36:40,216 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]]
2021-03-11 11:36:40,216 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@582f948d]
2021-03-11 11:36:40,216 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24596a03]
2021-03-11 11:36:40,344 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:40,350 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toByte().toString(-1644170436)
2021-03-11 11:36:40,350 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]]
2021-03-11 11:36:40,350 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.ULong.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2e075d59]
2021-03-11 11:36:40,479 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:40,485 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toString(842869086)
2021-03-11 11:36:40,485 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]]
2021-03-11 11:36:40,485 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@4d80e3ae]
2021-03-11 11:36:40,616 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 11:36:40,623 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@390d7327]
2021-03-11 11:36:40,751 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:40,758 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).compareTo(88.toUByte()).toString(721022852)
2021-03-11 11:36:40,758 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]]
2021-03-11 11:36:40,758 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6e093a84]
2021-03-11 11:36:40,758 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cee0625]
2021-03-11 11:36:40,885 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:40,892 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toLong().toString(852940106)
2021-03-11 11:36:40,893 [main:101] - Case = [@kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]]
2021-03-11 11:36:40,893 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@545e0b28]
2021-03-11 11:36:40,893 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26b987c0]
2021-03-11 11:36:41,018 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:41,024 [main:105] - GENERATED CALL = ((6516632970651683513.toULong())).toShort().toString(-727588860)
2021-03-11 11:36:41,024 [main:110] - replacement of prope3 of type String is ((6516632970651683513.toULong())).toUShort().toString(1224689641)
2021-03-11 11:36:41,152 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:41,152 [main:66] - Compilation checking started
2021-03-11 11:36:41,574 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(((6516632970651683513.toULong())).toUShort().toString(1224689641))
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:41,577 [main:103] - replacing (" has state-machine ", String)
2021-03-11 11:36:41,577 [main:38] - replacing " has state-machine " String
2021-03-11 11:36:41,577 [main:42] - Getting value of type String
2021-03-11 11:36:41,707 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:41,713 [main:46] - GENERATED VALUE OF TYPE String = "iugdc"
2021-03-11 11:36:41,713 [main:49] - GENERATED IS CALL =false
2021-03-11 11:36:42,935 [main:55] - randomType = Kla6<List<HashMap<Boolean?, Function1<Kla1, Kla7>>>>
2021-03-11 11:36:43,063 [main:302] - generating value of type = Kla6<List<HashMap<Boolean?, Function1<Kla1, Kla7>>>> false depth = 0
2021-03-11 11:36:43,070 [main:112] - generating klass Kla6 text = abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}
2021-03-11 11:36:43,589 [main:302] - generating value of type = Kla9 false depth = 2
2021-03-11 11:36:43,595 [main:112] - generating klass Kla9 text = object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}
2021-03-11 11:36:43,623 [main:94] - GETTING String from String
2021-03-11 11:36:43,644 [main:101] - Case = [public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@56b1a486]]
2021-03-11 11:36:43,644 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@56b1a486]
2021-03-11 11:36:43,771 [main:302] - generating value of type = Any false depth = 0
2021-03-11 11:36:43,771 [main:105] - GENERATED CALL = (Kla1().prope0).plus("qiloo")
2021-03-11 11:36:43,771 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]]
2021-03-11 11:36:43,771 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7d259ade]
2021-03-11 11:36:43,900 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:44,035 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:44,171 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 11:36:44,180 [main:105] - GENERATED CALL = (Kla1().prope0).replaceRange(-108158310, 1995298898, StringBuilder())
2021-03-11 11:36:44,181 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]]
2021-03-11 11:36:44,181 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimStart(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@305acc18]
2021-03-11 11:36:44,181 [main:105] - GENERATED CALL = (Kla1().prope0).trimStart()
2021-03-11 11:36:44,181 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]]
2021-03-11 11:36:44,181 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@38afcda5]
2021-03-11 11:36:44,358 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-11 11:36:44,499 [main:43] - GENERATING CALL OF fun <T> mutableSetOf(): Iterable<Int> = TODO()
2021-03-11 11:36:44,506 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableSetOf(): Iterable<Int> = TODO()
2021-03-11 11:36:44,658 [main:95] - GENERATED = mutableSetOf<Int>()
2021-03-11 11:36:44,658 [main:105] - GENERATED CALL = (Kla1().prope0).slice(mutableSetOf<Int>())
2021-03-11 11:36:44,658 [main:101] - Case = [public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]]
2021-03-11 11:36:44,658 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30c17280]
2021-03-11 11:36:44,787 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:36:44,918 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:45,049 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:45,056 [main:105] - GENERATED CALL = (Kla1().prope0).replaceAfter('譗', "xmadh", "odciq")
2021-03-11 11:36:45,056 [main:101] - Case = [public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@17cd1937]]
2021-03-11 11:36:45,056 [main:137] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@17cd1937]
2021-03-11 11:36:45,182 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:36:45,316 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:45,450 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:45,457 [main:105] - GENERATED CALL = (Kla1().prope0).replaceAfterLast('⪈', "muiqw", "pwgcz")
2021-03-11 11:36:45,457 [main:101] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]]
2021-03-11 11:36:45,457 [main:137] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@23d33dd6]
2021-03-11 11:36:45,586 [main:302] - generating value of type = Int true depth = 0
2021-03-11 11:36:45,593 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37263abc]
2021-03-11 11:36:45,726 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:45,732 [main:105] - GENERATED CALL = (Kla1().prope0).get(2007646160).plus("auafa")
2021-03-11 11:36:45,732 [main:101] - Case = [public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52f43270]]
2021-03-11 11:36:45,732 [main:137] - GENERATING call of type public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52f43270]
2021-03-11 11:36:45,866 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:45,872 [main:105] - GENERATED CALL = (Kla1().prope0).prependIndent("gqxdr")
2021-03-11 11:36:45,873 [main:101] - Case = [public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c3ff9f]]
2021-03-11 11:36:45,873 [main:137] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5c3ff9f]
2021-03-11 11:36:45,999 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:36:46,136 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:46,143 [main:105] - GENERATED CALL = (Kla1().prope0).substringBefore('룲', "wsebk")
2021-03-11 11:36:46,143 [main:101] - Case = [public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@28ae7bbc]]
2021-03-11 11:36:46,144 [main:137] - GENERATING call of type public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@28ae7bbc]
2021-03-11 11:36:46,268 [main:302] - generating value of type = Char true depth = 0
2021-03-11 11:36:46,400 [main:302] - generating value of type = String true depth = 0
2021-03-11 11:36:46,407 [main:105] - GENERATED CALL = (Kla1().prope0).substringAfter('厖', "cwmap")
2021-03-11 11:36:46,407 [main:110] - replacement of " has state-machine " of type String is (Kla1().prope0).substringAfter('厖', "cwmap")
2021-03-11 11:36:46,533 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 11:36:46,533 [main:66] - Compilation checking started
2021-03-11 11:36:46,955 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
var _l: Any = ""

var l: Any
    get() = _l
    set(v) {
        _l = {}
    }

fun box(): String {
    l = "" // to invoke the setter

    val enclosingMethod = l.javaClass.getEnclosingMethod()
    if (enclosingMethod?.getName() != "setL") return "method: $enclosingMethod"

    val enclosingClass = l.javaClass.getEnclosingClass()!!.getName()
    if (enclosingClass != "LambdaInPropertySetterKt") return "enclosing class: $enclosingClass"

    val declaringClass = l.javaClass.getDeclaringClass()
    if (declaringClass != null) return "anonymous function has a declaring class: $declaringClass"

    return "OK"
}

open class Kla0(val callback: () -> String)

class Kla1 {
    val prope0 = "lyrno"

    inner class Kla2 : Kla0 {
        constructor() : super({ "wuhns"})
    }
}

fun box432(): String =
        (6516632970651683513.toULong()).toUByte().toString(-593387985)

class Kla3 {
    suspend fun fu3(
            prope9: String = "abc",
            i1: Int = 1,
            i2: Int = 1,
            i3: Int = 1,
            i4: Int = 1,
            i5: Int = 1,
            i6: Int = 1,
            i7: Int = 1,
            i8: Int = 1,
            i9: Int = 1,
            i10: Int = 1,
            i11: Int = 1,
            i12: Int = 1,
            i13: Int = 1,
            i14: Int = 1,
            i15: Int = 1,
            i16: Int = 1,
            i17: Int = 1,
            i18: Int = 1,
            i19: Int = 1,
            i20: Int = 1,
            i21: Int = 1,
            i22: Int = 1,
            i23: Int = 1,
            i24: Int = 1,
            i25: Int = 1,
            i26: Int = 1,
            i27: Int = 1,
            i28: Int = 1,
            i29: Int = 1,
            i30: Int = 1,
            i31: Int = 1
    ): String = suspendCoroutineUninterceptedOrReturn { x ->
        x.resume(prope9 + "#" + (i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11 + i12 + i13 + i14 + i15 + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 + i24 + i25 + i26 + i27 + i28 + i29 + i30 + i31))
        "rwvui"
    }
}

fun fu0(c: suspend Kla3.() -> Unit) {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
c.startCoroutine(Kla3(), Kla4)
}

fun box287(): String {
    var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
var prope3 = "OK"

    fu0 {
        var prope9 = fu3()
        if (prope9 != "abc#31") {
            prope3 = "fail 1: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("cde")
        if (prope9 != "cde#31") {
            prope3 = "fail 2: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3(i2 = 6)
        if (prope9 != "abc#36") {
            prope3 = "fail 3: $prope9"
            throw RuntimeException(prope3)
        }

        prope9 = fu3("xyz", 9)
        if (prope9 != "xyz#39") {
            prope3 = "fail 4: $prope9"
            throw RuntimeException(prope3)
        }
    }

    return prope3
}

fun <Ty0> fu1(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
x(prope3.getOrThrow())
    }
}

fun fu2(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla4(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla10 : Kla4()
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope3.getOrThrow()
    }
}

class Kla5 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla6<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu4(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu4(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla7 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu6() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu6(it)
    }

    fun fu6(c: Continuation<*>) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu7(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + (Kla1().prope0).substringAfter('厖', "cwmap") +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu8(method: String) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope1 = Kla7()

class Kla8 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu9() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu3() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu10(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope2 = Kla8()

object Kla9: Kla6<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
prope2.prope7 = {
            prope2.prope6 = true
        }
    }

    override fun fu4(exception: Throwable) {
        var _l: Any = ""
var l: Any
    get() = _l
    set(v) {
        _l = {}
    }
throw exception
    }
}


2021-03-11 11:36:46,958 [main:103] - replacing (c, Continuation<*>)
2021-03-11 11:36:46,958 [main:38] - replacing c Continuation<*>
2021-03-11 11:36:46,958 [main:42] - Getting value of type Continuation<*>
2021-03-11 11:36:47,085 [main:302] - generating value of type = Continuation<*> false depth = 0
2021-03-11 11:36:47,224 [main:43] - GENERATING CALL OF fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-11 11:36:47,232 [main:61] - WITHOUT TYPE PARAMS = fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
